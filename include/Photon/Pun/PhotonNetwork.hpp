// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include <initializer_list>
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.ConnectMethod
#include "Photon/Pun/ConnectMethod.hpp"
// Including type: Photon.Pun.PunLogLevel
#include "Photon/Pun/PunLogLevel.hpp"
// Including type: System.Int32
#include "System/Int32.hpp"
// Including type: ExitGames.Client.Photon.NonAllocDictionary`2
#include "ExitGames/Client/Photon/NonAllocDictionary_2.hpp"
// Including type: Photon.Pun.RpcTarget
#include "Photon/Pun/RpcTarget.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: Photon::Realtime
namespace Photon::Realtime {
  // Forward declaring type: RegionHandler
  class RegionHandler;
  // Forward declaring type: LoadBalancingClient
  class LoadBalancingClient;
  // Forward declaring type: Room
  class Room;
  // Forward declaring type: RaiseEventOptions
  class RaiseEventOptions;
  // Forward declaring type: AppSettings
  class AppSettings;
  // Forward declaring type: Player
  class Player;
  // Forward declaring type: ClientState
  struct ClientState;
  // Forward declaring type: ServerConnection
  struct ServerConnection;
  // Forward declaring type: AuthenticationValues
  class AuthenticationValues;
  // Forward declaring type: TypedLobby
  class TypedLobby;
  // Forward declaring type: PhotonPortDefinition
  struct PhotonPortDefinition;
  // Forward declaring type: MatchmakingMode
  struct MatchmakingMode;
  // Forward declaring type: RoomOptions
  class RoomOptions;
}
// Forward declaring namespace: Photon::Pun
namespace Photon::Pun {
  // Forward declaring type: ServerSettings
  class ServerSettings;
  // Forward declaring type: PhotonView
  class PhotonView;
  // Forward declaring type: IPunPrefabPool
  class IPunPrefabPool;
  // Forward declaring type: PhotonStream
  class PhotonStream;
  // Forward declaring type: InstantiateParameters
  struct InstantiateParameters;
}
// Forward declaring namespace: System
namespace System {
  // Forward declaring type: String
  class String;
  // Forward declaring type: Action`2<T1, T2>
  template<typename T1, typename T2>
  class Action_2;
  // Forward declaring type: Type
  class Type;
}
// Forward declaring namespace: System::Diagnostics
namespace System::Diagnostics {
  // Forward declaring type: Stopwatch
  class Stopwatch;
}
// Forward declaring namespace: System::Collections::Generic
namespace System::Collections::Generic {
  // Forward declaring type: HashSet`1<T>
  template<typename T>
  class HashSet_1;
  // Forward declaring type: Dictionary`2<TKey, TValue>
  template<typename TKey, typename TValue>
  class Dictionary_2;
  // Forward declaring type: List`1<T>
  template<typename T>
  class List_1;
  // Forward declaring type: IList`1<T>
  template<typename T>
  class IList_1;
}
// Forward declaring namespace: ExitGames::Client::Photon
namespace ExitGames::Client::Photon {
  // Forward declaring type: Hashtable
  class Hashtable;
  // Forward declaring type: SendOptions
  struct SendOptions;
  // Forward declaring type: EventData
  class EventData;
  // Forward declaring type: OperationResponse
  class OperationResponse;
}
// Forward declaring namespace: System::Reflection
namespace System::Reflection {
  // Forward declaring type: MethodInfo
  class MethodInfo;
  // Forward declaring type: ParameterInfo
  class ParameterInfo;
}
// Forward declaring namespace: UnityEngine
namespace UnityEngine {
  // Forward declaring type: AsyncOperation
  class AsyncOperation;
  // Forward declaring type: GameObject
  class GameObject;
  // Forward declaring type: Vector3
  struct Vector3;
  // Forward declaring type: Quaternion
  struct Quaternion;
  // Forward declaring type: MonoBehaviour
  class MonoBehaviour;
}
// Completed forward declares
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Forward declaring type: PhotonNetwork
  class PhotonNetwork;
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::PhotonNetwork);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonNetwork*, "Photon.Pun", "PhotonNetwork");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.PhotonNetwork
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonNetwork : public ::Il2CppObject {
    public:
    // Nested type: ::Photon::Pun::PhotonNetwork::RaiseEventBatch
    struct RaiseEventBatch;
    // Nested type: ::Photon::Pun::PhotonNetwork::SerializeViewBatch
    class SerializeViewBatch;
    // Nested type: ::Photon::Pun::PhotonNetwork::$$c
    class $$c;
    // Size: 0x2
    #pragma pack(push, 1)
    // WARNING Layout: Sequential may not be correctly taken into account!
    // Autogenerated type: Photon.Pun.PhotonNetwork/Photon.Pun.RaiseEventBatch
    // [TokenAttribute] Offset: FFFFFFFF
    struct RaiseEventBatch/*, public ::System::ValueType, public ::System::IEquatable_1<::Photon::Pun::PhotonNetwork::RaiseEventBatch>*/ {
      public:
      public:
      // public System.Byte Group
      // Size: 0x1
      // Offset: 0x0
      uint8_t Group;
      // Field size check
      static_assert(sizeof(uint8_t) == 0x1);
      // public System.Boolean Reliable
      // Size: 0x1
      // Offset: 0x1
      bool Reliable;
      // Field size check
      static_assert(sizeof(bool) == 0x1);
      public:
      // Creating value type constructor for type: RaiseEventBatch
      constexpr RaiseEventBatch(uint8_t Group_ = {}, bool Reliable_ = {}) noexcept : Group{Group_}, Reliable{Reliable_} {}
      // Creating interface conversion operator: operator ::System::ValueType
      operator ::System::ValueType() noexcept {
        return *reinterpret_cast<::System::ValueType*>(this);
      }
      // Creating interface conversion operator: operator ::System::IEquatable_1<::Photon::Pun::PhotonNetwork::RaiseEventBatch>
      operator ::System::IEquatable_1<::Photon::Pun::PhotonNetwork::RaiseEventBatch>() noexcept {
        return *reinterpret_cast<::System::IEquatable_1<::Photon::Pun::PhotonNetwork::RaiseEventBatch>*>(this);
      }
      // Get instance field reference: public System.Byte Group
      [[deprecated("Use field access instead!")]] uint8_t& dyn_Group();
      // Get instance field reference: public System.Boolean Reliable
      [[deprecated("Use field access instead!")]] bool& dyn_Reliable();
      // public System.Boolean Equals(Photon.Pun.PhotonNetwork/Photon.Pun.RaiseEventBatch other)
      // Offset: 0xA78C18
      bool Equals(::Photon::Pun::PhotonNetwork::RaiseEventBatch other);
      // public override System.Int32 GetHashCode()
      // Offset: 0xA78C04
      // Implemented from: System.ValueType
      // Base method: System.Int32 ValueType::GetHashCode()
      int GetHashCode();
    }; // Photon.Pun.PhotonNetwork/Photon.Pun.RaiseEventBatch
    #pragma pack(pop)
    static check_size<sizeof(PhotonNetwork::RaiseEventBatch), 1 + sizeof(bool)> __Photon_Pun_PhotonNetwork_RaiseEventBatchSizeCheck;
    static_assert(sizeof(PhotonNetwork::RaiseEventBatch) == 0x2);
    // static field const value: static public System.String PunVersion
    static constexpr const char* PunVersion = "2.39";
    // Get static field: static public System.String PunVersion
    static ::StringW _get_PunVersion();
    // Set static field: static public System.String PunVersion
    static void _set_PunVersion(::StringW value);
    // Get static field: static private System.String gameVersion
    static ::StringW _get_gameVersion();
    // Set static field: static private System.String gameVersion
    static void _set_gameVersion(::StringW value);
    // Get static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
    static ::Photon::Realtime::LoadBalancingClient* _get_NetworkingClient();
    // Set static field: static public Photon.Realtime.LoadBalancingClient NetworkingClient
    static void _set_NetworkingClient(::Photon::Realtime::LoadBalancingClient* value);
    // Get static field: static public readonly System.Int32 MAX_VIEW_IDS
    static int _get_MAX_VIEW_IDS();
    // Set static field: static public readonly System.Int32 MAX_VIEW_IDS
    static void _set_MAX_VIEW_IDS(int value);
    // static field const value: static public System.String ServerSettingsFileName
    static constexpr const char* ServerSettingsFileName = "PhotonServerSettings";
    // Get static field: static public System.String ServerSettingsFileName
    static ::StringW _get_ServerSettingsFileName();
    // Set static field: static public System.String ServerSettingsFileName
    static void _set_ServerSettingsFileName(::StringW value);
    // Get static field: static private Photon.Pun.ServerSettings photonServerSettings
    static ::Photon::Pun::ServerSettings* _get_photonServerSettings();
    // Set static field: static private Photon.Pun.ServerSettings photonServerSettings
    static void _set_photonServerSettings(::Photon::Pun::ServerSettings* value);
    // static field const value: static private System.String PlayerPrefsKey
    static constexpr const char* PlayerPrefsKey = "PUNCloudBestRegion";
    // Get static field: static private System.String PlayerPrefsKey
    static ::StringW _get_PlayerPrefsKey();
    // Set static field: static private System.String PlayerPrefsKey
    static void _set_PlayerPrefsKey(::StringW value);
    // Get static field: static public Photon.Pun.ConnectMethod ConnectMethod
    static ::Photon::Pun::ConnectMethod _get_ConnectMethod();
    // Set static field: static public Photon.Pun.ConnectMethod ConnectMethod
    static void _set_ConnectMethod(::Photon::Pun::ConnectMethod value);
    // Get static field: static public Photon.Pun.PunLogLevel LogLevel
    static ::Photon::Pun::PunLogLevel _get_LogLevel();
    // Set static field: static public Photon.Pun.PunLogLevel LogLevel
    static void _set_LogLevel(::Photon::Pun::PunLogLevel value);
    // Get static field: static public System.Boolean EnableCloseConnection
    static bool _get_EnableCloseConnection();
    // Set static field: static public System.Boolean EnableCloseConnection
    static void _set_EnableCloseConnection(bool value);
    // Get static field: static public System.Single PrecisionForVectorSynchronization
    static float _get_PrecisionForVectorSynchronization();
    // Set static field: static public System.Single PrecisionForVectorSynchronization
    static void _set_PrecisionForVectorSynchronization(float value);
    // Get static field: static public System.Single PrecisionForQuaternionSynchronization
    static float _get_PrecisionForQuaternionSynchronization();
    // Set static field: static public System.Single PrecisionForQuaternionSynchronization
    static void _set_PrecisionForQuaternionSynchronization(float value);
    // Get static field: static public System.Single PrecisionForFloatSynchronization
    static float _get_PrecisionForFloatSynchronization();
    // Set static field: static public System.Single PrecisionForFloatSynchronization
    static void _set_PrecisionForFloatSynchronization(float value);
    // Get static field: static private System.Boolean offlineMode
    static bool _get_offlineMode();
    // Set static field: static private System.Boolean offlineMode
    static void _set_offlineMode(bool value);
    // Get static field: static private Photon.Realtime.Room offlineModeRoom
    static ::Photon::Realtime::Room* _get_offlineModeRoom();
    // Set static field: static private Photon.Realtime.Room offlineModeRoom
    static void _set_offlineModeRoom(::Photon::Realtime::Room* value);
    // Get static field: static private System.Boolean automaticallySyncScene
    static bool _get_automaticallySyncScene();
    // Set static field: static private System.Boolean automaticallySyncScene
    static void _set_automaticallySyncScene(bool value);
    // Get static field: static private System.Int32 sendFrequency
    static int _get_sendFrequency();
    // Set static field: static private System.Int32 sendFrequency
    static void _set_sendFrequency(int value);
    // Get static field: static private System.Int32 serializationFrequency
    static int _get_serializationFrequency();
    // Set static field: static private System.Int32 serializationFrequency
    static void _set_serializationFrequency(int value);
    // Get static field: static private System.Boolean isMessageQueueRunning
    static bool _get_isMessageQueueRunning();
    // Set static field: static private System.Boolean isMessageQueueRunning
    static void _set_isMessageQueueRunning(bool value);
    // Get static field: static private System.Double frametime
    static double _get_frametime();
    // Set static field: static private System.Double frametime
    static void _set_frametime(double value);
    // Get static field: static private System.Int32 frame
    static int _get_frame();
    // Set static field: static private System.Int32 frame
    static void _set_frame(int value);
    // Get static field: static private System.Diagnostics.Stopwatch StartupStopwatch
    static ::System::Diagnostics::Stopwatch* _get_StartupStopwatch();
    // Set static field: static private System.Diagnostics.Stopwatch StartupStopwatch
    static void _set_StartupStopwatch(::System::Diagnostics::Stopwatch* value);
    // Get static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
    static float _get_MinimalTimeScaleToDispatchInFixedUpdate();
    // Set static field: static public System.Single MinimalTimeScaleToDispatchInFixedUpdate
    static void _set_MinimalTimeScaleToDispatchInFixedUpdate(float value);
    // Get static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
    static bool _get_$UseAlternativeUdpPorts$k__BackingField();
    // Set static field: static private System.Boolean <UseAlternativeUdpPorts>k__BackingField
    static void _set_$UseAlternativeUdpPorts$k__BackingField(bool value);
    // Get static field: static private System.Int32 lastUsedViewSubId
    static int _get_lastUsedViewSubId();
    // Set static field: static private System.Int32 lastUsedViewSubId
    static void _set_lastUsedViewSubId(int value);
    // Get static field: static private System.Int32 lastUsedViewSubIdStatic
    static int _get_lastUsedViewSubIdStatic();
    // Set static field: static private System.Int32 lastUsedViewSubIdStatic
    static void _set_lastUsedViewSubIdStatic(int value);
    // Get static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
    static ::System::Collections::Generic::HashSet_1<::StringW>* _get_PrefabsWithoutMagicCallback();
    // Set static field: static private readonly System.Collections.Generic.HashSet`1<System.String> PrefabsWithoutMagicCallback
    static void _set_PrefabsWithoutMagicCallback(::System::Collections::Generic::HashSet_1<::StringW>* value);
    // Get static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
    static ::ExitGames::Client::Photon::Hashtable* _get_SendInstantiateEvHashtable();
    // Set static field: static private readonly ExitGames.Client.Photon.Hashtable SendInstantiateEvHashtable
    static void _set_SendInstantiateEvHashtable(::ExitGames::Client::Photon::Hashtable* value);
    // Get static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_SendInstantiateRaiseEventOptions();
    // Set static field: static private readonly Photon.Realtime.RaiseEventOptions SendInstantiateRaiseEventOptions
    static void _set_SendInstantiateRaiseEventOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
    static ::System::Collections::Generic::HashSet_1<uint8_t>* _get_allowedReceivingGroups();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> allowedReceivingGroups
    static void _set_allowedReceivingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
    static ::System::Collections::Generic::HashSet_1<uint8_t>* _get_blockedSendingGroups();
    // Set static field: static private System.Collections.Generic.HashSet`1<System.Byte> blockedSendingGroups
    static void _set_blockedSendingGroups(::System::Collections::Generic::HashSet_1<uint8_t>* value);
    // Get static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
    static ::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* _get_reusablePVHashset();
    // Set static field: static private System.Collections.Generic.HashSet`1<Photon.Pun.PhotonView> reusablePVHashset
    static void _set_reusablePVHashset(::System::Collections::Generic::HashSet_1<::Photon::Pun::PhotonView*>* value);
    // Get static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
    static ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* _get_photonViewList();
    // Set static field: static private ExitGames.Client.Photon.NonAllocDictionary`2<System.Int32,Photon.Pun.PhotonView> photonViewList
    static void _set_photonViewList(::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>* value);
    // Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
    static ::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* _get_OnOwnershipRequestEv();
    // Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipRequestEv
    static void _set_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
    static ::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* _get_OnOwnershipTransferedEv();
    // Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferedEv
    static void _set_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // Get static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
    static ::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* _get_OnOwnershipTransferFailedEv();
    // Set static field: static private System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> OnOwnershipTransferFailedEv
    static void _set_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // Get static field: static System.Byte currentLevelPrefix
    static uint8_t _get_currentLevelPrefix();
    // Set static field: static System.Byte currentLevelPrefix
    static void _set_currentLevelPrefix(uint8_t value);
    // Get static field: static System.Boolean loadingLevelAndPausedNetwork
    static bool _get_loadingLevelAndPausedNetwork();
    // Set static field: static System.Boolean loadingLevelAndPausedNetwork
    static void _set_loadingLevelAndPausedNetwork(bool value);
    // static field const value: static System.String CurrentSceneProperty
    static constexpr const char* CurrentSceneProperty = "curScn";
    // Get static field: static System.String CurrentSceneProperty
    static ::StringW _get_CurrentSceneProperty();
    // Set static field: static System.String CurrentSceneProperty
    static void _set_CurrentSceneProperty(::StringW value);
    // static field const value: static System.String CurrentScenePropertyLoadAsync
    static constexpr const char* CurrentScenePropertyLoadAsync = "curScnLa";
    // Get static field: static System.String CurrentScenePropertyLoadAsync
    static ::StringW _get_CurrentScenePropertyLoadAsync();
    // Set static field: static System.String CurrentScenePropertyLoadAsync
    static void _set_CurrentScenePropertyLoadAsync(::StringW value);
    // Get static field: static private Photon.Pun.IPunPrefabPool prefabPool
    static ::Photon::Pun::IPunPrefabPool* _get_prefabPool();
    // Set static field: static private Photon.Pun.IPunPrefabPool prefabPool
    static void _set_prefabPool(::Photon::Pun::IPunPrefabPool* value);
    // Get static field: static public System.Boolean UseRpcMonoBehaviourCache
    static bool _get_UseRpcMonoBehaviourCache();
    // Set static field: static public System.Boolean UseRpcMonoBehaviourCache
    static void _set_UseRpcMonoBehaviourCache(bool value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
    static ::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* _get_monoRPCMethodsCache();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Reflection.MethodInfo>> monoRPCMethodsCache
    static void _set_monoRPCMethodsCache(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Reflection::MethodInfo*>*>* value);
    // Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
    static ::System::Collections::Generic::Dictionary_2<::StringW, int>* _get_rpcShortcuts();
    // Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Int32> rpcShortcuts
    static void _set_rpcShortcuts(::System::Collections::Generic::Dictionary_2<::StringW, int>* value);
    // Get static field: static public System.Boolean RunRpcCoroutines
    static bool _get_RunRpcCoroutines();
    // Set static field: static public System.Boolean RunRpcCoroutines
    static void _set_RunRpcCoroutines(bool value);
    // Get static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
    static ::UnityEngine::AsyncOperation* _get__AsyncLevelLoadingOperation();
    // Set static field: static private UnityEngine.AsyncOperation _AsyncLevelLoadingOperation
    static void _set__AsyncLevelLoadingOperation(::UnityEngine::AsyncOperation* value);
    // Get static field: static private System.Single _levelLoadingProgress
    static float _get__levelLoadingProgress();
    // Set static field: static private System.Single _levelLoadingProgress
    static void _set__levelLoadingProgress(float value);
    // Get static field: static private readonly System.Type typePunRPC
    static ::System::Type* _get_typePunRPC();
    // Set static field: static private readonly System.Type typePunRPC
    static void _set_typePunRPC(::System::Type* value);
    // Get static field: static private readonly System.Type typePhotonMessageInfo
    static ::System::Type* _get_typePhotonMessageInfo();
    // Set static field: static private readonly System.Type typePhotonMessageInfo
    static void _set_typePhotonMessageInfo(::System::Type* value);
    // Get static field: static private readonly System.Object keyByteZero
    static ::Il2CppObject* _get_keyByteZero();
    // Set static field: static private readonly System.Object keyByteZero
    static void _set_keyByteZero(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteOne
    static ::Il2CppObject* _get_keyByteOne();
    // Set static field: static private readonly System.Object keyByteOne
    static void _set_keyByteOne(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteTwo
    static ::Il2CppObject* _get_keyByteTwo();
    // Set static field: static private readonly System.Object keyByteTwo
    static void _set_keyByteTwo(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteThree
    static ::Il2CppObject* _get_keyByteThree();
    // Set static field: static private readonly System.Object keyByteThree
    static void _set_keyByteThree(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteFour
    static ::Il2CppObject* _get_keyByteFour();
    // Set static field: static private readonly System.Object keyByteFour
    static void _set_keyByteFour(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteFive
    static ::Il2CppObject* _get_keyByteFive();
    // Set static field: static private readonly System.Object keyByteFive
    static void _set_keyByteFive(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteSix
    static ::Il2CppObject* _get_keyByteSix();
    // Set static field: static private readonly System.Object keyByteSix
    static void _set_keyByteSix(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteSeven
    static ::Il2CppObject* _get_keyByteSeven();
    // Set static field: static private readonly System.Object keyByteSeven
    static void _set_keyByteSeven(::Il2CppObject* value);
    // Get static field: static private readonly System.Object keyByteEight
    static ::Il2CppObject* _get_keyByteEight();
    // Set static field: static private readonly System.Object keyByteEight
    static void _set_keyByteEight(::Il2CppObject* value);
    // Get static field: static private readonly System.Object[] emptyObjectArray
    static ::ArrayW<::Il2CppObject*> _get_emptyObjectArray();
    // Set static field: static private readonly System.Object[] emptyObjectArray
    static void _set_emptyObjectArray(::ArrayW<::Il2CppObject*> value);
    // Get static field: static private readonly System.Type[] emptyTypeArray
    static ::ArrayW<::System::Type*> _get_emptyTypeArray();
    // Set static field: static private readonly System.Type[] emptyTypeArray
    static void _set_emptyTypeArray(::ArrayW<::System::Type*> value);
    // Get static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
    static ::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* _get_foundPVs();
    // Set static field: static System.Collections.Generic.List`1<Photon.Pun.PhotonView> foundPVs
    static void _set_foundPVs(::System::Collections::Generic::List_1<::Photon::Pun::PhotonView*>* value);
    // Get static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
    static ::ExitGames::Client::Photon::Hashtable* _get_removeFilter();
    // Set static field: static private readonly ExitGames.Client.Photon.Hashtable removeFilter
    static void _set_removeFilter(::ExitGames::Client::Photon::Hashtable* value);
    // Get static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
    static ::ExitGames::Client::Photon::Hashtable* _get_ServerCleanDestroyEvent();
    // Set static field: static private readonly ExitGames.Client.Photon.Hashtable ServerCleanDestroyEvent
    static void _set_ServerCleanDestroyEvent(::ExitGames::Client::Photon::Hashtable* value);
    // Get static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_ServerCleanOptions();
    // Set static field: static private readonly Photon.Realtime.RaiseEventOptions ServerCleanOptions
    static void _set_ServerCleanOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_SendToAllOptions();
    // Set static field: static Photon.Realtime.RaiseEventOptions SendToAllOptions
    static void _set_SendToAllOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_SendToOthersOptions();
    // Set static field: static Photon.Realtime.RaiseEventOptions SendToOthersOptions
    static void _set_SendToOthersOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_SendToSingleOptions();
    // Set static field: static Photon.Realtime.RaiseEventOptions SendToSingleOptions
    static void _set_SendToSingleOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
    static ::ExitGames::Client::Photon::Hashtable* _get_rpcFilterByViewId();
    // Set static field: static private readonly ExitGames.Client.Photon.Hashtable rpcFilterByViewId
    static void _set_rpcFilterByViewId(::ExitGames::Client::Photon::Hashtable* value);
    // Get static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_OpCleanRpcBufferOptions();
    // Set static field: static private readonly Photon.Realtime.RaiseEventOptions OpCleanRpcBufferOptions
    static void _set_OpCleanRpcBufferOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
    static ::ExitGames::Client::Photon::Hashtable* _get_rpcEvent();
    // Set static field: static private ExitGames.Client.Photon.Hashtable rpcEvent
    static void _set_rpcEvent(::ExitGames::Client::Photon::Hashtable* value);
    // Get static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
    static ::Photon::Realtime::RaiseEventOptions* _get_RpcOptionsToAll();
    // Set static field: static private Photon.Realtime.RaiseEventOptions RpcOptionsToAll
    static void _set_RpcOptionsToAll(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static public System.Int32 ObjectsInOneUpdate
    static int _get_ObjectsInOneUpdate();
    // Set static field: static public System.Int32 ObjectsInOneUpdate
    static void _set_ObjectsInOneUpdate(int value);
    // Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
    static ::Photon::Pun::PhotonStream* _get_serializeStreamOut();
    // Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamOut
    static void _set_serializeStreamOut(::Photon::Pun::PhotonStream* value);
    // Get static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
    static ::Photon::Pun::PhotonStream* _get_serializeStreamIn();
    // Set static field: static private readonly Photon.Pun.PhotonStream serializeStreamIn
    static void _set_serializeStreamIn(::Photon::Pun::PhotonStream* value);
    // Get static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
    static ::Photon::Realtime::RaiseEventOptions* _get_serializeRaiseEvOptions();
    // Set static field: static private Photon.Realtime.RaiseEventOptions serializeRaiseEvOptions
    static void _set_serializeRaiseEvOptions(::Photon::Realtime::RaiseEventOptions* value);
    // Get static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/Photon.Pun.RaiseEventBatch,Photon.Pun.PhotonNetwork/Photon.Pun.SerializeViewBatch> serializeViewBatches
    static ::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* _get_serializeViewBatches();
    // Set static field: static private readonly System.Collections.Generic.Dictionary`2<Photon.Pun.PhotonNetwork/Photon.Pun.RaiseEventBatch,Photon.Pun.PhotonNetwork/Photon.Pun.SerializeViewBatch> serializeViewBatches
    static void _set_serializeViewBatches(::System::Collections::Generic::Dictionary_2<::Photon::Pun::PhotonNetwork::RaiseEventBatch, ::Photon::Pun::PhotonNetwork::SerializeViewBatch*>* value);
    // static field const value: static public System.Int32 SyncViewId
    static constexpr const int SyncViewId = 0;
    // Get static field: static public System.Int32 SyncViewId
    static int _get_SyncViewId();
    // Set static field: static public System.Int32 SyncViewId
    static void _set_SyncViewId(int value);
    // static field const value: static public System.Int32 SyncCompressed
    static constexpr const int SyncCompressed = 1;
    // Get static field: static public System.Int32 SyncCompressed
    static int _get_SyncCompressed();
    // Set static field: static public System.Int32 SyncCompressed
    static void _set_SyncCompressed(int value);
    // static field const value: static public System.Int32 SyncNullValues
    static constexpr const int SyncNullValues = 2;
    // Get static field: static public System.Int32 SyncNullValues
    static int _get_SyncNullValues();
    // Set static field: static public System.Int32 SyncNullValues
    static void _set_SyncNullValues(int value);
    // static field const value: static public System.Int32 SyncFirstValue
    static constexpr const int SyncFirstValue = 3;
    // Get static field: static public System.Int32 SyncFirstValue
    static int _get_SyncFirstValue();
    // Set static field: static public System.Int32 SyncFirstValue
    static void _set_SyncFirstValue(int value);
    // Get static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
    static ::Photon::Realtime::RegionHandler* _get__cachedRegionHandler();
    // Set static field: static private Photon.Realtime.RegionHandler _cachedRegionHandler
    static void _set__cachedRegionHandler(::Photon::Realtime::RegionHandler* value);
    // static public System.String get_GameVersion()
    // Offset: 0x10875F8
    static ::StringW get_GameVersion();
    // static public System.Void set_GameVersion(System.String value)
    // Offset: 0x1087660
    static void set_GameVersion(::StringW value);
    // static public System.String get_AppVersion()
    // Offset: 0x1087708
    static ::StringW get_AppVersion();
    // static public Photon.Pun.ServerSettings get_PhotonServerSettings()
    // Offset: 0x1084A8C
    static ::Photon::Pun::ServerSettings* get_PhotonServerSettings();
    // static private System.Void set_PhotonServerSettings(Photon.Pun.ServerSettings value)
    // Offset: 0x1087AC0
    static void set_PhotonServerSettings(::Photon::Pun::ServerSettings* value);
    // static public System.String get_ServerAddress()
    // Offset: 0x1087B2C
    static ::StringW get_ServerAddress();
    // static public System.String get_CloudRegion()
    // Offset: 0x1087BE0
    static ::StringW get_CloudRegion();
    // static public System.String get_CurrentCluster()
    // Offset: 0x1087DF0
    static ::StringW get_CurrentCluster();
    // static public System.String get_BestRegionSummaryInPreferences()
    // Offset: 0x1087E90
    static ::StringW get_BestRegionSummaryInPreferences();
    // static System.Void set_BestRegionSummaryInPreferences(System.String value)
    // Offset: 0x1087EE0
    static void set_BestRegionSummaryInPreferences(::StringW value);
    // static public System.Boolean get_IsConnected()
    // Offset: 0x10828C4
    static bool get_IsConnected();
    // static public System.Boolean get_IsConnectedAndReady()
    // Offset: 0x1087F7C
    static bool get_IsConnectedAndReady();
    // static public Photon.Realtime.ClientState get_NetworkClientState()
    // Offset: 0x1088090
    static ::Photon::Realtime::ClientState get_NetworkClientState();
    // static public Photon.Realtime.ServerConnection get_Server()
    // Offset: 0x1087CC4
    static ::Photon::Realtime::ServerConnection get_Server();
    // static public Photon.Realtime.AuthenticationValues get_AuthValues()
    // Offset: 0x10881CC
    static ::Photon::Realtime::AuthenticationValues* get_AuthValues();
    // static public System.Void set_AuthValues(Photon.Realtime.AuthenticationValues value)
    // Offset: 0x108826C
    static void set_AuthValues(::Photon::Realtime::AuthenticationValues* value);
    // static public Photon.Realtime.TypedLobby get_CurrentLobby()
    // Offset: 0x1088308
    static ::Photon::Realtime::TypedLobby* get_CurrentLobby();
    // static public Photon.Realtime.Room get_CurrentRoom()
    // Offset: 0x1081A90
    static ::Photon::Realtime::Room* get_CurrentRoom();
    // static public Photon.Realtime.Player get_LocalPlayer()
    // Offset: 0x108837C
    static ::Photon::Realtime::Player* get_LocalPlayer();
    // static public System.String get_NickName()
    // Offset: 0x108841C
    static ::StringW get_NickName();
    // static public System.Void set_NickName(System.String value)
    // Offset: 0x1088490
    static void set_NickName(::StringW value);
    // static public Photon.Realtime.Player[] get_PlayerList()
    // Offset: 0x108850C
    static ::ArrayW<::Photon::Realtime::Player*> get_PlayerList();
    // static public Photon.Realtime.Player[] get_PlayerListOthers()
    // Offset: 0x1088670
    static ::ArrayW<::Photon::Realtime::Player*> get_PlayerListOthers();
    // static public System.Boolean get_OfflineMode()
    // Offset: 0x1088880
    static bool get_OfflineMode();
    // static public System.Void set_OfflineMode(System.Boolean value)
    // Offset: 0x10888E8
    static void set_OfflineMode(bool value);
    // static public System.Boolean get_AutomaticallySyncScene()
    // Offset: 0x1088D5C
    static bool get_AutomaticallySyncScene();
    // static public System.Void set_AutomaticallySyncScene(System.Boolean value)
    // Offset: 0x1088DC4
    static void set_AutomaticallySyncScene(bool value);
    // static public System.Boolean get_EnableLobbyStatistics()
    // Offset: 0x1088E80
    static bool get_EnableLobbyStatistics();
    // static public System.Boolean get_InLobby()
    // Offset: 0x1088EF4
    static bool get_InLobby();
    // static public System.Int32 get_SendRate()
    // Offset: 0x1084B70
    static int get_SendRate();
    // static public System.Void set_SendRate(System.Int32 value)
    // Offset: 0x1088F68
    static void set_SendRate(int value);
    // static public System.Int32 get_SerializationRate()
    // Offset: 0x1084BE0
    static int get_SerializationRate();
    // static public System.Void set_SerializationRate(System.Int32 value)
    // Offset: 0x1089098
    static void set_SerializationRate(int value);
    // static public System.Boolean get_IsMessageQueueRunning()
    // Offset: 0x10891C8
    static bool get_IsMessageQueueRunning();
    // static public System.Void set_IsMessageQueueRunning(System.Boolean value)
    // Offset: 0x1089230
    static void set_IsMessageQueueRunning(bool value);
    // static public System.Double get_Time()
    // Offset: 0x10892A0
    static double get_Time();
    // static public System.Int32 get_ServerTimestamp()
    // Offset: 0x10893A4
    static int get_ServerTimestamp();
    // static public System.Single get_KeepAliveInBackground()
    // Offset: 0x10896A4
    static float get_KeepAliveInBackground();
    // static public System.Void set_KeepAliveInBackground(System.Single value)
    // Offset: 0x1089524
    static void set_KeepAliveInBackground(float value);
    // static public System.Boolean get_IsMasterClient()
    // Offset: 0x10863E0
    static bool get_IsMasterClient();
    // static public Photon.Realtime.Player get_MasterClient()
    // Offset: 0x1086E70
    static ::Photon::Realtime::Player* get_MasterClient();
    // static public System.Boolean get_InRoom()
    // Offset: 0x10829D8
    static bool get_InRoom();
    // static public System.Int32 get_CountOfPlayersOnMaster()
    // Offset: 0x1089824
    static int get_CountOfPlayersOnMaster();
    // static public System.Int32 get_CountOfPlayersInRooms()
    // Offset: 0x1089898
    static int get_CountOfPlayersInRooms();
    // static public System.Int32 get_CountOfPlayers()
    // Offset: 0x108990C
    static int get_CountOfPlayers();
    // static public System.Int32 get_CountOfRooms()
    // Offset: 0x1089988
    static int get_CountOfRooms();
    // static public System.Boolean get_NetworkStatisticsEnabled()
    // Offset: 0x10899FC
    static bool get_NetworkStatisticsEnabled();
    // static public System.Void set_NetworkStatisticsEnabled(System.Boolean value)
    // Offset: 0x1089A78
    static void set_NetworkStatisticsEnabled(bool value);
    // static public System.Int32 get_ResentReliableCommands()
    // Offset: 0x1089AFC
    static int get_ResentReliableCommands();
    // static public System.Boolean get_CrcCheckEnabled()
    // Offset: 0x1089B78
    static bool get_CrcCheckEnabled();
    // static public System.Void set_CrcCheckEnabled(System.Boolean value)
    // Offset: 0x1089BF4
    static void set_CrcCheckEnabled(bool value);
    // static public System.Int32 get_PacketLossByCrcCheck()
    // Offset: 0x1089D48
    static int get_PacketLossByCrcCheck();
    // static public System.Int32 get_MaxResendsBeforeDisconnect()
    // Offset: 0x1089DC4
    static int get_MaxResendsBeforeDisconnect();
    // static public System.Void set_MaxResendsBeforeDisconnect(System.Int32 value)
    // Offset: 0x1089E40
    static void set_MaxResendsBeforeDisconnect(int value);
    // static public System.Int32 get_QuickResends()
    // Offset: 0x1089ED8
    static int get_QuickResends();
    // static public System.Void set_QuickResends(System.Int32 value)
    // Offset: 0x1089F5C
    static void set_QuickResends(int value);
    // static public System.Boolean get_UseAlternativeUdpPorts()
    // Offset: 0x1089FF0
    static bool get_UseAlternativeUdpPorts();
    // static public System.Void set_UseAlternativeUdpPorts(System.Boolean value)
    // Offset: 0x108A058
    static void set_UseAlternativeUdpPorts(bool value);
    // static public Photon.Realtime.PhotonPortDefinition get_ServerPortOverrides()
    // Offset: 0x108A0C8
    static ::Photon::Realtime::PhotonPortDefinition get_ServerPortOverrides();
    // static public System.Void set_ServerPortOverrides(Photon.Realtime.PhotonPortDefinition value)
    // Offset: 0x108A16C
    static void set_ServerPortOverrides(::Photon::Realtime::PhotonPortDefinition value);
    // static public Photon.Pun.PhotonView[] get_PhotonViews()
    // Offset: 0x10942F4
    static ::ArrayW<::Photon::Pun::PhotonView*> get_PhotonViews();
    // static public ExitGames.Client.Photon.NonAllocDictionary`2/ExitGames.Client.Photon.ValueIterator<System.Int32,Photon.Pun.PhotonView> get_PhotonViewCollection()
    // Offset: 0x1086040
    static typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator get_PhotonViewCollection();
    // static public System.Int32 get_ViewCount()
    // Offset: 0x1086364
    static int get_ViewCount();
    // static public Photon.Pun.IPunPrefabPool get_PrefabPool()
    // Offset: 0x1094BCC
    static ::Photon::Pun::IPunPrefabPool* get_PrefabPool();
    // static public System.Void set_PrefabPool(Photon.Pun.IPunPrefabPool value)
    // Offset: 0x108AD58
    static void set_PrefabPool(::Photon::Pun::IPunPrefabPool* value);
    // static public System.Single get_LevelLoadingProgress()
    // Offset: 0x1094C34
    static float get_LevelLoadingProgress();
    // static private System.Void add_OnOwnershipRequestEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x10944E0
    static void add_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void remove_OnOwnershipRequestEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x10945D0
    static void remove_OnOwnershipRequestEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void add_OnOwnershipTransferedEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x10946C0
    static void add_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void remove_OnOwnershipTransferedEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x10947B0
    static void remove_OnOwnershipTransferedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void add_OnOwnershipTransferFailedEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x10948A0
    static void add_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void remove_OnOwnershipTransferFailedEv(System.Action`2<Photon.Pun.PhotonView,Photon.Realtime.Player> value)
    // Offset: 0x1094990
    static void remove_OnOwnershipTransferFailedEv(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>* value);
    // static private System.Void .cctor()
    // Offset: 0x108A210
    static void _cctor();
    // static private System.Void StaticReset()
    // Offset: 0x108A8D8
    static void StaticReset();
    // static public System.Boolean ConnectUsingSettings()
    // Offset: 0x108AE14
    static bool ConnectUsingSettings();
    // static public System.Boolean ConnectUsingSettings(Photon.Realtime.AppSettings appSettings, System.Boolean startInOfflineMode)
    // Offset: 0x108AF2C
    static bool ConnectUsingSettings(::Photon::Realtime::AppSettings* appSettings, bool startInOfflineMode);
    // static public System.Boolean ConnectToMaster(System.String masterServerAddress, System.Int32 port, System.String appID)
    // Offset: 0x108B6B8
    static bool ConnectToMaster(::StringW masterServerAddress, int port, ::StringW appID);
    // static public System.Boolean ConnectToBestCloudServer()
    // Offset: 0x108BACC
    static bool ConnectToBestCloudServer();
    // static public System.Boolean ConnectToRegion(System.String region)
    // Offset: 0x108BC8C
    static bool ConnectToRegion(::StringW region);
    // static public System.Void Disconnect()
    // Offset: 0x108BEBC
    static void Disconnect();
    // static public System.Boolean Reconnect()
    // Offset: 0x108C03C
    static bool Reconnect();
    // static public System.Void NetworkStatisticsReset()
    // Offset: 0x108C404
    static void NetworkStatisticsReset();
    // static public System.String NetworkStatisticsToString()
    // Offset: 0x108C480
    static ::StringW NetworkStatisticsToString();
    // static private System.Boolean VerifyCanUseNetwork()
    // Offset: 0x108C59C
    static bool VerifyCanUseNetwork();
    // static public System.Int32 GetPing()
    // Offset: 0x108C640
    static int GetPing();
    // static public System.Void FetchServerTimestamp()
    // Offset: 0x108C6BC
    static void FetchServerTimestamp();
    // static public System.Void SendAllOutgoingCommands()
    // Offset: 0x108C76C
    static void SendAllOutgoingCommands();
    // static public System.Boolean CloseConnection(Photon.Realtime.Player kickPlayer)
    // Offset: 0x108C814
    static bool CloseConnection(::Photon::Realtime::Player* kickPlayer);
    // static public System.Boolean SetMasterClient(Photon.Realtime.Player masterClientPlayer)
    // Offset: 0x108CA44
    static bool SetMasterClient(::Photon::Realtime::Player* masterClientPlayer);
    // static public System.Boolean JoinRandomRoom()
    // Offset: 0x108CBD4
    static bool JoinRandomRoom();
    // static public System.Boolean JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, System.Byte expectedMaxPlayers)
    // Offset: 0x108D124
    static bool JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers);
    // static public System.Boolean JoinRandomRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, System.Byte expectedMaxPlayers, Photon.Realtime.MatchmakingMode matchingType, Photon.Realtime.TypedLobby typedLobby, System.String sqlLobbyFilter, System.String[] expectedUsers)
    // Offset: 0x108CC48
    static bool JoinRandomRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::ArrayW<::StringW> expectedUsers);
    // static public System.Boolean JoinRandomOrCreateRoom(ExitGames.Client.Photon.Hashtable expectedCustomRoomProperties, System.Byte expectedMaxPlayers, Photon.Realtime.MatchmakingMode matchingType, Photon.Realtime.TypedLobby typedLobby, System.String sqlLobbyFilter, System.String roomName, Photon.Realtime.RoomOptions roomOptions, System.String[] expectedUsers)
    // Offset: 0x108D344
    static bool JoinRandomOrCreateRoom(::ExitGames::Client::Photon::Hashtable* expectedCustomRoomProperties, uint8_t expectedMaxPlayers, ::Photon::Realtime::MatchmakingMode matchingType, ::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter, ::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::ArrayW<::StringW> expectedUsers);
    // static public System.Boolean CreateRoom(System.String roomName, Photon.Realtime.RoomOptions roomOptions, Photon.Realtime.TypedLobby typedLobby, System.String[] expectedUsers)
    // Offset: 0x108D864
    static bool CreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers);
    // static public System.Boolean JoinOrCreateRoom(System.String roomName, Photon.Realtime.RoomOptions roomOptions, Photon.Realtime.TypedLobby typedLobby, System.String[] expectedUsers)
    // Offset: 0x108DD1C
    static bool JoinOrCreateRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, ::Photon::Realtime::TypedLobby* typedLobby, ::ArrayW<::StringW> expectedUsers);
    // static public System.Boolean JoinRoom(System.String roomName, System.String[] expectedUsers)
    // Offset: 0x108E220
    static bool JoinRoom(::StringW roomName, ::ArrayW<::StringW> expectedUsers);
    // static public System.Boolean RejoinRoom(System.String roomName)
    // Offset: 0x108E694
    static bool RejoinRoom(::StringW roomName);
    // static public System.Boolean ReconnectAndRejoin()
    // Offset: 0x108EA74
    static bool ReconnectAndRejoin();
    // static public System.Boolean LeaveRoom(System.Boolean becomeInactive)
    // Offset: 0x108ED94
    static bool LeaveRoom(bool becomeInactive);
    // static private System.Void EnterOfflineRoom(System.String roomName, Photon.Realtime.RoomOptions roomOptions, System.Boolean createdRoom)
    // Offset: 0x108D1A8
    static void EnterOfflineRoom(::StringW roomName, ::Photon::Realtime::RoomOptions* roomOptions, bool createdRoom);
    // static public System.Boolean JoinLobby()
    // Offset: 0x108EFD8
    static bool JoinLobby();
    // static public System.Boolean JoinLobby(Photon.Realtime.TypedLobby typedLobby)
    // Offset: 0x108F038
    static bool JoinLobby(::Photon::Realtime::TypedLobby* typedLobby);
    // static public System.Boolean LeaveLobby()
    // Offset: 0x108F104
    static bool LeaveLobby();
    // static public System.Boolean FindFriends(System.String[] friendsToFind)
    // Offset: 0x108F1C8
    static bool FindFriends(::ArrayW<::StringW> friendsToFind);
    // static public System.Boolean GetCustomRoomList(Photon.Realtime.TypedLobby typedLobby, System.String sqlLobbyFilter)
    // Offset: 0x108F2A0
    static bool GetCustomRoomList(::Photon::Realtime::TypedLobby* typedLobby, ::StringW sqlLobbyFilter);
    // static public System.Boolean SetPlayerCustomProperties(ExitGames.Client.Photon.Hashtable customProperties)
    // Offset: 0x108F32C
    static bool SetPlayerCustomProperties(::ExitGames::Client::Photon::Hashtable* customProperties);
    // static public System.Void RemovePlayerCustomProperties(System.String[] customPropertiesToDelete)
    // Offset: 0x108F508
    static void RemovePlayerCustomProperties(::ArrayW<::StringW> customPropertiesToDelete);
    // static public System.Boolean RaiseEvent(System.Byte eventCode, System.Object eventContent, Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)
    // Offset: 0x108F6B0
    static bool RaiseEvent(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions);
    // static private System.Boolean RaiseEventInternal(System.Byte eventCode, System.Object eventContent, Photon.Realtime.RaiseEventOptions raiseEventOptions, ExitGames.Client.Photon.SendOptions sendOptions)
    // Offset: 0x108F8F8
    static bool RaiseEventInternal(uint8_t eventCode, ::Il2CppObject* eventContent, ::Photon::Realtime::RaiseEventOptions* raiseEventOptions, ::ExitGames::Client::Photon::SendOptions sendOptions);
    // static public System.Boolean AllocateViewID(Photon.Pun.PhotonView view)
    // Offset: 0x108FA70
    static bool AllocateViewID(::Photon::Pun::PhotonView* view);
    // static public System.Boolean AllocateSceneViewID(Photon.Pun.PhotonView view)
    // Offset: 0x108FE6C
    static bool AllocateSceneViewID(::Photon::Pun::PhotonView* view);
    // static public System.Boolean AllocateRoomViewID(Photon.Pun.PhotonView view)
    // Offset: 0x108FED0
    static bool AllocateRoomViewID(::Photon::Pun::PhotonView* view);
    // static public System.Int32 AllocateViewID(System.Boolean roomObject)
    // Offset: 0x1090014
    static int AllocateViewID(bool roomObject);
    // static public System.Int32 AllocateViewID(System.Int32 ownerId)
    // Offset: 0x108FB6C
    static int AllocateViewID(int ownerId);
    // static public UnityEngine.GameObject Instantiate(System.String prefabName, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Byte group, System.Object[] data)
    // Offset: 0x1090114
    static ::UnityEngine::GameObject* Instantiate(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data);
    // static public UnityEngine.GameObject InstantiateSceneObject(System.String prefabName, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Byte group, System.Object[] data)
    // Offset: 0x1090924
    static ::UnityEngine::GameObject* InstantiateSceneObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data);
    // static public UnityEngine.GameObject InstantiateRoomObject(System.String prefabName, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Byte group, System.Object[] data)
    // Offset: 0x10909F8
    static ::UnityEngine::GameObject* InstantiateRoomObject(::StringW prefabName, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, uint8_t group, ::ArrayW<::Il2CppObject*> data);
    // static private UnityEngine.GameObject NetworkInstantiate(ExitGames.Client.Photon.Hashtable networkEvent, Photon.Realtime.Player creator)
    // Offset: 0x1090BAC
    static ::UnityEngine::GameObject* NetworkInstantiate(::ExitGames::Client::Photon::Hashtable* networkEvent, ::Photon::Realtime::Player* creator);
    // static private UnityEngine.GameObject NetworkInstantiate(Photon.Pun.InstantiateParameters parameters, System.Boolean roomObject, System.Boolean instantiateEvent)
    // Offset: 0x10902E4
    static ::UnityEngine::GameObject* NetworkInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject, bool instantiateEvent);
    // static System.Boolean SendInstantiate(Photon.Pun.InstantiateParameters parameters, System.Boolean roomObject)
    // Offset: 0x1091238
    static bool SendInstantiate(::Photon::Pun::InstantiateParameters parameters, bool roomObject);
    // static public System.Void Destroy(Photon.Pun.PhotonView targetView)
    // Offset: 0x1091720
    static void Destroy(::Photon::Pun::PhotonView* targetView);
    // static public System.Void Destroy(UnityEngine.GameObject targetGo)
    // Offset: 0x1091D84
    static void Destroy(::UnityEngine::GameObject* targetGo);
    // static public System.Void DestroyPlayerObjects(Photon.Realtime.Player targetPlayer)
    // Offset: 0x1091DF4
    static void DestroyPlayerObjects(::Photon::Realtime::Player* targetPlayer);
    // static public System.Void DestroyPlayerObjects(System.Int32 targetPlayerId)
    // Offset: 0x1091E98
    static void DestroyPlayerObjects(int targetPlayerId);
    // static public System.Void DestroyAll()
    // Offset: 0x109246C
    static void DestroyAll();
    // static public System.Void RemoveRPCs(Photon.Realtime.Player targetPlayer)
    // Offset: 0x10924D8
    static void RemoveRPCs(::Photon::Realtime::Player* targetPlayer);
    // static public System.Void RemoveRPCs(Photon.Pun.PhotonView targetPhotonView)
    // Offset: 0x10926D8
    static void RemoveRPCs(::Photon::Pun::PhotonView* targetPhotonView);
    // static System.Void RPC(Photon.Pun.PhotonView view, System.String methodName, Photon.Pun.RpcTarget target, System.Boolean encrypt, params System.Object[] parameters)
    // Offset: 0x10929B0
    static void RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, bool encrypt, ::ArrayW<::Il2CppObject*> parameters);
    // static System.Void RPC(Photon.Pun.PhotonView view, System.String methodName, Photon.Realtime.Player targetPlayer, System.Boolean encrypt, params System.Object[] parameters)
    // Offset: 0x10936D4
    static void RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Realtime::Player* targetPlayer, bool encrypt, ::ArrayW<::Il2CppObject*> parameters);
    // static public System.Collections.Generic.HashSet`1<UnityEngine.GameObject> FindGameObjectsWithComponent(System.Type type)
    // Offset: 0x10938E8
    static ::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* FindGameObjectsWithComponent(::System::Type* type);
    // static public System.Void SetInterestGroups(System.Byte group, System.Boolean enabled)
    // Offset: 0x1093A6C
    static void SetInterestGroups(uint8_t group, bool enabled);
    // static public System.Void LoadLevel(System.Int32 levelNumber)
    // Offset: 0x1093F5C
    static void LoadLevel(int levelNumber);
    // static public System.Void LoadLevel(System.String levelName)
    // Offset: 0x10940F0
    static void LoadLevel(::StringW levelName);
    // static public System.Boolean WebRpc(System.String name, System.Object parameters, System.Boolean sendAuthCookie)
    // Offset: 0x1094260
    static bool WebRpc(::StringW name, ::Il2CppObject* parameters, bool sendAuthCookie);
    // static private System.Void SetupLogging()
    // Offset: 0x108B59C
    static void SetupLogging();
    // static public System.Void LoadOrCreateSettings(System.Boolean reload)
    // Offset: 0x108777C
    static void LoadOrCreateSettings(bool reload);
    // static public System.Void AddCallbackTarget(System.Object target)
    // Offset: 0x1082014
    static void AddCallbackTarget(::Il2CppObject* target);
    // static public System.Void RemoveCallbackTarget(System.Object target)
    // Offset: 0x1082318
    static void RemoveCallbackTarget(::Il2CppObject* target);
    // static System.String CallbacksToString()
    // Offset: 0x1094A80
    static ::StringW CallbacksToString();
    // static private System.Void LeftRoomCleanup()
    // Offset: 0x1088B8C
    static void LeftRoomCleanup();
    // static System.Void LocalCleanupAnythingInstantiated(System.Boolean destroyInstantiatedGameObjects)
    // Offset: 0x108669C
    static void LocalCleanupAnythingInstantiated(bool destroyInstantiatedGameObjects);
    // static private System.Void ResetPhotonViewsOnSerialize()
    // Offset: 0x1094D60
    static void ResetPhotonViewsOnSerialize();
    // static System.Void ExecuteRpc(ExitGames.Client.Photon.Hashtable rpcData, Photon.Realtime.Player sender)
    // Offset: 0x1094EA8
    static void ExecuteRpc(::ExitGames::Client::Photon::Hashtable* rpcData, ::Photon::Realtime::Player* sender);
    // static private System.Boolean CheckTypeMatch(System.Reflection.ParameterInfo[] methodParameters, System.Type[] callParameterTypes)
    // Offset: 0x10967A8
    static bool CheckTypeMatch(::ArrayW<::System::Reflection::ParameterInfo*> methodParameters, ::ArrayW<::System::Type*> callParameterTypes);
    // static public System.Void DestroyPlayerObjects(System.Int32 playerId, System.Boolean localOnly)
    // Offset: 0x1092010
    static void DestroyPlayerObjects(int playerId, bool localOnly);
    // static public System.Void DestroyAll(System.Boolean localOnly)
    // Offset: 0x1096B6C
    static void DestroyAll(bool localOnly);
    // static System.Void RemoveInstantiatedGO(UnityEngine.GameObject go, System.Boolean localOnly)
    // Offset: 0x109181C
    static void RemoveInstantiatedGO(::UnityEngine::GameObject* go, bool localOnly);
    // static private System.Void ServerCleanInstantiateAndDestroy(Photon.Pun.PhotonView photonView)
    // Offset: 0x1096DCC
    static void ServerCleanInstantiateAndDestroy(::Photon::Pun::PhotonView* photonView);
    // static private System.Void SendDestroyOfPlayer(System.Int32 actorNr)
    // Offset: 0x1096A6C
    static void SendDestroyOfPlayer(int actorNr);
    // static private System.Void SendDestroyOfAll()
    // Offset: 0x1096CCC
    static void SendDestroyOfAll();
    // static private System.Void OpRemoveFromServerInstantiationsOfPlayer(System.Int32 actorNr)
    // Offset: 0x109696C
    static void OpRemoveFromServerInstantiationsOfPlayer(int actorNr);
    // static System.Void RequestOwnership(System.Int32 viewID, System.Int32 fromOwner)
    // Offset: 0x109716C
    static void RequestOwnership(int viewID, int fromOwner);
    // static System.Void TransferOwnership(System.Int32 viewID, System.Int32 playerID)
    // Offset: 0x1097264
    static void TransferOwnership(int viewID, int playerID);
    // static System.Void OwnershipUpdate(System.Int32[] viewOwnerPairs, System.Int32 targetActor)
    // Offset: 0x108650C
    static void OwnershipUpdate(::ArrayW<int> viewOwnerPairs, int targetActor);
    // static public System.Boolean LocalCleanPhotonView(Photon.Pun.PhotonView view)
    // Offset: 0x1096FE0
    static bool LocalCleanPhotonView(::Photon::Pun::PhotonView* view);
    // static public Photon.Pun.PhotonView GetPhotonView(System.Int32 viewID)
    // Offset: 0x109670C
    static ::Photon::Pun::PhotonView* GetPhotonView(int viewID);
    // static public System.Void RegisterPhotonView(Photon.Pun.PhotonView netView)
    // Offset: 0x109735C
    static void RegisterPhotonView(::Photon::Pun::PhotonView* netView);
    // static public System.Void OpCleanActorRpcBuffer(System.Int32 actorNumber)
    // Offset: 0x10925D8
    static void OpCleanActorRpcBuffer(int actorNumber);
    // static public System.Void OpRemoveCompleteCacheOfPlayer(System.Int32 actorNumber)
    // Offset: 0x1097634
    static void OpRemoveCompleteCacheOfPlayer(int actorNumber);
    // static public System.Void OpRemoveCompleteCache()
    // Offset: 0x1096BFC
    static void OpRemoveCompleteCache();
    // static private System.Void RemoveCacheOfLeftPlayers()
    // Offset: 0x1097734
    static void RemoveCacheOfLeftPlayers();
    // static public System.Void CleanRpcBufferIfMine(Photon.Pun.PhotonView view)
    // Offset: 0x1092768
    static void CleanRpcBufferIfMine(::Photon::Pun::PhotonView* view);
    // static public System.Void OpCleanRpcBuffer(Photon.Pun.PhotonView view)
    // Offset: 0x1097070
    static void OpCleanRpcBuffer(::Photon::Pun::PhotonView* view);
    // static public System.Void RemoveRPCsInGroup(System.Int32 group)
    // Offset: 0x1097880
    static void RemoveRPCsInGroup(int group);
    // static public System.Boolean RemoveBufferedRPCs(System.Int32 viewId, System.String methodName, System.Int32[] callersActorNumbers)
    // Offset: 0x1097A0C
    static bool RemoveBufferedRPCs(int viewId, ::StringW methodName, ::ArrayW<int> callersActorNumbers);
    // static public System.Void SetLevelPrefix(System.Byte prefix)
    // Offset: 0x1097C74
    static void SetLevelPrefix(uint8_t prefix);
    // static System.Void RPC(Photon.Pun.PhotonView view, System.String methodName, Photon.Pun.RpcTarget target, Photon.Realtime.Player player, System.Boolean encrypt, params System.Object[] parameters)
    // Offset: 0x1092B90
    static void RPC(::Photon::Pun::PhotonView* view, ::StringW methodName, ::Photon::Pun::RpcTarget target, ::Photon::Realtime::Player* player, bool encrypt, ::ArrayW<::Il2CppObject*> parameters);
    // static public System.Void SetInterestGroups(System.Byte[] disableGroups, System.Byte[] enableGroups)
    // Offset: 0x1093B68
    static void SetInterestGroups(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups);
    // static public System.Void SetSendingEnabled(System.Byte group, System.Boolean enabled)
    // Offset: 0x1097CE0
    static void SetSendingEnabled(uint8_t group, bool enabled);
    // static public System.Void SetSendingEnabled(System.Byte[] disableGroups, System.Byte[] enableGroups)
    // Offset: 0x1097DB4
    static void SetSendingEnabled(::ArrayW<uint8_t> disableGroups, ::ArrayW<uint8_t> enableGroups);
    // static System.Void NewSceneLoaded()
    // Offset: 0x108716C
    static void NewSceneLoaded();
    // static System.Void RunViewUpdate()
    // Offset: 0x1085284
    static void RunViewUpdate();
    // static private System.Void SendSerializeViewBatch(Photon.Pun.PhotonNetwork/Photon.Pun.SerializeViewBatch batch)
    // Offset: 0x1098230
    static void SendSerializeViewBatch(::Photon::Pun::PhotonNetwork::SerializeViewBatch* batch);
    // static private System.Collections.Generic.List`1<System.Object> OnSerializeWrite(Photon.Pun.PhotonView view)
    // Offset: 0x1097F18
    static ::System::Collections::Generic::List_1<::Il2CppObject*>* OnSerializeWrite(::Photon::Pun::PhotonView* view);
    // static private System.Void OnSerializeRead(System.Object[] data, Photon.Realtime.Player sender, System.Int32 networkTime, System.Int16 correctPrefix)
    // Offset: 0x10989A8
    static void OnSerializeRead(::ArrayW<::Il2CppObject*> data, ::Photon::Realtime::Player* sender, int networkTime, int16_t correctPrefix);
    // static private System.Collections.Generic.List`1<System.Object> DeltaCompressionWrite(System.Collections.Generic.List`1<System.Object> previousContent, System.Collections.Generic.List`1<System.Object> currentContent)
    // Offset: 0x1098724
    static ::System::Collections::Generic::List_1<::Il2CppObject*>* DeltaCompressionWrite(::System::Collections::Generic::List_1<::Il2CppObject*>* previousContent, ::System::Collections::Generic::List_1<::Il2CppObject*>* currentContent);
    // static private System.Object[] DeltaCompressionRead(System.Object[] lastOnSerializeDataReceived, System.Object[] incomingData)
    // Offset: 0x10990B8
    static ::ArrayW<::Il2CppObject*> DeltaCompressionRead(::ArrayW<::Il2CppObject*> lastOnSerializeDataReceived, ::ArrayW<::Il2CppObject*> incomingData);
    // static private System.Boolean AlmostEquals(System.Collections.Generic.IList`1<System.Object> lastData, System.Collections.Generic.IList`1<System.Object> currentContent)
    // Offset: 0x1098458
    static bool AlmostEquals(::System::Collections::Generic::IList_1<::Il2CppObject*>* lastData, ::System::Collections::Generic::IList_1<::Il2CppObject*>* currentContent);
    // static private System.Boolean AlmostEquals(System.Object one, System.Object two)
    // Offset: 0x1099264
    static bool AlmostEquals(::Il2CppObject* one, ::Il2CppObject* two);
    // static System.Boolean GetMethod(UnityEngine.MonoBehaviour monob, System.String methodType, out System.Reflection.MethodInfo mi)
    // Offset: 0x109965C
    static bool GetMethod(::UnityEngine::MonoBehaviour* monob, ::StringW methodType, ByRef<::System::Reflection::MethodInfo*> mi);
    // static System.Void LoadLevelIfSynced()
    // Offset: 0x1085C30
    static void LoadLevelIfSynced();
    // static System.Void SetLevelInPropsIfSynced(System.Object levelId)
    // Offset: 0x108574C
    static void SetLevelInPropsIfSynced(::Il2CppObject* levelId);
    // static private System.Void OnEvent(ExitGames.Client.Photon.EventData photonEvent)
    // Offset: 0x10997C4
    static void OnEvent(::ExitGames::Client::Photon::EventData* photonEvent);
    // static private System.Void OnOperation(ExitGames.Client.Photon.OperationResponse opResponse)
    // Offset: 0x109B1AC
    static void OnOperation(::ExitGames::Client::Photon::OperationResponse* opResponse);
    // static private System.Void OnClientStateChanged(Photon.Realtime.ClientState previousState, Photon.Realtime.ClientState state)
    // Offset: 0x109B438
    static void OnClientStateChanged(::Photon::Realtime::ClientState previousState, ::Photon::Realtime::ClientState state);
    // static private System.Void OnRegionsPinged(Photon.Realtime.RegionHandler regionHandler)
    // Offset: 0x109B580
    static void OnRegionsPinged(::Photon::Realtime::RegionHandler* regionHandler);
  }; // Photon.Pun.PhotonNetwork
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonNetwork::RaiseEventBatch, "Photon.Pun", "PhotonNetwork/RaiseEventBatch");
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_GameVersion
// Il2CppName: get_GameVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_GameVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_GameVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_GameVersion
// Il2CppName: set_GameVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Photon::Pun::PhotonNetwork::set_GameVersion)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_GameVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_AppVersion
// Il2CppName: get_AppVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_AppVersion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_AppVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PhotonServerSettings
// Il2CppName: get_PhotonServerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Pun::ServerSettings* (*)()>(&Photon::Pun::PhotonNetwork::get_PhotonServerSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PhotonServerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_PhotonServerSettings
// Il2CppName: set_PhotonServerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::ServerSettings*)>(&Photon::Pun::PhotonNetwork::set_PhotonServerSettings)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Pun", "ServerSettings")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_PhotonServerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_ServerAddress
// Il2CppName: get_ServerAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_ServerAddress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_ServerAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CloudRegion
// Il2CppName: get_CloudRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_CloudRegion)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CloudRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CurrentCluster
// Il2CppName: get_CurrentCluster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_CurrentCluster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CurrentCluster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences
// Il2CppName: get_BestRegionSummaryInPreferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_BestRegionSummaryInPreferences)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences
// Il2CppName: set_BestRegionSummaryInPreferences
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Photon::Pun::PhotonNetwork::set_BestRegionSummaryInPreferences)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_IsConnected
// Il2CppName: get_IsConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_IsConnected)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_IsConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_IsConnectedAndReady
// Il2CppName: get_IsConnectedAndReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_IsConnectedAndReady)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_IsConnectedAndReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_NetworkClientState
// Il2CppName: get_NetworkClientState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::ClientState (*)()>(&Photon::Pun::PhotonNetwork::get_NetworkClientState)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_NetworkClientState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_Server
// Il2CppName: get_Server
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::ServerConnection (*)()>(&Photon::Pun::PhotonNetwork::get_Server)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_Server", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_AuthValues
// Il2CppName: get_AuthValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::AuthenticationValues* (*)()>(&Photon::Pun::PhotonNetwork::get_AuthValues)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_AuthValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_AuthValues
// Il2CppName: set_AuthValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::AuthenticationValues*)>(&Photon::Pun::PhotonNetwork::set_AuthValues)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "AuthenticationValues")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_AuthValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CurrentLobby
// Il2CppName: get_CurrentLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::TypedLobby* (*)()>(&Photon::Pun::PhotonNetwork::get_CurrentLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CurrentLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CurrentRoom
// Il2CppName: get_CurrentRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::Room* (*)()>(&Photon::Pun::PhotonNetwork::get_CurrentRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CurrentRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_LocalPlayer
// Il2CppName: get_LocalPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::Player* (*)()>(&Photon::Pun::PhotonNetwork::get_LocalPlayer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_LocalPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_NickName
// Il2CppName: get_NickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::get_NickName)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_NickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_NickName
// Il2CppName: set_NickName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Photon::Pun::PhotonNetwork::set_NickName)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_NickName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PlayerList
// Il2CppName: get_PlayerList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Photon::Realtime::Player*> (*)()>(&Photon::Pun::PhotonNetwork::get_PlayerList)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PlayerList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PlayerListOthers
// Il2CppName: get_PlayerListOthers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Photon::Realtime::Player*> (*)()>(&Photon::Pun::PhotonNetwork::get_PlayerListOthers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PlayerListOthers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_OfflineMode
// Il2CppName: get_OfflineMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_OfflineMode)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_OfflineMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_OfflineMode
// Il2CppName: set_OfflineMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_OfflineMode)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_OfflineMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene
// Il2CppName: get_AutomaticallySyncScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_AutomaticallySyncScene)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_AutomaticallySyncScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene
// Il2CppName: set_AutomaticallySyncScene
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_AutomaticallySyncScene)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_AutomaticallySyncScene", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics
// Il2CppName: get_EnableLobbyStatistics
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_EnableLobbyStatistics)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_EnableLobbyStatistics", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_InLobby
// Il2CppName: get_InLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_InLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_InLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_SendRate
// Il2CppName: get_SendRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_SendRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_SendRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_SendRate
// Il2CppName: set_SendRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::set_SendRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_SendRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_SerializationRate
// Il2CppName: get_SerializationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_SerializationRate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_SerializationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_SerializationRate
// Il2CppName: set_SerializationRate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::set_SerializationRate)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_SerializationRate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning
// Il2CppName: get_IsMessageQueueRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_IsMessageQueueRunning)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_IsMessageQueueRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning
// Il2CppName: set_IsMessageQueueRunning
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_IsMessageQueueRunning)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_IsMessageQueueRunning", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_Time
// Il2CppName: get_Time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<double (*)()>(&Photon::Pun::PhotonNetwork::get_Time)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_Time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_ServerTimestamp
// Il2CppName: get_ServerTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_ServerTimestamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_ServerTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_KeepAliveInBackground
// Il2CppName: get_KeepAliveInBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&Photon::Pun::PhotonNetwork::get_KeepAliveInBackground)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_KeepAliveInBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_KeepAliveInBackground
// Il2CppName: set_KeepAliveInBackground
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(float)>(&Photon::Pun::PhotonNetwork::set_KeepAliveInBackground)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Single")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_KeepAliveInBackground", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_IsMasterClient
// Il2CppName: get_IsMasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_IsMasterClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_IsMasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_MasterClient
// Il2CppName: get_MasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::Player* (*)()>(&Photon::Pun::PhotonNetwork::get_MasterClient)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_MasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_InRoom
// Il2CppName: get_InRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_InRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_InRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster
// Il2CppName: get_CountOfPlayersOnMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_CountOfPlayersOnMaster)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CountOfPlayersOnMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms
// Il2CppName: get_CountOfPlayersInRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_CountOfPlayersInRooms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CountOfPlayersInRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CountOfPlayers
// Il2CppName: get_CountOfPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_CountOfPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CountOfPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CountOfRooms
// Il2CppName: get_CountOfRooms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_CountOfRooms)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CountOfRooms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled
// Il2CppName: get_NetworkStatisticsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_NetworkStatisticsEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_NetworkStatisticsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled
// Il2CppName: set_NetworkStatisticsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_NetworkStatisticsEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_NetworkStatisticsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_ResentReliableCommands
// Il2CppName: get_ResentReliableCommands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_ResentReliableCommands)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_ResentReliableCommands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_CrcCheckEnabled
// Il2CppName: get_CrcCheckEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_CrcCheckEnabled)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_CrcCheckEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_CrcCheckEnabled
// Il2CppName: set_CrcCheckEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_CrcCheckEnabled)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_CrcCheckEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck
// Il2CppName: get_PacketLossByCrcCheck
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_PacketLossByCrcCheck)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PacketLossByCrcCheck", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect
// Il2CppName: get_MaxResendsBeforeDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_MaxResendsBeforeDisconnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect
// Il2CppName: set_MaxResendsBeforeDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::set_MaxResendsBeforeDisconnect)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_MaxResendsBeforeDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_QuickResends
// Il2CppName: get_QuickResends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_QuickResends)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_QuickResends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_QuickResends
// Il2CppName: set_QuickResends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::set_QuickResends)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_QuickResends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts
// Il2CppName: get_UseAlternativeUdpPorts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::get_UseAlternativeUdpPorts)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_UseAlternativeUdpPorts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts
// Il2CppName: set_UseAlternativeUdpPorts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::set_UseAlternativeUdpPorts)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_UseAlternativeUdpPorts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_ServerPortOverrides
// Il2CppName: get_ServerPortOverrides
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Realtime::PhotonPortDefinition (*)()>(&Photon::Pun::PhotonNetwork::get_ServerPortOverrides)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_ServerPortOverrides", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_ServerPortOverrides
// Il2CppName: set_ServerPortOverrides
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::PhotonPortDefinition)>(&Photon::Pun::PhotonNetwork::set_ServerPortOverrides)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "PhotonPortDefinition")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_ServerPortOverrides", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PhotonViews
// Il2CppName: get_PhotonViews
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Photon::Pun::PhotonView*> (*)()>(&Photon::Pun::PhotonNetwork::get_PhotonViews)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PhotonViews", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PhotonViewCollection
// Il2CppName: get_PhotonViewCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<typename ::ExitGames::Client::Photon::NonAllocDictionary_2<int, ::Photon::Pun::PhotonView*>::ValueIterator (*)()>(&Photon::Pun::PhotonNetwork::get_PhotonViewCollection)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PhotonViewCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_ViewCount
// Il2CppName: get_ViewCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::get_ViewCount)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_ViewCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_PrefabPool
// Il2CppName: get_PrefabPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Pun::IPunPrefabPool* (*)()>(&Photon::Pun::PhotonNetwork::get_PrefabPool)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_PrefabPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::set_PrefabPool
// Il2CppName: set_PrefabPool
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::IPunPrefabPool*)>(&Photon::Pun::PhotonNetwork::set_PrefabPool)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::GetClassFromName("Photon.Pun", "IPunPrefabPool")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "set_PrefabPool", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::get_LevelLoadingProgress
// Il2CppName: get_LevelLoadingProgress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)()>(&Photon::Pun::PhotonNetwork::get_LevelLoadingProgress)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "get_LevelLoadingProgress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv
// Il2CppName: add_OnOwnershipRequestEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::add_OnOwnershipRequestEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "add_OnOwnershipRequestEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv
// Il2CppName: remove_OnOwnershipRequestEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::remove_OnOwnershipRequestEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "remove_OnOwnershipRequestEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv
// Il2CppName: add_OnOwnershipTransferedEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::add_OnOwnershipTransferedEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "add_OnOwnershipTransferedEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv
// Il2CppName: remove_OnOwnershipTransferedEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferedEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "remove_OnOwnershipTransferedEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv
// Il2CppName: add_OnOwnershipTransferFailedEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::add_OnOwnershipTransferFailedEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "add_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv
// Il2CppName: remove_OnOwnershipTransferFailedEv
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::System::Action_2<::Photon::Pun::PhotonView*, ::Photon::Realtime::Player*>*)>(&Photon::Pun::PhotonNetwork::remove_OnOwnershipTransferFailedEv)> {
  static const MethodInfo* get() {
    static auto* value = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System", "Action`2"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView"), ::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "remove_OnOwnershipTransferFailedEv", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{value});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::_cctor)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::StaticReset
// Il2CppName: StaticReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::StaticReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "StaticReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ConnectUsingSettings
// Il2CppName: ConnectUsingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::ConnectUsingSettings)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ConnectUsingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ConnectUsingSettings
// Il2CppName: ConnectUsingSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::AppSettings*, bool)>(&Photon::Pun::PhotonNetwork::ConnectUsingSettings)> {
  static const MethodInfo* get() {
    static auto* appSettings = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "AppSettings")->byval_arg;
    static auto* startInOfflineMode = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ConnectUsingSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{appSettings, startInOfflineMode});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ConnectToMaster
// Il2CppName: ConnectToMaster
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, int, ::StringW)>(&Photon::Pun::PhotonNetwork::ConnectToMaster)> {
  static const MethodInfo* get() {
    static auto* masterServerAddress = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* port = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* appID = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ConnectToMaster", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{masterServerAddress, port, appID});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ConnectToBestCloudServer
// Il2CppName: ConnectToBestCloudServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::ConnectToBestCloudServer)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ConnectToBestCloudServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ConnectToRegion
// Il2CppName: ConnectToRegion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Photon::Pun::PhotonNetwork::ConnectToRegion)> {
  static const MethodInfo* get() {
    static auto* region = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ConnectToRegion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{region});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::Disconnect
// Il2CppName: Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::Disconnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::Reconnect
// Il2CppName: Reconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::Reconnect)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "Reconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::NetworkStatisticsReset
// Il2CppName: NetworkStatisticsReset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::NetworkStatisticsReset)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "NetworkStatisticsReset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::NetworkStatisticsToString
// Il2CppName: NetworkStatisticsToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::NetworkStatisticsToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "NetworkStatisticsToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::VerifyCanUseNetwork
// Il2CppName: VerifyCanUseNetwork
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::VerifyCanUseNetwork)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "VerifyCanUseNetwork", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::GetPing
// Il2CppName: GetPing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Photon::Pun::PhotonNetwork::GetPing)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "GetPing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::FetchServerTimestamp
// Il2CppName: FetchServerTimestamp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::FetchServerTimestamp)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "FetchServerTimestamp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SendAllOutgoingCommands
// Il2CppName: SendAllOutgoingCommands
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::SendAllOutgoingCommands)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SendAllOutgoingCommands", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::CloseConnection
// Il2CppName: CloseConnection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::CloseConnection)> {
  static const MethodInfo* get() {
    static auto* kickPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "CloseConnection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{kickPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetMasterClient
// Il2CppName: SetMasterClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::SetMasterClient)> {
  static const MethodInfo* get() {
    static auto* masterClientPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetMasterClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{masterClientPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinRandomRoom
// Il2CppName: JoinRandomRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::JoinRandomRoom)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinRandomRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinRandomRoom
// Il2CppName: JoinRandomRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ExitGames::Client::Photon::Hashtable*, uint8_t)>(&Photon::Pun::PhotonNetwork::JoinRandomRoom)> {
  static const MethodInfo* get() {
    static auto* expectedCustomRoomProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* expectedMaxPlayers = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinRandomRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expectedCustomRoomProperties, expectedMaxPlayers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinRandomRoom
// Il2CppName: JoinRandomRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ExitGames::Client::Photon::Hashtable*, uint8_t, ::Photon::Realtime::MatchmakingMode, ::Photon::Realtime::TypedLobby*, ::StringW, ::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::JoinRandomRoom)> {
  static const MethodInfo* get() {
    static auto* expectedCustomRoomProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* expectedMaxPlayers = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* matchingType = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "MatchmakingMode")->byval_arg;
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* sqlLobbyFilter = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinRandomRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, expectedUsers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom
// Il2CppName: JoinRandomOrCreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ExitGames::Client::Photon::Hashtable*, uint8_t, ::Photon::Realtime::MatchmakingMode, ::Photon::Realtime::TypedLobby*, ::StringW, ::StringW, ::Photon::Realtime::RoomOptions*, ::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::JoinRandomOrCreateRoom)> {
  static const MethodInfo* get() {
    static auto* expectedCustomRoomProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* expectedMaxPlayers = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* matchingType = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "MatchmakingMode")->byval_arg;
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* sqlLobbyFilter = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RoomOptions")->byval_arg;
    static auto* expectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinRandomOrCreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{expectedCustomRoomProperties, expectedMaxPlayers, matchingType, typedLobby, sqlLobbyFilter, roomName, roomOptions, expectedUsers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::CreateRoom
// Il2CppName: CreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::Photon::Realtime::RoomOptions*, ::Photon::Realtime::TypedLobby*, ::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::CreateRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RoomOptions")->byval_arg;
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* expectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "CreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, roomOptions, typedLobby, expectedUsers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinOrCreateRoom
// Il2CppName: JoinOrCreateRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::Photon::Realtime::RoomOptions*, ::Photon::Realtime::TypedLobby*, ::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::JoinOrCreateRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RoomOptions")->byval_arg;
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* expectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinOrCreateRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, roomOptions, typedLobby, expectedUsers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinRoom
// Il2CppName: JoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::JoinRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* expectedUsers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, expectedUsers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RejoinRoom
// Il2CppName: RejoinRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW)>(&Photon::Pun::PhotonNetwork::RejoinRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RejoinRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ReconnectAndRejoin
// Il2CppName: ReconnectAndRejoin
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::ReconnectAndRejoin)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ReconnectAndRejoin", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LeaveRoom
// Il2CppName: LeaveRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&Photon::Pun::PhotonNetwork::LeaveRoom)> {
  static const MethodInfo* get() {
    static auto* becomeInactive = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LeaveRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{becomeInactive});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::EnterOfflineRoom
// Il2CppName: EnterOfflineRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW, ::Photon::Realtime::RoomOptions*, bool)>(&Photon::Pun::PhotonNetwork::EnterOfflineRoom)> {
  static const MethodInfo* get() {
    static auto* roomName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* roomOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RoomOptions")->byval_arg;
    static auto* createdRoom = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "EnterOfflineRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomName, roomOptions, createdRoom});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinLobby
// Il2CppName: JoinLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::JoinLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::JoinLobby
// Il2CppName: JoinLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::TypedLobby*)>(&Photon::Pun::PhotonNetwork::JoinLobby)> {
  static const MethodInfo* get() {
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "JoinLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typedLobby});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LeaveLobby
// Il2CppName: LeaveLobby
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Photon::Pun::PhotonNetwork::LeaveLobby)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LeaveLobby", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::FindFriends
// Il2CppName: FindFriends
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::FindFriends)> {
  static const MethodInfo* get() {
    static auto* friendsToFind = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "FindFriends", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{friendsToFind});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::GetCustomRoomList
// Il2CppName: GetCustomRoomList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Realtime::TypedLobby*, ::StringW)>(&Photon::Pun::PhotonNetwork::GetCustomRoomList)> {
  static const MethodInfo* get() {
    static auto* typedLobby = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "TypedLobby")->byval_arg;
    static auto* sqlLobbyFilter = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "GetCustomRoomList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{typedLobby, sqlLobbyFilter});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetPlayerCustomProperties
// Il2CppName: SetPlayerCustomProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ExitGames::Client::Photon::Hashtable*)>(&Photon::Pun::PhotonNetwork::SetPlayerCustomProperties)> {
  static const MethodInfo* get() {
    static auto* customProperties = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetPlayerCustomProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customProperties});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties
// Il2CppName: RemovePlayerCustomProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::StringW>)>(&Photon::Pun::PhotonNetwork::RemovePlayerCustomProperties)> {
  static const MethodInfo* get() {
    static auto* customPropertiesToDelete = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "String"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemovePlayerCustomProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{customPropertiesToDelete});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RaiseEvent
// Il2CppName: RaiseEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t, ::Il2CppObject*, ::Photon::Realtime::RaiseEventOptions*, ::ExitGames::Client::Photon::SendOptions)>(&Photon::Pun::PhotonNetwork::RaiseEvent)> {
  static const MethodInfo* get() {
    static auto* eventCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* eventContent = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* raiseEventOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RaiseEventOptions")->byval_arg;
    static auto* sendOptions = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "SendOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RaiseEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCode, eventContent, raiseEventOptions, sendOptions});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RaiseEventInternal
// Il2CppName: RaiseEventInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(uint8_t, ::Il2CppObject*, ::Photon::Realtime::RaiseEventOptions*, ::ExitGames::Client::Photon::SendOptions)>(&Photon::Pun::PhotonNetwork::RaiseEventInternal)> {
  static const MethodInfo* get() {
    static auto* eventCode = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* eventContent = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* raiseEventOptions = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RaiseEventOptions")->byval_arg;
    static auto* sendOptions = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "SendOptions")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RaiseEventInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{eventCode, eventContent, raiseEventOptions, sendOptions});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AllocateViewID
// Il2CppName: AllocateViewID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::AllocateViewID)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AllocateViewID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AllocateSceneViewID
// Il2CppName: AllocateSceneViewID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::AllocateSceneViewID)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AllocateSceneViewID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AllocateRoomViewID
// Il2CppName: AllocateRoomViewID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::AllocateRoomViewID)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AllocateRoomViewID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AllocateViewID
// Il2CppName: AllocateViewID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(bool)>(&Photon::Pun::PhotonNetwork::AllocateViewID)> {
  static const MethodInfo* get() {
    static auto* roomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AllocateViewID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{roomObject});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AllocateViewID
// Il2CppName: AllocateViewID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(int)>(&Photon::Pun::PhotonNetwork::AllocateViewID)> {
  static const MethodInfo* get() {
    static auto* ownerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AllocateViewID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{ownerId});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::Instantiate
// Il2CppName: Instantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::StringW, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, uint8_t, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::Instantiate)> {
  static const MethodInfo* get() {
    static auto* prefabName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "Instantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabName, position, rotation, group, data});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::InstantiateSceneObject
// Il2CppName: InstantiateSceneObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::StringW, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, uint8_t, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::InstantiateSceneObject)> {
  static const MethodInfo* get() {
    static auto* prefabName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "InstantiateSceneObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabName, position, rotation, group, data});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::InstantiateRoomObject
// Il2CppName: InstantiateRoomObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::StringW, ::UnityEngine::Vector3, ::UnityEngine::Quaternion, uint8_t, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::InstantiateRoomObject)> {
  static const MethodInfo* get() {
    static auto* prefabName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* position = &::il2cpp_utils::GetClassFromName("UnityEngine", "Vector3")->byval_arg;
    static auto* rotation = &::il2cpp_utils::GetClassFromName("UnityEngine", "Quaternion")->byval_arg;
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "InstantiateRoomObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefabName, position, rotation, group, data});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::NetworkInstantiate
// Il2CppName: NetworkInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::ExitGames::Client::Photon::Hashtable*, ::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::NetworkInstantiate)> {
  static const MethodInfo* get() {
    static auto* networkEvent = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* creator = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "NetworkInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{networkEvent, creator});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::NetworkInstantiate
// Il2CppName: NetworkInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::UnityEngine::GameObject* (*)(::Photon::Pun::InstantiateParameters, bool, bool)>(&Photon::Pun::PhotonNetwork::NetworkInstantiate)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Photon.Pun", "InstantiateParameters")->byval_arg;
    static auto* roomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* instantiateEvent = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "NetworkInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, roomObject, instantiateEvent});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SendInstantiate
// Il2CppName: SendInstantiate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Pun::InstantiateParameters, bool)>(&Photon::Pun::PhotonNetwork::SendInstantiate)> {
  static const MethodInfo* get() {
    static auto* parameters = &::il2cpp_utils::GetClassFromName("Photon.Pun", "InstantiateParameters")->byval_arg;
    static auto* roomObject = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SendInstantiate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{parameters, roomObject});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::Destroy)> {
  static const MethodInfo* get() {
    static auto* targetView = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetView});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::Destroy
// Il2CppName: Destroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*)>(&Photon::Pun::PhotonNetwork::Destroy)> {
  static const MethodInfo* get() {
    static auto* targetGo = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "Destroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetGo});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DestroyPlayerObjects
// Il2CppName: DestroyPlayerObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::DestroyPlayerObjects)> {
  static const MethodInfo* get() {
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DestroyPlayerObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DestroyPlayerObjects
// Il2CppName: DestroyPlayerObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::DestroyPlayerObjects)> {
  static const MethodInfo* get() {
    static auto* targetPlayerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DestroyPlayerObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayerId});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DestroyAll
// Il2CppName: DestroyAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::DestroyAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DestroyAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveRPCs
// Il2CppName: RemoveRPCs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::RemoveRPCs)> {
  static const MethodInfo* get() {
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveRPCs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPlayer});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveRPCs
// Il2CppName: RemoveRPCs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::RemoveRPCs)> {
  static const MethodInfo* get() {
    static auto* targetPhotonView = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveRPCs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{targetPhotonView});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RPC
// Il2CppName: RPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*, ::StringW, ::Photon::Pun::RpcTarget, bool, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::RPC)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("Photon.Pun", "RpcTarget")->byval_arg;
    static auto* encrypt = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* parameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view, methodName, target, encrypt, parameters});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RPC
// Il2CppName: RPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*, ::StringW, ::Photon::Realtime::Player*, bool, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::RPC)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* targetPlayer = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* encrypt = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* parameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view, methodName, targetPlayer, encrypt, parameters});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent
// Il2CppName: FindGameObjectsWithComponent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::HashSet_1<::UnityEngine::GameObject*>* (*)(::System::Type*)>(&Photon::Pun::PhotonNetwork::FindGameObjectsWithComponent)> {
  static const MethodInfo* get() {
    static auto* type = &::il2cpp_utils::GetClassFromName("System", "Type")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "FindGameObjectsWithComponent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{type});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetInterestGroups
// Il2CppName: SetInterestGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t, bool)>(&Photon::Pun::PhotonNetwork::SetInterestGroups)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetInterestGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group, enabled});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LoadLevel
// Il2CppName: LoadLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::LoadLevel)> {
  static const MethodInfo* get() {
    static auto* levelNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LoadLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelNumber});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LoadLevel
// Il2CppName: LoadLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::StringW)>(&Photon::Pun::PhotonNetwork::LoadLevel)> {
  static const MethodInfo* get() {
    static auto* levelName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LoadLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelName});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::WebRpc
// Il2CppName: WebRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::StringW, ::Il2CppObject*, bool)>(&Photon::Pun::PhotonNetwork::WebRpc)> {
  static const MethodInfo* get() {
    static auto* name = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* parameters = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* sendAuthCookie = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "WebRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{name, parameters, sendAuthCookie});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetupLogging
// Il2CppName: SetupLogging
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::SetupLogging)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetupLogging", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LoadOrCreateSettings
// Il2CppName: LoadOrCreateSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::LoadOrCreateSettings)> {
  static const MethodInfo* get() {
    static auto* reload = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LoadOrCreateSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{reload});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AddCallbackTarget
// Il2CppName: AddCallbackTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Photon::Pun::PhotonNetwork::AddCallbackTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AddCallbackTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveCallbackTarget
// Il2CppName: RemoveCallbackTarget
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Photon::Pun::PhotonNetwork::RemoveCallbackTarget)> {
  static const MethodInfo* get() {
    static auto* target = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveCallbackTarget", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{target});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::CallbacksToString
// Il2CppName: CallbacksToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)()>(&Photon::Pun::PhotonNetwork::CallbacksToString)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "CallbacksToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LeftRoomCleanup
// Il2CppName: LeftRoomCleanup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::LeftRoomCleanup)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LeftRoomCleanup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated
// Il2CppName: LocalCleanupAnythingInstantiated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::LocalCleanupAnythingInstantiated)> {
  static const MethodInfo* get() {
    static auto* destroyInstantiatedGameObjects = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LocalCleanupAnythingInstantiated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{destroyInstantiatedGameObjects});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize
// Il2CppName: ResetPhotonViewsOnSerialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::ResetPhotonViewsOnSerialize)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ResetPhotonViewsOnSerialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ExecuteRpc
// Il2CppName: ExecuteRpc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExitGames::Client::Photon::Hashtable*, ::Photon::Realtime::Player*)>(&Photon::Pun::PhotonNetwork::ExecuteRpc)> {
  static const MethodInfo* get() {
    static auto* rpcData = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "Hashtable")->byval_arg;
    static auto* sender = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ExecuteRpc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{rpcData, sender});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::CheckTypeMatch
// Il2CppName: CheckTypeMatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::ArrayW<::System::Reflection::ParameterInfo*>, ::ArrayW<::System::Type*>)>(&Photon::Pun::PhotonNetwork::CheckTypeMatch)> {
  static const MethodInfo* get() {
    static auto* methodParameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System.Reflection", "ParameterInfo"), 1)->byval_arg;
    static auto* callParameterTypes = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Type"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "CheckTypeMatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{methodParameters, callParameterTypes});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DestroyPlayerObjects
// Il2CppName: DestroyPlayerObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, bool)>(&Photon::Pun::PhotonNetwork::DestroyPlayerObjects)> {
  static const MethodInfo* get() {
    static auto* playerId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* localOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DestroyPlayerObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{playerId, localOnly});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DestroyAll
// Il2CppName: DestroyAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(bool)>(&Photon::Pun::PhotonNetwork::DestroyAll)> {
  static const MethodInfo* get() {
    static auto* localOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DestroyAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{localOnly});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveInstantiatedGO
// Il2CppName: RemoveInstantiatedGO
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::UnityEngine::GameObject*, bool)>(&Photon::Pun::PhotonNetwork::RemoveInstantiatedGO)> {
  static const MethodInfo* get() {
    static auto* go = &::il2cpp_utils::GetClassFromName("UnityEngine", "GameObject")->byval_arg;
    static auto* localOnly = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveInstantiatedGO", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{go, localOnly});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy
// Il2CppName: ServerCleanInstantiateAndDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::ServerCleanInstantiateAndDestroy)> {
  static const MethodInfo* get() {
    static auto* photonView = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "ServerCleanInstantiateAndDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{photonView});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SendDestroyOfPlayer
// Il2CppName: SendDestroyOfPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::SendDestroyOfPlayer)> {
  static const MethodInfo* get() {
    static auto* actorNr = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SendDestroyOfPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNr});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SendDestroyOfAll
// Il2CppName: SendDestroyOfAll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::SendDestroyOfAll)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SendDestroyOfAll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer
// Il2CppName: OpRemoveFromServerInstantiationsOfPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::OpRemoveFromServerInstantiationsOfPlayer)> {
  static const MethodInfo* get() {
    static auto* actorNr = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OpRemoveFromServerInstantiationsOfPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNr});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RequestOwnership
// Il2CppName: RequestOwnership
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&Photon::Pun::PhotonNetwork::RequestOwnership)> {
  static const MethodInfo* get() {
    static auto* viewID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* fromOwner = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RequestOwnership", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewID, fromOwner});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::TransferOwnership
// Il2CppName: TransferOwnership
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int, int)>(&Photon::Pun::PhotonNetwork::TransferOwnership)> {
  static const MethodInfo* get() {
    static auto* viewID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* playerID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "TransferOwnership", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewID, playerID});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OwnershipUpdate
// Il2CppName: OwnershipUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<int>, int)>(&Photon::Pun::PhotonNetwork::OwnershipUpdate)> {
  static const MethodInfo* get() {
    static auto* viewOwnerPairs = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    static auto* targetActor = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OwnershipUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewOwnerPairs, targetActor});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LocalCleanPhotonView
// Il2CppName: LocalCleanPhotonView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::LocalCleanPhotonView)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LocalCleanPhotonView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::GetPhotonView
// Il2CppName: GetPhotonView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Photon::Pun::PhotonView* (*)(int)>(&Photon::Pun::PhotonNetwork::GetPhotonView)> {
  static const MethodInfo* get() {
    static auto* viewID = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "GetPhotonView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewID});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RegisterPhotonView
// Il2CppName: RegisterPhotonView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::RegisterPhotonView)> {
  static const MethodInfo* get() {
    static auto* netView = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RegisterPhotonView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{netView});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer
// Il2CppName: OpCleanActorRpcBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::OpCleanActorRpcBuffer)> {
  static const MethodInfo* get() {
    static auto* actorNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OpCleanActorRpcBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNumber});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer
// Il2CppName: OpRemoveCompleteCacheOfPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::OpRemoveCompleteCacheOfPlayer)> {
  static const MethodInfo* get() {
    static auto* actorNumber = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OpRemoveCompleteCacheOfPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{actorNumber});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OpRemoveCompleteCache
// Il2CppName: OpRemoveCompleteCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::OpRemoveCompleteCache)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OpRemoveCompleteCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers
// Il2CppName: RemoveCacheOfLeftPlayers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::RemoveCacheOfLeftPlayers)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveCacheOfLeftPlayers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine
// Il2CppName: CleanRpcBufferIfMine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::CleanRpcBufferIfMine)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "CleanRpcBufferIfMine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OpCleanRpcBuffer
// Il2CppName: OpCleanRpcBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::OpCleanRpcBuffer)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OpCleanRpcBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveRPCsInGroup
// Il2CppName: RemoveRPCsInGroup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(int)>(&Photon::Pun::PhotonNetwork::RemoveRPCsInGroup)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveRPCsInGroup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RemoveBufferedRPCs
// Il2CppName: RemoveBufferedRPCs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, ::StringW, ::ArrayW<int>)>(&Photon::Pun::PhotonNetwork::RemoveBufferedRPCs)> {
  static const MethodInfo* get() {
    static auto* viewId = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* callersActorNumbers = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Int32"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RemoveBufferedRPCs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{viewId, methodName, callersActorNumbers});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetLevelPrefix
// Il2CppName: SetLevelPrefix
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t)>(&Photon::Pun::PhotonNetwork::SetLevelPrefix)> {
  static const MethodInfo* get() {
    static auto* prefix = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetLevelPrefix", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{prefix});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RPC
// Il2CppName: RPC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonView*, ::StringW, ::Photon::Pun::RpcTarget, ::Photon::Realtime::Player*, bool, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::RPC)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    static auto* methodName = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* target = &::il2cpp_utils::GetClassFromName("Photon.Pun", "RpcTarget")->byval_arg;
    static auto* player = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* encrypt = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    static auto* parameters = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RPC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view, methodName, target, player, encrypt, parameters});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetInterestGroups
// Il2CppName: SetInterestGroups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&Photon::Pun::PhotonNetwork::SetInterestGroups)> {
  static const MethodInfo* get() {
    static auto* disableGroups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* enableGroups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetInterestGroups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disableGroups, enableGroups});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetSendingEnabled
// Il2CppName: SetSendingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t, bool)>(&Photon::Pun::PhotonNetwork::SetSendingEnabled)> {
  static const MethodInfo* get() {
    static auto* group = &::il2cpp_utils::GetClassFromName("System", "Byte")->byval_arg;
    static auto* enabled = &::il2cpp_utils::GetClassFromName("System", "Boolean")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetSendingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{group, enabled});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetSendingEnabled
// Il2CppName: SetSendingEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<uint8_t>, ::ArrayW<uint8_t>)>(&Photon::Pun::PhotonNetwork::SetSendingEnabled)> {
  static const MethodInfo* get() {
    static auto* disableGroups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* enableGroups = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetSendingEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{disableGroups, enableGroups});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::NewSceneLoaded
// Il2CppName: NewSceneLoaded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::NewSceneLoaded)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "NewSceneLoaded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::RunViewUpdate
// Il2CppName: RunViewUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::RunViewUpdate)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "RunViewUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SendSerializeViewBatch
// Il2CppName: SendSerializeViewBatch
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Pun::PhotonNetwork::SerializeViewBatch*)>(&Photon::Pun::PhotonNetwork::SendSerializeViewBatch)> {
  static const MethodInfo* get() {
    static auto* batch = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonNetwork/SerializeViewBatch")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SendSerializeViewBatch", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{batch});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnSerializeWrite
// Il2CppName: OnSerializeWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Il2CppObject*>* (*)(::Photon::Pun::PhotonView*)>(&Photon::Pun::PhotonNetwork::OnSerializeWrite)> {
  static const MethodInfo* get() {
    static auto* view = &::il2cpp_utils::GetClassFromName("Photon.Pun", "PhotonView")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnSerializeWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{view});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnSerializeRead
// Il2CppName: OnSerializeRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ArrayW<::Il2CppObject*>, ::Photon::Realtime::Player*, int, int16_t)>(&Photon::Pun::PhotonNetwork::OnSerializeRead)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    static auto* sender = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "Player")->byval_arg;
    static auto* networkTime = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    static auto* correctPrefix = &::il2cpp_utils::GetClassFromName("System", "Int16")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnSerializeRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, sender, networkTime, correctPrefix});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DeltaCompressionWrite
// Il2CppName: DeltaCompressionWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::System::Collections::Generic::List_1<::Il2CppObject*>* (*)(::System::Collections::Generic::List_1<::Il2CppObject*>*, ::System::Collections::Generic::List_1<::Il2CppObject*>*)>(&Photon::Pun::PhotonNetwork::DeltaCompressionWrite)> {
  static const MethodInfo* get() {
    static auto* previousContent = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* currentContent = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "List`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DeltaCompressionWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousContent, currentContent});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::DeltaCompressionRead
// Il2CppName: DeltaCompressionRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<::Il2CppObject*> (*)(::ArrayW<::Il2CppObject*>, ::ArrayW<::Il2CppObject*>)>(&Photon::Pun::PhotonNetwork::DeltaCompressionRead)> {
  static const MethodInfo* get() {
    static auto* lastOnSerializeDataReceived = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    static auto* incomingData = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Object"), 1)->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "DeltaCompressionRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lastOnSerializeDataReceived, incomingData});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AlmostEquals
// Il2CppName: AlmostEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::System::Collections::Generic::IList_1<::Il2CppObject*>*, ::System::Collections::Generic::IList_1<::Il2CppObject*>*)>(&Photon::Pun::PhotonNetwork::AlmostEquals)> {
  static const MethodInfo* get() {
    static auto* lastData = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    static auto* currentContent = &::il2cpp_utils::MakeGeneric(::il2cpp_utils::GetClassFromName("System.Collections.Generic", "IList`1"), ::std::vector<const Il2CppClass*>{::il2cpp_utils::GetClassFromName("System", "Object")})->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AlmostEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{lastData, currentContent});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::AlmostEquals
// Il2CppName: AlmostEquals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppObject*, ::Il2CppObject*)>(&Photon::Pun::PhotonNetwork::AlmostEquals)> {
  static const MethodInfo* get() {
    static auto* one = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    static auto* two = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "AlmostEquals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{one, two});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::GetMethod
// Il2CppName: GetMethod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::UnityEngine::MonoBehaviour*, ::StringW, ByRef<::System::Reflection::MethodInfo*>)>(&Photon::Pun::PhotonNetwork::GetMethod)> {
  static const MethodInfo* get() {
    static auto* monob = &::il2cpp_utils::GetClassFromName("UnityEngine", "MonoBehaviour")->byval_arg;
    static auto* methodType = &::il2cpp_utils::GetClassFromName("System", "String")->byval_arg;
    static auto* mi = &::il2cpp_utils::GetClassFromName("System.Reflection", "MethodInfo")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "GetMethod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{monob, methodType, mi});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::LoadLevelIfSynced
// Il2CppName: LoadLevelIfSynced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Photon::Pun::PhotonNetwork::LoadLevelIfSynced)> {
  static const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "LoadLevelIfSynced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced
// Il2CppName: SetLevelInPropsIfSynced
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppObject*)>(&Photon::Pun::PhotonNetwork::SetLevelInPropsIfSynced)> {
  static const MethodInfo* get() {
    static auto* levelId = &::il2cpp_utils::GetClassFromName("System", "Object")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "SetLevelInPropsIfSynced", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{levelId});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnEvent
// Il2CppName: OnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExitGames::Client::Photon::EventData*)>(&Photon::Pun::PhotonNetwork::OnEvent)> {
  static const MethodInfo* get() {
    static auto* photonEvent = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "EventData")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{photonEvent});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnOperation
// Il2CppName: OnOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::ExitGames::Client::Photon::OperationResponse*)>(&Photon::Pun::PhotonNetwork::OnOperation)> {
  static const MethodInfo* get() {
    static auto* opResponse = &::il2cpp_utils::GetClassFromName("ExitGames.Client.Photon", "OperationResponse")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{opResponse});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnClientStateChanged
// Il2CppName: OnClientStateChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::ClientState, ::Photon::Realtime::ClientState)>(&Photon::Pun::PhotonNetwork::OnClientStateChanged)> {
  static const MethodInfo* get() {
    static auto* previousState = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "ClientState")->byval_arg;
    static auto* state = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "ClientState")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnClientStateChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{previousState, state});
  }
};
// Writing MetadataGetter for method: Photon::Pun::PhotonNetwork::OnRegionsPinged
// Il2CppName: OnRegionsPinged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Photon::Realtime::RegionHandler*)>(&Photon::Pun::PhotonNetwork::OnRegionsPinged)> {
  static const MethodInfo* get() {
    static auto* regionHandler = &::il2cpp_utils::GetClassFromName("Photon.Realtime", "RegionHandler")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(Photon::Pun::PhotonNetwork*), "OnRegionsPinged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{regionHandler});
  }
};
