// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: Photon.Pun.PhotonAnimatorView
#include "Photon/Pun/PhotonAnimatorView.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/Photon.Pun.ParameterType
#include "Photon/Pun/PhotonAnimatorView_ParameterType.hpp"
// Including type: Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType
#include "Photon/Pun/PhotonAnimatorView_SynchronizeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-properties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils-fields.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter);
DEFINE_IL2CPP_ARG_TYPE(::Photon::Pun::PhotonAnimatorView::SynchronizedParameter*, "Photon.Pun", "PhotonAnimatorView/SynchronizedParameter");
// Type namespace: Photon.Pun
namespace Photon::Pun {
  // Size: 0x20
  #pragma pack(push, 1)
  // Autogenerated type: Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizedParameter
  // [TokenAttribute] Offset: FFFFFFFF
  class PhotonAnimatorView::SynchronizedParameter : public ::Il2CppObject {
    public:
    public:
    // public Photon.Pun.PhotonAnimatorView/Photon.Pun.ParameterType Type
    // Size: 0x4
    // Offset: 0x10
    ::Photon::Pun::PhotonAnimatorView::ParameterType Type;
    // Field size check
    static_assert(sizeof(::Photon::Pun::PhotonAnimatorView::ParameterType) == 0x4);
    // public Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType SynchronizeType
    // Size: 0x4
    // Offset: 0x14
    ::Photon::Pun::PhotonAnimatorView::SynchronizeType SynchronizeType;
    // Field size check
    static_assert(sizeof(::Photon::Pun::PhotonAnimatorView::SynchronizeType) == 0x4);
    // public System.String Name
    // Size: 0x8
    // Offset: 0x18
    ::StringW Name;
    // Field size check
    static_assert(sizeof(::StringW) == 0x8);
    public:
    // Get instance field reference: public Photon.Pun.PhotonAnimatorView/Photon.Pun.ParameterType Type
    [[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::ParameterType& dyn_Type();
    // Get instance field reference: public Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizeType SynchronizeType
    [[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonAnimatorView::SynchronizeType& dyn_SynchronizeType();
    // Get instance field reference: public System.String Name
    [[deprecated("Use field access instead!")]] ::StringW& dyn_Name();
    // public System.Void .ctor()
    // Offset: 0x10837E4
    template<::il2cpp_utils::CreationType creationType = ::il2cpp_utils::CreationType::Temporary>
    static PhotonAnimatorView::SynchronizedParameter* New_ctor() {
      static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Pun::PhotonAnimatorView::SynchronizedParameter::.ctor");
      return THROW_UNLESS((::il2cpp_utils::New<PhotonAnimatorView::SynchronizedParameter*, creationType>()));
    }
  }; // Photon.Pun.PhotonAnimatorView/Photon.Pun.SynchronizedParameter
  #pragma pack(pop)
  static check_size<sizeof(PhotonAnimatorView::SynchronizedParameter), 24 + sizeof(::StringW)> __Photon_Pun_PhotonAnimatorView_SynchronizedParameterSizeCheck;
  static_assert(sizeof(PhotonAnimatorView::SynchronizedParameter) == 0x20);
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: Photon::Pun::PhotonAnimatorView::SynchronizedParameter::New_ctor
// Il2CppName: .ctor
// Cannot get method pointer of value based method overload from template for constructor!
// Try using FindMethod instead!
