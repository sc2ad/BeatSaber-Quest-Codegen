// Autogenerated from CppHeaderCreator
// Created by Sc2ad
// =========================================================================
#pragma once
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
#include "beatsaber-hook/shared/utils/byref.hpp"
// Including type: MidiParser.MidiFile
#include "MidiParser/MidiFile.hpp"
#include "beatsaber-hook/shared/utils/typedefs-array.hpp"
#include "beatsaber-hook/shared/utils/typedefs-string.hpp"
// Completed includes
// Begin forward declares
// Forward declaring namespace: System::IO
namespace System::IO {
  // Forward declaring type: Stream
  class Stream;
}
// Completed forward declares
#include "beatsaber-hook/shared/utils/il2cpp-type-check.hpp"
NEED_NO_BOX(::MidiParser::MidiFile::Reader);
DEFINE_IL2CPP_ARG_TYPE(::MidiParser::MidiFile::Reader*, "MidiParser", "MidiFile/Reader");
// Type namespace: MidiParser
namespace MidiParser {
  // Size: 0x10
  #pragma pack(push, 1)
  // Autogenerated type: MidiParser.MidiFile/MidiParser.Reader
  // [TokenAttribute] Offset: FFFFFFFF
  class MidiFile::Reader : public ::Il2CppObject {
    public:
    // static public System.Int32 Read16(System.Byte[] data, ref System.Int32 i)
    // Offset: 0x2BAEB80
    static int Read16(::ArrayW<uint8_t> data, ByRef<int> i);
    // static public System.Int32 Read32(System.Byte[] data, ref System.Int32 i)
    // Offset: 0x2BAEAD8
    static int Read32(::ArrayW<uint8_t> data, ByRef<int> i);
    // static public System.Byte Read8(System.Byte[] data, ref System.Int32 i)
    // Offset: 0x2BAF088
    static uint8_t Read8(::ArrayW<uint8_t> data, ByRef<int> i);
    // static public System.Byte[] ReadAllBytesFromStream(System.IO.Stream input)
    // Offset: 0x2BAF0CC
    static ::ArrayW<uint8_t> ReadAllBytesFromStream(::System::IO::Stream* input);
    // static public System.String ReadString(System.Byte[] data, ref System.Int32 i, System.Int32 length)
    // Offset: 0x2BAEA74
    static ::StringW ReadString(::ArrayW<uint8_t> data, ByRef<int> i, int length);
    // static public System.Int32 ReadVarInt(System.Byte[] data, ref System.Int32 i)
    // Offset: 0x2BAEF84
    static int ReadVarInt(::ArrayW<uint8_t> data, ByRef<int> i);
  }; // MidiParser.MidiFile/MidiParser.Reader
  #pragma pack(pop)
}
#include "beatsaber-hook/shared/utils/il2cpp-utils-methods.hpp"
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::Read16
// Il2CppName: Read16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, ByRef<int>)>(&MidiParser::MidiFile::Reader::Read16)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "Read16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, i});
  }
};
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::Read32
// Il2CppName: Read32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, ByRef<int>)>(&MidiParser::MidiFile::Reader::Read32)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "Read32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, i});
  }
};
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::Read8
// Il2CppName: Read8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (*)(::ArrayW<uint8_t>, ByRef<int>)>(&MidiParser::MidiFile::Reader::Read8)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "Read8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, i});
  }
};
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::ReadAllBytesFromStream
// Il2CppName: ReadAllBytesFromStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::ArrayW<uint8_t> (*)(::System::IO::Stream*)>(&MidiParser::MidiFile::Reader::ReadAllBytesFromStream)> {
  static const MethodInfo* get() {
    static auto* input = &::il2cpp_utils::GetClassFromName("System.IO", "Stream")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "ReadAllBytesFromStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{input});
  }
};
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::ReadString
// Il2CppName: ReadString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::StringW (*)(::ArrayW<uint8_t>, ByRef<int>, int)>(&MidiParser::MidiFile::Reader::ReadString)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    static auto* length = &::il2cpp_utils::GetClassFromName("System", "Int32")->byval_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "ReadString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, i, length});
  }
};
// Writing MetadataGetter for method: MidiParser::MidiFile::Reader::ReadVarInt
// Il2CppName: ReadVarInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::ArrayW<uint8_t>, ByRef<int>)>(&MidiParser::MidiFile::Reader::ReadVarInt)> {
  static const MethodInfo* get() {
    static auto* data = &il2cpp_functions::array_class_get(::il2cpp_utils::GetClassFromName("System", "Byte"), 1)->byval_arg;
    static auto* i = &::il2cpp_utils::GetClassFromName("System", "Int32")->this_arg;
    return ::il2cpp_utils::FindMethod(classof(MidiParser::MidiFile::Reader*), "ReadVarInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{data, i});
  }
};
