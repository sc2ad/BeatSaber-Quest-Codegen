// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyValuePair
#include "System/Collections/Generic/KeyValuePair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.KeyValuePair.PairToString
::StringW System::Collections::Generic::KeyValuePair::PairToString(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::KeyValuePair::PairToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "KeyValuePair", "PairToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.IntrospectiveSortUtilities
#include "System/Collections/Generic/IntrospectiveSortUtilities.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.FloorLog2
int System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "FloorLog2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer
void System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer(::Il2CppObject* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "ThrowOrIgnoreBadComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comparer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InsertionBehavior
#include "System/Collections/Generic/InsertionBehavior.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior None
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior None
void System::Collections::Generic::InsertionBehavior::_set_None(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
void System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
::System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
void System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting(::System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& System::Collections::Generic::InsertionBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InsertionBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.DictionaryHashHelpers
#include "System/Collections/Generic/DictionaryHashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*>("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
void System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField", value));
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers.get_SerializationInfoTable
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, ::System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers..cctor
void System::Collections::Generic::DictionaryHashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::DictionaryHashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NonRandomizedStringEqualityComparer
#include "System/Collections/Generic/NonRandomizedStringEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.Equals
bool System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.GetHashCode
int System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ObjectEqualityComparer
#include "System/Collections/Generic/ObjectEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
::System::Collections::Generic::ObjectEqualityComparer* System::Collections::Generic::ObjectEqualityComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::ObjectEqualityComparer*>("System.Collections.Generic", "ObjectEqualityComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
void System::Collections::Generic::ObjectEqualityComparer::_set_Default(::System::Collections::Generic::ObjectEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "ObjectEqualityComparer", "Default", value));
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer..cctor
void System::Collections::Generic::ObjectEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Generic", "ObjectEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.Equals
bool System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::ArrayW<uint8_t> array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::StringW obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::StringW x, ::StringW y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::ArrayW<::StringW> array, ::StringW value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Collections::Generic::InternalStringComparer::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_conditionString
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::ConditionalAttribute::dyn_m_conditionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::ConditionalAttribute::dyn_m_conditionString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_conditionString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes m_debuggingModes
[[deprecated("Use field access instead!")]] ::System::Diagnostics::DebuggableAttribute::DebuggingModes& System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::dyn_m_debuggingModes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_debuggingModes"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggableAttribute::DebuggingModes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
::System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/System.Diagnostics.DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(::System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggableAttribute::DebuggingModes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
::System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(::System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::DebuggerBrowsableState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.DebuggerBrowsableState state
[[deprecated("Use field access instead!")]] ::System::Diagnostics::DebuggerBrowsableState& System::Diagnostics::DebuggerBrowsableAttribute::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerBrowsableAttribute::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Diagnostics::DebuggerBrowsableState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String typeName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerTypeProxyAttribute::dyn_typeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String value
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String type
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::DebuggerDisplayAttribute::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::DebuggerDisplayAttribute::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::StringW System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::IsLogging");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::StringW category, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 ilOffset
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_ilOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_ilOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ilOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nativeOffset
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_nativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_nativeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 methodAddress
[[deprecated("Use field access instead!")]] int64_t& System::Diagnostics::StackFrame::dyn_methodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodAddress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodAddress"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 methodIndex
[[deprecated("Use field access instead!")]] uint& System::Diagnostics::StackFrame::dyn_methodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodBase methodBase
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodBase*& System::Diagnostics::StackFrame::dyn_methodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_methodBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "methodBase"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fileName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::StackFrame::dyn_fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lineNumber
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_lineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_lineNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 columnNumber
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackFrame::dyn_columnNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_columnNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "columnNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String internalMethodName
[[deprecated("Use field access instead!")]] ::StringW& System::Diagnostics::StackFrame::dyn_internalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::dyn_internalMethodName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalMethodName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, ByRef<::System::Reflection::MethodBase*> method, ByRef<int> iloffset, ByRef<int> native_offset, ByRef<::StringW> file, ByRef<int> line, ByRef<int> column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip), ::il2cpp_utils::ExtractType(needFileInfo), ::il2cpp_utils::ExtractIndependentType<::System::Reflection::MethodBase*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, skip, needFileInfo, byref(method), byref(iloffset), byref(native_offset), byref(file), byref(line), byref(column));
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileLineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileLineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::StringW System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetFileName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::StringW System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetILOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetILOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
::System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetNativeOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNativeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::StringW System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::StringW System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::StringW System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.StackFrame[] frames
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::StackFrame*>& System::Diagnostics::StackTrace::dyn_frames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_frames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frames"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackFrame*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.StackTrace[] captured_traces
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Diagnostics::StackTrace*>& System::Diagnostics::StackTrace::dyn_captured_traces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_captured_traces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "captured_traces"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Diagnostics::StackTrace*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debug_info
[[deprecated("Use field access instead!")]] bool& System::Diagnostics::StackTrace::dyn_debug_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::dyn_debug_info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debug_info"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_FrameCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::ArrayW<::System::Diagnostics::StackFrame*> System::Diagnostics::StackTrace::get_trace(::System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(skipFrames), ::il2cpp_utils::ExtractType(fNeedFileInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Diagnostics::StackFrame*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
::System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::StringW System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(::System::Text::StringBuilder* sb, ::System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(mi)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString(::System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(traceFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::StringW System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
::System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/System.Diagnostics.TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(::System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Diagnostics::StackTrace::TraceFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::StackTrace::TraceFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::ArrayW<uint8_t> System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
::System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::StringW System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Diagnostics::Tracing::EventSource::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.UnmanagedMarshal
#include "System/Reflection/Emit/UnmanagedMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.DynamicMethod
#include "System/Reflection/Emit/DynamicMethod.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Attributes
::System::Reflection::MethodAttributes System::Reflection::Emit::DynamicMethod::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_DeclaringType
::System::Type* System::Reflection::Emit::DynamicMethod::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_MethodHandle
::System::RuntimeMethodHandle System::Reflection::Emit::DynamicMethod::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeMethodHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_Name
::StringW System::Reflection::Emit::DynamicMethod::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.get_ReflectedType
::System::Type* System::Reflection::Emit::DynamicMethod::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetBaseDefinition
::System::Reflection::MethodInfo* System::Reflection::Emit::DynamicMethod::GetBaseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetBaseDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::DynamicMethod::GetCustomAttributes(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetMethodImplementationFlags
::System::Reflection::MethodImplAttributes System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodImplAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.GetParameters
::ArrayW<::System::Reflection::ParameterInfo*> System::Reflection::Emit::DynamicMethod::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Reflection::ParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.Invoke
::Il2CppObject* System::Reflection::Emit::DynamicMethod::Invoke(::Il2CppObject* obj, ::System::Reflection::BindingFlags invokeAttr, ::System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, ::System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.DynamicMethod.IsDefined
bool System::Reflection::Emit::DynamicMethod::IsDefined(::System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Reflection::Emit::DynamicMethod::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.ThrowStub
#include "Unity/ThrowStub.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Unity.ThrowStub.ThrowNotSupportedException
void Unity::ThrowStub::ThrowNotSupportedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::ThrowStub::ThrowNotSupportedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Unity", "ThrowStub", "ThrowNotSupportedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComObject
#include "System/__Il2CppComObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComObject.Finalize
void System::__Il2CppComObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComObject::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.__Il2CppComDelegate
#include "System/__Il2CppComDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.__Il2CppComDelegate.Finalize
void System::__Il2CppComDelegate::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::__Il2CppComDelegate::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.AddingNewEventHandler
#include "System/ComponentModel/AddingNewEventHandler.hpp"
// Including type: System.ComponentModel.AddingNewEventArgs
#include "System/ComponentModel/AddingNewEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.Invoke
void System::ComponentModel::AddingNewEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::AddingNewEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::AddingNewEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.AddingNewEventHandler.EndInvoke
void System::ComponentModel::AddingNewEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::AddingNewEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.NotifyCollectionChangedAction
#include "System/ComponentModel/NotifyCollectionChangedAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Add
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Add
void System::ComponentModel::NotifyCollectionChangedAction::_set_Add(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Remove
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Remove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Remove"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Remove
void System::ComponentModel::NotifyCollectionChangedAction::_set_Remove(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Remove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Remove", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Replace
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Replace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Replace"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Replace
void System::ComponentModel::NotifyCollectionChangedAction::_set_Replace(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Replace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Replace", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Move
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Move"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Move
void System::ComponentModel::NotifyCollectionChangedAction::_set_Move(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Move", value));
}
// Autogenerated static field getter
// Get static field: static public System.ComponentModel.NotifyCollectionChangedAction Reset
::System::ComponentModel::NotifyCollectionChangedAction System::ComponentModel::NotifyCollectionChangedAction::_get_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_get_Reset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::ComponentModel::NotifyCollectionChangedAction>("System.ComponentModel", "NotifyCollectionChangedAction", "Reset"));
}
// Autogenerated static field setter
// Set static field: static public System.ComponentModel.NotifyCollectionChangedAction Reset
void System::ComponentModel::NotifyCollectionChangedAction::_set_Reset(::System::ComponentModel::NotifyCollectionChangedAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::_set_Reset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.ComponentModel", "NotifyCollectionChangedAction", "Reset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::ComponentModel::NotifyCollectionChangedAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.NotifyCollectionChangedEventHandler
#include "System/ComponentModel/NotifyCollectionChangedEventHandler.hpp"
// Including type: System.ComponentModel.NotifyCollectionChangedEventArgs
#include "System/ComponentModel/NotifyCollectionChangedEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.Invoke
void System::ComponentModel::NotifyCollectionChangedEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::NotifyCollectionChangedEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::NotifyCollectionChangedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::NotifyCollectionChangedEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.NotifyCollectionChangedEventHandler.EndInvoke
void System::ComponentModel::NotifyCollectionChangedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::NotifyCollectionChangedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ComponentModel.PropertyChangingEventArgs
#include "System/ComponentModel/PropertyChangingEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <PropertyName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& System::ComponentModel::PropertyChangingEventArgs::dyn_$PropertyName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventArgs::dyn_$PropertyName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PropertyName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventArgs.set_PropertyName
void System::ComponentModel::PropertyChangingEventArgs::set_PropertyName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventArgs::set_PropertyName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ComponentModel.PropertyChangingEventHandler
#include "System/ComponentModel/PropertyChangingEventHandler.hpp"
// Including type: System.ComponentModel.PropertyChangingEventArgs
#include "System/ComponentModel/PropertyChangingEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.Invoke
void System::ComponentModel::PropertyChangingEventHandler::Invoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangingEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.BeginInvoke
::System::IAsyncResult* System::ComponentModel::PropertyChangingEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::ComponentModel::PropertyChangingEventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.ComponentModel.PropertyChangingEventHandler.EndInvoke
void System::ComponentModel::PropertyChangingEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::ComponentModel::PropertyChangingEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.ConstructorHandling
#include "Newtonsoft/Json/ConstructorHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling Default
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling Default
void Newtonsoft::Json::ConstructorHandling::_set_Default(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
::Newtonsoft::Json::ConstructorHandling Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_get_AllowNonPublicDefaultConstructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::ConstructorHandling>("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.ConstructorHandling AllowNonPublicDefaultConstructor
void Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor(::Newtonsoft::Json::ConstructorHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::_set_AllowNonPublicDefaultConstructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "ConstructorHandling", "AllowNonPublicDefaultConstructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::ConstructorHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::ConstructorHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateFormatHandling
#include "Newtonsoft/Json/DateFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_IsoDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling IsoDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_IsoDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "IsoDateFormat", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
::Newtonsoft::Json::DateFormatHandling Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_get_MicrosoftDateFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateFormatHandling>("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateFormatHandling MicrosoftDateFormat
void Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat(::Newtonsoft::Json::DateFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::_set_MicrosoftDateFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateFormatHandling", "MicrosoftDateFormat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateParseHandling
#include "Newtonsoft/Json/DateParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling None
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling None
void Newtonsoft::Json::DateParseHandling::_set_None(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTime
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTime"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTime
void Newtonsoft::Json::DateParseHandling::_set_DateTime(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTime", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
::Newtonsoft::Json::DateParseHandling Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_get_DateTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateParseHandling>("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateParseHandling DateTimeOffset
void Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset(::Newtonsoft::Json::DateParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::_set_DateTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateParseHandling", "DateTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.DateTimeZoneHandling
#include "Newtonsoft/Json/DateTimeZoneHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Local"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Local
void Newtonsoft::Json::DateTimeZoneHandling::_set_Local(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Utc"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Utc
void Newtonsoft::Json::DateTimeZoneHandling::_set_Utc(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Utc", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling Unspecified
void Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
::Newtonsoft::Json::DateTimeZoneHandling Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_get_RoundtripKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::DateTimeZoneHandling>("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.DateTimeZoneHandling RoundtripKind
void Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind(::Newtonsoft::Json::DateTimeZoneHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::_set_RoundtripKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "DateTimeZoneHandling", "RoundtripKind", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::DateTimeZoneHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::DateTimeZoneHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatFormatHandling
#include "Newtonsoft/Json/FloatFormatHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling String
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling String
void Newtonsoft::Json::FloatFormatHandling::_set_String(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling Symbol
void Newtonsoft::Json::FloatFormatHandling::_set_Symbol(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
::Newtonsoft::Json::FloatFormatHandling Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_get_DefaultValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatFormatHandling>("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatFormatHandling DefaultValue
void Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue(::Newtonsoft::Json::FloatFormatHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::_set_DefaultValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatFormatHandling", "DefaultValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::FloatFormatHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatFormatHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.FloatParseHandling
#include "Newtonsoft/Json/FloatParseHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Double
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Double
void Newtonsoft::Json::FloatParseHandling::_set_Double(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.FloatParseHandling Decimal
::Newtonsoft::Json::FloatParseHandling Newtonsoft::Json::FloatParseHandling::_get_Decimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_get_Decimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::FloatParseHandling>("Newtonsoft.Json", "FloatParseHandling", "Decimal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.FloatParseHandling Decimal
void Newtonsoft::Json::FloatParseHandling::_set_Decimal(::Newtonsoft::Json::FloatParseHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::_set_Decimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "FloatParseHandling", "Decimal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::FloatParseHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::FloatParseHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Formatting
#include "Newtonsoft/Json/Formatting.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting None
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting None
void Newtonsoft::Json::Formatting::_set_None(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Formatting Indented
::Newtonsoft::Json::Formatting Newtonsoft::Json::Formatting::_get_Indented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_get_Indented");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Formatting>("Newtonsoft.Json", "Formatting", "Indented"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Formatting Indented
void Newtonsoft::Json::Formatting::_set_Indented(::Newtonsoft::Json::Formatting value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::_set_Indented");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Formatting", "Indented", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Formatting::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Formatting::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonConstructorAttribute
#include "Newtonsoft/Json/JsonConstructorAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonDictionaryAttribute
#include "Newtonsoft/Json/JsonDictionaryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonException
#include "Newtonsoft/Json/JsonException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonExtensionDataAttribute
#include "Newtonsoft/Json/JsonExtensionDataAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteData>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$WriteData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ReadData>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::dyn_$ReadData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ReadData>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_WriteData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_WriteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.set_WriteData
void Newtonsoft::Json::JsonExtensionDataAttribute::set_WriteData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::set_WriteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_WriteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.get_ReadData
bool Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::get_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonExtensionDataAttribute.set_ReadData
void Newtonsoft::Json::JsonExtensionDataAttribute::set_ReadData(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonExtensionDataAttribute::set_ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonContainerType
#include "Newtonsoft/Json/JsonContainerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType None
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType None
void Newtonsoft::Json::JsonContainerType::_set_None(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Object
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Object
void Newtonsoft::Json::JsonContainerType::_set_Object(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Array
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Array
void Newtonsoft::Json::JsonContainerType::_set_Array(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.JsonContainerType Constructor
::Newtonsoft::Json::JsonContainerType Newtonsoft::Json::JsonContainerType::_get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_get_Constructor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::JsonContainerType>("Newtonsoft.Json", "JsonContainerType", "Constructor"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.JsonContainerType Constructor
void Newtonsoft::Json::JsonContainerType::_set_Constructor(::Newtonsoft::Json::JsonContainerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::_set_Constructor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonContainerType", "Constructor", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonContainerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonPosition
#include "Newtonsoft/Json/JsonPosition.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SpecialCharacters
::ArrayW<::Il2CppChar> Newtonsoft::Json::JsonPosition::_get_SpecialCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_get_SpecialCharacters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Newtonsoft.Json", "JsonPosition", "SpecialCharacters"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SpecialCharacters
void Newtonsoft::Json::JsonPosition::_set_SpecialCharacters(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::_set_SpecialCharacters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "JsonPosition", "SpecialCharacters", value));
}
// Autogenerated instance field getter
// Get instance field: Newtonsoft.Json.JsonContainerType Type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::JsonContainerType& Newtonsoft::Json::JsonPosition::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::JsonContainerType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 Position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::JsonPosition::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_Position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String PropertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::JsonPosition::dyn_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_PropertyName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PropertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean HasIndex
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::JsonPosition::dyn_HasIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::dyn_HasIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "HasIndex"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..ctor
Newtonsoft::Json::JsonPosition::JsonPosition(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition..cctor
void Newtonsoft::Json::JsonPosition::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.CalculateLength
int Newtonsoft::Json::JsonPosition::CalculateLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::CalculateLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CalculateLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.WriteTo
void Newtonsoft::Json::JsonPosition::WriteTo(::System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::WriteTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.TypeHasIndex
bool Newtonsoft::Json::JsonPosition::TypeHasIndex(::Newtonsoft::Json::JsonContainerType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::TypeHasIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "TypeHasIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.BuildPath
::StringW Newtonsoft::Json::JsonPosition::BuildPath(::System::Collections::Generic::List_1<::Newtonsoft::Json::JsonPosition>* positions, ::System::Nullable_1<::Newtonsoft::Json::JsonPosition> currentPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::BuildPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "BuildPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positions), ::il2cpp_utils::ExtractType(currentPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, positions, currentPosition);
}
// Autogenerated method: Newtonsoft.Json.JsonPosition.FormatMessage
::StringW Newtonsoft::Json::JsonPosition::FormatMessage(::Newtonsoft::Json::IJsonLineInfo* lineInfo, ::StringW path, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonPosition::FormatMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json", "JsonPosition", "FormatMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineInfo), ::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineInfo, path, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonRequiredAttribute
#include "Newtonsoft/Json/JsonRequiredAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.MetadataPropertyHandling
#include "Newtonsoft/Json/MetadataPropertyHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling Default
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling Default
void Newtonsoft::Json::MetadataPropertyHandling::_set_Default(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling ReadAhead
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_ReadAhead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_ReadAhead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "ReadAhead"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling ReadAhead
void Newtonsoft::Json::MetadataPropertyHandling::_set_ReadAhead(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_ReadAhead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "ReadAhead", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.MetadataPropertyHandling Ignore
::Newtonsoft::Json::MetadataPropertyHandling Newtonsoft::Json::MetadataPropertyHandling::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::MetadataPropertyHandling>("Newtonsoft.Json", "MetadataPropertyHandling", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.MetadataPropertyHandling Ignore
void Newtonsoft::Json::MetadataPropertyHandling::_set_Ignore(::Newtonsoft::Json::MetadataPropertyHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "MetadataPropertyHandling", "Ignore", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::MetadataPropertyHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::MetadataPropertyHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.StringEscapeHandling
#include "Newtonsoft/Json/StringEscapeHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling Default
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling Default
void Newtonsoft::Json::StringEscapeHandling::_set_Default(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling EscapeNonAscii
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_EscapeNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_EscapeNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "EscapeNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling EscapeNonAscii
void Newtonsoft::Json::StringEscapeHandling::_set_EscapeNonAscii(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_EscapeNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "EscapeNonAscii", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.StringEscapeHandling EscapeHtml
::Newtonsoft::Json::StringEscapeHandling Newtonsoft::Json::StringEscapeHandling::_get_EscapeHtml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_get_EscapeHtml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::StringEscapeHandling>("Newtonsoft.Json", "StringEscapeHandling", "EscapeHtml"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.StringEscapeHandling EscapeHtml
void Newtonsoft::Json::StringEscapeHandling::_set_EscapeHtml(::Newtonsoft::Json::StringEscapeHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::_set_EscapeHtml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "StringEscapeHandling", "EscapeHtml", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::StringEscapeHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::StringEscapeHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Required
#include "Newtonsoft/Json/Required.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required Default
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required Default
void Newtonsoft::Json::Required::_set_Default(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required AllowNull
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_AllowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_AllowNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "AllowNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required AllowNull
void Newtonsoft::Json::Required::_set_AllowNull(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_AllowNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "AllowNull", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required Always
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_Always() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_Always");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "Always"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required Always
void Newtonsoft::Json::Required::_set_Always(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_Always");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "Always", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Required DisallowNull
::Newtonsoft::Json::Required Newtonsoft::Json::Required::_get_DisallowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_get_DisallowNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Required>("Newtonsoft.Json", "Required", "DisallowNull"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Required DisallowNull
void Newtonsoft::Json::Required::_set_DisallowNull(::Newtonsoft::Json::Required value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::_set_DisallowNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "Required", "DisallowNull", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Required::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Required::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.PreserveReferencesHandling
#include "Newtonsoft/Json/PreserveReferencesHandling.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling None
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "None"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling None
void Newtonsoft::Json::PreserveReferencesHandling::_set_None(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling Objects
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_Objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_Objects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "Objects"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling Objects
void Newtonsoft::Json::PreserveReferencesHandling::_set_Objects(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_Objects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "Objects", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling Arrays
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_Arrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_Arrays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "Arrays"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling Arrays
void Newtonsoft::Json::PreserveReferencesHandling::_set_Arrays(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_Arrays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "Arrays", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.PreserveReferencesHandling All
::Newtonsoft::Json::PreserveReferencesHandling Newtonsoft::Json::PreserveReferencesHandling::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::PreserveReferencesHandling>("Newtonsoft.Json", "PreserveReferencesHandling", "All"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.PreserveReferencesHandling All
void Newtonsoft::Json::PreserveReferencesHandling::_set_All(::Newtonsoft::Json::PreserveReferencesHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json", "PreserveReferencesHandling", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::PreserveReferencesHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::PreserveReferencesHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.IJsonLineInfo
#include "Newtonsoft/Json/IJsonLineInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LineNumber
int Newtonsoft::Json::IJsonLineInfo::get_LineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LineNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LineNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.get_LinePosition
int Newtonsoft::Json::IJsonLineInfo::get_LinePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::get_LinePosition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LinePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.IJsonLineInfo.HasLineInfo
bool Newtonsoft::Json::IJsonLineInfo::HasLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::IJsonLineInfo::HasLineInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.JsonArrayAttribute
#include "Newtonsoft/Json/JsonArrayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.JsonContainerAttribute
#include "Newtonsoft/Json/JsonContainerAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <ItemConverterType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <ItemConverterParameters>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn_$ItemConverterParameters$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ItemConverterParameters>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _isReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__isReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__isReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<System.Boolean> _itemIsReference
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemIsReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemIsReference"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.ReferenceLoopHandling> _itemReferenceLoopHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemReferenceLoopHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemReferenceLoopHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::ReferenceLoopHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<Newtonsoft.Json.TypeNameHandling> _itemTypeNameHandling
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>& Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::dyn__itemTypeNameHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_itemTypeNameHandling"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Newtonsoft::Json::TypeNameHandling>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterType
::System::Type* Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.JsonContainerAttribute.get_ItemConverterParameters
::ArrayW<::Il2CppObject*> Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::JsonContainerAttribute::get_ItemConverterParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ItemConverterParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
