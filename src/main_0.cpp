// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataItem::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <executionOrder>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataItem::dyn_$executionOrder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::dyn_$executionOrder$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<executionOrder>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 subtypeIdentifier
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataItem::dyn_subtypeIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::dyn_subtypeIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subtypeIdentifier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDataItem/BeatmapDataItemType type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType& GlobalNamespace::BeatmapDataItem::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataItem.get_time
float GlobalNamespace::BeatmapDataItem::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataItem.get_executionOrder
int GlobalNamespace::BeatmapDataItem::get_executionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::get_executionOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataItem.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataItem::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataItem.CompareTo
int GlobalNamespace::BeatmapDataItem::CompareTo(::GlobalNamespace::BeatmapDataItem* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataItem/BeatmapDataItemType
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapDataItem/BeatmapDataItemType BeatmapObject
::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_get_BeatmapObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_get_BeatmapObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType>("", "BeatmapDataItem/BeatmapDataItemType", "BeatmapObject"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDataItem/BeatmapDataItemType BeatmapObject
void GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_set_BeatmapObject(::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_set_BeatmapObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItem/BeatmapDataItemType", "BeatmapObject", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDataItem/BeatmapDataItemType BeatmapEvent
::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_get_BeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_get_BeatmapEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType>("", "BeatmapDataItem/BeatmapDataItemType", "BeatmapEvent"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDataItem/BeatmapDataItemType BeatmapEvent
void GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_set_BeatmapEvent(::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::_set_BeatmapEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItem/BeatmapDataItemType", "BeatmapEvent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItem::BeatmapDataItemType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapDifficulty Easy
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficulty::_get_Easy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_get_Easy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficulty", "Easy"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficulty Easy
void GlobalNamespace::BeatmapDifficulty::_set_Easy(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_set_Easy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficulty", "Easy", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficulty Normal
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficulty::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficulty", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficulty Normal
void GlobalNamespace::BeatmapDifficulty::_set_Normal(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficulty", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficulty Hard
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficulty::_get_Hard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_get_Hard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficulty", "Hard"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficulty Hard
void GlobalNamespace::BeatmapDifficulty::_set_Hard(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_set_Hard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficulty", "Hard", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficulty Expert
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficulty::_get_Expert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_get_Expert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficulty", "Expert"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficulty Expert
void GlobalNamespace::BeatmapDifficulty::_set_Expert(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_set_Expert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficulty", "Expert", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficulty ExpertPlus
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficulty::_get_ExpertPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_get_ExpertPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficulty>("", "BeatmapDifficulty", "ExpertPlus"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficulty ExpertPlus
void GlobalNamespace::BeatmapDifficulty::_set_ExpertPlus(::GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::_set_ExpertPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficulty", "ExpertPlus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDifficulty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficulty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultySerializedMethods
#include "GlobalNamespace/BeatmapDifficultySerializedMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyEasySerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyEasySerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyEasySerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyEasySerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyEasySerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyEasySerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyEasySerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyEasySerializedName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyNormalSerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyNormalSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyNormalSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyNormalSerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyNormalSerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyNormalSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyNormalSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyNormalSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyHardSerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyHardSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyHardSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyHardSerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyHardSerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyHardSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyHardSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyHardSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyExpertSerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertSerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyExpertSerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyExpertPlusNameSerializedLegacy
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertPlusNameSerializedLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertPlusNameSerializedLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertPlusNameSerializedLegacy"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyExpertPlusNameSerializedLegacy
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertPlusNameSerializedLegacy(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertPlusNameSerializedLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertPlusNameSerializedLegacy", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyExpertPlusSerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertPlusSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyExpertPlusSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertPlusSerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyExpertPlusSerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertPlusSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyExpertPlusSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyExpertPlusSerializedName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultyUnknownSerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyUnknownSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_get_kDifficultyUnknownSerializedName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapDifficultySerializedMethods", "kDifficultyUnknownSerializedName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultyUnknownSerializedName
void GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyUnknownSerializedName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::_set_kDifficultyUnknownSerializedName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultySerializedMethods", "kDifficultyUnknownSerializedName", value));
}
// Autogenerated method: BeatmapDifficultySerializedMethods.SerializedName
::StringW GlobalNamespace::BeatmapDifficultySerializedMethods::SerializedName(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultySerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultySerializedMethods.BeatmapDifficultyFromSerializedName
bool GlobalNamespace::BeatmapDifficultySerializedMethods::BeatmapDifficultyFromSerializedName(::StringW name, ByRef<::GlobalNamespace::BeatmapDifficulty> difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultySerializedMethods::BeatmapDifficultyFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultySerializedMethods", "BeatmapDifficultyFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::BeatmapDifficulty&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(difficulty));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Easy
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Easy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_Easy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Easy"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Easy
void GlobalNamespace::BeatmapDifficultyMask::_set_Easy(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_Easy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Easy", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Normal
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Normal
void GlobalNamespace::BeatmapDifficultyMask::_set_Normal(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Hard
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Hard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_Hard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Hard"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Hard
void GlobalNamespace::BeatmapDifficultyMask::_set_Hard(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_Hard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Hard", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask Expert
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_Expert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_Expert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "Expert"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask Expert
void GlobalNamespace::BeatmapDifficultyMask::_set_Expert(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_Expert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "Expert", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask ExpertPlus
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_ExpertPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_ExpertPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "ExpertPlus"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask ExpertPlus
void GlobalNamespace::BeatmapDifficultyMask::_set_ExpertPlus(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_ExpertPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "ExpertPlus", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapDifficultyMask All
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMask::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDifficultyMask>("", "BeatmapDifficultyMask", "All"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapDifficultyMask All
void GlobalNamespace::BeatmapDifficultyMask::_set_All(::GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDifficultyMask", "All", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::BeatmapDifficultyMask::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMask::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDifficultyMaskExtensions
#include "GlobalNamespace/BeatmapDifficultyMaskExtensions.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToMask
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::BeatmapDifficultyMaskExtensions::ToMask(::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::ToMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "ToMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficultyMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, difficulty);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.FromMask
::GlobalNamespace::BeatmapDifficulty GlobalNamespace::BeatmapDifficultyMaskExtensions::FromMask(::GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::FromMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "FromMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficulty, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.LocalizedKey
::StringW GlobalNamespace::BeatmapDifficultyMaskExtensions::LocalizedKey(::GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ShortLocalizedKey
::StringW GlobalNamespace::BeatmapDifficultyMaskExtensions::ShortLocalizedKey(::GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::ShortLocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "ShortLocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(::GlobalNamespace::BeatmapDifficultyMask mask, ::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(difficulty)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask, difficulty);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.Contains
bool GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains(::GlobalNamespace::BeatmapDifficultyMask mask, ::GlobalNamespace::BeatmapDifficultyMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.DifferenceFrom
int GlobalNamespace::BeatmapDifficultyMaskExtensions::DifferenceFrom(::GlobalNamespace::BeatmapDifficultyMask mask, ::GlobalNamespace::BeatmapDifficultyMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "DifferenceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask), ::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask, other);
}
// Autogenerated method: BeatmapDifficultyMaskExtensions.ToHexString
::StringW GlobalNamespace::BeatmapDifficultyMaskExtensions::ToHexString(::GlobalNamespace::BeatmapDifficultyMask mask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDifficultyMaskExtensions::ToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDifficultyMaskExtensions", "ToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mask)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BPMChangeBeatmapEventData
#include "GlobalNamespace/BPMChangeBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single bpm
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BPMChangeBeatmapEventData::dyn_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BPMChangeBeatmapEventData::dyn_bpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BPMChangeBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BPMChangeBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BPMChangeBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: BPMChangeBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BPMChangeBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BPMChangeBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7E9C
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<BasicBeatmapEventType,BasicBeatmapEventData> _defaultsForType
::System::Collections::Generic::Dictionary_2<::GlobalNamespace::BasicBeatmapEventType, ::GlobalNamespace::BasicBeatmapEventData*>* GlobalNamespace::BasicBeatmapEventData::_get__defaultsForType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::_get__defaultsForType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::BasicBeatmapEventType, ::GlobalNamespace::BasicBeatmapEventData*>*>("", "BasicBeatmapEventData", "_defaultsForType")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<BasicBeatmapEventType,BasicBeatmapEventData> _defaultsForType
void GlobalNamespace::BasicBeatmapEventData::_set__defaultsForType(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::BasicBeatmapEventType, ::GlobalNamespace::BasicBeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::_set__defaultsForType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventData", "_defaultsForType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sameTypeIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicBeatmapEventData::dyn_$sameTypeIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::dyn_$sameTypeIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sameTypeIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BasicBeatmapEventType basicBeatmapEventType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::BasicBeatmapEventData::dyn_basicBeatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::dyn_basicBeatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "basicBeatmapEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 value
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicBeatmapEventData::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single floatValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BasicBeatmapEventData::dyn_floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::dyn_floatValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floatValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicBeatmapEventData.get_previousSameTypeEventData
::GlobalNamespace::BasicBeatmapEventData* GlobalNamespace::BasicBeatmapEventData::get_previousSameTypeEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::get_previousSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previousSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.get_nextSameTypeEventData
::GlobalNamespace::BasicBeatmapEventData* GlobalNamespace::BasicBeatmapEventData::get_nextSameTypeEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::get_nextSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.get_sameTypeIndex
int GlobalNamespace::BasicBeatmapEventData::get_sameTypeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::get_sameTypeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sameTypeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.set_sameTypeIndex
void GlobalNamespace::BasicBeatmapEventData::set_sameTypeIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::set_sameTypeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sameTypeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasicBeatmapEventData..cctor
void GlobalNamespace::BasicBeatmapEventData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BasicBeatmapEventData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.SubtypeIdentifier
int GlobalNamespace::BasicBeatmapEventData::SubtypeIdentifier(::GlobalNamespace::BasicBeatmapEventType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::SubtypeIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BasicBeatmapEventData", "SubtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: BasicBeatmapEventData.SetFirstSameTypeIndex
void GlobalNamespace::BasicBeatmapEventData::SetFirstSameTypeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::SetFirstSameTypeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFirstSameTypeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.RecalculateSameTypeIndexFromPreviousEvent
void GlobalNamespace::BasicBeatmapEventData::RecalculateSameTypeIndexFromPreviousEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::RecalculateSameTypeIndexFromPreviousEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateSameTypeIndexFromPreviousEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: BasicBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BasicBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: BasicBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BasicBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataLightsExtensions
#include "GlobalNamespace/BeatmapEventDataLightsExtensions.hpp"
// Including type: BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues
#include "GlobalNamespace/BeatmapEventDataLightsExtensions_LightSwitchEventEffectDataValues.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEventDataLightsExtensions.LightColorTypeFromEventDataValue
::GlobalNamespace::EnvironmentColorType GlobalNamespace::BeatmapEventDataLightsExtensions::LightColorTypeFromEventDataValue(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightColorTypeFromEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataLightsExtensions", "LightColorTypeFromEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: BeatmapEventDataLightsExtensions.GetLightColorTypeFromEventDataValue
::GlobalNamespace::EnvironmentColorType GlobalNamespace::BeatmapEventDataLightsExtensions::GetLightColorTypeFromEventDataValue(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::GetLightColorTypeFromEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataLightsExtensions", "GetLightColorTypeFromEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapEventValue);
}
// Autogenerated method: BeatmapEventDataLightsExtensions.HasLightFadeEventDataValue
bool GlobalNamespace::BeatmapEventDataLightsExtensions::HasLightFadeEventDataValue(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::HasLightFadeEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataLightsExtensions", "HasLightFadeEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: BeatmapEventDataLightsExtensions.HasFixedDurationLightSwitchEventDataValue
bool GlobalNamespace::BeatmapEventDataLightsExtensions::HasFixedDurationLightSwitchEventDataValue(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::HasFixedDurationLightSwitchEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataLightsExtensions", "HasFixedDurationLightSwitchEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: BeatmapEventDataLightsExtensions.HasFixedDurationLightSwitchEventDataValue
bool GlobalNamespace::BeatmapEventDataLightsExtensions::HasFixedDurationLightSwitchEventDataValue(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::HasFixedDurationLightSwitchEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventDataLightsExtensions", "HasFixedDurationLightSwitchEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapEventValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues
#include "GlobalNamespace/BeatmapEventDataLightsExtensions_LightSwitchEventEffectDataValues.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kOff
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOff"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kOff
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOff(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOff", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kOnA
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnA"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kOnA
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kOnB
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnB"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kOnB
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kOnW
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kOnW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnW"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kOnW
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kOnW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kOnW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kHighlightA
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightA"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kHighlightA
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kHighlightB
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightB"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kHighlightB
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kHighlightW
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kHighlightW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightW"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kHighlightW
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kHighlightW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kHighlightW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFlashAndFadeToBlack
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlack"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFlashAndFadeToBlack
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlack(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlack", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFlashAndFadeToBlackA
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackA"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFlashAndFadeToBlackA
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFlashAndFadeToBlackB
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackB"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFlashAndFadeToBlackB
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFlashAndFadeToBlackW
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFlashAndFadeToBlackW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackW"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFlashAndFadeToBlackW
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFlashAndFadeToBlackW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFlashAndFadeToBlackW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFadeA
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeA"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFadeA
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFadeB
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeB"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFadeB
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeB(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kFadeW
int GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_get_kFadeW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeW"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kFadeW
void GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventDataLightsExtensions::LightSwitchEventEffectDataValues::_set_kFadeW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventDataLightsExtensions/LightSwitchEventEffectDataValues", "kFadeW", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapEventType
#include "GlobalNamespace/BasicBeatmapEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event0
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event0"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event0
void GlobalNamespace::BasicBeatmapEventType::_set_Event0(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event0", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event1
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event1"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event1
void GlobalNamespace::BasicBeatmapEventType::_set_Event1(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event1", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event2
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event2"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event2
void GlobalNamespace::BasicBeatmapEventType::_set_Event2(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event2", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event3
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event3"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event3
void GlobalNamespace::BasicBeatmapEventType::_set_Event3(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event3", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event4
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event4"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event4
void GlobalNamespace::BasicBeatmapEventType::_set_Event4(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event4", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event5
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event5"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event5
void GlobalNamespace::BasicBeatmapEventType::_set_Event5(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event5", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event6
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event6"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event6
void GlobalNamespace::BasicBeatmapEventType::_set_Event6(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event6", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event7
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event7"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event7
void GlobalNamespace::BasicBeatmapEventType::_set_Event7(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event7", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event8
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event8"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event8
void GlobalNamespace::BasicBeatmapEventType::_set_Event8(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event8", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event9
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event9"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event9
void GlobalNamespace::BasicBeatmapEventType::_set_Event9(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event9", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event10
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event10"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event10
void GlobalNamespace::BasicBeatmapEventType::_set_Event10(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event10", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event11
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event11"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event11
void GlobalNamespace::BasicBeatmapEventType::_set_Event11(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event11", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event12
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event12"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event12
void GlobalNamespace::BasicBeatmapEventType::_set_Event12(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event12", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event13
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event13"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event13
void GlobalNamespace::BasicBeatmapEventType::_set_Event13(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event13", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event14
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event14"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event14
void GlobalNamespace::BasicBeatmapEventType::_set_Event14(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event14", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event15
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event15"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event15
void GlobalNamespace::BasicBeatmapEventType::_set_Event15(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event15", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event16
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event16"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event16
void GlobalNamespace::BasicBeatmapEventType::_set_Event16(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event16", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event17
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event17"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event17
void GlobalNamespace::BasicBeatmapEventType::_set_Event17(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event17", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event18
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event18"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event18
void GlobalNamespace::BasicBeatmapEventType::_set_Event18(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event18", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event19
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event19() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event19");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event19"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event19
void GlobalNamespace::BasicBeatmapEventType::_set_Event19(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event19");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event19", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event20
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event20");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event20"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event20
void GlobalNamespace::BasicBeatmapEventType::_set_Event20(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event20");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event20", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Event21
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Event21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Event21");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Event21"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Event21
void GlobalNamespace::BasicBeatmapEventType::_set_Event21(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Event21");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Event21", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType VoidEvent
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_VoidEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_VoidEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "VoidEvent"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType VoidEvent
void GlobalNamespace::BasicBeatmapEventType::_set_VoidEvent(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_VoidEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "VoidEvent", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Special0
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Special0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Special0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Special0"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Special0
void GlobalNamespace::BasicBeatmapEventType::_set_Special0(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Special0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Special0", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Special1
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Special1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Special1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Special1"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Special1
void GlobalNamespace::BasicBeatmapEventType::_set_Special1(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Special1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Special1", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Special2
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Special2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Special2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Special2"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Special2
void GlobalNamespace::BasicBeatmapEventType::_set_Special2(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Special2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Special2", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType Special3
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_Special3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_Special3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "Special3"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType Special3
void GlobalNamespace::BasicBeatmapEventType::_set_Special3(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_Special3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "Special3", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType BpmChange
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BasicBeatmapEventType::_get_BpmChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_get_BpmChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BasicBeatmapEventType", "BpmChange"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType BpmChange
void GlobalNamespace::BasicBeatmapEventType::_set_BpmChange(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::_set_BpmChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicBeatmapEventType", "BpmChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BasicBeatmapEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventTypeExtensions
#include "GlobalNamespace/BeatmapEventTypeExtensions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLights1
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLights1"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLights1
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights1(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLights1", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLights2
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLights2"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLights2
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights2(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLights2", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLights3
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLights3"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLights3
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights3(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLights3", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLights4
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLights4"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLights4
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights4(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLights4", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLights5
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLights5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLights5"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLights5
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights5(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLights5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLights5", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kColorBoost
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kColorBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kColorBoost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kColorBoost"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kColorBoost
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kColorBoost(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kColorBoost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kColorBoost", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kRotateRings
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kRotateRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kRotateRings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kRotateRings"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kRotateRings
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kRotateRings(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kRotateRings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kRotateRings", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kCompressExpand
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kCompressExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kCompressExpand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kCompressExpand"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kCompressExpand
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kCompressExpand(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kCompressExpand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kCompressExpand", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLegacyEarlySpawnRotation
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLegacyEarlySpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLegacyEarlySpawnRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLegacyEarlySpawnRotation"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLegacyEarlySpawnRotation
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLegacyEarlySpawnRotation(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLegacyEarlySpawnRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLegacyEarlySpawnRotation", value));
}
// Autogenerated static field getter
// Get static field: static public BasicBeatmapEventType kLegacyLateSpawnRotation
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::BeatmapEventTypeExtensions::_get_kLegacyLateSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_get_kLegacyLateSpawnRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BasicBeatmapEventType>("", "BeatmapEventTypeExtensions", "kLegacyLateSpawnRotation"));
}
// Autogenerated static field setter
// Set static field: static public BasicBeatmapEventType kLegacyLateSpawnRotation
void GlobalNamespace::BeatmapEventTypeExtensions::_set_kLegacyLateSpawnRotation(::GlobalNamespace::BasicBeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::_set_kLegacyLateSpawnRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTypeExtensions", "kLegacyLateSpawnRotation", value));
}
// Autogenerated method: BeatmapEventTypeExtensions.IsCoreLightIntensityChangeEvent
bool GlobalNamespace::BeatmapEventTypeExtensions::IsCoreLightIntensityChangeEvent(::GlobalNamespace::BasicBeatmapEventType basicBeatmapEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTypeExtensions::IsCoreLightIntensityChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapEventTypeExtensions", "IsCoreLightIntensityChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, basicBeatmapEventType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataItemExecutionOrderConstants
#include "GlobalNamespace/BeatmapDataItemExecutionOrderConstants.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kBPMChangeBeatmapEventExecutionOrder
int GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kBPMChangeBeatmapEventExecutionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kBPMChangeBeatmapEventExecutionOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataItemExecutionOrderConstants", "kBPMChangeBeatmapEventExecutionOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kBPMChangeBeatmapEventExecutionOrder
void GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kBPMChangeBeatmapEventExecutionOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kBPMChangeBeatmapEventExecutionOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItemExecutionOrderConstants", "kBPMChangeBeatmapEventExecutionOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kEarlySpawnRotationBeatmapEventExecutionOrder
int GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kEarlySpawnRotationBeatmapEventExecutionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kEarlySpawnRotationBeatmapEventExecutionOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataItemExecutionOrderConstants", "kEarlySpawnRotationBeatmapEventExecutionOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kEarlySpawnRotationBeatmapEventExecutionOrder
void GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kEarlySpawnRotationBeatmapEventExecutionOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kEarlySpawnRotationBeatmapEventExecutionOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItemExecutionOrderConstants", "kEarlySpawnRotationBeatmapEventExecutionOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kCommonBeatmapEventExecutionOrder
int GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kCommonBeatmapEventExecutionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kCommonBeatmapEventExecutionOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataItemExecutionOrderConstants", "kCommonBeatmapEventExecutionOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kCommonBeatmapEventExecutionOrder
void GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kCommonBeatmapEventExecutionOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kCommonBeatmapEventExecutionOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItemExecutionOrderConstants", "kCommonBeatmapEventExecutionOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kCommonBeatmapObjectDataExecutionOrder
int GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kCommonBeatmapObjectDataExecutionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kCommonBeatmapObjectDataExecutionOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataItemExecutionOrderConstants", "kCommonBeatmapObjectDataExecutionOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kCommonBeatmapObjectDataExecutionOrder
void GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kCommonBeatmapObjectDataExecutionOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kCommonBeatmapObjectDataExecutionOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItemExecutionOrderConstants", "kCommonBeatmapObjectDataExecutionOrder", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kLateSpawnRotationBeatmapEventExecutionOrder
int GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kLateSpawnRotationBeatmapEventExecutionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_get_kLateSpawnRotationBeatmapEventExecutionOrder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BeatmapDataItemExecutionOrderConstants", "kLateSpawnRotationBeatmapEventExecutionOrder"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kLateSpawnRotationBeatmapEventExecutionOrder
void GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kLateSpawnRotationBeatmapEventExecutionOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataItemExecutionOrderConstants::_set_kLateSpawnRotationBeatmapEventExecutionOrder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataItemExecutionOrderConstants", "kLateSpawnRotationBeatmapEventExecutionOrder", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapEventData <previousSameTypeEventData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventData*& GlobalNamespace::BeatmapEventData::dyn_$previousSameTypeEventData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::dyn_$previousSameTypeEventData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<previousSameTypeEventData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventData <nextSameTypeEventData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventData*& GlobalNamespace::BeatmapEventData::dyn_$nextSameTypeEventData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::dyn_$nextSameTypeEventData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<nextSameTypeEventData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapEventData.get_previousSameTypeEventData
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BeatmapEventData::get_previousSameTypeEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::get_previousSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previousSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventData.set_previousSameTypeEventData
void GlobalNamespace::BeatmapEventData::set_previousSameTypeEventData(::GlobalNamespace::BeatmapEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::set_previousSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previousSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEventData.get_nextSameTypeEventData
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BeatmapEventData::get_nextSameTypeEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::get_nextSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventData.set_nextSameTypeEventData
void GlobalNamespace::BeatmapEventData::set_nextSameTypeEventData(::GlobalNamespace::BeatmapEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::set_nextSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nextSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEventData.__ConnectWithPreviousSameTypeEventData
void GlobalNamespace::BeatmapEventData::__ConnectWithPreviousSameTypeEventData(::GlobalNamespace::BeatmapEventData* newPreviousSameTypeEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::__ConnectWithPreviousSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ConnectWithPreviousSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newPreviousSameTypeEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPreviousSameTypeEvent);
}
// Autogenerated method: BeatmapEventData.__ConnectWithNextSameTypeEventData
void GlobalNamespace::BeatmapEventData::__ConnectWithNextSameTypeEventData(::GlobalNamespace::BeatmapEventData* newNextSameTypeEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::__ConnectWithNextSameTypeEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ConnectWithNextSameTypeEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newNextSameTypeEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newNextSameTypeEvent);
}
// Autogenerated method: BeatmapEventData.__ResetConnections
void GlobalNamespace::BeatmapEventData::__ResetConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::__ResetConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__ResetConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::BeatmapEventData::GetDefault(::GlobalNamespace::BeatmapEventData* nextData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventData::GetDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method, nextData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEventTransitionType
#include "GlobalNamespace/BeatmapEventTransitionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapEventTransitionType Instant
::GlobalNamespace::BeatmapEventTransitionType GlobalNamespace::BeatmapEventTransitionType::_get_Instant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_get_Instant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventTransitionType>("", "BeatmapEventTransitionType", "Instant"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventTransitionType Instant
void GlobalNamespace::BeatmapEventTransitionType::_set_Instant(::GlobalNamespace::BeatmapEventTransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_set_Instant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTransitionType", "Instant", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapEventTransitionType Interpolate
::GlobalNamespace::BeatmapEventTransitionType GlobalNamespace::BeatmapEventTransitionType::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventTransitionType>("", "BeatmapEventTransitionType", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventTransitionType Interpolate
void GlobalNamespace::BeatmapEventTransitionType::_set_Interpolate(::GlobalNamespace::BeatmapEventTransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTransitionType", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapEventTransitionType Extend
::GlobalNamespace::BeatmapEventTransitionType GlobalNamespace::BeatmapEventTransitionType::_get_Extend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_get_Extend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventTransitionType>("", "BeatmapEventTransitionType", "Extend"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapEventTransitionType Extend
void GlobalNamespace::BeatmapEventTransitionType::_set_Extend(::GlobalNamespace::BeatmapEventTransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::_set_Extend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapEventTransitionType", "Extend", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapEventTransitionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapEventTransitionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7ECC
// Autogenerated static field getter
// Get static field: static private readonly ColorBoostBeatmapEventData _defaultCopy
::GlobalNamespace::ColorBoostBeatmapEventData* GlobalNamespace::ColorBoostBeatmapEventData::_get__defaultCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::_get__defaultCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ColorBoostBeatmapEventData*>("", "ColorBoostBeatmapEventData", "_defaultCopy"));
}
// Autogenerated static field setter
// Set static field: static private readonly ColorBoostBeatmapEventData _defaultCopy
void GlobalNamespace::ColorBoostBeatmapEventData::_set__defaultCopy(::GlobalNamespace::ColorBoostBeatmapEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::_set__defaultCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorBoostBeatmapEventData", "_defaultCopy", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean boostColorsAreOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ColorBoostBeatmapEventData::dyn_boostColorsAreOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::dyn_boostColorsAreOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boostColorsAreOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorBoostBeatmapEventData..cctor
void GlobalNamespace::ColorBoostBeatmapEventData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorBoostBeatmapEventData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ColorBoostBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::ColorBoostBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: ColorBoostBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::ColorBoostBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorBoostBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorBeatmapEventData
#include "GlobalNamespace/LightColorBeatmapEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7F0C
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,LightColorBeatmapEventData> _defaults
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightColorBeatmapEventData*>* GlobalNamespace::LightColorBeatmapEventData::_get__defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::_get__defaults");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightColorBeatmapEventData*>*>("", "LightColorBeatmapEventData", "_defaults")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,LightColorBeatmapEventData> _defaults
void GlobalNamespace::LightColorBeatmapEventData::_set__defaults(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightColorBeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::_set__defaults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightColorBeatmapEventData", "_defaults", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 groupId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightColorBeatmapEventData::dyn_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_groupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 elementId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightColorBeatmapEventData::dyn_elementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_elementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapEventTransitionType transitionType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventTransitionType& GlobalNamespace::LightColorBeatmapEventData::dyn_transitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_transitionType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transitionType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventTransitionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentColorType <colorType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::LightColorBeatmapEventData::dyn_$colorType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_$colorType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <brightness>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightColorBeatmapEventData::dyn_$brightness$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_$brightness$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<brightness>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <strobeBeatFrequency>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightColorBeatmapEventData::dyn_$strobeBeatFrequency$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::dyn_$strobeBeatFrequency$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<strobeBeatFrequency>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightColorBeatmapEventData.get_colorType
::GlobalNamespace::EnvironmentColorType GlobalNamespace::LightColorBeatmapEventData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.set_colorType
void GlobalNamespace::LightColorBeatmapEventData::set_colorType(::GlobalNamespace::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::set_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightColorBeatmapEventData.get_brightness
float GlobalNamespace::LightColorBeatmapEventData::get_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::get_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.set_brightness
void GlobalNamespace::LightColorBeatmapEventData::set_brightness(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::set_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightColorBeatmapEventData.get_strobeBeatFrequency
int GlobalNamespace::LightColorBeatmapEventData::get_strobeBeatFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::get_strobeBeatFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_strobeBeatFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.set_strobeBeatFrequency
void GlobalNamespace::LightColorBeatmapEventData::set_strobeBeatFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::set_strobeBeatFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_strobeBeatFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightColorBeatmapEventData..cctor
void GlobalNamespace::LightColorBeatmapEventData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightColorBeatmapEventData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.CopyColorDataFrom
void GlobalNamespace::LightColorBeatmapEventData::CopyColorDataFrom(::GlobalNamespace::LightColorBeatmapEventData* lightColorBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::CopyColorDataFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyColorDataFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightColorBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lightColorBeatmapEventData);
}
// Autogenerated method: LightColorBeatmapEventData.DisableStrobe
void GlobalNamespace::LightColorBeatmapEventData::DisableStrobe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::DisableStrobe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableStrobe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.SubtypeIdentifier
int GlobalNamespace::LightColorBeatmapEventData::SubtypeIdentifier(int groupId, int elementId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::SubtypeIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightColorBeatmapEventData", "SubtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(elementId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupId, elementId);
}
// Autogenerated method: LightColorBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::LightColorBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: LightColorBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::LightColorBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationBeatmapEventData
#include "GlobalNamespace/LightRotationBeatmapEventData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7F2C
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,LightRotationBeatmapEventData> _defaults
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightRotationBeatmapEventData*>* GlobalNamespace::LightRotationBeatmapEventData::_get__defaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::_get__defaults");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightRotationBeatmapEventData*>*>("", "LightRotationBeatmapEventData", "_defaults")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Int32,LightRotationBeatmapEventData> _defaults
void GlobalNamespace::LightRotationBeatmapEventData::_set__defaults(::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightRotationBeatmapEventData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::_set__defaults");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationBeatmapEventData", "_defaults", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 groupId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationBeatmapEventData::dyn_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_groupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 elementId
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationBeatmapEventData::dyn_elementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_elementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean usePreviousEventValue
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LightRotationBeatmapEventData::dyn_usePreviousEventValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_usePreviousEventValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "usePreviousEventValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly EaseType easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::LightRotationBeatmapEventData::dyn_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LightRotationBeatmapEventData/Axis axis
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightRotationBeatmapEventData::Axis& GlobalNamespace::LightRotationBeatmapEventData::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationBeatmapEventData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 loopCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationBeatmapEventData::dyn_loopCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_loopCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LightRotationDirection rotationDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightRotationDirection& GlobalNamespace::LightRotationBeatmapEventData::dyn_rotationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_rotationDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <rotation>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightRotationBeatmapEventData::dyn_$rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::dyn_$rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rotation>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationBeatmapEventData.get_rotation
float GlobalNamespace::LightRotationBeatmapEventData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationBeatmapEventData.set_rotation
void GlobalNamespace::LightRotationBeatmapEventData::set_rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightRotationBeatmapEventData..cctor
void GlobalNamespace::LightRotationBeatmapEventData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightRotationBeatmapEventData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LightRotationBeatmapEventData.ChangeRotation
void GlobalNamespace::LightRotationBeatmapEventData::ChangeRotation(float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::ChangeRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: LightRotationBeatmapEventData.SubtypeIdentifier
int GlobalNamespace::LightRotationBeatmapEventData::SubtypeIdentifier(int groupId, int elementId, ::GlobalNamespace::LightRotationBeatmapEventData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::SubtypeIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightRotationBeatmapEventData", "SubtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId), ::il2cpp_utils::ExtractType(elementId), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, groupId, elementId, axis);
}
// Autogenerated method: LightRotationBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::LightRotationBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::LightRotationBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationBeatmapEventData/Axis
#include "GlobalNamespace/LightRotationBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LightRotationBeatmapEventData/Axis X
::GlobalNamespace::LightRotationBeatmapEventData::Axis GlobalNamespace::LightRotationBeatmapEventData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightRotationBeatmapEventData::Axis>("", "LightRotationBeatmapEventData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public LightRotationBeatmapEventData/Axis X
void GlobalNamespace::LightRotationBeatmapEventData::Axis::_set_X(::GlobalNamespace::LightRotationBeatmapEventData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationBeatmapEventData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public LightRotationBeatmapEventData/Axis Y
::GlobalNamespace::LightRotationBeatmapEventData::Axis GlobalNamespace::LightRotationBeatmapEventData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightRotationBeatmapEventData::Axis>("", "LightRotationBeatmapEventData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public LightRotationBeatmapEventData/Axis Y
void GlobalNamespace::LightRotationBeatmapEventData::Axis::_set_Y(::GlobalNamespace::LightRotationBeatmapEventData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationBeatmapEventData/Axis", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationBeatmapEventData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationDirection
#include "GlobalNamespace/LightRotationDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LightRotationDirection Automatic
::GlobalNamespace::LightRotationDirection GlobalNamespace::LightRotationDirection::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightRotationDirection>("", "LightRotationDirection", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public LightRotationDirection Automatic
void GlobalNamespace::LightRotationDirection::_set_Automatic(::GlobalNamespace::LightRotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationDirection", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public LightRotationDirection Clockwise
::GlobalNamespace::LightRotationDirection GlobalNamespace::LightRotationDirection::_get_Clockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_get_Clockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightRotationDirection>("", "LightRotationDirection", "Clockwise"));
}
// Autogenerated static field setter
// Set static field: static public LightRotationDirection Clockwise
void GlobalNamespace::LightRotationDirection::_set_Clockwise(::GlobalNamespace::LightRotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_set_Clockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationDirection", "Clockwise", value));
}
// Autogenerated static field getter
// Get static field: static public LightRotationDirection Counterclockwise
::GlobalNamespace::LightRotationDirection GlobalNamespace::LightRotationDirection::_get_Counterclockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_get_Counterclockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightRotationDirection>("", "LightRotationDirection", "Counterclockwise"));
}
// Autogenerated static field setter
// Set static field: static public LightRotationDirection Counterclockwise
void GlobalNamespace::LightRotationDirection::_set_Counterclockwise(::GlobalNamespace::LightRotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::_set_Counterclockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationDirection", "Counterclockwise", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightRotationDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7F4C
// Autogenerated static field getter
// Get static field: static private readonly BeatmapEventData _defaultCopy
::GlobalNamespace::BeatmapEventData* GlobalNamespace::SpawnRotationBeatmapEventData::_get__defaultCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::_get__defaultCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapEventData*>("", "SpawnRotationBeatmapEventData", "_defaultCopy"));
}
// Autogenerated static field setter
// Set static field: static private readonly BeatmapEventData _defaultCopy
void GlobalNamespace::SpawnRotationBeatmapEventData::_set__defaultCopy(::GlobalNamespace::BeatmapEventData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::_set__defaultCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SpawnRotationBeatmapEventData", "_defaultCopy", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <rotation>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SpawnRotationBeatmapEventData::dyn_$rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::dyn_$rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rotation>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationBeatmapEventData/SpawnRotationEventType spawnRotationEventType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType& GlobalNamespace::SpawnRotationBeatmapEventData::dyn_spawnRotationEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::dyn_spawnRotationEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spawnRotationEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _deltaRotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SpawnRotationBeatmapEventData::dyn__deltaRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::dyn__deltaRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deltaRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnRotationBeatmapEventData.get_rotation
float GlobalNamespace::SpawnRotationBeatmapEventData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationBeatmapEventData.set_rotation
void GlobalNamespace::SpawnRotationBeatmapEventData::set_rotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SpawnRotationBeatmapEventData..cctor
void GlobalNamespace::SpawnRotationBeatmapEventData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SpawnRotationBeatmapEventData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SpawnRotationBeatmapEventData.Mirror
void GlobalNamespace::SpawnRotationBeatmapEventData::Mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::Mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationBeatmapEventData.RecalculateRotationFromPreviousEvent
void GlobalNamespace::SpawnRotationBeatmapEventData::RecalculateRotationFromPreviousEvent(::GlobalNamespace::SpawnRotationBeatmapEventData* previousSpawnRotationBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::RecalculateRotationFromPreviousEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateRotationFromPreviousEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previousSpawnRotationBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previousSpawnRotationBeatmapEventData);
}
// Autogenerated method: SpawnRotationBeatmapEventData.SetFirstRotationEventRotation
void GlobalNamespace::SpawnRotationBeatmapEventData::SetFirstRotationEventRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SetFirstRotationEventRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFirstRotationEventRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationBeatmapEventData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::SpawnRotationBeatmapEventData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationBeatmapEventData.GetDefault
::GlobalNamespace::BeatmapEventData* GlobalNamespace::SpawnRotationBeatmapEventData::GetDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::GetDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationBeatmapEventData/SpawnRotationEventType
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SpawnRotationBeatmapEventData/SpawnRotationEventType Early
::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_get_Early() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_get_Early");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType>("", "SpawnRotationBeatmapEventData/SpawnRotationEventType", "Early"));
}
// Autogenerated static field setter
// Set static field: static public SpawnRotationBeatmapEventData/SpawnRotationEventType Early
void GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_set_Early(::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_set_Early");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SpawnRotationBeatmapEventData/SpawnRotationEventType", "Early", value));
}
// Autogenerated static field getter
// Get static field: static public SpawnRotationBeatmapEventData/SpawnRotationEventType Late
::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_get_Late() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_get_Late");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType>("", "SpawnRotationBeatmapEventData/SpawnRotationEventType", "Late"));
}
// Autogenerated static field setter
// Set static field: static public SpawnRotationBeatmapEventData/SpawnRotationEventType Late
void GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_set_Late(::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::_set_Late");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SpawnRotationBeatmapEventData/SpawnRotationEventType", "Late", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventData::SpawnRotationEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicBeatmapEventDataProcessor
#include "GlobalNamespace/BasicBeatmapEventDataProcessor.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicBeatmapEventDataProcessor.ProcessInsertedEventDataInternal
void GlobalNamespace::BasicBeatmapEventDataProcessor::ProcessInsertedEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* insertedNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventDataProcessor::ProcessInsertedEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
}
// Autogenerated method: BasicBeatmapEventDataProcessor.ProcessBeforeDeleteEventDataInternal
void GlobalNamespace::BasicBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorBoostBeatmapEventDataProcessor
#include "GlobalNamespace/ColorBoostBeatmapEventDataProcessor.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorBeatmapEventDataProcessor
#include "GlobalNamespace/LightColorBeatmapEventDataProcessor.hpp"
// Including type: LightColorBeatmapEventData
#include "GlobalNamespace/LightColorBeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LightColorBeatmapEventDataProcessor.ProcessInsertedEventDataInternal
void GlobalNamespace::LightColorBeatmapEventDataProcessor::ProcessInsertedEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* insertedNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataProcessor::ProcessInsertedEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
}
// Autogenerated method: LightColorBeatmapEventDataProcessor.ProcessBeforeDeleteEventDataInternal
void GlobalNamespace::LightColorBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationBeatmapEventDataProcessor
#include "GlobalNamespace/LightRotationBeatmapEventDataProcessor.hpp"
// Including type: LightRotationBeatmapEventData
#include "GlobalNamespace/LightRotationBeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LightRotationBeatmapEventDataProcessor.ProcessInsertedEventDataInternal
void GlobalNamespace::LightRotationBeatmapEventDataProcessor::ProcessInsertedEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* insertedNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataProcessor::ProcessInsertedEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
}
// Autogenerated method: LightRotationBeatmapEventDataProcessor.ProcessBeforeDeleteEventDataInternal
void GlobalNamespace::LightRotationBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationBeatmapEventDataProcessor
#include "GlobalNamespace/SpawnRotationBeatmapEventDataProcessor.hpp"
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpawnRotationBeatmapEventDataProcessor.ProcessInsertedEventDataInternal
void GlobalNamespace::SpawnRotationBeatmapEventDataProcessor::ProcessInsertedEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* insertedNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventDataProcessor::ProcessInsertedEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessInsertedEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(insertedNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, insertedNode);
}
// Autogenerated method: SpawnRotationBeatmapEventDataProcessor.ProcessBeforeDeleteEventDataInternal
void GlobalNamespace::SpawnRotationBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal(::System::Collections::Generic::LinkedListNode_1<::GlobalNamespace::BeatmapDataItem*>* nodeToDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationBeatmapEventDataProcessor::ProcessBeforeDeleteEventDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeforeDeleteEventDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeToDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nodeToDelete);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IReadonlyBeatmapLineData
#include "GlobalNamespace/IReadonlyBeatmapLineData.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IReadonlyBeatmapLineData.get_beatmapObjectsData
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapObjectData*>* GlobalNamespace::IReadonlyBeatmapLineData::get_beatmapObjectsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IReadonlyBeatmapLineData::get_beatmapObjectsData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapObjectData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLineData
#include "GlobalNamespace/BeatmapLineData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<BeatmapObjectData> _beatmapObjectsData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectData*>*& GlobalNamespace::BeatmapLineData::dyn__beatmapObjectsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLineData::dyn__beatmapObjectsData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectsData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::BeatmapObjectData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLineData.get_beatmapObjectsData
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapObjectData*>* GlobalNamespace::BeatmapLineData::get_beatmapObjectsData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLineData::get_beatmapObjectsData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapObjectsData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapObjectData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLineData.AddBeatmapObjectData
void GlobalNamespace::BeatmapLineData::AddBeatmapObjectData(::GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLineData::AddBeatmapObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBeatmapObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapObjectData.Mirror
void GlobalNamespace::BeatmapObjectData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ColorType ColorA
::GlobalNamespace::ColorType GlobalNamespace::ColorType::_get_ColorA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_get_ColorA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ColorType>("", "ColorType", "ColorA"));
}
// Autogenerated static field setter
// Set static field: static public ColorType ColorA
void GlobalNamespace::ColorType::_set_ColorA(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_set_ColorA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorType", "ColorA", value));
}
// Autogenerated static field getter
// Get static field: static public ColorType ColorB
::GlobalNamespace::ColorType GlobalNamespace::ColorType::_get_ColorB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_get_ColorB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ColorType>("", "ColorType", "ColorB"));
}
// Autogenerated static field setter
// Set static field: static public ColorType ColorB
void GlobalNamespace::ColorType::_set_ColorB(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_set_ColorB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorType", "ColorB", value));
}
// Autogenerated static field getter
// Get static field: static public ColorType None
::GlobalNamespace::ColorType GlobalNamespace::ColorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ColorType>("", "ColorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public ColorType None
void GlobalNamespace::ColorType::_set_None(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ColorType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ColorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTypeExtensions
#include "GlobalNamespace/ColorTypeExtensions.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorTypeExtensions.Opposite
::GlobalNamespace::ColorType GlobalNamespace::ColorTypeExtensions::Opposite(::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorTypeExtensions::Opposite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorTypeExtensions", "Opposite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentColorType None
::GlobalNamespace::EnvironmentColorType GlobalNamespace::EnvironmentColorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentColorType>("", "EnvironmentColorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentColorType None
void GlobalNamespace::EnvironmentColorType::_set_None(::GlobalNamespace::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentColorType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentColorType Color0
::GlobalNamespace::EnvironmentColorType GlobalNamespace::EnvironmentColorType::_get_Color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_get_Color0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentColorType>("", "EnvironmentColorType", "Color0"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentColorType Color0
void GlobalNamespace::EnvironmentColorType::_set_Color0(::GlobalNamespace::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_set_Color0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentColorType", "Color0", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentColorType Color1
::GlobalNamespace::EnvironmentColorType GlobalNamespace::EnvironmentColorType::_get_Color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_get_Color1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentColorType>("", "EnvironmentColorType", "Color1"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentColorType Color1
void GlobalNamespace::EnvironmentColorType::_set_Color1(::GlobalNamespace::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_set_Color1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentColorType", "Color1", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentColorType ColorW
::GlobalNamespace::EnvironmentColorType GlobalNamespace::EnvironmentColorType::_get_ColorW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_get_ColorW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentColorType>("", "EnvironmentColorType", "ColorW"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentColorType ColorW
void GlobalNamespace::EnvironmentColorType::_set_ColorW(::GlobalNamespace::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::_set_ColorW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentColorType", "ColorW", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentColorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteCutDirection Up
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection Up
void GlobalNamespace::NoteCutDirection::_set_Up(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection Down
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection Down
void GlobalNamespace::NoteCutDirection::_set_Down(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection Left
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection Left
void GlobalNamespace::NoteCutDirection::_set_Left(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection Right
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection Right
void GlobalNamespace::NoteCutDirection::_set_Right(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection UpLeft
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_UpLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_UpLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "UpLeft"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection UpLeft
void GlobalNamespace::NoteCutDirection::_set_UpLeft(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_UpLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "UpLeft", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection UpRight
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_UpRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_UpRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "UpRight"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection UpRight
void GlobalNamespace::NoteCutDirection::_set_UpRight(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_UpRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "UpRight", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection DownLeft
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_DownLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_DownLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "DownLeft"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection DownLeft
void GlobalNamespace::NoteCutDirection::_set_DownLeft(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_DownLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "DownLeft", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection DownRight
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_DownRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_DownRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "DownRight"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection DownRight
void GlobalNamespace::NoteCutDirection::_set_DownRight(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_DownRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "DownRight", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection Any
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_Any() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_Any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "Any"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection Any
void GlobalNamespace::NoteCutDirection::_set_Any(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_Any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "Any", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutDirection None
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutDirection>("", "NoteCutDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutDirection None
void GlobalNamespace::NoteCutDirection::_set_None(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutDirection", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteCutDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutDirectionExtensions
#include "GlobalNamespace/NoteCutDirectionExtensions.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutDirectionExtensions.Direction
::UnityEngine::Vector2 GlobalNamespace::NoteCutDirectionExtensions::Direction(::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::Direction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "Direction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.RotationAngle
float GlobalNamespace::NoteCutDirectionExtensions::RotationAngle(::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::RotationAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "RotationAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.OppositeDirection
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirectionExtensions::OppositeDirection(::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::OppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "OppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.Rotation
::UnityEngine::Quaternion GlobalNamespace::NoteCutDirectionExtensions::Rotation(::GlobalNamespace::NoteCutDirection cutDirection, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection, offset);
}
// Autogenerated method: NoteCutDirectionExtensions.IsMainDirection
bool GlobalNamespace::NoteCutDirectionExtensions::IsMainDirection(::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::IsMainDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "IsMainDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.MainNoteCutDirectionFromCutDirAngle
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirectionExtensions::MainNoteCutDirectionFromCutDirAngle(float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::MainNoteCutDirectionFromCutDirAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "MainNoteCutDirectionFromCutDirAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle);
}
// Autogenerated method: NoteCutDirectionExtensions.Mirrored
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteCutDirectionExtensions::Mirrored(::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::Mirrored");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "Mirrored", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: NoteCutDirectionExtensions.IsOnSamePlane
bool GlobalNamespace::NoteCutDirectionExtensions::IsOnSamePlane(::GlobalNamespace::NoteCutDirection noteCutDirection1, ::GlobalNamespace::NoteCutDirection noteCutDirection2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutDirectionExtensions::IsOnSamePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutDirectionExtensions", "IsOnSamePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutDirection1), ::il2cpp_utils::ExtractType(noteCutDirection2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteCutDirection1, noteCutDirection2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteData/GameplayType <gameplayType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::GameplayType& GlobalNamespace::NoteData::dyn_$gameplayType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$gameplayType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::GameplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteData/ScoringType <scoringType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::ScoringType& GlobalNamespace::NoteData::dyn_$scoringType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$scoringType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<scoringType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::ScoringType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorType <colorType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::NoteData::dyn_$colorType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$colorType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection <cutDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::NoteData::dyn_$cutDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$cutDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cutDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timeToNextColorNote>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteData::dyn_$timeToNextColorNote$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$timeToNextColorNote$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeToNextColorNote>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <timeToPrevColorNote>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteData::dyn_$timeToPrevColorNote$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$timeToPrevColorNote$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeToPrevColorNote>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteData::dyn_$lineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$lineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <noteLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteData::dyn_$noteLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$noteLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <beforeJumpNoteLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteData::dyn_$beforeJumpNoteLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$beforeJumpNoteLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beforeJumpNoteLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <flipLineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteData::dyn_$flipLineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$flipLineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<flipLineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <flipYSide>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteData::dyn_$flipYSide$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$flipYSide$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<flipYSide>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <cutDirectionAngleOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteData::dyn_$cutDirectionAngleOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$cutDirectionAngleOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cutDirectionAngleOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <cutSfxVolumeMultiplier>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteData::dyn_$cutSfxVolumeMultiplier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::dyn_$cutSfxVolumeMultiplier$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cutSfxVolumeMultiplier>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteData.get_gameplayType
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::get_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_gameplayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData::GameplayType, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_gameplayType
void GlobalNamespace::NoteData::set_gameplayType(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_gameplayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_scoringType
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::get_scoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_scoringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scoringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData::ScoringType, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_scoringType
void GlobalNamespace::NoteData::set_scoringType(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_scoringType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scoringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_colorType
::GlobalNamespace::ColorType GlobalNamespace::NoteData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_colorType
void GlobalNamespace::NoteData::set_colorType(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_cutDirection
::GlobalNamespace::NoteCutDirection GlobalNamespace::NoteData::get_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_cutDirection
void GlobalNamespace::NoteData::set_cutDirection(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_timeToNextColorNote
float GlobalNamespace::NoteData::get_timeToNextColorNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_timeToNextColorNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeToNextColorNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_timeToNextColorNote
void GlobalNamespace::NoteData::set_timeToNextColorNote(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_timeToNextColorNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeToNextColorNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_timeToPrevColorNote
float GlobalNamespace::NoteData::get_timeToPrevColorNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_timeToPrevColorNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeToPrevColorNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_timeToPrevColorNote
void GlobalNamespace::NoteData::set_timeToPrevColorNote(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_timeToPrevColorNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeToPrevColorNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_lineIndex
int GlobalNamespace::NoteData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_lineIndex
void GlobalNamespace::NoteData::set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_noteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteData::get_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_noteLineLayer
void GlobalNamespace::NoteData::set_noteLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_beforeJumpNoteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteData::get_beforeJumpNoteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_beforeJumpNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beforeJumpNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_beforeJumpNoteLineLayer
void GlobalNamespace::NoteData::set_beforeJumpNoteLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_beforeJumpNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beforeJumpNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_flipLineIndex
int GlobalNamespace::NoteData::get_flipLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_flipLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flipLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_flipLineIndex
void GlobalNamespace::NoteData::set_flipLineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_flipLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flipLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_flipYSide
float GlobalNamespace::NoteData::get_flipYSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_flipYSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flipYSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_flipYSide
void GlobalNamespace::NoteData::set_flipYSide(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_flipYSide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_flipYSide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_cutDirectionAngleOffset
float GlobalNamespace::NoteData::get_cutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_cutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_cutDirectionAngleOffset
void GlobalNamespace::NoteData::set_cutDirectionAngleOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_cutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.get_cutSfxVolumeMultiplier
float GlobalNamespace::NoteData::get_cutSfxVolumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::get_cutSfxVolumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutSfxVolumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.set_cutSfxVolumeMultiplier
void GlobalNamespace::NoteData::set_cutSfxVolumeMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::set_cutSfxVolumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutSfxVolumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteData.CreateBombNoteData
::GlobalNamespace::NoteData* GlobalNamespace::NoteData::CreateBombNoteData(float time, int lineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::CreateBombNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteData", "CreateBombNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, lineIndex, noteLineLayer);
}
// Autogenerated method: NoteData.CreateBasicNoteData
::GlobalNamespace::NoteData* GlobalNamespace::NoteData::CreateBasicNoteData(float time, int lineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer, ::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::CreateBasicNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteData", "CreateBasicNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(noteLineLayer), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, lineIndex, noteLineLayer, colorType, cutDirection);
}
// Autogenerated method: NoteData.CreateBurstSliderNoteData
::GlobalNamespace::NoteData* GlobalNamespace::NoteData::CreateBurstSliderNoteData(float time, int lineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer, ::GlobalNamespace::NoteLineLayer beforeJumpNoteLineLayer, ::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteCutDirection cutDirection, float cutSfxVolumeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::CreateBurstSliderNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteData", "CreateBurstSliderNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(noteLineLayer), ::il2cpp_utils::ExtractType(beforeJumpNoteLineLayer), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(cutDirection), ::il2cpp_utils::ExtractType(cutSfxVolumeMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, lineIndex, noteLineLayer, beforeJumpNoteLineLayer, colorType, cutDirection, cutSfxVolumeMultiplier);
}
// Autogenerated method: NoteData.CopyWith
::GlobalNamespace::NoteData* GlobalNamespace::NoteData::CopyWith(::System::Nullable_1<float> time, ::System::Nullable_1<int> lineIndex, ::System::Nullable_1<::GlobalNamespace::NoteLineLayer> noteLineLayer, ::System::Nullable_1<::GlobalNamespace::NoteLineLayer> beforeJumpNoteLineLayer, ::System::Nullable_1<::GlobalNamespace::NoteData::GameplayType> gameplayType, ::System::Nullable_1<::GlobalNamespace::NoteData::ScoringType> scoringType, ::System::Nullable_1<::GlobalNamespace::ColorType> colorType, ::System::Nullable_1<::GlobalNamespace::NoteCutDirection> cutDirection, ::System::Nullable_1<float> timeToNextColorNote, ::System::Nullable_1<float> timeToPrevColorNote, ::System::Nullable_1<int> flipLineIndex, ::System::Nullable_1<float> flipYSide, ::System::Nullable_1<float> cutDirectionAngleOffset, ::System::Nullable_1<float> cutSfxVolumeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::CopyWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(noteLineLayer), ::il2cpp_utils::ExtractType(beforeJumpNoteLineLayer), ::il2cpp_utils::ExtractType(gameplayType), ::il2cpp_utils::ExtractType(scoringType), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(cutDirection), ::il2cpp_utils::ExtractType(timeToNextColorNote), ::il2cpp_utils::ExtractType(timeToPrevColorNote), ::il2cpp_utils::ExtractType(flipLineIndex), ::il2cpp_utils::ExtractType(flipYSide), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset), ::il2cpp_utils::ExtractType(cutSfxVolumeMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, time, lineIndex, noteLineLayer, beforeJumpNoteLineLayer, gameplayType, scoringType, colorType, cutDirection, timeToNextColorNote, timeToPrevColorNote, flipLineIndex, flipYSide, cutDirectionAngleOffset, cutSfxVolumeMultiplier);
}
// Autogenerated method: NoteData.SetBeforeJumpNoteLineLayer
void GlobalNamespace::NoteData::SetBeforeJumpNoteLineLayer(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::SetBeforeJumpNoteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeforeJumpNoteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: NoteData.ChangeToBurstSliderHead
void GlobalNamespace::NoteData::ChangeToBurstSliderHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ChangeToBurstSliderHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToBurstSliderHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.ChangeToGameNote
void GlobalNamespace::NoteData::ChangeToGameNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ChangeToGameNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToGameNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.ChangeToSliderHead
void GlobalNamespace::NoteData::ChangeToSliderHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ChangeToSliderHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToSliderHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.ChangeToSliderTail
void GlobalNamespace::NoteData::ChangeToSliderTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ChangeToSliderTail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeToSliderTail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.SetNoteFlipToNote
void GlobalNamespace::NoteData::SetNoteFlipToNote(::GlobalNamespace::NoteData* targetNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::SetNoteFlipToNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNoteFlipToNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, targetNote);
}
// Autogenerated method: NoteData.SetCutDirectionAngleOffset
void GlobalNamespace::NoteData::SetCutDirectionAngleOffset(float cutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::SetCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirectionAngleOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutDirectionAngleOffset);
}
// Autogenerated method: NoteData.ResetNoteFlip
void GlobalNamespace::NoteData::ResetNoteFlip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ResetNoteFlip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetNoteFlip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.SetNoteToAnyCutDirection
void GlobalNamespace::NoteData::SetNoteToAnyCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::SetNoteToAnyCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNoteToAnyCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.ChangeNoteCutDirection
void GlobalNamespace::NoteData::ChangeNoteCutDirection(::GlobalNamespace::NoteCutDirection newCutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ChangeNoteCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeNoteCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCutDirection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newCutDirection);
}
// Autogenerated method: NoteData.TransformNoteAOrBToRandomType
void GlobalNamespace::NoteData::TransformNoteAOrBToRandomType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::TransformNoteAOrBToRandomType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformNoteAOrBToRandomType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.SubtypeIdentifier
int GlobalNamespace::NoteData::SubtypeIdentifier(::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::SubtypeIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteData", "SubtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType);
}
// Autogenerated method: NoteData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::NoteData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: NoteData.Mirror
void GlobalNamespace::NoteData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteData/GameplayType
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteData/GameplayType Normal
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::GameplayType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::GameplayType>("", "NoteData/GameplayType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/GameplayType Normal
void GlobalNamespace::NoteData::GameplayType::_set_Normal(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/GameplayType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/GameplayType Bomb
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::GameplayType::_get_Bomb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_get_Bomb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::GameplayType>("", "NoteData/GameplayType", "Bomb"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/GameplayType Bomb
void GlobalNamespace::NoteData::GameplayType::_set_Bomb(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_set_Bomb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/GameplayType", "Bomb", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/GameplayType BurstSliderHead
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::GameplayType::_get_BurstSliderHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_get_BurstSliderHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::GameplayType>("", "NoteData/GameplayType", "BurstSliderHead"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/GameplayType BurstSliderHead
void GlobalNamespace::NoteData::GameplayType::_set_BurstSliderHead(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_set_BurstSliderHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/GameplayType", "BurstSliderHead", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/GameplayType BurstSliderElement
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::GameplayType::_get_BurstSliderElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_get_BurstSliderElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::GameplayType>("", "NoteData/GameplayType", "BurstSliderElement"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/GameplayType BurstSliderElement
void GlobalNamespace::NoteData::GameplayType::_set_BurstSliderElement(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_set_BurstSliderElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/GameplayType", "BurstSliderElement", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/GameplayType BurstSliderElementFill
::GlobalNamespace::NoteData::GameplayType GlobalNamespace::NoteData::GameplayType::_get_BurstSliderElementFill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_get_BurstSliderElementFill");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::GameplayType>("", "NoteData/GameplayType", "BurstSliderElementFill"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/GameplayType BurstSliderElementFill
void GlobalNamespace::NoteData::GameplayType::_set_BurstSliderElementFill(::GlobalNamespace::NoteData::GameplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::_set_BurstSliderElementFill");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/GameplayType", "BurstSliderElementFill", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteData::GameplayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::GameplayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteData/ScoringType
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType Ignore
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_Ignore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_Ignore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "Ignore"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType Ignore
void GlobalNamespace::NoteData::ScoringType::_set_Ignore(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_Ignore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "Ignore", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType NoScore
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_NoScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_NoScore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "NoScore"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType NoScore
void GlobalNamespace::NoteData::ScoringType::_set_NoScore(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_NoScore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "NoScore", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType Normal
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType Normal
void GlobalNamespace::NoteData::ScoringType::_set_Normal(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType SliderHead
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_SliderHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_SliderHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "SliderHead"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType SliderHead
void GlobalNamespace::NoteData::ScoringType::_set_SliderHead(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_SliderHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "SliderHead", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType SliderTail
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_SliderTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_SliderTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "SliderTail"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType SliderTail
void GlobalNamespace::NoteData::ScoringType::_set_SliderTail(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_SliderTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "SliderTail", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType BurstSliderHead
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_BurstSliderHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_BurstSliderHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "BurstSliderHead"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType BurstSliderHead
void GlobalNamespace::NoteData::ScoringType::_set_BurstSliderHead(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_BurstSliderHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "BurstSliderHead", value));
}
// Autogenerated static field getter
// Get static field: static public NoteData/ScoringType BurstSliderElement
::GlobalNamespace::NoteData::ScoringType GlobalNamespace::NoteData::ScoringType::_get_BurstSliderElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_get_BurstSliderElement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteData::ScoringType>("", "NoteData/ScoringType", "BurstSliderElement"));
}
// Autogenerated static field setter
// Set static field: static public NoteData/ScoringType BurstSliderElement
void GlobalNamespace::NoteData::ScoringType::_set_BurstSliderElement(::GlobalNamespace::NoteData::ScoringType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::_set_BurstSliderElement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteData/ScoringType", "BurstSliderElement", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteData::ScoringType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteData::ScoringType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteLineLayer Base
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteLineLayer::_get_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_get_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteLineLayer>("", "NoteLineLayer", "Base"));
}
// Autogenerated static field setter
// Set static field: static public NoteLineLayer Base
void GlobalNamespace::NoteLineLayer::_set_Base(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_set_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteLineLayer", "Base", value));
}
// Autogenerated static field getter
// Get static field: static public NoteLineLayer Upper
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteLineLayer::_get_Upper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_get_Upper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteLineLayer>("", "NoteLineLayer", "Upper"));
}
// Autogenerated static field setter
// Set static field: static public NoteLineLayer Upper
void GlobalNamespace::NoteLineLayer::_set_Upper(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_set_Upper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteLineLayer", "Upper", value));
}
// Autogenerated static field getter
// Get static field: static public NoteLineLayer Top
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteLineLayer::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteLineLayer>("", "NoteLineLayer", "Top"));
}
// Autogenerated static field setter
// Set static field: static public NoteLineLayer Top
void GlobalNamespace::NoteLineLayer::_set_Top(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteLineLayer", "Top", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteLineLayer::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteLineLayer::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleData::dyn_$lineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::dyn_$lineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <lineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::ObstacleData::dyn_$lineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::dyn_$lineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleData::dyn_$duration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::dyn_$duration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <width>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleData::dyn_$width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::dyn_$width$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<width>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <height>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleData::dyn_$height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::dyn_$height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<height>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleData.get_lineIndex
int GlobalNamespace::ObstacleData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_lineIndex
void GlobalNamespace::ObstacleData::set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::set_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_lineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::ObstacleData::get_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::get_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_lineLayer
void GlobalNamespace::ObstacleData::set_lineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::set_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_duration
float GlobalNamespace::ObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_duration
void GlobalNamespace::ObstacleData::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_width
int GlobalNamespace::ObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_width
void GlobalNamespace::ObstacleData::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.get_height
int GlobalNamespace::ObstacleData::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.set_height
void GlobalNamespace::ObstacleData::set_height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleData.UpdateDuration
void GlobalNamespace::ObstacleData::UpdateDuration(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: ObstacleData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::ObstacleData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleData.Mirror
void GlobalNamespace::ObstacleData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OffsetDirection
#include "GlobalNamespace/OffsetDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OffsetDirection Up
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection Up
void GlobalNamespace::OffsetDirection::_set_Up(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection Down
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection Down
void GlobalNamespace::OffsetDirection::_set_Down(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection Left
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection Left
void GlobalNamespace::OffsetDirection::_set_Left(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection Right
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection Right
void GlobalNamespace::OffsetDirection::_set_Right(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection UpLeft
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_UpLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_UpLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "UpLeft"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection UpLeft
void GlobalNamespace::OffsetDirection::_set_UpLeft(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_UpLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "UpLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection UpRight
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_UpRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_UpRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "UpRight"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection UpRight
void GlobalNamespace::OffsetDirection::_set_UpRight(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_UpRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "UpRight", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection DownLeft
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_DownLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_DownLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "DownLeft"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection DownLeft
void GlobalNamespace::OffsetDirection::_set_DownLeft(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_DownLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "DownLeft", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection DownRight
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_DownRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_DownRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "DownRight"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection DownRight
void GlobalNamespace::OffsetDirection::_set_DownRight(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_DownRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "DownRight", value));
}
// Autogenerated static field getter
// Get static field: static public OffsetDirection None
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirection::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::OffsetDirection>("", "OffsetDirection", "None"));
}
// Autogenerated static field setter
// Set static field: static public OffsetDirection None
void GlobalNamespace::OffsetDirection::_set_None(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OffsetDirection", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OffsetDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OffsetDirectionExtensions
#include "GlobalNamespace/OffsetDirectionExtensions.hpp"
// Including type: OffsetDirection
#include "GlobalNamespace/OffsetDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OffsetDirectionExtensions.OppositeDirection
::GlobalNamespace::OffsetDirection GlobalNamespace::OffsetDirectionExtensions::OppositeDirection(::GlobalNamespace::OffsetDirection offsetDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OffsetDirectionExtensions::OppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OffsetDirectionExtensions", "OppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OffsetDirection, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offsetDirection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorType <colorType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::SliderData::dyn_$colorType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$colorType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderData/Type <sliderType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderData::Type& GlobalNamespace::SliderData::dyn_$sliderType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$sliderType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sliderType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderData::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasHeadNote>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SliderData::dyn_$hasHeadNote$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$hasHeadNote$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasHeadNote>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <headControlPointLengthMultiplier>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$headControlPointLengthMultiplier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headControlPointLengthMultiplier$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headControlPointLengthMultiplier>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <headLineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderData::dyn_$headLineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headLineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headLineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <headLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderData::dyn_$headLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <headBeforeJumpLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderData::dyn_$headBeforeJumpLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headBeforeJumpLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headBeforeJumpLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection <headCutDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::SliderData::dyn_$headCutDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headCutDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headCutDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <headCutDirectionAngleOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$headCutDirectionAngleOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$headCutDirectionAngleOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<headCutDirectionAngleOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasTailNote>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SliderData::dyn_$hasTailNote$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$hasTailNote$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<hasTailNote>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <tailTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$tailTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <tailLineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderData::dyn_$tailLineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailLineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailLineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <tailControlPointLengthMultiplier>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$tailControlPointLengthMultiplier$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailControlPointLengthMultiplier$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailControlPointLengthMultiplier>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <tailLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderData::dyn_$tailLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <tailBeforeJumpLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderData::dyn_$tailBeforeJumpLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailBeforeJumpLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailBeforeJumpLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection <tailCutDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::SliderData::dyn_$tailCutDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailCutDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailCutDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <tailCutDirectionAngleOffset>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$tailCutDirectionAngleOffset$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$tailCutDirectionAngleOffset$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<tailCutDirectionAngleOffset>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderMidAnchorMode <midAnchorMode>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderMidAnchorMode& GlobalNamespace::SliderData::dyn_$midAnchorMode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$midAnchorMode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<midAnchorMode>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderMidAnchorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <sliceCount>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderData::dyn_$sliceCount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$sliceCount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sliceCount>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <squishAmount>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderData::dyn_$squishAmount$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::dyn_$squishAmount$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<squishAmount>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SliderData.get_colorType
::GlobalNamespace::ColorType GlobalNamespace::SliderData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_colorType
void GlobalNamespace::SliderData::set_colorType(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_sliderType
::GlobalNamespace::SliderData::Type GlobalNamespace::SliderData::get_sliderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_sliderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData::Type, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_sliderType
void GlobalNamespace::SliderData::set_sliderType(::GlobalNamespace::SliderData::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_sliderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sliderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_hasHeadNote
bool GlobalNamespace::SliderData::get_hasHeadNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_hasHeadNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasHeadNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_hasHeadNote
void GlobalNamespace::SliderData::set_hasHeadNote(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_hasHeadNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasHeadNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headControlPointLengthMultiplier
float GlobalNamespace::SliderData::get_headControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headControlPointLengthMultiplier
void GlobalNamespace::SliderData::set_headControlPointLengthMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headLineIndex
int GlobalNamespace::SliderData::get_headLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headLineIndex
void GlobalNamespace::SliderData::set_headLineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::SliderData::get_headLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headLineLayer
void GlobalNamespace::SliderData::set_headLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headBeforeJumpLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::SliderData::get_headBeforeJumpLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headBeforeJumpLineLayer
void GlobalNamespace::SliderData::set_headBeforeJumpLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headCutDirection
::GlobalNamespace::NoteCutDirection GlobalNamespace::SliderData::get_headCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headCutDirection
void GlobalNamespace::SliderData::set_headCutDirection(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_headCutDirectionAngleOffset
float GlobalNamespace::SliderData::get_headCutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_headCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_headCutDirectionAngleOffset
void GlobalNamespace::SliderData::set_headCutDirectionAngleOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_headCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_headCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_hasTailNote
bool GlobalNamespace::SliderData::get_hasTailNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_hasTailNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTailNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_hasTailNote
void GlobalNamespace::SliderData::set_hasTailNote(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_hasTailNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasTailNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailTime
float GlobalNamespace::SliderData::get_tailTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailTime
void GlobalNamespace::SliderData::set_tailTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailLineIndex
int GlobalNamespace::SliderData::get_tailLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailLineIndex
void GlobalNamespace::SliderData::set_tailLineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailControlPointLengthMultiplier
float GlobalNamespace::SliderData::get_tailControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailControlPointLengthMultiplier
void GlobalNamespace::SliderData::set_tailControlPointLengthMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::SliderData::get_tailLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailLineLayer
void GlobalNamespace::SliderData::set_tailLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailBeforeJumpLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::SliderData::get_tailBeforeJumpLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailBeforeJumpLineLayer
void GlobalNamespace::SliderData::set_tailBeforeJumpLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailCutDirection
::GlobalNamespace::NoteCutDirection GlobalNamespace::SliderData::get_tailCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailCutDirection
void GlobalNamespace::SliderData::set_tailCutDirection(::GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_tailCutDirectionAngleOffset
float GlobalNamespace::SliderData::get_tailCutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_tailCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_tailCutDirectionAngleOffset
void GlobalNamespace::SliderData::set_tailCutDirectionAngleOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_tailCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tailCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_midAnchorMode
::GlobalNamespace::SliderMidAnchorMode GlobalNamespace::SliderData::get_midAnchorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_midAnchorMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_midAnchorMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderMidAnchorMode, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_midAnchorMode
void GlobalNamespace::SliderData::set_midAnchorMode(::GlobalNamespace::SliderMidAnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_midAnchorMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_midAnchorMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_sliceCount
int GlobalNamespace::SliderData::get_sliceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_sliceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_sliceCount
void GlobalNamespace::SliderData::set_sliceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_sliceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sliceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.get_squishAmount
float GlobalNamespace::SliderData::get_squishAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::get_squishAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_squishAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.set_squishAmount
void GlobalNamespace::SliderData::set_squishAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::set_squishAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_squishAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SliderData.CreateSliderData
::GlobalNamespace::SliderData* GlobalNamespace::SliderData::CreateSliderData(::GlobalNamespace::ColorType colorType, float headTime, int headLineIndex, ::GlobalNamespace::NoteLineLayer headLineLayer, ::GlobalNamespace::NoteLineLayer headBeforeJumpLineLayer, float headControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection headCutDirection, float tailTime, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailLineLayer, ::GlobalNamespace::NoteLineLayer tailBeforeJumpLineLayer, float tailControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection tailCutDirection, ::GlobalNamespace::SliderMidAnchorMode midAnchorMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::CreateSliderData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SliderData", "CreateSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(headTime), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headLineLayer), ::il2cpp_utils::ExtractType(headBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(headControlPointLengthMultiplier), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(tailTime), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailLineLayer), ::il2cpp_utils::ExtractType(tailBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(tailControlPointLengthMultiplier), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(midAnchorMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType, headTime, headLineIndex, headLineLayer, headBeforeJumpLineLayer, headControlPointLengthMultiplier, headCutDirection, tailTime, tailLineIndex, tailLineLayer, tailBeforeJumpLineLayer, tailControlPointLengthMultiplier, tailCutDirection, midAnchorMode);
}
// Autogenerated method: SliderData.CreateBurstSliderData
::GlobalNamespace::SliderData* GlobalNamespace::SliderData::CreateBurstSliderData(::GlobalNamespace::ColorType colorType, float headTime, int headLineIndex, ::GlobalNamespace::NoteLineLayer headLineLayer, ::GlobalNamespace::NoteLineLayer headBeforeJumpLineLayer, ::GlobalNamespace::NoteCutDirection headCutDirection, float tailTime, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailLineLayer, ::GlobalNamespace::NoteLineLayer tailBeforeJumpLineLayer, ::GlobalNamespace::NoteCutDirection tailCutDirection, int sliceCount, float squishAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::CreateBurstSliderData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SliderData", "CreateBurstSliderData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(headTime), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headLineLayer), ::il2cpp_utils::ExtractType(headBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(tailTime), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailLineLayer), ::il2cpp_utils::ExtractType(tailBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(sliceCount), ::il2cpp_utils::ExtractType(squishAmount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType, headTime, headLineIndex, headLineLayer, headBeforeJumpLineLayer, headCutDirection, tailTime, tailLineIndex, tailLineLayer, tailBeforeJumpLineLayer, tailCutDirection, sliceCount, squishAmount);
}
// Autogenerated method: SliderData.SetHasHeadNote
void GlobalNamespace::SliderData::SetHasHeadNote(bool hasHeadNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SetHasHeadNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHasHeadNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasHeadNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasHeadNote);
}
// Autogenerated method: SliderData.SetHasTailNote
void GlobalNamespace::SliderData::SetHasTailNote(bool hasTailNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SetHasTailNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHasTailNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasTailNote)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hasTailNote);
}
// Autogenerated method: SliderData.SetHeadBeforeJumpLineLayer
void GlobalNamespace::SliderData::SetHeadBeforeJumpLineLayer(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SetHeadBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeadBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: SliderData.SetTailBeforeJumpLineLayer
void GlobalNamespace::SliderData::SetTailBeforeJumpLineLayer(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SetTailBeforeJumpLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTailBeforeJumpLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineLayer);
}
// Autogenerated method: SliderData.SetCutDirectionAngleOffset
void GlobalNamespace::SliderData::SetCutDirectionAngleOffset(float headCutDirectionAngleOffset, float tailCutDirectionAngleOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SetCutDirectionAngleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutDirectionAngleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headCutDirectionAngleOffset), ::il2cpp_utils::ExtractType(tailCutDirectionAngleOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headCutDirectionAngleOffset, tailCutDirectionAngleOffset);
}
// Autogenerated method: SliderData.SubtypeIdentifier
int GlobalNamespace::SliderData::SubtypeIdentifier(::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::SubtypeIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SliderData", "SubtypeIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType);
}
// Autogenerated method: SliderData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::SliderData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: SliderData.Mirror
void GlobalNamespace::SliderData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderData/Type
#include "GlobalNamespace/SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SliderData/Type Normal
::GlobalNamespace::SliderData::Type GlobalNamespace::SliderData::Type::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Type::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SliderData::Type>("", "SliderData/Type", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public SliderData/Type Normal
void GlobalNamespace::SliderData::Type::_set_Normal(::GlobalNamespace::SliderData::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Type::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SliderData/Type", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public SliderData/Type Burst
::GlobalNamespace::SliderData::Type GlobalNamespace::SliderData::Type::_get_Burst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Type::_get_Burst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SliderData::Type>("", "SliderData/Type", "Burst"));
}
// Autogenerated static field setter
// Set static field: static public SliderData/Type Burst
void GlobalNamespace::SliderData::Type::_set_Burst(::GlobalNamespace::SliderData::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Type::_set_Burst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SliderData/Type", "Burst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderData::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderData::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderMidAnchorMode
#include "GlobalNamespace/SliderMidAnchorMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SliderMidAnchorMode Straight
::GlobalNamespace::SliderMidAnchorMode GlobalNamespace::SliderMidAnchorMode::_get_Straight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_get_Straight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SliderMidAnchorMode>("", "SliderMidAnchorMode", "Straight"));
}
// Autogenerated static field setter
// Set static field: static public SliderMidAnchorMode Straight
void GlobalNamespace::SliderMidAnchorMode::_set_Straight(::GlobalNamespace::SliderMidAnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_set_Straight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SliderMidAnchorMode", "Straight", value));
}
// Autogenerated static field getter
// Get static field: static public SliderMidAnchorMode Clockwise
::GlobalNamespace::SliderMidAnchorMode GlobalNamespace::SliderMidAnchorMode::_get_Clockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_get_Clockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SliderMidAnchorMode>("", "SliderMidAnchorMode", "Clockwise"));
}
// Autogenerated static field setter
// Set static field: static public SliderMidAnchorMode Clockwise
void GlobalNamespace::SliderMidAnchorMode::_set_Clockwise(::GlobalNamespace::SliderMidAnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_set_Clockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SliderMidAnchorMode", "Clockwise", value));
}
// Autogenerated static field getter
// Get static field: static public SliderMidAnchorMode CounterClockwise
::GlobalNamespace::SliderMidAnchorMode GlobalNamespace::SliderMidAnchorMode::_get_CounterClockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_get_CounterClockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SliderMidAnchorMode>("", "SliderMidAnchorMode", "CounterClockwise"));
}
// Autogenerated static field setter
// Set static field: static public SliderMidAnchorMode CounterClockwise
void GlobalNamespace::SliderMidAnchorMode::_set_CounterClockwise(::GlobalNamespace::SliderMidAnchorMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::_set_CounterClockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SliderMidAnchorMode", "CounterClockwise", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderMidAnchorMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderMidAnchorModeExtensions
#include "GlobalNamespace/SliderMidAnchorModeExtensions.hpp"
// Including type: SliderMidAnchorMode
#include "GlobalNamespace/SliderMidAnchorMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SliderMidAnchorModeExtensions.OppositeDirection
::GlobalNamespace::SliderMidAnchorMode GlobalNamespace::SliderMidAnchorModeExtensions::OppositeDirection(::GlobalNamespace::SliderMidAnchorMode sliderMidAnchorMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderMidAnchorModeExtensions::OppositeDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SliderMidAnchorModeExtensions", "OppositeDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderMidAnchorMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderMidAnchorMode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sliderMidAnchorMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WaypointData
#include "GlobalNamespace/WaypointData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OffsetDirection <offsetDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OffsetDirection& GlobalNamespace::WaypointData::dyn_$offsetDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::dyn_$offsetDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<offsetDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OffsetDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::WaypointData::dyn_$lineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::dyn_$lineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <lineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::WaypointData::dyn_$lineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::dyn_$lineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WaypointData.get_offsetDirection
::GlobalNamespace::OffsetDirection GlobalNamespace::WaypointData::get_offsetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::get_offsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OffsetDirection, false>(this, ___internal__method);
}
// Autogenerated method: WaypointData.set_offsetDirection
void GlobalNamespace::WaypointData::set_offsetDirection(::GlobalNamespace::OffsetDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::set_offsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_offsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WaypointData.get_lineIndex
int GlobalNamespace::WaypointData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: WaypointData.set_lineIndex
void GlobalNamespace::WaypointData::set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::set_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WaypointData.get_lineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::WaypointData::get_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::get_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: WaypointData.set_lineLayer
void GlobalNamespace::WaypointData::set_lineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::set_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: WaypointData.MirrorTransformOffsetDirection
void GlobalNamespace::WaypointData::MirrorTransformOffsetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::MirrorTransformOffsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MirrorTransformOffsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WaypointData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::WaypointData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated method: WaypointData.Mirror
void GlobalNamespace::WaypointData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WaypointData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lineCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInTimeRowProcessor
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor/TimeSliceContainer`1
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_TimeSliceContainer_1.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor/SliderTailData
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_SliderTailData.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor/<>c__DisplayClass17_0
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_--c__DisplayClass17_0.hpp"
// Including type: BeatmapObjectsInTimeRowProcessor/<>c
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_--c.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kTimeRowEpsilon
float GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_get_kTimeRowEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_get_kTimeRowEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectsInTimeRowProcessor", "kTimeRowEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTimeRowEpsilon
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_set_kTimeRowEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_set_kTimeRowEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectsInTimeRowProcessor", "kTimeRowEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxNotesAlignmentAngle
float GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_get_kMaxNotesAlignmentAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_get_kMaxNotesAlignmentAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapObjectsInTimeRowProcessor", "kMaxNotesAlignmentAngle"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxNotesAlignmentAngle
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_set_kMaxNotesAlignmentAngle(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::_set_kMaxNotesAlignmentAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapObjectsInTimeRowProcessor", "kMaxNotesAlignmentAngle", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectsInTimeRowProcessor/TimeSliceContainer`1<NoteData> _currentTimeSliceColorNotes
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>*& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceColorNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceColorNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTimeSliceColorNotes"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectsInTimeRowProcessor/TimeSliceContainer`1<BeatmapDataItem> _currentTimeSliceAllNotesAndSliders
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::BeatmapDataItem*>*& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceAllNotesAndSliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceAllNotesAndSliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTimeSliceAllNotesAndSliders"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::BeatmapDataItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<ColorType,BeatmapObjectsInTimeRowProcessor/TimeSliceContainer`1<NoteData>> _currentTimeSliceNotesByColorType
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ColorType, ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>*>*& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceNotesByColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__currentTimeSliceNotesByColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTimeSliceNotesByColorType"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::ColorType, ::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<SliderData> _unprocessedSliderTails
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SliderData*>*& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__unprocessedSliderTails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__unprocessedSliderTails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unprocessedSliderTails"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SliderData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<NoteData>[] _notesInColumnsReusableProcessingListOfLists
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::GlobalNamespace::NoteData*>*>& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__notesInColumnsReusableProcessingListOfLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__notesInColumnsReusableProcessingListOfLists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notesInColumnsReusableProcessingListOfLists"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::GlobalNamespace::NoteData*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _numberOfLines
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::dyn__numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.ProcessNote
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessNote(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.ProcessSlider
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessSlider(::GlobalNamespace::SliderData* sliderData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sliderData);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.ProcessAllRemainingData
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessAllRemainingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::ProcessAllRemainingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessAllRemainingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.HandleCurrentTimeSliceColorNotesDidAddItem
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceColorNotesDidAddItem(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>* timeSliceContainer, ::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceColorNotesDidAddItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCurrentTimeSliceColorNotesDidAddItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSliceContainer), ::il2cpp_utils::ExtractType(noteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSliceContainer, noteData);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.HandleCurrentNewTimeSliceAllNotesAndSlidersDidStartNewTimeSlice
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentNewTimeSliceAllNotesAndSlidersDidStartNewTimeSlice(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::BeatmapDataItem*>* allObjectsTimeSlice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentNewTimeSliceAllNotesAndSlidersDidStartNewTimeSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCurrentNewTimeSliceAllNotesAndSlidersDidStartNewTimeSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allObjectsTimeSlice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allObjectsTimeSlice);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.HandleCurrentTimeSliceAllNotesAndSlidersDidFinishTimeSlice
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceAllNotesAndSlidersDidFinishTimeSlice(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::BeatmapDataItem*>* allObjectsTimeSlice, float nextTimeSliceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceAllNotesAndSlidersDidFinishTimeSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCurrentTimeSliceAllNotesAndSlidersDidFinishTimeSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(allObjectsTimeSlice), ::il2cpp_utils::ExtractType(nextTimeSliceTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, allObjectsTimeSlice, nextTimeSliceTime);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.HandleCurrentTimeSliceColorNotesDidFinishTimeSlice
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceColorNotesDidFinishTimeSlice(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>* currentTimeSlice, float nextTimeSliceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandleCurrentTimeSliceColorNotesDidFinishTimeSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCurrentTimeSliceColorNotesDidFinishTimeSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentTimeSlice), ::il2cpp_utils::ExtractType(nextTimeSliceTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentTimeSlice, nextTimeSliceTime);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.HandlePerColorTypeTimeSliceContainerDidFinishTimeSlice
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandlePerColorTypeTimeSliceContainerDidFinishTimeSlice(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::TimeSliceContainer_1<::GlobalNamespace::NoteData*>* timeSliceContainer, float nextTimeSliceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::HandlePerColorTypeTimeSliceContainerDidFinishTimeSlice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePerColorTypeTimeSliceContainerDidFinishTimeSlice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSliceContainer), ::il2cpp_utils::ExtractType(nextTimeSliceTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, timeSliceContainer, nextTimeSliceTime);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.SliderHeadPositionOverlapsWithNote
bool GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderHeadPositionOverlapsWithNote(::GlobalNamespace::SliderData* slider, ::GlobalNamespace::NoteData* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderHeadPositionOverlapsWithNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapObjectsInTimeRowProcessor", "SliderHeadPositionOverlapsWithNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slider, note);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor.SliderTailPositionOverlapsWithNote
bool GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailPositionOverlapsWithNote(::GlobalNamespace::SliderData* slider, ::GlobalNamespace::NoteData* note) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailPositionOverlapsWithNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapObjectsInTimeRowProcessor", "SliderTailPositionOverlapsWithNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(note)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, slider, note);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInTimeRowProcessor/SliderTailData
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_SliderTailData.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly SliderData slider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderData*& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailData::dyn_slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailData::dyn_slider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor/SliderTailData.GetCopy
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailData::GetCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::SliderTailData::GetCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInTimeRowProcessor/<>c__DisplayClass17_0
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_--c__DisplayClass17_0.hpp"
// Including type: SliderData
#include "GlobalNamespace/SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single currentTimeSliceTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c__DisplayClass17_0::dyn_currentTimeSliceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c__DisplayClass17_0::dyn_currentTimeSliceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTimeSliceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor/<>c__DisplayClass17_0.<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__1
bool GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c__DisplayClass17_0::$HandleCurrentTimeSliceColorNotesDidFinishTimeSlice$b__1(::GlobalNamespace::SliderData* tail) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c__DisplayClass17_0::<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tail)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tail);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInTimeRowProcessor/<>c
#include "GlobalNamespace/BeatmapObjectsInTimeRowProcessor_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapObjectsInTimeRowProcessor/<>c <>9
::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c* GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c*>("", "BeatmapObjectsInTimeRowProcessor/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapObjectsInTimeRowProcessor/<>c <>9
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_set_$$9(::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapObjectsInTimeRowProcessor/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapDataItem,System.Boolean> <>9__17_0
::System::Func_2<::GlobalNamespace::BeatmapDataItem*, bool>* GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::BeatmapDataItem*, bool>*>("", "BeatmapObjectsInTimeRowProcessor/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapDataItem,System.Boolean> <>9__17_0
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_set_$$9__17_0(::System::Func_2<::GlobalNamespace::BeatmapDataItem*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapObjectsInTimeRowProcessor/<>c", "<>9__17_0", value)));
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor/<>c..cctor
void GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapObjectsInTimeRowProcessor/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapObjectsInTimeRowProcessor/<>c.<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__17_0
bool GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::$HandleCurrentTimeSliceColorNotesDidFinishTimeSlice$b__17_0(::GlobalNamespace::BeatmapDataItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInTimeRowProcessor::$$c::<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleCurrentTimeSliceColorNotesDidFinishTimeSlice>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataHelpers
#include "GlobalNamespace/BeatmapSaveDataHelpers.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B81EC
// Autogenerated static field getter
// Get static field: static private readonly System.Version version2_6_0
::System::Version* GlobalNamespace::BeatmapSaveDataHelpers::_get_version2_6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_get_version2_6_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("", "BeatmapSaveDataHelpers", "version2_6_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Version version2_6_0
void GlobalNamespace::BeatmapSaveDataHelpers::_set_version2_6_0(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_set_version2_6_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapSaveDataHelpers", "version2_6_0", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLegacyVersionSearchString
::StringW GlobalNamespace::BeatmapSaveDataHelpers::_get_kLegacyVersionSearchString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_get_kLegacyVersionSearchString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapSaveDataHelpers", "kLegacyVersionSearchString"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLegacyVersionSearchString
void GlobalNamespace::BeatmapSaveDataHelpers::_set_kLegacyVersionSearchString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_set_kLegacyVersionSearchString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapSaveDataHelpers", "kLegacyVersionSearchString", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kVersionSearchString
::StringW GlobalNamespace::BeatmapSaveDataHelpers::_get_kVersionSearchString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_get_kVersionSearchString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BeatmapSaveDataHelpers", "kVersionSearchString"));
}
// Autogenerated static field setter
// Set static field: static private System.String kVersionSearchString
void GlobalNamespace::BeatmapSaveDataHelpers::_set_kVersionSearchString(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::_set_kVersionSearchString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapSaveDataHelpers", "kVersionSearchString", value));
}
// Autogenerated method: BeatmapSaveDataHelpers..cctor
void GlobalNamespace::BeatmapSaveDataHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapSaveDataHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapSaveDataHelpers.GetVersion
::System::Version* GlobalNamespace::BeatmapSaveDataHelpers::GetVersion(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSaveDataHelpers::GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapSaveDataHelpers", "GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Version*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BitMaskUtil
#include "GlobalNamespace/BitMaskUtil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BitMaskUtil.NumberOfSetBits
uint GlobalNamespace::BitMaskUtil::NumberOfSetBits(uint64_t i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitMaskUtil::NumberOfSetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitMaskUtil", "NumberOfSetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BitMaskUtil.NumberOfSetBits
uint GlobalNamespace::BitMaskUtil::NumberOfSetBits(uint i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitMaskUtil::NumberOfSetBits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitMaskUtil", "NumberOfSetBits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: BitMaskUtil.ShiftLeft
uint64_t GlobalNamespace::BitMaskUtil::ShiftLeft(ByRef<uint64_t> value, ByRef<int> shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitMaskUtil::ShiftLeft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitMaskUtil", "ShiftLeft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(shift)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value), byref(shift));
}
// Autogenerated method: BitMaskUtil.ShiftRight
uint64_t GlobalNamespace::BitMaskUtil::ShiftRight(ByRef<uint64_t> value, ByRef<int> shift) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BitMaskUtil::ShiftRight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BitMaskUtil", "ShiftRight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(shift)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(value), byref(shift));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StaticBeatmapObjectSpawnMovementData
#include "GlobalNamespace/StaticBeatmapObjectSpawnMovementData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kNoteLinesDistance
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kNoteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kNoteLinesDistance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StaticBeatmapObjectSpawnMovementData", "kNoteLinesDistance"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kNoteLinesDistance
void GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kNoteLinesDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kNoteLinesDistance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StaticBeatmapObjectSpawnMovementData", "kNoteLinesDistance", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kBaseLinesYPos
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kBaseLinesYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kBaseLinesYPos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StaticBeatmapObjectSpawnMovementData", "kBaseLinesYPos"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kBaseLinesYPos
void GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kBaseLinesYPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kBaseLinesYPos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StaticBeatmapObjectSpawnMovementData", "kBaseLinesYPos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kUpperLinesYPos
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kUpperLinesYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kUpperLinesYPos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StaticBeatmapObjectSpawnMovementData", "kUpperLinesYPos"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kUpperLinesYPos
void GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kUpperLinesYPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kUpperLinesYPos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StaticBeatmapObjectSpawnMovementData", "kUpperLinesYPos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kTopLinesYPos
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kTopLinesYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kTopLinesYPos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StaticBeatmapObjectSpawnMovementData", "kTopLinesYPos"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kTopLinesYPos
void GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kTopLinesYPos(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kTopLinesYPos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StaticBeatmapObjectSpawnMovementData", "kTopLinesYPos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kObstacleVerticalOffset
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kObstacleVerticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_get_kObstacleVerticalOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "StaticBeatmapObjectSpawnMovementData", "kObstacleVerticalOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kObstacleVerticalOffset
void GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kObstacleVerticalOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::_set_kObstacleVerticalOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StaticBeatmapObjectSpawnMovementData", "kObstacleVerticalOffset", value));
}
// Autogenerated method: StaticBeatmapObjectSpawnMovementData.get_layerHeight
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::get_layerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::get_layerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StaticBeatmapObjectSpawnMovementData", "get_layerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: StaticBeatmapObjectSpawnMovementData.Get2DNoteOffset
::UnityEngine::Vector2 GlobalNamespace::StaticBeatmapObjectSpawnMovementData::Get2DNoteOffset(int noteLineIndex, int noteLinesCount, ::GlobalNamespace::NoteLineLayer noteLineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::Get2DNoteOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StaticBeatmapObjectSpawnMovementData", "Get2DNoteOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteLinesCount), ::il2cpp_utils::ExtractType(noteLineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteLineIndex, noteLinesCount, noteLineLayer);
}
// Autogenerated method: StaticBeatmapObjectSpawnMovementData.LineYPosForLineLayer
float GlobalNamespace::StaticBeatmapObjectSpawnMovementData::LineYPosForLineLayer(::GlobalNamespace::NoteLineLayer lineLayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticBeatmapObjectSpawnMovementData::LineYPosForLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "StaticBeatmapObjectSpawnMovementData", "LineYPosForLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineLayer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lineLayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData
#include "BeatmapSaveDataVersion3/BeatmapSaveData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BeatmapSaveDataItem
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BeatmapSaveDataItem.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorBoostEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ExecutionTime.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_RotationEventData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EnvironmentColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_TransitionType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis
#include "BeatmapSaveDataVersion3/BeatmapSaveData_Axis.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EaseType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBoxGroup.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup`1
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBoxGroup_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBoxGroup.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBoxGroup.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_NoteColorType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorNoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BombNoteData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_WaypointData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderType.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BaseSliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BurstSliderData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ObstacleData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_NoteType.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveDataItem.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ColorType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ObstacleType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW BeatmapSaveDataVersion3::BeatmapSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeatmapSaveDataVersion3", "BeatmapSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void BeatmapSaveDataVersion3::BeatmapSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData", "kCurrentVersion", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B81FC
// Autogenerated static field getter
// Get static field: static private readonly System.Version version2_6_0
::System::Version* BeatmapSaveDataVersion3::BeatmapSaveData::_get_version2_6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_get_version2_6_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Version*>("BeatmapSaveDataVersion3", "BeatmapSaveData", "version2_6_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Version version2_6_0
void BeatmapSaveDataVersion3::BeatmapSaveData::_set_version2_6_0(::System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_set_version2_6_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData", "version2_6_0", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B820C
// Autogenerated static field getter
// Get static field: static private readonly System.Single[] _spawnRotations
::ArrayW<float> BeatmapSaveDataVersion3::BeatmapSaveData::_get__spawnRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_get__spawnRotations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<float>>("BeatmapSaveDataVersion3", "BeatmapSaveData", "_spawnRotations"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[] _spawnRotations
void BeatmapSaveDataVersion3::BeatmapSaveData::_set__spawnRotations(::ArrayW<float> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::_set__spawnRotations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData", "_spawnRotations", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String version
[[deprecated("Use field access instead!")]] ::StringW& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData> bpmEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_bpmEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_bpmEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bpmEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData> rotationEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_rotationEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_rotationEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData> colorNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_colorNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_colorNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData> bombNotes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_bombNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_bombNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bombNotes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData> obstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_obstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData> sliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_sliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_sliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData> burstSliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_burstSliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_burstSliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "burstSliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData> waypoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_waypoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waypoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData> basicBeatmapEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_basicBeatmapEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_basicBeatmapEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "basicBeatmapEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData> colorBoostBeatmapEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_colorBoostBeatmapEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_colorBoostBeatmapEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorBoostBeatmapEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBoxGroup> lightColorEventBoxGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_lightColorEventBoxGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_lightColorEventBoxGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightColorEventBoxGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBoxGroup> lightRotationEventBoxGroups
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup*>*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_lightRotationEventBoxGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_lightRotationEventBoxGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightRotationEventBoxGroups"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords basicEventTypesWithKeywords
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords*& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_basicEventTypesWithKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_basicEventTypesWithKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "basicEventTypesWithKeywords"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useNormalEventsAsCompatibleEvents
[[deprecated("Use field access instead!")]] bool& BeatmapSaveDataVersion3::BeatmapSaveData::dyn_useNormalEventsAsCompatibleEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::dyn_useNormalEventsAsCompatibleEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useNormalEventsAsCompatibleEvents"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData..cctor
void BeatmapSaveDataVersion3::BeatmapSaveData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.SerializeToJSONString
::StringW BeatmapSaveDataVersion3::BeatmapSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.DeserializeFromJSONString
::BeatmapSaveDataVersion3::BeatmapSaveData* BeatmapSaveDataVersion3::BeatmapSaveData::DeserializeFromJSONString(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringData);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.ConvertBeatmapSaveData
::BeatmapSaveDataVersion3::BeatmapSaveData* BeatmapSaveDataVersion3::BeatmapSaveData::ConvertBeatmapSaveData(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData* beatmapSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ConvertBeatmapSaveData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "ConvertBeatmapSaveData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.GetNoteColorType
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::GetNoteColorType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType noteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::GetNoteColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "GetNoteColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteType);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.GetNoteColorType
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::GetNoteColorType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::GetNoteColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "GetNoteColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.GetHeightForObstacleType
int BeatmapSaveDataVersion3::BeatmapSaveData::GetHeightForObstacleType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType obstacleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::GetHeightForObstacleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "GetHeightForObstacleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obstacleType);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.GetLayerForObstacleType
int BeatmapSaveDataVersion3::BeatmapSaveData::GetLayerForObstacleType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType obstacleType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::GetLayerForObstacleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "GetLayerForObstacleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obstacleType);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.GetSliderType
::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType BeatmapSaveDataVersion3::BeatmapSaveData::GetSliderType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType sliderType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::GetSliderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "GetSliderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sliderType)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sliderType);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.SpawnRotationForEventValue
float BeatmapSaveDataVersion3::BeatmapSaveData::SpawnRotationForEventValue(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SpawnRotationForEventValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "SpawnRotationForEventValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData.BeatmapSaveDataAreSorted
bool BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataAreSorted(::System::Collections::Generic::IReadOnlyList_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem*>* beatmapSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataAreSorted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData", "BeatmapSaveDataAreSorted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BeatmapSaveDataItem
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BeatmapSaveDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single b
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BeatmapSaveDataItem.get_beat
float BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::get_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::get_beat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BeatmapSaveDataItem.CompareTo
int BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::CompareTo(::BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BeatmapSaveDataItem::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType et
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_et() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_et");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "et"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 i
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single f
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::dyn_f");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "f"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData.get_eventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_eventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData.get_value
int BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventData.get_floatValue
float BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventData::get_floatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorBoostEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean o
[[deprecated("Use field access instead!")]] bool& BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorBoostEventData.get_boost
bool BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData::get_boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorBoostEventData::get_boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BpmChangeEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single m
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData::dyn_m() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData::dyn_m");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BpmChangeEventData.get_bpm
float BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData::get_bpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BpmChangeEventData::get_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ExecutionTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime Early
::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_get_Early() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_get_Early");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime>("BeatmapSaveDataVersion3", "BeatmapSaveData/ExecutionTime", "Early"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime Early
void BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_set_Early(::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_set_Early");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/ExecutionTime", "Early", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime Late
::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_get_Late() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_get_Late");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime>("BeatmapSaveDataVersion3", "BeatmapSaveData/ExecutionTime", "Late"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime Late
void BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_set_Late(::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::_set_Late");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/ExecutionTime", "Late", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_RotationEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ExecutionTime e
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime& BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single r
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData.get_executionTime
::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::get_executionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::get_executionTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::ExecutionTime, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.RotationEventData.get_rotation
float BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::RotationEventData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords/BeatmapSaveDataVersion3.BasicEventTypesForKeyword
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords_BasicEventTypesForKeyword.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords/BeatmapSaveDataVersion3.BasicEventTypesForKeyword> d
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword*>*& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords.get_data
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword*>* BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords/BeatmapSaveDataVersion3.BasicEventTypesForKeyword
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BasicEventTypesWithKeywords_BasicEventTypesForKeyword.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String k
[[deprecated("Use field access instead!")]] ::StringW& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::dyn_k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::dyn_k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType> e
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*& BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords/BeatmapSaveDataVersion3.BasicEventTypesForKeyword.get_keyword
::StringW BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::get_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::get_keyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BasicEventTypesWithKeywords/BeatmapSaveDataVersion3.BasicEventTypesForKeyword.get_eventTypes
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>* BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::get_eventTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BasicEventTypesWithKeywords::BasicEventTypesForKeyword::get_eventTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBox.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter f
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter*& BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_f");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "f"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single w
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType d
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType& BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox.get_indexFilter
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_indexFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_indexFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_indexFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox.get_beatDistributionParam
float BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_beatDistributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_beatDistributionParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatDistributionParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox.get_beatDistributionParamType
::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_beatDistributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::get_beatDistributionParamType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatDistributionParamType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType Wave
::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_get_Wave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_get_Wave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EventBox/DistributionParamType", "Wave"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType Wave
void BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_set_Wave(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_set_Wave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EventBox/DistributionParamType", "Wave", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType Step
::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_get_Step() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_get_Step");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EventBox/DistributionParamType", "Step"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType Step
void BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_set_Step(::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::_set_Step");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EventBox/DistributionParamType", "Step", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType f
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType& BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_f");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "f"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 p
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 t
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 r
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.get_type
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.get_param0
int BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_param0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_param0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_param0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.get_param1
int BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_param1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_param1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_param1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.get_reversed
bool BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_reversed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::get_reversed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reversed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.CreateDivisionIndexFilter
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateDivisionIndexFilter(int numberOfSections, int divisionIdx, bool reversed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateDivisionIndexFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter", "CreateDivisionIndexFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfSections), ::il2cpp_utils::ExtractType(divisionIdx), ::il2cpp_utils::ExtractType(reversed)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, numberOfSections, divisionIdx, reversed);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.CreateStepFilter
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateStepFilter(int offset, int step, bool reversed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateStepFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter", "CreateStepFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(step), ::il2cpp_utils::ExtractType(reversed)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset, step, reversed);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter.CreateForExtension
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter* BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateForExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::CreateForExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter", "CreateForExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType Division
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_get_Division() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_get_Division");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType>("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter/IndexFilterType", "Division"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType Division
void BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_set_Division(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_set_Division");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter/IndexFilterType", "Division", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType StepAndOffset
::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_get_StepAndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_get_StepAndOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType>("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter/IndexFilterType", "StepAndOffset"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter/BeatmapSaveDataVersion3.IndexFilterType StepAndOffset
void BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_set_StepAndOffset(::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::_set_StepAndOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/IndexFilter/IndexFilterType", "StepAndOffset", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::IndexFilter::IndexFilterType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType Color0
::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_Color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_Color0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "Color0"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType Color0
void BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_Color0(::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_Color0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "Color0", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType Color1
::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_Color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_Color1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "Color1"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType Color1
void BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_Color1(::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_Color1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "Color1", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType ColorWhite
::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_ColorWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_get_ColorWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "ColorWhite"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType ColorWhite
void BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_ColorWhite(::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::_set_ColorWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EnvironmentColorType", "ColorWhite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_TransitionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Instant
::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Instant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Instant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType>("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Instant"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Instant
void BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Instant(::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Instant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Instant", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Interpolate
::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Interpolate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Interpolate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType>("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Interpolate"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Interpolate
void BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Interpolate(::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Interpolate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Interpolate", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Extend
::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Extend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_get_Extend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType>("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Extend"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType Extend
void BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Extend(::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::_set_Extend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/TransitionType", "Extend", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBox.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single r
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType t
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 b
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData> e
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox.get_brightnessDistributionParam
float BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightnessDistributionParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox.get_brightnessDistributionParamType
::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionParamType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightnessDistributionParamType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox.get_brightnessDistributionShouldAffectFirstBaseEvent
bool BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionShouldAffectFirstBaseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_brightnessDistributionShouldAffectFirstBaseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightnessDistributionShouldAffectFirstBaseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox.get_lightColorBaseDataList
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData*>* BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_lightColorBaseDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBox::get_lightColorBaseDataList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColorBaseDataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single b
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.TransitionType i
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EnvironmentColorType c
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 f
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_f() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::dyn_f");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "f"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData.get_beat
float BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_beat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData.get_transitionType
::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_transitionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_transitionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transitionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::TransitionType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData.get_colorType
::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::EnvironmentColorType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData.get_brightness
float BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorBaseData.get_strobeBeatFrequency
int BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_strobeBeatFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorBaseData::get_strobeBeatFrequency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_strobeBeatFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis
#include "BeatmapSaveDataVersion3/BeatmapSaveData_Axis.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis X
::BeatmapSaveDataVersion3::BeatmapSaveData::Axis BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::Axis>("BeatmapSaveDataVersion3", "BeatmapSaveData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis X
void BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_set_X(::BeatmapSaveDataVersion3::BeatmapSaveData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis Y
::BeatmapSaveDataVersion3::BeatmapSaveData::Axis BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::Axis>("BeatmapSaveDataVersion3", "BeatmapSaveData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis Y
void BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_set_Y(::BeatmapSaveDataVersion3::BeatmapSaveData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/Axis", "Y", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EaseType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType None
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType None
void BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_None(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType Linear
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType Linear
void BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_Linear(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType InQuad
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_InQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_InQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "InQuad"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType InQuad
void BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_InQuad(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_InQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "InQuad", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType OutQuad
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_OutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_OutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "OutQuad"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType OutQuad
void BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_OutQuad(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_OutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "OutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType InOutQuad
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_InOutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_get_InOutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType>("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "InOutQuad"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType InOutQuad
void BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_InOutQuad(::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::_set_InOutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/EaseType", "InOutQuad", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBox.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.IndexFilter
#include "BeatmapSaveDataVersion3/BeatmapSaveData_IndexFilter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox/BeatmapSaveDataVersion3.DistributionParamType t
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.Axis a
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::Axis& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 r
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 b
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData> l
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData*>*& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::dyn_l");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_rotationDistributionParam
float BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationDistributionParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_rotationDistributionParamType
::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionParamType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationDistributionParamType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox::DistributionParamType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_axis
::BeatmapSaveDataVersion3::BeatmapSaveData::Axis BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_axis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_axis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_flipRotation
bool BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_flipRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_flipRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flipRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_rotationDistributionShouldAffectFirstBaseEvent
bool BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionShouldAffectFirstBaseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_rotationDistributionShouldAffectFirstBaseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationDistributionShouldAffectFirstBaseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox.get_lightRotationBaseDataList
::System::Collections::Generic::IReadOnlyList_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData*>* BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_lightRotationBaseDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBox::get_lightRotationBaseDataList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightRotationBaseDataList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single b
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 p
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EaseType e
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_l");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single r
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection o
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_o() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::dyn_o");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "o"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_beat
float BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_beat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_beat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_usePreviousEventRotationValue
bool BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_usePreviousEventRotationValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_usePreviousEventRotationValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_usePreviousEventRotationValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_easeType
::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_loopsCount
int BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_loopsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_loopsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loopsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_rotation
float BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData.get_rotationDirection
::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_rotationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::get_rotationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationBaseData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Automatic
::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection>("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Automatic
void BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Automatic(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Automatic", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Clockwise
::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Clockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Clockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection>("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Clockwise"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Clockwise
void BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Clockwise(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Clockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Clockwise", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Counterclockwise
::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Counterclockwise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_get_Counterclockwise");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection>("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Counterclockwise"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationBaseData/BeatmapSaveDataVersion3.RotationDirection Counterclockwise
void BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Counterclockwise(::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::_set_Counterclockwise");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/LightRotationBaseData/RotationDirection", "Counterclockwise", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationBaseData::RotationDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBoxGroup.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_EventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 g
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup.get_groupId
int BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::get_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::get_groupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_groupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.EventBoxGroup.get_baseEventBoxes
::System::Collections::Generic::IReadOnlyList_1<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox*>* BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::get_baseEventBoxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::EventBoxGroup::get_baseEventBoxes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_baseEventBoxes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::BeatmapSaveDataVersion3::BeatmapSaveData::EventBox*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBoxGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightColorEventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightColorEventBoxGroup.CopyWith
::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup* BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup::CopyWith(::System::Nullable_1<float> newBeat, ::System::Nullable_1<int> newGroupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup::CopyWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBeat), ::il2cpp_utils::ExtractType(newGroupId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::LightColorEventBoxGroup*, false>(this, ___internal__method, newBeat, newGroupId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBoxGroup
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBoxGroup.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBox
#include "BeatmapSaveDataVersion3/BeatmapSaveData_LightRotationEventBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.LightRotationEventBoxGroup.CopyWith
::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup* BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup::CopyWith(::System::Nullable_1<float> newBeat, ::System::Nullable_1<int> newGroupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup::CopyWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBeat), ::il2cpp_utils::ExtractType(newGroupId)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::LightRotationEventBoxGroup*, false>(this, ___internal__method, newBeat, newGroupId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_NoteColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType ColorA
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_get_ColorA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_get_ColorA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType>("BeatmapSaveDataVersion3", "BeatmapSaveData/NoteColorType", "ColorA"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType ColorA
void BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_set_ColorA(::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_set_ColorA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/NoteColorType", "ColorA", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType ColorB
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_get_ColorB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_get_ColorB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType>("BeatmapSaveDataVersion3", "BeatmapSaveData/NoteColorType", "ColorB"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType ColorB
void BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_set_ColorB(::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::_set_ColorB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/NoteColorType", "ColorB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ColorNoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 y
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 a
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_a");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType c
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType& BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection d
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData.get_line
int BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData.get_layer
int BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData.get_angleOffset
int BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_angleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_angleOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_angleOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData.get_color
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ColorNoteData.get_cutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ColorNoteData::get_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BombNoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 y
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData.get_line
int BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::get_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::get_line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BombNoteData.get_layer
int BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BombNoteData::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_WaypointData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 y
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OffsetDirection d
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OffsetDirection& BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OffsetDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData.get_line
int BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData.get_layer
int BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.WaypointData.get_offsetDirection
::GlobalNamespace::OffsetDirection BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_offsetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::WaypointData::get_offsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OffsetDirection, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType Normal
::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType>("BeatmapSaveDataVersion3", "BeatmapSaveData/SliderType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType Normal
void BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_set_Normal(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/SliderType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType Burst
::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_get_Burst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_get_Burst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType>("BeatmapSaveDataVersion3", "BeatmapSaveData/SliderType", "Burst"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderType Burst
void BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_set_Burst(::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::_set_Burst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion3", "BeatmapSaveData/SliderType", "Burst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BaseSliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.NoteColorType c
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_c");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "c"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 x
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 y
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected NoteCutDirection d
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Single tb
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tb"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 tx
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_tx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_tx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Int32 ty
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_ty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::dyn_ty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ty"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_colorType
::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion3::BeatmapSaveData::NoteColorType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_headLine
int BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_headLayer
int BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_headCutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_headCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_tailBeat
float BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_tailLine
int BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BaseSliderData.get_tailLayer
int BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BaseSliderData::get_tailLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single mu
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_mu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_mu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mu"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single tmu
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_tmu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_tmu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tmu"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection tc
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_tc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_tc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tc"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderMidAnchorMode m
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderMidAnchorMode& BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_m() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::dyn_m");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderMidAnchorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData.get_headControlPointLengthMultiplier
float BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData.get_tailControlPointLengthMultiplier
float BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData.get_tailCutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_tailCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_tailCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.SliderData.get_sliderMidAnchorMode
::GlobalNamespace::SliderMidAnchorMode BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_sliderMidAnchorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::SliderData::get_sliderMidAnchorMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliderMidAnchorMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderMidAnchorMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_BurstSliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 sc
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::dyn_sc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::dyn_sc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sc"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData.get_sliceCount
int BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::get_sliceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::get_sliceCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliceCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.BurstSliderData.get_squishAmount
float BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::get_squishAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::BurstSliderData::get_squishAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_squishAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData
#include "BeatmapSaveDataVersion3/BeatmapSaveData_ObstacleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 x
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 y
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single d
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 w
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 h
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData.get_line
int BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_line");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_line", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData.get_layer
int BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData.get_duration
float BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData.get_width
int BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion3.BeatmapSaveData/BeatmapSaveDataVersion3.ObstacleData.get_height
int BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion3::BeatmapSaveData::ObstacleData::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_EventData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_BeatmapObjectType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_NoteType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ColorType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SliderType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_NoteData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_WaypointData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SliderData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ObstacleData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ObstacleType.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventKeywordFiltersData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SpecialEventKeywordFiltersData.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SpecialEventsForKeyword.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kCurrentVersion", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kColorBoostEventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kColorBoostEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kColorBoostEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kColorBoostEventType"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kColorBoostEventType
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kColorBoostEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kColorBoostEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kColorBoostEventType", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kLegacyBPMEventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kLegacyBPMEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kLegacyBPMEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kLegacyBPMEventType"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kLegacyBPMEventType
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kLegacyBPMEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kLegacyBPMEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kLegacyBPMEventType", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kBPMEventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kBPMEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kBPMEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kBPMEventType"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kBPMEventType
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kBPMEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kBPMEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kBPMEventType", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kEarlyRotationEventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kEarlyRotationEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kEarlyRotationEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kEarlyRotationEventType"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kEarlyRotationEventType
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kEarlyRotationEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kEarlyRotationEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kEarlyRotationEventType", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kLateRotationEventType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kLateRotationEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_get_kLateRotationEventType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kLateRotationEventType"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType kLateRotationEventType
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kLateRotationEventType(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::_set_kLateRotationEventType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "kLateRotationEventType", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
[[deprecated("Use field access instead!")]] ::StringW& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData> _events
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__events");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_events"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData> _notes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__notes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__notes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData> _sliders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__sliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__sliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData> _waypoints
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__waypoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waypoints"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData> _obstacles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__obstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventKeywordFiltersData _specialEventsKeywordFilters
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__specialEventsKeywordFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::dyn__specialEventsKeywordFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialEventsKeywordFilters"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_version
::StringW BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_events
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_events");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_notes
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_notes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_notes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_notes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_sliders
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_sliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_sliders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_waypoints
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_waypoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_waypoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waypoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_obstacles
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_obstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData*>*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.get_specialEventsKeywordFilters
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_specialEventsKeywordFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::get_specialEventsKeywordFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialEventsKeywordFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.SerializeToJSONString
::StringW BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SerializeToJSONString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SerializeToJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.DeserializeFromJSONString
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::DeserializeFromJSONString(::StringW stringData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::DeserializeFromJSONString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "DeserializeFromJSONString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringData)})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringData);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.ConvertBeatmapSaveDataPreV2_5_0
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ConvertBeatmapSaveDataPreV2_5_0(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData* beatmapSaveData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ConvertBeatmapSaveDataPreV2_5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "ConvertBeatmapSaveDataPreV2_5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapSaveData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapSaveData);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData.GetSpecialEventTypes
::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::GetSpecialEventTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::GetSpecialEventTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData", "GetSpecialEventTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event0
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event0"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event0
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event0(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event0", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event1
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event1"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event1
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event1(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event1", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event2
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event2"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event2
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event2(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event2", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event3
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event3"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event3
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event3(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event3", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event4
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event4"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event4
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event4(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event4", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event5
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event5"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event5
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event5(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event5", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event6
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event6"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event6
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event6(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event6", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event7
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event7"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event7
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event7(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event7", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event8
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event8"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event8
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event8(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event8", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event9
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event9"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event9
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event9(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event9", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event10
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event10"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event10
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event10(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event10", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event11
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event11"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event11
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event11(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event11", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event12
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event12"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event12
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event12(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event12", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event13
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event13"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event13
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event13(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event13", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event14
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event14() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event14");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event14"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event14
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event14(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event14");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event14", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event15
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event15() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event15"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event15
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event15(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event15", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event16
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event16"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event16
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event16(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event16", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event17
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event17() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Event17");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event17"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Event17
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event17(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Event17");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Event17", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType VoidEvent
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_VoidEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_VoidEvent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "VoidEvent"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType VoidEvent
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_VoidEvent(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_VoidEvent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "VoidEvent", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special0
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special0"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special0
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special0(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special0", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special1
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special1"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special1
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special1(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special1", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special2
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special2"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special2
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special2(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special2", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special3
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_Special3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special3"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType Special3
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special3(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_Special3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "Special3", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType BpmChange
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_BpmChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_get_BpmChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "BpmChange"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType BpmChange
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_BpmChange(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::_set_BpmChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapEventType", "BpmChange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType _type
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _floatValue
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::dyn__floatValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData.get_type
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData.get_value
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData.get_floatValue
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_floatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.EventData.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::EventData::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_BeatmapObjectType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Note
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Note() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Note");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Note"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Note
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Note(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Note");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Note", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Obstacle
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Obstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Obstacle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Obstacle"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Obstacle
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Obstacle(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Obstacle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Obstacle", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Slider
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Slider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_get_Slider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Slider"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapObjectType Slider
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Slider(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::_set_Slider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/BeatmapObjectType", "Slider", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapObjectType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_NoteType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteA
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_NoteA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_NoteA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "NoteA"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteA
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_NoteA(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_NoteA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "NoteA", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteB
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_NoteB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_NoteB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "NoteB"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType NoteB
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_NoteB(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_NoteB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "NoteB", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType GhostNote
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_GhostNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_GhostNote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "GhostNote"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType GhostNote
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_GhostNote(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_GhostNote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "GhostNote", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType Bomb
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_Bomb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_Bomb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "Bomb"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType Bomb
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_Bomb(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_Bomb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "Bomb", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType None
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType None
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_None(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/NoteType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
