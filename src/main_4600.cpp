// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController
#include "GlobalNamespace/SettingsNavigationController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _applyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__applyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__applyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SettingsNavigationController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SettingsNavigationController/FinishAction> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>*& GlobalNamespace::SettingsNavigationController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SettingsNavigationController.add_didFinishEvent
void GlobalNamespace::SettingsNavigationController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.remove_didFinishEvent
void GlobalNamespace::SettingsNavigationController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.HandleFinishButton
void GlobalNamespace::SettingsNavigationController::HandleFinishButton(::GlobalNamespace::SettingsNavigationController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::HandleFinishButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFinishButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_0
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_1
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_2
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.DidActivate
void GlobalNamespace::SettingsNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController/FinishAction
#include "GlobalNamespace/SettingsNavigationController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Ok
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Ok
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Cancel
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Cancel
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Apply
::GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Apply
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply(::GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Apply", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SettingsNavigationController::FinishAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsNavigationController::FinishAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::SimpleDialogPromptViewController::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _messageText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::SimpleDialogPromptViewController::dyn__messageText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__messageText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button[] _buttons
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Button*>& GlobalNamespace::SimpleDialogPromptViewController::dyn__buttons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__buttons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttons"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Button*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI[] _buttonTexts
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshProUGUI*>& GlobalNamespace::SimpleDialogPromptViewController::dyn__buttonTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__buttonTexts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonTexts"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshProUGUI*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> _didFinishAction
[[deprecated("Use field access instead!")]] ::System::Action_1<int>*& GlobalNamespace::SimpleDialogPromptViewController::dyn__didFinishAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::dyn__didFinishAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishAction"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW buttonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(buttonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, buttonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW firstButtonText, ::StringW secondButtonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::StringW title, ::StringW message, ::StringW firstButtonText, ::StringW secondButtonText, ::StringW thirdButtonText, ::System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(thirdButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, thirdButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.DidActivate
void GlobalNamespace::SimpleDialogPromptViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SimpleDialogPromptViewController.DidDeactivate
void GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 buttonNum
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_buttonNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_buttonNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SimpleDialogPromptViewController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleDialogPromptViewController/<>c__DisplayClass5_0.<DidActivate>b__0
void GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::$DidActivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _freePlayModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__freePlayModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__freePlayModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_freePlayModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _oneSaberModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__oneSaberModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__oneSaberModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oneSaberModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _noArrowsModeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__noArrowsModeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__noArrowsModeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noArrowsModeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _dismissButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::SoloModeSelectionViewController::dyn__dismissButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn__dismissButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SoloModeSelectionViewController,SoloModeSelectionViewController/MenuType> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>*& GlobalNamespace::SoloModeSelectionViewController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoloModeSelectionViewController.add_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent(::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.remove_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::SoloModeSelectionViewController*, ::GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.HandleMenuButton
void GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton(::GlobalNamespace::SoloModeSelectionViewController::MenuType subMenuType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subMenuType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, subMenuType);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_0
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_1
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_2
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_3
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.DidActivate
void GlobalNamespace::SoloModeSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController/MenuType
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "FreePlayMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "FreePlayMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "OneSaberMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "OneSaberMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType Back
::GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "Back"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType Back
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back(::GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "Back", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SoloModeSelectionViewController::MenuType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloModeSelectionViewController::MenuType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.UI.ContentSizeFitter
#include "UnityEngine/UI/ContentSizeFitter.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TextSegmentedControl _segmentedControll
[[deprecated("Use field access instead!")]] ::HMUI::TextSegmentedControl*& GlobalNamespace::TabBarViewController::dyn__segmentedControll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__segmentedControll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentedControll"))->offset;
  return *reinterpret_cast<::HMUI::TextSegmentedControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.ContentSizeFitter _contentSizeFilter
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::ContentSizeFitter*& GlobalNamespace::TabBarViewController::dyn__contentSizeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__contentSizeFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentSizeFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::ContentSizeFitter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _labels
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::TabBarViewController::dyn__labels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__labels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labels"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController/TabBarItem[] _items
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*>& GlobalNamespace::TabBarViewController::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldReloadData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TabBarViewController::dyn__shouldReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::dyn__shouldReloadData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldReloadData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TabBarViewController.get_sizeToFit
bool GlobalNamespace::TabBarViewController::get_sizeToFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::get_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.set_sizeToFit
void GlobalNamespace::TabBarViewController::set_sizeToFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::set_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TabBarViewController.get_selectedCellNumber
int GlobalNamespace::TabBarViewController::get_selectedCellNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::get_selectedCellNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedCellNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.Setup
void GlobalNamespace::TabBarViewController::Setup(::ArrayW<::GlobalNamespace::TabBarViewController::TabBarItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: TabBarViewController.SelectItem
void GlobalNamespace::TabBarViewController::SelectItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::SelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: TabBarViewController.Clear
void GlobalNamespace::TabBarViewController::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.HandleDidSelectCell
void GlobalNamespace::TabBarViewController::HandleDidSelectCell(::HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::HandleDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: TabBarViewController.DidActivate
void GlobalNamespace::TabBarViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: TabBarViewController.OnDestroy
void GlobalNamespace::TabBarViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String title
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TabBarViewController::TabBarItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::TabBarItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Action action
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::TabBarViewController::TabBarItem::dyn_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TabBarViewController::TabBarItem::dyn_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionsGridView
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridView.hpp"
// Including type: GridView
#include "GlobalNamespace/GridView.hpp"
// Including type: PageControl
#include "GlobalNamespace/PageControl.hpp"
// Including type: AnnotatedBeatmapLevelCollectionsGridViewAnimator
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridViewAnimator.hpp"
// Including type: AnnotatedBeatmapLevelCollectionCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: BeatmapLevelsPromoDataSO
#include "GlobalNamespace/BeatmapLevelsPromoDataSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: HMUI.SelectableCell/HMUI.TransitionType
#include "HMUI/SelectableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GridView _gridView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__gridView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__gridView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PageControl _pageControl
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PageControl*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__pageControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__pageControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pageControl"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PageControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnnotatedBeatmapLevelCollectionsGridViewAnimator _animator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AnnotatedBeatmapLevelCollectionCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsPromoDataSO _beatmapLevelsPromoData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsPromoDataSO*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__beatmapLevelsPromoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__beatmapLevelsPromoData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsPromoData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsPromoDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didOpenAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didOpenAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didOpenAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didOpenAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didCloseAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didCloseAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didCloseAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didCloseAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IAnnotatedBeatmapLevelCollection> didSelectAnnotatedBeatmapLevelCollectionEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didSelectAnnotatedBeatmapLevelCollectionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn_didSelectAnnotatedBeatmapLevelCollectionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectAnnotatedBeatmapLevelCollectionEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isHovering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isHovering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__isHovering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isHovering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<IAnnotatedBeatmapLevelCollection> _annotatedBeatmapLevelCollections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__annotatedBeatmapLevelCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__annotatedBeatmapLevelCollections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotatedBeatmapLevelCollections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedCellIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__selectedCellIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::dyn__selectedCellIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedCellIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didOpenAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didOpenAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didOpenAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didOpenAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didOpenAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didOpenAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didOpenAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didOpenAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didCloseAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didCloseAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didCloseAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didCloseAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didCloseAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didCloseAnnotatedBeatmapLevelCollectionEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didCloseAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didCloseAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.add_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didSelectAnnotatedBeatmapLevelCollectionEvent(::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::add_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.remove_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent(::System::Action_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* annotatedBeatmapLevelCollections) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollections)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollections);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnEnable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnDisable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.Show
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.Hide
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.RefreshAvailability
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::RefreshAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::RefreshAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.SelectAndScrollToCellWithIdx
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SelectAndScrollToCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::SelectAndScrollToCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollToCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnPointerEnter
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.OnPointerExit
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleVRPlatformHelperInputFocusCaptured
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleVRPlatformHelperInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleVRPlatformHelperInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleVRPlatformHelperInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.HandleCellSelectionDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleCellSelectionDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transition, ::Il2CppObject* changeOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::HandleCellSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transition), ::il2cpp_utils::ExtractType(changeOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transition, changeOwner);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetNumberOfCells
int GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetNumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetNumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetCellWidth
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.GetCellHeight
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::GetCellHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridView.CellForIdx
::UnityEngine::MonoBehaviour* GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CellForIdx(::GlobalNamespace::GridView* gridView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method, gridView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionsGridViewAnimator
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsGridViewAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: Tweening.Vector2Tween
#include "Tweening/Vector2Tween.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _viewportTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EaseType _easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rowCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__rowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__selectedRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__selectedRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector2Tween _viewportSizeTween
[[deprecated("Use field access instead!")]] ::Tweening::Vector2Tween*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportSizeTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__viewportSizeTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewportSizeTween"))->offset;
  return *reinterpret_cast<::Tweening::Vector2Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector2Tween _contentPositionTween
[[deprecated("Use field access instead!")]] ::Tweening::Vector2Tween*& GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::dyn__contentPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentPositionTween"))->offset;
  return *reinterpret_cast<::Tweening::Vector2Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.Init
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::Init(float rowHeight, int rowCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rowHeight), ::il2cpp_utils::ExtractType(rowCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rowHeight, rowCount);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.OnDestroy
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.ScrollToRowIdxInstant
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::ScrollToRowIdxInstant(int selectedRow) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::ScrollToRowIdxInstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToRowIdxInstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedRow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedRow);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.AnimateOpen
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateOpen(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.AnimateClose
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateClose(int selectedRow, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::AnimateClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedRow), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedRow, animated);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.DespawnAllActiveTweens
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::DespawnAllActiveTweens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::DespawnAllActiveTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAllActiveTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.GetContentYOffset
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::GetContentYOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::GetContentYOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContentYOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_0
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_0(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_1
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_2
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_2(::UnityEngine::Vector2 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateOpen>b__13_3
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateOpen$b__13_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateOpen>b__13_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateOpen>b__13_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_0
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_0(::UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_1
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_2
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_2(::UnityEngine::Vector2 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsGridViewAnimator.<AnimateClose>b__14_3
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::$AnimateClose$b__14_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionsGridViewAnimator::<AnimateClose>b__14_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AnimateClose>b__14_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicLevelParamsPanel
#include "GlobalNamespace/BasicLevelParamsPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _durationText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BasicLevelParamsPanel::dyn__durationText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::dyn__durationText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_durationText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _bpmText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BasicLevelParamsPanel::dyn__bpmText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::dyn__bpmText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicLevelParamsPanel.set_duration
void GlobalNamespace::BasicLevelParamsPanel::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasicLevelParamsPanel.set_bpm
void GlobalNamespace::BasicLevelParamsPanel::set_bpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicLevelParamsPanel::set_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsTableView
#include "GlobalNamespace/BeatmapCharacteristicsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicTableCell*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cellReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellWidth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__cellWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapCharacteristicSO> didSelectCharacteristic
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn_didSelectCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn_didSelectCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCharacteristic"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedColumn
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapCharacteristicsTableView::dyn__selectedColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::dyn__selectedColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColumn"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicsTableView.add_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.remove_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.Init
void GlobalNamespace::BeatmapCharacteristicsTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SetData
void GlobalNamespace::BeatmapCharacteristicsTableView::SetData(::GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristicCollection);
}
// Autogenerated method: BeatmapCharacteristicsTableView.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellSize
float GlobalNamespace::BeatmapCharacteristicsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.NumberOfCells
int GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleDidSelectColumnEvent
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent(::HMUI::TableView* tableView, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, column);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::BeatmapSelectionView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _noLevelText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BeatmapSelectionView::dyn__noLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::dyn__noLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noLevelText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSelectionView.SetBeatmap
void GlobalNamespace::BeatmapSelectionView::SetBeatmap(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetaBuildInfoText
#include "GlobalNamespace/BetaBuildInfoText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::BetaBuildInfoText::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaBuildInfoText::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetaBuildInfoText.Start
void GlobalNamespace::BetaBuildInfoText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaBuildInfoText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlurredCoverImageView
#include "GlobalNamespace/BlurredCoverImageView.hpp"
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _coverImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::BlurredCoverImageView::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO _kawaseBlurRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::KawaseBlurRendererSO*& GlobalNamespace::BlurredCoverImageView::dyn__kawaseBlurRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__kawaseBlurRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::KawaseBlurRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _settingTextureForLevelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BlurredCoverImageView::dyn__settingTextureForLevelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__settingTextureForLevelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingTextureForLevelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::BlurredCoverImageView::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blurredCoverTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BlurredCoverImageView::dyn__blurredCoverTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::dyn__blurredCoverTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurredCoverTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlurredCoverImageView.OnDestroy
void GlobalNamespace::BlurredCoverImageView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView.SetTextureAsync
void GlobalNamespace::BlurredCoverImageView::SetTextureAsync(::GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::SetTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BlurredCoverImageView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BlurredCoverImageView*& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BlurredCoverImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_level");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.MoveNext
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.SetStateMachine
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DifficultyTableView
#include "GlobalNamespace/DifficultyTableView.hpp"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::DifficultyTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DifficultyTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNonSelectableCellIdentifier
::StringW GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "DifficultyTableView", "kNonSelectableCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNonSelectableCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kNonSelectableCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::DifficultyTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DifficultyTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DifficultyTableCell*& GlobalNamespace::DifficultyTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DifficultyTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DifficultyTableCell _nonSelectableCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DifficultyTableCell*& GlobalNamespace::DifficultyTableView::dyn__nonSelectableCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__nonSelectableCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nonSelectableCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DifficultyTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DifficultyTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<DifficultyTableView,System.Int32> didSelectRow
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>*& GlobalNamespace::DifficultyTableView::dyn_didSelectRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn_didSelectRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRow"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap[] _difficultyBeatmaps
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IDifficultyBeatmap*>& GlobalNamespace::DifficultyTableView::dyn__difficultyBeatmaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::dyn__difficultyBeatmaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyBeatmaps"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IDifficultyBeatmap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyTableView.add_didSelectRow
void GlobalNamespace::DifficultyTableView::add_didSelectRow(::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.remove_didSelectRow
void GlobalNamespace::DifficultyTableView::remove_didSelectRow(::System::Action_2<::GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.Init
void GlobalNamespace::DifficultyTableView::Init(::ArrayW<::GlobalNamespace::IDifficultyBeatmap*> difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.SetDifficultyBeatmaps
void GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps(::ArrayW<::GlobalNamespace::IDifficultyBeatmap*> difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.CellSize
float GlobalNamespace::DifficultyTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.NumberOfCells
int GlobalNamespace::DifficultyTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::DifficultyTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.HandleDidSelectRowEvent
void GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(int row, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, callbackTable);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, callbackTable);
}
// Autogenerated method: DifficultyTableView.ClearSelection
void GlobalNamespace::DifficultyTableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView
#include "GlobalNamespace/DisconnectPromptView.hpp"
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::DisconnectPromptView::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::DisconnectPromptView::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _promptGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::DisconnectPromptView::dyn__promptGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__promptGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promptGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::DisconnectPromptView::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::DisconnectPromptView::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didViewFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<bool>*& GlobalNamespace::DisconnectPromptView::dyn_didViewFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn_didViewFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didViewFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::DisconnectPromptView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisconnectPromptView.add_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.remove_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.OnEnable
void GlobalNamespace::DisconnectPromptView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.OnDisable
void GlobalNamespace::DisconnectPromptView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Show
void GlobalNamespace::DisconnectPromptView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Hide
void GlobalNamespace::DisconnectPromptView::Hide(::System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_0
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_1
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DisconnectPromptView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectPromptView*& GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectPromptView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisconnectPromptView/<>c__DisplayClass12_0.<Hide>b__0
void GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::$Hide$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::<Hide>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Hide>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableBeatmapSelectionView::dyn__editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__editButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableBeatmapSelectionView::dyn__clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__clearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _levelBarCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::EditableBeatmapSelectionView::dyn__levelBarCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__levelBarCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBarCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableBeatmapSelectionView::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <showClearButton>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableBeatmapSelectionView::dyn_$showClearButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::dyn_$showClearButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<showClearButton>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditableBeatmapSelectionView.get_editButton
::UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_clearButton
::UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_interactable
bool GlobalNamespace::EditableBeatmapSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.set_interactable
void GlobalNamespace::EditableBeatmapSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableBeatmapSelectionView.get_showClearButton
bool GlobalNamespace::EditableBeatmapSelectionView::get_showClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::get_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.set_showClearButton
void GlobalNamespace::EditableBeatmapSelectionView::set_showClearButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::set_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableBeatmapSelectionView.SetVisibility
void GlobalNamespace::EditableBeatmapSelectionView::SetVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: EditableBeatmapSelectionView.Setup
void GlobalNamespace::EditableBeatmapSelectionView::Setup(bool showClearButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showClearButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showClearButton);
}
// Autogenerated method: EditableBeatmapSelectionView.SetBeatmap
void GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableModifiersSelectionView::dyn__editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__editButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _clearButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::EditableModifiersSelectionView::dyn__clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__clearButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _modifiersListCanvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::EditableModifiersSelectionView::dyn__modifiersListCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__modifiersListCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifiersListCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableModifiersSelectionView::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <showClearButton>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EditableModifiersSelectionView::dyn_$showClearButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::dyn_$showClearButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<showClearButton>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditableModifiersSelectionView.get_editButton
::UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_clearButton
::UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_interactable
bool GlobalNamespace::EditableModifiersSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.set_interactable
void GlobalNamespace::EditableModifiersSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableModifiersSelectionView.get_showClearButton
bool GlobalNamespace::EditableModifiersSelectionView::get_showClearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::get_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.set_showClearButton
void GlobalNamespace::EditableModifiersSelectionView::set_showClearButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::set_showClearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showClearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableModifiersSelectionView.SetVisibility
void GlobalNamespace::EditableModifiersSelectionView::SetVisibility(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::SetVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: EditableModifiersSelectionView.Setup
void GlobalNamespace::EditableModifiersSelectionView::Setup(bool showClearButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showClearButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showClearButton);
}
// Autogenerated method: EditableModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayersTableView
#include "GlobalNamespace/GameServerPlayersTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kCellId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNoSongsCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kNoSongsCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kNoSongsCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kNoSongsCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoSongsCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kNoSongsCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kNoSongsCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kNoSongsCellId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNoModifiersCellId
::StringW GlobalNamespace::GameServerPlayersTableView::_get_kNoModifiersCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_get_kNoModifiersCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerPlayersTableView", "kNoModifiersCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoModifiersCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kNoModifiersCellId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::_set_kNoModifiersCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kNoModifiersCellId", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::GameServerPlayersTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellWithoutSongsPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutSongsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutSongsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellWithoutSongsPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerPlayerTableCell _gameServerPlayerCellWithoutModifiersPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutModifiersPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__gameServerPlayerCellWithoutModifiersPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerPlayerCellWithoutModifiersPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _tableHeaderSongGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderSongGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderSongGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableHeaderSongGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _tableHeaderModifiersGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderModifiersGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__tableHeaderModifiersGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableHeaderModifiersGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::GameServerPlayersTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::GameServerPlayersTableView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PreviewDifficultyBeatmap> selectSuggestedLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>*& GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<GameplayModifiers> selectSuggestedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_selectSuggestedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectSuggestedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> kickPlayerEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameServerPlayersTableView::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasKickPermissions
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__hasKickPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__hasKickPermissions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKickPermissions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__allowSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__allowSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showSongSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__showSongSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__showSongSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showSongSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showModifierSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerPlayersTableView::dyn__showModifierSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__showModifierSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showModifierSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _selectedPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectedPlayer*& GlobalNamespace::GameServerPlayersTableView::dyn__selectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__selectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _sortedConnectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::GameServerPlayersTableView::dyn__sortedConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__sortedConnectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortedConnectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::GameServerPlayersTableView::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayersTableView.get_currentCellId
::StringW GlobalNamespace::GameServerPlayersTableView::get_currentCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::get_currentCellId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentCellId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent(::System::Action_1<::GlobalNamespace::PreviewDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent(::System::Action_1<::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.CellSize
float GlobalNamespace::GameServerPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.NumberOfCells
int GlobalNamespace::GameServerPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.GetCurrentPrefab
::GlobalNamespace::GameServerPlayerTableCell* GlobalNamespace::GameServerPlayersTableView::GetCurrentPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::GetCurrentPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameServerPlayerTableCell*, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::GameServerPlayersTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: GameServerPlayersTableView.TryGetLobbyPlayerData
bool GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData(int idx, ByRef<::GlobalNamespace::IConnectedPlayer*> player, ByRef<::GlobalNamespace::ILobbyPlayerData*> playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::IConnectedPlayer*&>(), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ILobbyPlayerData*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, idx, byref(player), byref(playerData));
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseBeatmap
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseModifiers
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellKickPlayer
void GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.SetData
void GlobalNamespace::GameServerPlayersTableView::SetData(::System::Collections::Generic::List_1<::GlobalNamespace::IConnectedPlayer*>* sortedPlayers, ::GlobalNamespace::ILobbyPlayersDataModel* lobbyPlayersDataModel, bool hasKickPermissions, bool allowSelection, bool showSongSelection, bool showModifierSelection, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortedPlayers), ::il2cpp_utils::ExtractType(lobbyPlayersDataModel), ::il2cpp_utils::ExtractType(hasKickPermissions), ::il2cpp_utils::ExtractType(allowSelection), ::il2cpp_utils::ExtractType(showSongSelection), ::il2cpp_utils::ExtractType(showModifierSelection), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sortedPlayers, lobbyPlayersDataModel, hasKickPermissions, allowSelection, showSongSelection, showModifierSelection, clearSelection);
}
// Autogenerated method: GameServerPlayersTableView.Init
void GlobalNamespace::GameServerPlayersTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayersTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _text
[[deprecated("Use field access instead!")]] ::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServersFilterText::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMasksModel _songPackMasksModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMasksModel*& GlobalNamespace::GameServersFilterText::dyn__songPackMasksModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__songPackMasksModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMasksModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMasksModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.StringBuilder _stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::GameServersFilterText::dyn__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::dyn__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(::GlobalNamespace::GameServersFilter* filter, bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, filter, visible);
}
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(::GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, ::GlobalNamespace::SongPackMask songPackMask, bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask, visible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: TableViewWithDetailCell
#include "GlobalNamespace/TableViewWithDetailCell.hpp"
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::StringW GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServersListTableView", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kCellReuseIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDetailCellReuseIdentifier
::StringW GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServersListTableView", "kDetailCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDetailCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kDetailCellReuseIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private TableViewWithDetailCell _tableView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TableViewWithDetailCell*& GlobalNamespace::GameServersListTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TableViewWithDetailCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerListTableCell _gameServerListCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerListTableCell*& GlobalNamespace::GameServersListTableView::dyn__gameServerListCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gameServerListCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerListCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameServerListDetailTableCell _gameServerDetailCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerListDetailTableCell*& GlobalNamespace::GameServersListTableView::dyn__gameServerDetailCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gameServerDetailCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerDetailCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerListDetailTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::GameServersListTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinButtonPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::INetworkPlayer*>*& GlobalNamespace::GameServersListTableView::dyn_joinButtonPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn_joinButtonPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinButtonPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::INetworkPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServersListTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer[] _gamesList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::INetworkPlayer*>& GlobalNamespace::GameServersListTableView::dyn__gamesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__gamesList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamesList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::INetworkPlayer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer _selectedServer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::INetworkPlayer*& GlobalNamespace::GameServersListTableView::dyn__selectedServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::dyn__selectedServer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedServer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::INetworkPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServersListTableView.add_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.remove_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.CellSize
float GlobalNamespace::GameServersListTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.NumberOfCells
int GlobalNamespace::GameServersListTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.Init
void GlobalNamespace::GameServersListTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.CellForContent
::HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForContent(::GlobalNamespace::TableViewWithDetailCell* tableView, int idx, bool detailOpened) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellForContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(detailOpened)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx, detailOpened);
}
// Autogenerated method: GameServersListTableView.CellForDetail
::HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForDetail(::GlobalNamespace::TableViewWithDetailCell* tableView, int contentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::CellForDetail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(contentIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, contentIdx);
}
// Autogenerated method: GameServersListTableView.SetData
void GlobalNamespace::GameServersListTableView::SetData(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* servers, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servers), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, servers, clearSelection);
}
// Autogenerated method: GameServersListTableView.HandleGameServerListDetailTableCellJoinServerButtonWasPressed
void GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerListDetailTableCellJoinServerButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidSelectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx(::HMUI::TableView* tableView, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, id);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidDeselectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx(::GlobalNamespace::TableViewWithDetailCell* arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidDeselectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, arg1, arg2);
}
// Autogenerated method: GameServersListTableView.OnDestroy
void GlobalNamespace::GameServersListTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServersListTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView
#include "GlobalNamespace/GridView.hpp"
// Including type: GridView/IDataSource
#include "GlobalNamespace/GridView_IDataSource.hpp"
// Including type: GridView/GridViewCellsEnumerator
#include "GlobalNamespace/GridView_GridViewCellsEnumerator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::GridView::dyn__contentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__contentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GridView/GridViewCellsEnumerator <cellsEnumerator>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::GridViewCellsEnumerator*& GlobalNamespace::GridView::dyn_$cellsEnumerator$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn_$cellsEnumerator$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cellsEnumerator>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::GridViewCellsEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GridView/IDataSource _dataSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::IDataSource*& GlobalNamespace::GridView::dyn__dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__dataSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::IDataSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _columnCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::dyn__columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__columnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rowCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::dyn__rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__rowCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,System.Collections.Generic.Queue`1<UnityEngine.MonoBehaviour>> _availableCellsPerPrefabDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::Queue_1<::UnityEngine::MonoBehaviour*>*>*& GlobalNamespace::GridView::dyn__availableCellsPerPrefabDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__availableCellsPerPrefabDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_availableCellsPerPrefabDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::Queue_1<::UnityEngine::MonoBehaviour*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<UnityEngine.MonoBehaviour,System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>> _spawnedCellsPerPrefabDictionary
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>*& GlobalNamespace::GridView::dyn__spawnedCellsPerPrefabDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::dyn__spawnedCellsPerPrefabDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnedCellsPerPrefabDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView.get_dataSource
::GlobalNamespace::GridView::IDataSource* GlobalNamespace::GridView::get_dataSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_dataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GridView::IDataSource*, false>(this, ___internal__method);
}
// Autogenerated method: GridView.get_cellsEnumerator
::GlobalNamespace::GridView::GridViewCellsEnumerator* GlobalNamespace::GridView::get_cellsEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_cellsEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellsEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GridView::GridViewCellsEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GridView.set_cellsEnumerator
void GlobalNamespace::GridView::set_cellsEnumerator(::GlobalNamespace::GridView::GridViewCellsEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::set_cellsEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellsEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GridView.get_rowCount
int GlobalNamespace::GridView::get_rowCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_rowCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rowCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView.get_columnCount
int GlobalNamespace::GridView::get_columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::get_columnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_columnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView.SetDataSource
void GlobalNamespace::GridView::SetDataSource(::GlobalNamespace::GridView::IDataSource* newDataSource, bool reloadData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::SetDataSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDataSource), ::il2cpp_utils::ExtractType(reloadData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newDataSource, reloadData);
}
// Autogenerated method: GridView.ReloadData
void GlobalNamespace::GridView::ReloadData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::ReloadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView.GetActiveCellsForIdentifier
::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* GlobalNamespace::GridView::GetActiveCellsForIdentifier(::UnityEngine::MonoBehaviour* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GetActiveCellsForIdentifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActiveCellsForIdentifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method, prefab);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView/IDataSource
#include "GlobalNamespace/GridView_IDataSource.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GridView/IDataSource.GetNumberOfCells
int GlobalNamespace::GridView::IDataSource::GetNumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetNumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.GetCellWidth
float GlobalNamespace::GridView::IDataSource::GetCellWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetCellWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.GetCellHeight
float GlobalNamespace::GridView::IDataSource::GetCellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::GetCellHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCellHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GridView/IDataSource.CellForIdx
::UnityEngine::MonoBehaviour* GlobalNamespace::GridView::IDataSource::CellForIdx(::GlobalNamespace::GridView* gridView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::IDataSource::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gridView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method, gridView, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GridView/GridViewCellsEnumerator
#include "GlobalNamespace/GridView_GridViewCellsEnumerator.hpp"
// Including type: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1
#include "GlobalNamespace/GridView_GridViewCellsEnumerator_-GetEnumerator-d__1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GridView _gridView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView*& GlobalNamespace::GridView::GridViewCellsEnumerator::dyn__gridView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::dyn__gridView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gridView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView/GridViewCellsEnumerator.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>* GlobalNamespace::GridView::GridViewCellsEnumerator::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* GlobalNamespace::GridView::GridViewCellsEnumerator::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1
#include "GlobalNamespace/GridView_GridViewCellsEnumerator_-GetEnumerator-d__1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GridView/GridViewCellsEnumerator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GridView::GridViewCellsEnumerator*& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GridView::GridViewCellsEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2/System.Collections.Generic.KeyCollection/System.Collections.Generic.Enumerator<UnityEngine.MonoBehaviour,System.Collections.Generic.List`1<UnityEngine.MonoBehaviour>> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>::KeyCollection::Enumerator& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::Dictionary_2<::UnityEngine::MonoBehaviour*, ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*>::KeyCollection::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<UnityEngine.MonoBehaviour> <>7__wrap2
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>::Enumerator& GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
::UnityEngine::MonoBehaviour* GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.IDisposable.Dispose
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.MoveNext
bool GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.<>m__Finally1
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.<>m__Finally2
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GridView/GridViewCellsEnumerator/<GetEnumerator>d__1.System.Collections.IEnumerator.Reset
void GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GridView::GridViewCellsEnumerator::$GetEnumerator$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardTableView
#include "GlobalNamespace/LeaderboardTableView.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "LeaderboardTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::LeaderboardTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LeaderboardTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LeaderboardTableCell*& GlobalNamespace::LeaderboardTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LeaderboardTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LeaderboardTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LeaderboardTableView/ScoreData> _scores
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>*& GlobalNamespace::LeaderboardTableView::dyn__scores() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__scores");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scores"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _specialScorePos
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::dyn__specialScorePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::dyn__specialScorePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialScorePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableView.CellSize
float GlobalNamespace::LeaderboardTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.NumberOfCells
int GlobalNamespace::LeaderboardTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::LeaderboardTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LeaderboardTableView.SetScores
void GlobalNamespace::LeaderboardTableView::SetScores(::System::Collections::Generic::List_1<::GlobalNamespace::LeaderboardTableView::ScoreData*>* scores, int specialScorePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scores, specialScorePos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <score>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$score$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$score$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<score>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <playerName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$playerName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$playerName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <rank>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$rank$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$rank$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rank>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <fullCombo>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$fullCombo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::dyn_$fullCombo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fullCombo>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_score
int GlobalNamespace::LeaderboardTableView::ScoreData::get_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_score
void GlobalNamespace::LeaderboardTableView::ScoreData::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_playerName
::StringW GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_playerName
void GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_rank
int GlobalNamespace::LeaderboardTableView::ScoreData::get_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_rank
void GlobalNamespace::LeaderboardTableView::ScoreData::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LevelBar/<Setup>d__17
#include "GlobalNamespace/LevelBar_-Setup-d__17.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _songArtworkImageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__songArtworkImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__songArtworkImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songArtworkImageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _songNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__songNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__songNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _authorNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__authorNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__authorNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authorNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showSongSubName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__showSongSubName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__showSongSubName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showSongSubName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _singleLineSongInfoContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LevelBar::dyn__singleLineSongInfoContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__singleLineSongInfoContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_singleLineSongInfoContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _multiLineSongInfoContainer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::LevelBar::dyn__multiLineSongInfoContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineSongInfoContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineSongInfoContainer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _multiLineSongNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__multiLineSongNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineSongNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineSongNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _multiLineAuthorNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__multiLineAuthorNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__multiLineAuthorNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiLineAuthorNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showDifficultyAndCharacteristic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__showDifficultyAndCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__showDifficultyAndCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showDifficultyAndCharacteristic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _difficultyText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelBar::dyn__difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__difficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _characteristicIconImageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__characteristicIconImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__characteristicIconImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characteristicIconImageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useArtworkBackground
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelBar::dyn__useArtworkBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__useArtworkBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useArtworkBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _artworkBackgroundImage
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::LevelBar::dyn__artworkBackgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__artworkBackgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_artworkBackgroundImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LevelBar::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelBar.set_hide
void GlobalNamespace::LevelBar::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelBar.Setup
void GlobalNamespace::LevelBar::Setup(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel);
}
// Autogenerated method: LevelBar.Setup
void GlobalNamespace::LevelBar::Setup(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, ::GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: LevelBar.OnDestroy
void GlobalNamespace::LevelBar::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelBar/<Setup>d__17
#include "GlobalNamespace/LevelBar_-Setup-d__17.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelBar <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_previewBeatmapLevel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapDifficulty");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapCharacteristicSO beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_beatmapCharacteristic");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelBar/<Setup>d__17.MoveNext
void GlobalNamespace::LevelBar::$Setup$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelBar/<Setup>d__17.SetStateMachine
void GlobalNamespace::LevelBar::$Setup$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelBar::$Setup$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCollectionTableView
#include "GlobalNamespace/LevelCollectionTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: HMUI.AlphabetScrollbar
#include "HMUI/AlphabetScrollbar.hpp"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: BeatmapLevelsPromoDataSO
#include "GlobalNamespace/BeatmapLevelsPromoDataSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::LevelCollectionTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.AlphabetScrollbar _alphabetScrollbar
[[deprecated("Use field access instead!")]] ::HMUI::AlphabetScrollbar*& GlobalNamespace::LevelCollectionTableView::dyn__alphabetScrollbar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__alphabetScrollbar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphabetScrollbar"))->offset;
  return *reinterpret_cast<::HMUI::AlphabetScrollbar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelListTableCell _levelCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelListTableCell*& GlobalNamespace::LevelCollectionTableView::dyn__levelCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__levelCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelListTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _levelCellsReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__levelCellsReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__levelCellsReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelCellsReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelPackHeaderTableCell _packCellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelPackHeaderTableCell*& GlobalNamespace::LevelCollectionTableView::dyn__packCellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__packCellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packCellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelPackHeaderTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _packCellsReuseIdentifier
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__packCellsReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__packCellsReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packCellsReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCollectionTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _showAlphabetScrollbarLevelCountThreshold
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCollectionTableView::dyn__showAlphabetScrollbarLevelCountThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__showAlphabetScrollbarLevelCountThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showAlphabetScrollbarLevelCountThreshold"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::LevelCollectionTableView::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsPromoDataSO _beatmapLevelsPromoData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsPromoDataSO*& GlobalNamespace::LevelCollectionTableView::dyn__beatmapLevelsPromoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__beatmapLevelsPromoData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsPromoData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsPromoDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<LevelCollectionTableView,IPreviewBeatmapLevel> didSelectLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::LevelCollectionTableView::dyn_didSelectLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn_didSelectLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelCollectionTableView> didSelectHeaderEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>*& GlobalNamespace::LevelCollectionTableView::dyn_didSelectHeaderEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn_didSelectHeaderEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectHeaderEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelCollectionTableView::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<IPreviewBeatmapLevel> _previewBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::LevelCollectionTableView::dyn__previewBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__previewBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previewBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _headerSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::LevelCollectionTableView::dyn__headerSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__headerSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _headerText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LevelCollectionTableView::dyn__headerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__headerText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showLevelPackHeader
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelCollectionTableView::dyn__showLevelPackHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__showLevelPackHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showLevelPackHeader"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _favoriteLevelIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::LevelCollectionTableView::dyn__favoriteLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__favoriteLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoriteLevelIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedRow
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCollectionTableView::dyn__selectedRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__selectedRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedRow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel _selectedPreviewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelCollectionTableView::dyn__selectedPreviewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::dyn__selectedPreviewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPreviewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelCollectionTableView.add_didSelectLevelEvent
void GlobalNamespace::LevelCollectionTableView::add_didSelectLevelEvent(::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.remove_didSelectLevelEvent
void GlobalNamespace::LevelCollectionTableView::remove_didSelectLevelEvent(::System::Action_2<::GlobalNamespace::LevelCollectionTableView*, ::GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.add_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionTableView::add_didSelectHeaderEvent(::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::add_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.remove_didSelectHeaderEvent
void GlobalNamespace::LevelCollectionTableView::remove_didSelectHeaderEvent(::System::Action_1<::GlobalNamespace::LevelCollectionTableView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::remove_didSelectHeaderEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectHeaderEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelCollectionTableView.Init
void GlobalNamespace::LevelCollectionTableView::Init(::StringW headerText, ::UnityEngine::Sprite* headerSprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerText), ::il2cpp_utils::ExtractType(headerSprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, headerText, headerSprite);
}
// Autogenerated method: LevelCollectionTableView.Init
void GlobalNamespace::LevelCollectionTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SetData
void GlobalNamespace::LevelCollectionTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IPreviewBeatmapLevel*>* previewBeatmapLevels, ::System::Collections::Generic::HashSet_1<::StringW>* favoriteLevelIds, bool beatmapLevelsAreSorted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevels), ::il2cpp_utils::ExtractType(favoriteLevelIds), ::il2cpp_utils::ExtractType(beatmapLevelsAreSorted)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevels, favoriteLevelIds, beatmapLevelsAreSorted);
}
// Autogenerated method: LevelCollectionTableView.RefreshFavorites
void GlobalNamespace::LevelCollectionTableView::RefreshFavorites(::System::Collections::Generic::HashSet_1<::StringW>* favoriteLevelIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::RefreshFavorites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshFavorites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(favoriteLevelIds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, favoriteLevelIds);
}
// Autogenerated method: LevelCollectionTableView.OnEnable
void GlobalNamespace::LevelCollectionTableView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.OnDisable
void GlobalNamespace::LevelCollectionTableView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.OnDestroy
void GlobalNamespace::LevelCollectionTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CellSize
float GlobalNamespace::LevelCollectionTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.NumberOfCells
int GlobalNamespace::LevelCollectionTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::LevelCollectionTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LevelCollectionTableView.HandleDidSelectRowEvent
void GlobalNamespace::LevelCollectionTableView::HandleDidSelectRowEvent(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LevelCollectionTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::LevelCollectionTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.CancelAsyncOperations
void GlobalNamespace::LevelCollectionTableView::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.RefreshLevelsAvailability
void GlobalNamespace::LevelCollectionTableView::RefreshLevelsAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::RefreshLevelsAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLevelsAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SelectLevelPackHeaderCell
void GlobalNamespace::LevelCollectionTableView::SelectLevelPackHeaderCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SelectLevelPackHeaderCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevelPackHeaderCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.ClearSelection
void GlobalNamespace::LevelCollectionTableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelCollectionTableView.SelectLevel
void GlobalNamespace::LevelCollectionTableView::SelectLevel(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCollectionTableView::SelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelParamsPanel
#include "GlobalNamespace/LevelParamsPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _notesPerSecondText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__notesPerSecondText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__notesPerSecondText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notesPerSecondText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _notesCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__notesCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__notesCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notesCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _obstaclesCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__obstaclesCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__obstaclesCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclesCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _bombsCountText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelParamsPanel::dyn__bombsCountText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::dyn__bombsCountText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombsCountText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelParamsPanel.set_notesPerSecond
void GlobalNamespace::LevelParamsPanel::set_notesPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_notesPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_notesPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_notesCount
void GlobalNamespace::LevelParamsPanel::set_notesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_notesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_notesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_obstaclesCount
void GlobalNamespace::LevelParamsPanel::set_obstaclesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_obstaclesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstaclesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelParamsPanel.set_bombsCount
void GlobalNamespace::LevelParamsPanel::set_bombsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelParamsPanel::set_bombsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bombsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelStatsView
#include "GlobalNamespace/LevelStatsView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _highScoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__highScoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__highScoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highScoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _maxComboText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__maxComboText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__maxComboText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxComboText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _maxRankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LevelStatsView::dyn__maxRankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::dyn__maxRankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxRankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelStatsView.Hide
void GlobalNamespace::LevelStatsView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelStatsView.ShowStats
void GlobalNamespace::LevelStatsView::ShowStats(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelStatsView::ShowStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, difficultyBeatmap, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardTableView
#include "GlobalNamespace/LocalLeaderboardTableView.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalLeaderboardTableView.SetScores
void GlobalNamespace::LocalLeaderboardTableView::SetScores(::System::Collections::Generic::List_1<::GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* scores, int specialScorePos, int maxNumberOfCells) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalLeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos), ::il2cpp_utils::ExtractType(maxNumberOfCells)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scores, specialScorePos, maxNumberOfCells);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _modifierInfoList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::ModifiersSelectionView::dyn__modifierInfoList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__modifierInfoList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_modifierInfoList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _noModifiersText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ModifiersSelectionView::dyn__noModifiersText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__noModifiersText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noModifiersText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::ModifiersSelectionView::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifierParams
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::dyn_modifierParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::dyn_modifierParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifierParams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ModifiersSelectionView/<>c__DisplayClass3_0.<SetGameplayModifiers>b__0
void GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::$SetGameplayModifiers$b__0(int idx, ::GlobalNamespace::GameplayModifierInfoListItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::<SetGameplayModifiers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetGameplayModifiers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: MultiplayerResultsAvatarController
#include "GlobalNamespace/MultiplayerResultsAvatarController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _positionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__positionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::MultiplayerResultsTableCell::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MultiplayerResultsTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::MultiplayerResultsTableCell::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsAvatarController _multiplayerResultsAvatarController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsAvatarController*& GlobalNamespace::MultiplayerResultsTableCell::dyn__multiplayerResultsAvatarController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__multiplayerResultsAvatarController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerResultsAvatarController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _avatarScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableCell::dyn__avatarScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__avatarScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalSecondPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__normalSecondPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__normalSecondPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSecondPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalLastPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__normalLastPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__normalLastPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalLastPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _localPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__localPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__localPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _winnerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__winnerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__winnerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableCell.set_alpha
void GlobalNamespace::MultiplayerResultsTableCell::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsTableCell.SetData
void GlobalNamespace::MultiplayerResultsTableCell::SetData(::GlobalNamespace::IConnectedPlayer* connectedPlayer, int position, ::StringW playerName, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool isLocalPlayer, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(isLocalPlayer), ::il2cpp_utils::ExtractType(numberOfPlayers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer, position, playerName, levelCompletionResults, isLocalPlayer, numberOfPlayers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView
#include "GlobalNamespace/MultiplayerResultsTableView.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: MultiplayerOffsetPositionByLocalPlayerPosition
#include "GlobalNamespace/MultiplayerOffsetPositionByLocalPlayerPosition.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerResultsTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::MultiplayerResultsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _tableViewRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::dyn__tableViewRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tableViewRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableViewRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsTableCell _winnerTableCell
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::dyn__winnerTableCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__winnerTableCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerTableCell"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startRowXPosition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__startRowXPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__startRowXPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRowXPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowXOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__rowXOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowXOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowXOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__animationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationSeparationTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__animationSeparationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__animationSeparationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationSeparationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _winnerAnimationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__winnerAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__winnerAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duelTablePosXOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__duelTablePosXOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__duelTablePosXOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelTablePosXOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerOffsetPositionByLocalPlayerPosition _multiplayerOffsetByLocalPlayerPosition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerOffsetPositionByLocalPlayerPosition*& GlobalNamespace::MultiplayerResultsTableView::dyn__multiplayerOffsetByLocalPlayerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__multiplayerOffsetByLocalPlayerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerOffsetByLocalPlayerPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerOffsetPositionByLocalPlayerPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _outroSfxAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MultiplayerResultsTableView::dyn__outroSfxAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__outroSfxAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outroSfxAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _rowSlideAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::MultiplayerResultsTableView::dyn__rowSlideAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowSlideAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowSlideAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _avatarSlideAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MultiplayerResultsTableView::dyn__avatarSlideAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__avatarSlideAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarSlideAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerResultsTableView::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLayoutProvider _layoutProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLayoutProvider*& GlobalNamespace::MultiplayerResultsTableView::dyn__layoutProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__layoutProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layoutProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLayoutProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::MultiplayerResultsTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<MultiplayerPlayerResultsData> _dataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>*& GlobalNamespace::MultiplayerResultsTableView::dyn__dataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__dataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MultiplayerResultsTableView::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MultiplayerResultsTableView::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastParentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastParentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _lastParentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastParentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView.CellSize
float GlobalNamespace::MultiplayerResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.NumberOfCells
int GlobalNamespace::MultiplayerResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.Awake
void GlobalNamespace::MultiplayerResultsTableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.OnDestroy
void GlobalNamespace::MultiplayerResultsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::MultiplayerResultsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: MultiplayerResultsTableView.SetData
void GlobalNamespace::MultiplayerResultsTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated method: MultiplayerResultsTableView.StartAnimation
float GlobalNamespace::MultiplayerResultsTableView::StartAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::StartAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.PlayRandomRowSlideInSound
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayRandomRowSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.PlayAvatarSlideInSound
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAvatarSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_1
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_4
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_5
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_5(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableCell cell
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_cell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_cell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cell"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__0
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__0(::UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__2
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__2(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform winnerRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::dyn_winnerRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::dyn_winnerRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "winnerRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_1.<StartAnimation>b__3
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::$StartAnimation$b__3(::UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::<StartAnimation>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableView*& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableView*& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MusicPackPromoBanner
#include "GlobalNamespace/MusicPackPromoBanner.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x112F6D8
// Autogenerated static field getter
// Get static field: static private System.String kPlayNow
::StringW GlobalNamespace::MusicPackPromoBanner::_get_kPlayNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_get_kPlayNow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MusicPackPromoBanner", "kPlayNow"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayNow
void GlobalNamespace::MusicPackPromoBanner::_set_kPlayNow(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_set_kPlayNow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MusicPackPromoBanner", "kPlayNow", value));
}
// [LocalizationKeyAttribute] Offset: 0x112F6E8
// Autogenerated static field getter
// Get static field: static private System.String kGetNow
::StringW GlobalNamespace::MusicPackPromoBanner::_get_kGetNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_get_kGetNow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MusicPackPromoBanner", "kGetNow"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGetNow
void GlobalNamespace::MusicPackPromoBanner::_set_kGetNow(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_set_kGetNow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MusicPackPromoBanner", "kGetNow", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _promoBannerGo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MusicPackPromoBanner::dyn__promoBannerGo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__promoBannerGo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoBannerGo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _promoText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MusicPackPromoBanner::dyn__promoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__promoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MusicPackPromoBanner::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack _currentPromoMusicPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoMusicPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoMusicPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPromoMusicPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel _currentPromoBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPromoBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _text
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MusicPackPromoBanner::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MusicPackPromoBanner.get_currentPromoBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPromoBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.get_currentPromoMusicPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPromoMusicPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.get_promoButtonText
::StringW GlobalNamespace::MusicPackPromoBanner::get_promoButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_promoButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_promoButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.Setup
void GlobalNamespace::MusicPackPromoBanner::Setup(::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* musicPackPromoData, bool probablyOwned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(musicPackPromoData), ::il2cpp_utils::ExtractType(probablyOwned)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, musicPackPromoData, probablyOwned);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ObjectiveListItem::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _conditionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ObjectiveListItem::dyn__conditionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::dyn__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectiveListItem.set_title
void GlobalNamespace::ObjectiveListItem::set_title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_conditionText
void GlobalNamespace::ObjectiveListItem::set_conditionText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_hideCondition
void GlobalNamespace::ObjectiveListItem::set_hideCondition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_hideCondition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCondition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveListItemsList
#include "GlobalNamespace/ObjectiveListItemsList.hpp"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PageControl
#include "GlobalNamespace/PageControl.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: PageControlElement
#include "GlobalNamespace/PageControlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _content
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::PageControl::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spacing
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageControl::dyn__spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PageControlElement _elementPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PageControlElement*& GlobalNamespace::PageControl::dyn__elementPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__elementPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PageControlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<PageControlElement> _activeElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PageControlElement*>*& GlobalNamespace::PageControl::dyn__activeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__activeElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PageControlElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<PageControlElement> _inactiveElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::PageControlElement*>*& GlobalNamespace::PageControl::dyn__inactiveElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__inactiveElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactiveElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::PageControlElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedPage
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PageControl::dyn__selectedPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__selectedPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pagesCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PageControl::dyn__pagesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__pagesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pagesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PageControl.SetPagesCount
void GlobalNamespace::PageControl::SetPagesCount(int pagesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetPagesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPagesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pagesCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pagesCount);
}
// Autogenerated method: PageControl.SetSelectedPageIndex
void GlobalNamespace::PageControl::SetSelectedPageIndex(int page) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetSelectedPageIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedPageIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(page)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, page);
}
// Autogenerated method: PageControl.SetVisible
void GlobalNamespace::PageControl::SetVisible(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isVisible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PageControlElement
#include "GlobalNamespace/PageControlElement.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::PageControlElement::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _imageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::PageControlElement::dyn__imageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__imageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_imageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PageControlElement::dyn__selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _unselectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PageControlElement::dyn__unselectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__unselectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unselectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PageControlElement.get_rectTransform
::UnityEngine::RectTransform* GlobalNamespace::PageControlElement::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: PageControlElement.SetSelected
void GlobalNamespace::PageControlElement::SetSelected(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::ResultObjectiveListItem::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconGlow
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::ResultObjectiveListItem::dyn__iconGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__iconGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconGlow"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _conditionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__conditionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _valueText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultObjectiveListItem.set_iconColor
void GlobalNamespace::ResultObjectiveListItem::set_iconColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_iconColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_icon
void GlobalNamespace::ResultObjectiveListItem::set_icon(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_iconGlow
void GlobalNamespace::ResultObjectiveListItem::set_iconGlow(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_iconGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_title
void GlobalNamespace::ResultObjectiveListItem::set_title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_conditionText
void GlobalNamespace::ResultObjectiveListItem::set_conditionText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideConditionText
void GlobalNamespace::ResultObjectiveListItem::set_hideConditionText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_hideConditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideConditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_valueText
void GlobalNamespace::ResultObjectiveListItem::set_valueText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_valueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_valueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideValueText
void GlobalNamespace::ResultObjectiveListItem::set_hideValueText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_hideValueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideValueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultObjectiveListItemsList
#include "GlobalNamespace/ResultObjectiveListItemsList.hpp"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _border
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsTableCell::dyn__border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__border");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_border"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _orderText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__orderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__orderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsTableCell.SetData
void GlobalNamespace::ResultsTableCell::SetData(int order, ::GlobalNamespace::IConnectedPlayer* connectedPlayer, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order), ::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order, connectedPlayer, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsTableView
#include "GlobalNamespace/ResultsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::ResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::ResultsTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ResultsTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::ResultsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultsTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsTableCell*& GlobalNamespace::ResultsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ResultsTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<MultiplayerPlayerResultsData> _dataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>*& GlobalNamespace::ResultsTableView::dyn__dataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__dataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsTableView.CellSize
float GlobalNamespace::ResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.NumberOfCells
int GlobalNamespace::ResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::ResultsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: ResultsTableView.SetData
void GlobalNamespace::ResultsTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerCodeView
#include "GlobalNamespace/ServerCodeView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _serverCodeText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ServerCodeView::dyn__serverCodeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__serverCodeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCodeText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ServerCodeView::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::ServerCodeView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ServerCodeView::dyn__serverCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__serverCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _codeIsShown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ServerCodeView::dyn__codeIsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__codeIsShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeIsShown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ServerCodeView.SetCode
void GlobalNamespace::ServerCodeView::SetCode(::StringW serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::SetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: ServerCodeView.OnEnable
void GlobalNamespace::ServerCodeView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.OnDisable
void GlobalNamespace::ServerCodeView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.HandleShowServerCodeButtonPressed
void GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleShowServerCodeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.RefreshText
void GlobalNamespace::ServerCodeView::RefreshText(bool showCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::RefreshText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelBuyInfoView
#include "GlobalNamespace/StandardLevelBuyInfoView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::StandardLevelBuyInfoView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyLevelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__buyLevelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__buyLevelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyLevelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _openPackButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__openPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__openPackButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openPackButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyPackButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__buyPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__buyPackButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyPackButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelBuyInfoView.get_buyLevelButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyLevelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_openPackButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_buyPackButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.RefreshView
void GlobalNamespace::StandardLevelBuyInfoView::RefreshView(::StringW infoText, bool canBuyPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::RefreshView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infoText), ::il2cpp_utils::ExtractType(canBuyPack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infoText, canBuyPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelBuyView
#include "GlobalNamespace/StandardLevelBuyView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::StandardLevelBuyView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyView::dyn__buyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::dyn__buyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelBuyView.get_buyButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyView::get_buyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::get_buyButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyView.SetContent
void GlobalNamespace::StandardLevelBuyView::SetContent(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailView
#include "GlobalNamespace/StandardLevelDetailView.hpp"
// Including type: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34
#include "GlobalNamespace/StandardLevelDetailView_-SetContentForBeatmapDataAsync-d__34.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LevelParamsPanel
#include "GlobalNamespace/LevelParamsPanel.hpp"
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _actionButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelDetailView::dyn__actionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__actionButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _actionButtonText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::StandardLevelDetailView::dyn__actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__actionButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButtonText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _practiceButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelDetailView::dyn__practiceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__practiceButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::StandardLevelDetailView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelParamsPanel _levelParamsPanel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelParamsPanel*& GlobalNamespace::StandardLevelDetailView::dyn__levelParamsPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__levelParamsPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelParamsPanel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelParamsPanel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultySegmentedControlController _beatmapDifficultySegmentedControlController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultySegmentedControlController*& GlobalNamespace::StandardLevelDetailView::dyn__beatmapDifficultySegmentedControlController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__beatmapDifficultySegmentedControlController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficultySegmentedControlController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultySegmentedControlController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSegmentedControlController _beatmapCharacteristicSegmentedControlController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*& GlobalNamespace::StandardLevelDetailView::dyn__beatmapCharacteristicSegmentedControlController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__beatmapCharacteristicSegmentedControlController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicSegmentedControlController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _favoriteToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::StandardLevelDetailView::dyn__favoriteToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__favoriteToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoriteToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<StandardLevelDetailView,IDifficultyBeatmap> didChangeDifficultyBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::StandardLevelDetailView::dyn_didChangeDifficultyBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn_didChangeDifficultyBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeDifficultyBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<StandardLevelDetailView,UnityEngine.UI.Toggle> didFavoriteToggleChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>*& GlobalNamespace::StandardLevelDetailView::dyn_didFavoriteToggleChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn_didFavoriteToggleChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFavoriteToggleChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel _level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::StandardLevelDetailView::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerData _playerData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerData*& GlobalNamespace::StandardLevelDetailView::dyn__playerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__playerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _selectedDifficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::StandardLevelDetailView::dyn__selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__selectedDifficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedDifficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::StandardLevelDetailView::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelDetailView.get_selectedDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.get_actionButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_actionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_actionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_actionButtonText
void GlobalNamespace::StandardLevelDetailView::set_actionButtonText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::set_actionButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.get_practiceButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_practiceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_practiceButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_hidePracticeButton
void GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.add_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.SetContent
void GlobalNamespace::StandardLevelDetailView::SetContent(::GlobalNamespace::IBeatmapLevel* level, ::GlobalNamespace::BeatmapDifficulty defaultDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* defaultBeatmapCharacteristic, ::GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(defaultDifficulty), ::il2cpp_utils::ExtractType(defaultBeatmapCharacteristic), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, defaultDifficulty, defaultBeatmapCharacteristic, playerData);
}
// Autogenerated method: StandardLevelDetailView.Awake
void GlobalNamespace::StandardLevelDetailView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.OnDestroy
void GlobalNamespace::StandardLevelDetailView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty(::GlobalNamespace::BeatmapDifficultySegmentedControlController* controller, ::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(difficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, difficulty);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSegmentedControlController* controller, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, beatmapCharacteristic);
}
// Autogenerated method: StandardLevelDetailView.RefreshContent
void GlobalNamespace::StandardLevelDetailView::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.SetContentForBeatmapDataAsync
void GlobalNamespace::StandardLevelDetailView::SetContentForBeatmapDataAsync(::GlobalNamespace::IDifficultyBeatmap* selectedDifficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::SetContentForBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentForBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedDifficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedDifficultyBeatmap);
}
// Autogenerated method: StandardLevelDetailView.ClearContent
void GlobalNamespace::StandardLevelDetailView::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.<Awake>b__29_0
void GlobalNamespace::StandardLevelDetailView::$Awake$b__29_0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::<Awake>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34
#include "GlobalNamespace/StandardLevelDetailView_-SetContentForBeatmapDataAsync-d__34.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandardLevelDetailView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelDetailView*& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelDetailView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDifficultyBeatmap selectedDifficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_selectedDifficultyBeatmap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDifficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapDataBasicInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34.MoveNext
void GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34.SetStateMachine
void GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AbTestExperimentDefinitionSO
#include "GlobalNamespace/AbTestExperimentDefinitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _experimentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__experimentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__experimentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _test1GroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test1GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test1GroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test1GroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _test2GroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test2GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test2GroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test2GroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controlGroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__controlGroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__controlGroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controlGroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _salt
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AbTestExperimentDefinitionSO/Group _currentUserTreatmentGroup
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AbTestExperimentDefinitionSO::Group& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__currentUserTreatmentGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__currentUserTreatmentGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentUserTreatmentGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AbTestExperimentDefinitionSO::Group*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_test1GroupSize
float GlobalNamespace::AbTestExperimentDefinitionSO::get_test1GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_test1GroupSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_test1GroupSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_test2GroupSize
float GlobalNamespace::AbTestExperimentDefinitionSO::get_test2GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_test2GroupSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_test2GroupSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_experimentName
::StringW GlobalNamespace::AbTestExperimentDefinitionSO::get_experimentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_experimentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_currentUserTreatmentGroup
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::get_currentUserTreatmentGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_currentUserTreatmentGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentUserTreatmentGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AbTestExperimentDefinitionSO::Group, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.OnValidate
void GlobalNamespace::AbTestExperimentDefinitionSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.ComputeCurrentUserTreatment
void GlobalNamespace::AbTestExperimentDefinitionSO::ComputeCurrentUserTreatment(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::ComputeCurrentUserTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCurrentUserTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: AbTestExperimentDefinitionSO.ForceSetTreatmentGroup
void GlobalNamespace::AbTestExperimentDefinitionSO::ForceSetTreatmentGroup(::GlobalNamespace::AbTestExperimentDefinitionSO::Group group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::ForceSetTreatmentGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSetTreatmentGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: AbTestExperimentDefinitionSO.AbSplit
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::AbSplit(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::AbSplit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbSplit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AbTestExperimentDefinitionSO::Group, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AbTestExperimentDefinitionSO/Group
#include "GlobalNamespace/AbTestExperimentDefinitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Control
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Control"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Control
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Control(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Test1
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Test1"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Test1
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test1(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Test1", value));
}
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Test2
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Test2"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Test2
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test2(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Test2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AbTestExperimentDefinitionSO::Group::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AssetObjectListSO
#include "GlobalNamespace/AssetObjectListSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object[] _objects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Object*>& GlobalNamespace::AssetObjectListSO::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssetObjectListSO::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Object*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AssetObjectListSO.get_objects
::ArrayW<::UnityEngine::Object*> GlobalNamespace::AssetObjectListSO::get_objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssetObjectListSO::get_objects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataCache
#include "GlobalNamespace/BeatmapDataCache.hpp"
// Including type: BeatmapDataCache/<GetBeatmapData>d__4
#include "GlobalNamespace/BeatmapDataCache_-GetBeatmapData-d__4.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::BeatmapDataCache::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataCache::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataCache::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::dyn_playerSpecificSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IReadonlyBeatmapData cachedMap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::BeatmapDataCache::dyn_cachedMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::dyn_cachedMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedMap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataCache.GetBeatmapData
::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>* GlobalNamespace::BeatmapDataCache::GetBeatmapData(::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::EnvironmentInfoSO* environmentInfo, ::GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::GetBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(environmentInfo), ::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IReadonlyBeatmapData*>*, false>(this, ___internal__method, difficultyBeatmap, environmentInfo, playerSpecificSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataCache/<GetBeatmapData>d__4
#include "GlobalNamespace/BeatmapDataCache_-GetBeatmapData-d__4.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<IReadonlyBeatmapData> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDifficultyBeatmap difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_difficultyBeatmap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDataCache <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDataCache*& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCache**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_environmentInfo");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayerSpecificSettings playerSpecificSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerSpecificSettings*& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_playerSpecificSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_playerSpecificSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerSpecificSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerSpecificSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IReadonlyBeatmapData> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>& GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IReadonlyBeatmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataCache/<GetBeatmapData>d__4.MoveNext
void GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapDataCache/<GetBeatmapData>d__4.SetStateMachine
void GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataCache::$GetBeatmapData$d__4::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsPromoDataSO
#include "GlobalNamespace/BeatmapLevelsPromoDataSO.hpp"
// Including type: BeatmapLevelsPromoDataSO/<>c
#include "GlobalNamespace/BeatmapLevelsPromoDataSO_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _promotedBeatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promotedBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _updatedBeatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updatedBeatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelPackSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PreviewBeatmapLevelSO> _promotedBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelSO*>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promotedBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<PreviewBeatmapLevelSO> _updatedBeatmapLevels
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelSO*>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updatedBeatmapLevels"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PreviewBeatmapLevelSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _promotedBeatmapLevelPacksSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelPacksSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelPacksSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promotedBeatmapLevelPacksSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _updatedBeatmapLevelPacksSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelPacksSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelPacksSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updatedBeatmapLevelPacksSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _promotedBeatmapLevelsSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__promotedBeatmapLevelsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promotedBeatmapLevelsSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _updatedBeatmapLevelsSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::dyn__updatedBeatmapLevelsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updatedBeatmapLevelsSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelsPromoDataSO.IsBeatmapLevelPackPromoted
bool GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPackPromoted(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPackPromoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelPackPromoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated method: BeatmapLevelsPromoDataSO.IsBeatmapLevelPackUpdated
bool GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPackUpdated(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPackUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelPackUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevelPack);
}
// Autogenerated method: BeatmapLevelsPromoDataSO.IsBeatmapLevelPromoted
bool GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPromoted(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelPromoted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelPromoted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: BeatmapLevelsPromoDataSO.IsBeatmapLevelUpdated
bool GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelUpdated(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::IsBeatmapLevelUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsBeatmapLevelUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapLevelsPromoDataSO/<>c
#include "GlobalNamespace/BeatmapLevelsPromoDataSO_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelSO
#include "GlobalNamespace/PreviewBeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapLevelsPromoDataSO/<>c <>9
::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c* GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c*>("", "BeatmapLevelsPromoDataSO/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapLevelsPromoDataSO/<>c <>9
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9(::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsPromoDataSO/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__8_0
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>*>("", "BeatmapLevelsPromoDataSO/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__8_0
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__8_0(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsPromoDataSO/<>c", "<>9__8_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__9_0
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__9_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>*>("", "BeatmapLevelsPromoDataSO/<>c", "<>9__9_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__9_0
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__9_0(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelPackSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__9_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsPromoDataSO/<>c", "<>9__9_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelSO,System.String> <>9__10_0
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>* GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>*>("", "BeatmapLevelsPromoDataSO/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelSO,System.String> <>9__10_0
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__10_0(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsPromoDataSO/<>c", "<>9__10_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelSO,System.String> <>9__11_0
::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>* GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>*>("", "BeatmapLevelsPromoDataSO/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelSO,System.String> <>9__11_0
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__11_0(::System::Func_2<::GlobalNamespace::PreviewBeatmapLevelSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapLevelsPromoDataSO/<>c", "<>9__11_0", value)));
}
// Autogenerated method: BeatmapLevelsPromoDataSO/<>c..cctor
void GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelsPromoDataSO/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapLevelsPromoDataSO/<>c.<IsBeatmapLevelPackPromoted>b__8_0
::StringW GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::$IsBeatmapLevelPackPromoted$b__8_0(::GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::<IsBeatmapLevelPackPromoted>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsBeatmapLevelPackPromoted>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: BeatmapLevelsPromoDataSO/<>c.<IsBeatmapLevelPackUpdated>b__9_0
::StringW GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::$IsBeatmapLevelPackUpdated$b__9_0(::GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::<IsBeatmapLevelPackUpdated>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsBeatmapLevelPackUpdated>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, pack);
}
// Autogenerated method: BeatmapLevelsPromoDataSO/<>c.<IsBeatmapLevelPromoted>b__10_0
::StringW GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::$IsBeatmapLevelPromoted$b__10_0(::GlobalNamespace::PreviewBeatmapLevelSO* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::<IsBeatmapLevelPromoted>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsBeatmapLevelPromoted>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, level);
}
// Autogenerated method: BeatmapLevelsPromoDataSO/<>c.<IsBeatmapLevelUpdated>b__11_0
::StringW GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::$IsBeatmapLevelUpdated$b__11_0(::GlobalNamespace::PreviewBeatmapLevelSO* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelsPromoDataSO::$$c::<IsBeatmapLevelUpdated>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsBeatmapLevelUpdated>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, level);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_Element.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_EnvironmentColor.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassBackgroundColorsGradient*& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__bloomPrePassBackgroundColorsGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__bloomPrePassBackgroundColorsGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColorsGradient"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundColorsGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element[] _elements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*>& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentColorManager _colorManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorManager*& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradientFromColorSchemeColors.Start
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadFromColorScheme
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_loadFromColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_loadFromColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadFromColorScheme"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor environmentColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_environmentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_environmentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_EnvironmentColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0Boost
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0Boost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0Boost"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0Boost
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0Boost(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0Boost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0Boost", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1Boost
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1Boost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1Boost"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1Boost
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1Boost(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1Boost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1Boost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ColorScheme _colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorScheme*& GlobalNamespace::ColorManager::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorManager.get_obstaclesColor
::UnityEngine::Color GlobalNamespace::ColorManager::get_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::get_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorManager.ColorForType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForType(::GlobalNamespace::EnvironmentColorType type, bool boost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(boost)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type, boost);
}
// Autogenerated method: ColorManager.ColorForType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForType(::GlobalNamespace::ColorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.ColorForSaberType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForSaberType(::GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.EffectsColorForSaberType
::UnityEngine::Color GlobalNamespace::ColorManager::EffectsColorForSaberType(::GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::EffectsColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EffectsColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.GetObstacleEffectColor
::UnityEngine::Color GlobalNamespace::ColorManager::GetObstacleEffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::GetObstacleEffectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacleEffectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeConverter
#include "GlobalNamespace/ColorSchemeConverter.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: ColorSchemeNetSerializable
#include "GlobalNamespace/ColorSchemeNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeConverter.FromNetSerializable
::GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeConverter::FromNetSerializable(::GlobalNamespace::ColorSchemeNetSerializable serialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeConverter::FromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorSchemeConverter", "FromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialized)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorScheme*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serialized);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CrashManagerSO
#include "GlobalNamespace/CrashManagerSO.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _logString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CrashManagerSO::dyn__logString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::dyn__logString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _stackTrace
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CrashManagerSO::dyn__stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::dyn__stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CrashManagerSO.get_logString
::StringW GlobalNamespace::CrashManagerSO::get_logString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::get_logString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.get_stackTrace
::StringW GlobalNamespace::CrashManagerSO::get_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::get_stackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.StartCatchingExceptions
void GlobalNamespace::CrashManagerSO::StartCatchingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::StartCatchingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCatchingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.OnDisable
void GlobalNamespace::CrashManagerSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.HandleLog
void GlobalNamespace::CrashManagerSO::HandleLog(::StringW logString, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::HandleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logString, stackTrace, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelDataSO
#include "GlobalNamespace/DlcPromoPanelDataSO.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _defaultMusicPackPromoIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__defaultMusicPackPromoIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__defaultMusicPackPromoIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMusicPackPromoIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO/MusicPackPromoInfo[] _musicPackPromoInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>& GlobalNamespace::DlcPromoPanelDataSO::dyn__musicPackPromoInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__musicPackPromoInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackPromoInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cutOffTest
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__cutOffTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__cutOffTest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOffTest"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minNumberOfNotOwnedPacks
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__minNumberOfNotOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__minNumberOfNotOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minNumberOfNotOwnedPacks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelDataSO.get_cutOffTest
int GlobalNamespace::DlcPromoPanelDataSO::get_cutOffTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_cutOffTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutOffTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_minNumberOfNotOwnedPacks
int GlobalNamespace::DlcPromoPanelDataSO::get_minNumberOfNotOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_minNumberOfNotOwnedPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minNumberOfNotOwnedPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_musicPackPromoInfos
::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*> GlobalNamespace::DlcPromoPanelDataSO::get_musicPackPromoInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_musicPackPromoInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_musicPackPromoInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_defaultMusicPackPromo
::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* GlobalNamespace::DlcPromoPanelDataSO::get_defaultMusicPackPromo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_defaultMusicPackPromo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultMusicPackPromo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelPackSO _beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _bannerImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bannerImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _bannerPromoText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerPromoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerPromoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bannerPromoText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_previewBeatmapLevelPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_bannerImage
::UnityEngine::Sprite* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bannerImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_bannerPromoText
::StringW GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerPromoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerPromoText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bannerPromoText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _defaultColorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::EnvironmentColorManager::dyn__defaultColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__defaultColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor0Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor1Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorScheme _colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorScheme*& GlobalNamespace::EnvironmentColorManager::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor0
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor0Boost
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1Boost
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Awake
void GlobalNamespace::EnvironmentColorManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Start
void GlobalNamespace::EnvironmentColorManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSManager
#include "GlobalNamespace/FPSManager.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _enableFPSCounter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BoolSO*& GlobalNamespace::FPSManager::dyn__enableFPSCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSManager::dyn__enableFPSCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enableFPSCounter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Canvas _fpsCounterCanvasPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Canvas*& GlobalNamespace::FPSManager::dyn__fpsCounterCanvasPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSManager::dyn__fpsCounterCanvasPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsCounterCanvasPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Canvas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainCamera*& GlobalNamespace::FPSManager::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSManager::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSManager.Start
void GlobalNamespace::FPSManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileSystemHelper
#include "GlobalNamespace/FileSystemHelper.hpp"
// Including type: System.Security.AccessControl.FileSystemSecurity
#include "System/Security/AccessControl/FileSystemSecurity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileSystemHelper.FindFirstExistedParentPath
::StringW GlobalNamespace::FileSystemHelper::FindFirstExistedParentPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileSystemHelper::FindFirstExistedParentPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileSystemHelper", "FindFirstExistedParentPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FileSystemHelper.HasWritePermission
bool GlobalNamespace::FileSystemHelper::HasWritePermission(::System::Security::AccessControl::FileSystemSecurity* accessControlList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileSystemHelper::HasWritePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileSystemHelper", "HasWritePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accessControlList)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, accessControlList);
}
// Autogenerated method: FileSystemHelper.HasWritePermissionOnDirectory
bool GlobalNamespace::FileSystemHelper::HasWritePermissionOnDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileSystemHelper::HasWritePermissionOnDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileSystemHelper", "HasWritePermissionOnDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FileSystemHelper.HasWritePermissionOnFile
bool GlobalNamespace::FileSystemHelper::HasWritePermissionOnFile(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileSystemHelper::HasWritePermissionOnFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileSystemHelper", "HasWritePermissionOnFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: FileSystemHelper.IsFileWritable
bool GlobalNamespace::FileSystemHelper::IsFileWritable(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileSystemHelper::IsFileWritable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileSystemHelper", "IsFileWritable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FirstPersonFlyingController
#include "GlobalNamespace/FirstPersonFlyingController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FirstPersonFlyingController::dyn__moveSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__moveSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::FirstPersonFlyingController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::FirstPersonFlyingController::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFov
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FirstPersonFlyingController::dyn__cameraFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__cameraFov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRCenterAdjust _centerAdjust
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRCenterAdjust*& GlobalNamespace::FirstPersonFlyingController::dyn__centerAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__centerAdjust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerAdjust"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRCenterAdjust**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::FirstPersonFlyingController::dyn__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::FirstPersonFlyingController::dyn__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.VRInputModule _vrInputModule
[[deprecated("Use field access instead!")]] ::VRUIControls::VRInputModule*& GlobalNamespace::FirstPersonFlyingController::dyn__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<::VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _controllerModels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::FirstPersonFlyingController::dyn__controllerModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controllerModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerModels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MouseLook _mouseLook
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouseLook*& GlobalNamespace::FirstPersonFlyingController::dyn__mouseLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__mouseLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouseLook"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldBeEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FirstPersonFlyingController::dyn__shouldBeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__shouldBeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldBeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _cameraTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::FirstPersonFlyingController::dyn__cameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__cameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FirstPersonFlyingController.Awake
void GlobalNamespace::FirstPersonFlyingController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Start
void GlobalNamespace::FirstPersonFlyingController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnEnable
void GlobalNamespace::FirstPersonFlyingController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnDisable
void GlobalNamespace::FirstPersonFlyingController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Update
void GlobalNamespace::FirstPersonFlyingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Inject
void GlobalNamespace::FirstPersonFlyingController::Inject(::UnityEngine::Camera* camera, ::GlobalNamespace::VRCenterAdjust* centerAdjust, ::GlobalNamespace::VRController* controller0, ::GlobalNamespace::VRController* controller1, ::VRUIControls::VRInputModule* vrInputModule, bool shouldBeEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Inject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(centerAdjust), ::il2cpp_utils::ExtractType(controller0), ::il2cpp_utils::ExtractType(controller1), ::il2cpp_utils::ExtractType(vrInputModule), ::il2cpp_utils::ExtractType(shouldBeEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, centerAdjust, controller0, controller1, vrInputModule, shouldBeEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _xSensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__xSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__xSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ySensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__ySensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__ySensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ySensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clampVerticalRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__clampVerticalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__clampVerticalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clampVerticalRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minimumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maximumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _smooth
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smoothTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__smoothTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__smoothTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockCursor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__lockCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__lockCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _characterTargetRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MouseLook::dyn__characterTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__characterTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterTargetRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _cameraTargetRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MouseLook::dyn__cameraTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__cameraTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTargetRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cursorIsLocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__cursorIsLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__cursorIsLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorIsLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Init
void GlobalNamespace::MouseLook::Init(::UnityEngine::Transform* character, ::UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetRotations
void GlobalNamespace::MouseLook::SetRotations(::UnityEngine::Quaternion characterRotation, ::UnityEngine::Quaternion cameraRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::SetRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characterRotation), ::il2cpp_utils::ExtractType(cameraRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, characterRotation, cameraRotation);
}
// Autogenerated method: MouseLook.LookRotation
void GlobalNamespace::MouseLook::LookRotation(::UnityEngine::Transform* character, ::UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetCursorLock
void GlobalNamespace::MouseLook::SetCursorLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::SetCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MouseLook.UpdateCursorLock
void GlobalNamespace::MouseLook::UpdateCursorLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::UpdateCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.InternalLockUpdate
void GlobalNamespace::MouseLook::InternalLockUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::InternalLockUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.ClampRotationAroundXAxis
::UnityEngine::Quaternion GlobalNamespace::MouseLook::ClampRotationAroundXAxis(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::ClampRotationAroundXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampRotationAroundXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, q);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardHelper
#include "GlobalNamespace/LeaderboardHelper.hpp"
// Including type: LeaderboardHelper/<CreateOculusLeaderboard>d__2
#include "GlobalNamespace/LeaderboardHelper_-CreateOculusLeaderboard-d__2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LeaderboardIdsModelSO
#include "GlobalNamespace/LeaderboardIdsModelSO.hpp"
// Including type: BeatmapLevelCollectionSO
#include "GlobalNamespace/BeatmapLevelCollectionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _leaderboardIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::LeaderboardHelper::dyn__leaderboardIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::dyn__leaderboardIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaderboardIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardHelper.CreateOculusLeaderboards
void GlobalNamespace::LeaderboardHelper::CreateOculusLeaderboards(::GlobalNamespace::LeaderboardIdsModelSO* leaderboardIdsModel, ::GlobalNamespace::BeatmapLevelCollectionSO* _levelCollection, bool debug, ::StringW appToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::CreateOculusLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOculusLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardIdsModel), ::il2cpp_utils::ExtractType(_levelCollection), ::il2cpp_utils::ExtractType(debug), ::il2cpp_utils::ExtractType(appToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardIdsModel, _levelCollection, debug, appToken);
}
// Autogenerated method: LeaderboardHelper.CreateOculusLeaderboard
void GlobalNamespace::LeaderboardHelper::CreateOculusLeaderboard(::StringW leaderboardID, ::StringW appToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::CreateOculusLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOculusLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardID), ::il2cpp_utils::ExtractType(appToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, leaderboardID, appToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardHelper/<CreateOculusLeaderboard>d__2
#include "GlobalNamespace/LeaderboardHelper_-CreateOculusLeaderboard-d__2.hpp"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leaderboardID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_leaderboardID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_leaderboardID");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String appToken
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_appToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_appToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "appToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpClient <httpClient>5__2
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpClient*& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$httpClient$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$httpClient$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<httpClient>5__2"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.Http.HttpRequestMessage <request>5__3
[[deprecated("Use field access instead!")]] ::System::Net::Http::HttpRequestMessage*& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::System::Net::Http::HttpRequestMessage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> <contentList>5__4
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$contentList$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$contentList$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contentList>5__4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Net.Http.HttpResponseMessage> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>& GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::System::Net::Http::HttpResponseMessage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardHelper/<CreateOculusLeaderboard>d__2.MoveNext
void GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardHelper/<CreateOculusLeaderboard>d__2.SetStateMachine
void GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardHelper::$CreateOculusLeaderboard$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeIdMapper
#include "GlobalNamespace/BakeIdMapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF0C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap1PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap1PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF1C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap2PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap2PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private LightmapDataSO _lightmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightmapDataSO*& GlobalNamespace::BakedLightDataLoader::dyn__lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::dyn__lightmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blackTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BakedLightDataLoader::dyn__blackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::dyn__blackTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakedLightDataLoader.get_lightmapData
::GlobalNamespace::LightmapDataSO* GlobalNamespace::BakedLightDataLoader::get_lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::get_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightmapDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.set_lightmapData
void GlobalNamespace::BakedLightDataLoader::set_lightmapData(::GlobalNamespace::LightmapDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::set_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BakedLightDataLoader..cctor
void GlobalNamespace::BakedLightDataLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightDataLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.Start
void GlobalNamespace::BakedLightDataLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.SetTextureDataToShaders
void GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: BakedLightTexturePacking
#include "GlobalNamespace/BakedLightTexturePacking.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kBakedLightTexturePackingShaderName
::StringW GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBakedLightTexturePackingShaderName
void GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF2C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] _texPropertyIds
::ArrayW<int> GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("", "BakedLightTexturePacking", "_texPropertyIds"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] _texPropertyIds
void GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_texPropertyIds", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF3C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::BakedLightTexturePacking::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "BakedLightTexturePacking", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::BakedLightTexturePacking::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_material", value));
}
// Autogenerated method: BakedLightTexturePacking..cctor
void GlobalNamespace::BakedLightTexturePacking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightTexturePacking.PackTextures
::UnityEngine::RenderTexture* GlobalNamespace::BakedLightTexturePacking::PackTextures(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RenderTexture*>* textures, ::UnityEngine::RenderTextureDescriptor descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textures, descriptor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightUtils
#include "GlobalNamespace/BakedLightUtils.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kMirrorParentNameToIgnore
::StringW GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightUtils", "kMirrorParentNameToIgnore"));
}
// Autogenerated static field setter
// Set static field: static public System.String kMirrorParentNameToIgnore
void GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kMirrorParentNameToIgnore", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDepthOnlyShaderName
::StringW GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightUtils", "kDepthOnlyShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDepthOnlyShaderName
void GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kDepthOnlyShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF4C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _zWritePropertyId
int GlobalNamespace::BakedLightUtils::_get__zWritePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__zWritePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_zWritePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _zWritePropertyId
void GlobalNamespace::BakedLightUtils::_set__zWritePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__zWritePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_zWritePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF5C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilRefValuePropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilRefValuePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilRefValuePropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilRefValuePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF6C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilCompPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilCompPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilCompPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilCompPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112FF7C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilPassOpPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilPassOpPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilPassOpPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilPassOpPropertyId", value));
}
// Autogenerated method: BakedLightUtils..cctor
void GlobalNamespace::BakedLightUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightUtils.ValidateLoadedEnvironmentScene
void GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene(bool validateBakedGIEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", "ValidateLoadedEnvironmentScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validateBakedGIEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, validateBakedGIEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130018
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130028
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130038
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130048
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130058
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _resolutionBeforeDownsample
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakedReflectionProbe::dyn__resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__resolutionBeforeDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolutionBeforeDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsampleByHalfCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakedReflectionProbe::dyn__downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__downsampleByHalfCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampleByHalfCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakedReflectionProbe::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakedReflectionProbe::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ReflectionProbeDataSO _reflectionProbeData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ReflectionProbeDataSO*& GlobalNamespace::BakedReflectionProbe::dyn__reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__reflectionProbeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ReflectionProbeDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _blackCubemap
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::BakedReflectionProbe::dyn__blackCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__blackCubemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackCubemap"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakedReflectionProbe.get_reflectionProbeData
::GlobalNamespace::ReflectionProbeDataSO* GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ReflectionProbeDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.set_reflectionProbeData
void GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData(::GlobalNamespace::ReflectionProbeDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BakedReflectionProbe.get_position
::UnityEngine::Vector3 GlobalNamespace::BakedReflectionProbe::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_resolutionBeforeDownsample
int GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolutionBeforeDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_downsampleByHalfCount
int GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downsampleByHalfCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe..cctor
void GlobalNamespace::BakedReflectionProbe::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedReflectionProbe", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.Start
void GlobalNamespace::BakedReflectionProbe::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.SendDataToShaders
void GlobalNamespace::BakedReflectionProbe::SendDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::SendDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubemapHelpers
#include "GlobalNamespace/CubemapHelpers.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCubemapHelpersShaderName
::StringW GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CubemapHelpers", "kCubemapHelpersShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCubemapHelpersShaderName
void GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapHelpersShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130068
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _cubemapHelpersMaterial
::UnityEngine::Material* GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "CubemapHelpers", "_cubemapHelpersMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _cubemapHelpersMaterial
void GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapHelpersMaterial", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130078
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapHelpers::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapHelpers::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130088
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubeFaceNumberId
int GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubeFaceNumberId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubeFaceNumberId
void GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubeFaceNumberId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapDownsamplePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapDownsamplePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapDownsamplePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapDownsamplePass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapTo2DTexturePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapTo2DTexturePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapTo2DTexturePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapTo2DTexturePass", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130098
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>* GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>*>("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
void GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict(::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11300A8
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
::ArrayW<::UnityEngine::CubemapFace> GlobalNamespace::CubemapHelpers::_get__cubemapFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapFaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::CubemapFace>>("", "CubemapHelpers", "_cubemapFaces"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
void GlobalNamespace::CubemapHelpers::_set__cubemapFaces(::ArrayW<::UnityEngine::CubemapFace> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapFaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaces", value));
}
// Autogenerated method: CubemapHelpers.get_cubemapHelpersMaterial
::UnityEngine::Material* GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "get_cubemapHelpersMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers..cctor
void GlobalNamespace::CubemapHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers.Downsample
void GlobalNamespace::CubemapHelpers::Downsample(::UnityEngine::Texture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::Downsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Downsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dest);
}
// Autogenerated method: CubemapHelpers.CreateDownsampledCubemap
::UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap(::UnityEngine::RenderTexture* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "CreateDownsampledCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, count);
}
// Autogenerated method: CubemapHelpers.Create2DTextureFromCubemap
::UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap(::UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Create2DTextureFromCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated method: CubemapHelpers.DrawCubemapFace
void GlobalNamespace::CubemapHelpers::DrawCubemapFace(::UnityEngine::Texture* cubemap, ::UnityEngine::CubemapFace cubemapFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::DrawCubemapFace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "DrawCubemapFace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap), ::il2cpp_utils::ExtractType(cubemapFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cubemap, cubemapFace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubemapTest
#include "GlobalNamespace/CubemapTest.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11300E8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapTest::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapTest", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapTest::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapTest", "_cubePropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::CubemapTest::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _cubemapMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::CubemapTest::dyn__cubemapMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _flatMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::CubemapTest::dyn__flatMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__flatMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__cubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _downsampledCubemapRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__downsampledCubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__downsampledCubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampledCubemapRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapFlatTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__cubemapFlatTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapFlatTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapFlatTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CubemapTest..cctor
void GlobalNamespace::CubemapTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapTest.Start
void GlobalNamespace::CubemapTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CubemapTest.Update
void GlobalNamespace::CubemapTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableWhenMirrorIsEnabled
#include "GlobalNamespace/DisableWhenMirrorIsEnabled.hpp"
// Including type: Mirror
#include "GlobalNamespace/Mirror.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mirror _mirror
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Mirror*& GlobalNamespace::DisableWhenMirrorIsEnabled::dyn__mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::dyn__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Mirror**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.get_mirror
::GlobalNamespace::Mirror* GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Mirror*, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.set_mirror
void GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror(::GlobalNamespace::Mirror* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.Start
void GlobalNamespace::DisableWhenMirrorIsEnabled::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.OnDestroy
void GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.HandleMirrorDidChangeEnabledState
void GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState(bool isEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMirrorDidChangeEnabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DuplicateMirrorForReflectionProbe
#include "GlobalNamespace/DuplicateMirrorForReflectionProbe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeReflectionDynamicObjectsState
#include "GlobalNamespace/FakeReflectionDynamicObjectsState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Disabled
::GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Disabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled(::GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Enabled
::GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Enabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled(::GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Enabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FakeReflectionDynamicObjectsState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IgnoreForReflectionProbeBaking
#include "GlobalNamespace/IgnoreForReflectionProbeBaking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightBakingPersistentSettingsSO
#include "GlobalNamespace/LightBakingPersistentSettingsSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: LightmapLightsWithIds
#include "GlobalNamespace/LightmapLightsWithIds.hpp"
// Including type: FakeMirrorObjectsInstaller
#include "GlobalNamespace/FakeMirrorObjectsInstaller.hpp"
// Including type: FakeMirrorSettings
#include "GlobalNamespace/FakeMirrorSettings.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultVrResolutionScale
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultVrResolutionScale
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _reflectionsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__reflectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffectToneMappingOff
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectToneMappingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectToneMappingOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectToneMappingOff"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectSO _mainEffectForBaking
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectForBaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectForBaking"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorFromSchemeAlpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__colorFromSchemeAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorFromSchemeAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _bakedLightEditorColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightEditorColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightEditorColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererGraphicsSettingsPresets*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO _mainEffectGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO _bloomPrePassGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectContainerSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectContainerSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BakedLightDataLoader _bakedLightDataLoaderPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakedLightDataLoader*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightDataLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightDataLoaderPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakedLightDataLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BakedReflectionProbe _bakedReflectionProbePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakedReflectionProbe*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedReflectionProbePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedReflectionProbePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakedReflectionProbe**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightmapLightsWithIds _lightmapLightsWithIds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightmapLightsWithIds*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__lightmapLightsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__lightmapLightsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapLightsWithIds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmapLightsWithIds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorObjectsInstaller _fakeMirrorObjectsInstallerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FakeMirrorObjectsInstaller*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorObjectsInstallerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorObjectsInstallerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FakeMirrorObjectsInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorSettings _fakeMirrorSettingsPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FakeMirrorSettings*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorSettingsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorSettingsPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FakeMirrorSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultDepthOnlyWriteMaterialForFakeMirror
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__defaultDepthOnlyWriteMaterialForFakeMirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultDepthOnlyWriteMaterialForFakeMirror"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_reflectionsCount
int GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_reflectionsCount
void GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_colorFromSchemeAlpha
float GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_colorFromSchemeAlpha
void GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightEditorColors
::ArrayW<::UnityEngine::Color> GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightEditorColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Color>, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_defaultDepthOnlyWriteMaterialForFakeMirror
::UnityEngine::Material* GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultDepthOnlyWriteMaterialForFakeMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_mainEffectForBakingIsOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_mainEffectForBakingIsOn
void GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightDataLoaderPrefab
::GlobalNamespace::BakedLightDataLoader* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightDataLoaderPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakedLightDataLoader*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedReflectionProbePrefab
::GlobalNamespace::BakedReflectionProbe* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedReflectionProbePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakedReflectionProbe*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_lightmapLightsWithIds
::GlobalNamespace::LightmapLightsWithIds* GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapLightsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightmapLightsWithIds*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorObjectsInstallerPrefab
::GlobalNamespace::FakeMirrorObjectsInstaller* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorObjectsInstallerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FakeMirrorObjectsInstaller*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorSettingsPrefab
::GlobalNamespace::FakeMirrorSettings* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorSettingsPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FakeMirrorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetGraphicsSettingsForBaking
void GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphicsSettingsForBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetPlatformGraphics
void GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlatformGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetToneMappingOn
void GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: LightBakingPersistentSettingsSO.IsToneMappingOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap1
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::LightmapDataSO::dyn__lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::dyn__lightmap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap1"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap2
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::LightmapDataSO::dyn__lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::dyn__lightmap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap2"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmapDataSO.get_lightmap1
::UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::get_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap1
void GlobalNamespace::LightmapDataSO::set_lightmap1(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::set_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightmapDataSO.get_lightmap2
::UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::get_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap2
void GlobalNamespace::LightmapDataSO::set_lightmap2(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::set_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PseudoHDREncoding
#include "GlobalNamespace/PseudoHDREncoding.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11302E8
// Autogenerated static field getter
// Get static field: static private System.String kPseudoHDREncodingShaderName
::StringW GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPseudoHDREncodingShaderName
void GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x11302F8
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::PseudoHDREncoding::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "PseudoHDREncoding", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::PseudoHDREncoding::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "_material", value));
}
// Autogenerated method: PseudoHDREncoding.CreatePseudoHDREncodedTexture
::UnityEngine::RenderTexture* GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture(::UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PseudoHDREncoding", "CreatePseudoHDREncodedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeBakingOverride
#include "GlobalNamespace/ReflectionProbeBakingOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ReflectionProbeBakingOverride/ActiveStateHandling _stateHandling
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling& GlobalNamespace::ReflectionProbeBakingOverride::dyn__stateHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__stateHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateHandling"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ReflectionProbeBakingOverride::dyn__setPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__setPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ReflectionProbeBakingOverride::dyn__localPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__localPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ReflectionProbeBakingOverride::dyn__setRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__setRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ReflectionProbeBakingOverride::dyn__localRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__localRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setScale
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ReflectionProbeBakingOverride::dyn__setScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__setScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setScale"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localScale
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::ReflectionProbeBakingOverride::dyn__localScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::dyn__localScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localScale"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReflectionProbeBakingOverride.UpdateForProbeBaking
void GlobalNamespace::ReflectionProbeBakingOverride::UpdateForProbeBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::UpdateForProbeBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateForProbeBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeBakingOverride/ActiveStateHandling
#include "GlobalNamespace/ReflectionProbeBakingOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ReflectionProbeBakingOverride/ActiveStateHandling LeaveAsIs
::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_LeaveAsIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_LeaveAsIs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling>("", "ReflectionProbeBakingOverride/ActiveStateHandling", "LeaveAsIs"));
}
// Autogenerated static field setter
// Set static field: static public ReflectionProbeBakingOverride/ActiveStateHandling LeaveAsIs
void GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_LeaveAsIs(::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_LeaveAsIs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReflectionProbeBakingOverride/ActiveStateHandling", "LeaveAsIs", value));
}
// Autogenerated static field getter
// Get static field: static public ReflectionProbeBakingOverride/ActiveStateHandling Enable
::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_Enable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling>("", "ReflectionProbeBakingOverride/ActiveStateHandling", "Enable"));
}
// Autogenerated static field setter
// Set static field: static public ReflectionProbeBakingOverride/ActiveStateHandling Enable
void GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_Enable(::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_Enable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReflectionProbeBakingOverride/ActiveStateHandling", "Enable", value));
}
// Autogenerated static field getter
// Get static field: static public ReflectionProbeBakingOverride/ActiveStateHandling Disable
::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_get_Disable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling>("", "ReflectionProbeBakingOverride/ActiveStateHandling", "Disable"));
}
// Autogenerated static field setter
// Set static field: static public ReflectionProbeBakingOverride/ActiveStateHandling Disable
void GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_Disable(::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::_set_Disable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ReflectionProbeBakingOverride/ActiveStateHandling", "Disable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeBakingOverride::ActiveStateHandling::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap1
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap1"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap2
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap2"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap1
::UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cubemap*, false>(this, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap1
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1(::UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap2
::UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cubemap*, false>(this, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap2
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2(::UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UseOnlyForReflectionProbeBaking
#include "GlobalNamespace/UseOnlyForReflectionProbeBaking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UseOnlyForReflectionProbeBaking.Awake
void GlobalNamespace::UseOnlyForReflectionProbeBaking::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UseOnlyForReflectionProbeBaking::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListExtensions
#include "GlobalNamespace/ListExtensions.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.IComparable`1
#include "System/IComparable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x1130560
// Autogenerated static field getter
// Get static field: static private readonly System.Random _random
::System::Random* GlobalNamespace::ListExtensions::_get__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::_get__random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("", "ListExtensions", "_random"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random _random
void GlobalNamespace::ListExtensions::_set__random(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::_set__random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListExtensions", "_random", value));
}
// Autogenerated method: ListExtensions..cctor
void GlobalNamespace::ListExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ListExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
