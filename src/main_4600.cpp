// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: MultiplayerResultsAvatarController
#include "GlobalNamespace/MultiplayerResultsAvatarController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _positionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__positionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__positionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MultiplayerResultsTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::MultiplayerResultsTableCell::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MultiplayerResultsTableCell::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::CanvasGroup*& GlobalNamespace::MultiplayerResultsTableCell::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsAvatarController _multiplayerResultsAvatarController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsAvatarController*& GlobalNamespace::MultiplayerResultsTableCell::dyn__multiplayerResultsAvatarController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__multiplayerResultsAvatarController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerResultsAvatarController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _avatarScale
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableCell::dyn__avatarScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__avatarScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalSecondPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__normalSecondPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__normalSecondPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSecondPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalLastPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__normalLastPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__normalLastPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalLastPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _localPlayerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__localPlayerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__localPlayerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _winnerColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__winnerColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__winnerColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MultiplayerResultsTableCell::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableCell.set_alpha
void GlobalNamespace::MultiplayerResultsTableCell::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsTableCell.SetData
void GlobalNamespace::MultiplayerResultsTableCell::SetData(::GlobalNamespace::IConnectedPlayer* connectedPlayer, int position, ::StringW playerName, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool isLocalPlayer, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(isLocalPlayer), ::il2cpp_utils::ExtractType(numberOfPlayers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer, position, playerName, levelCompletionResults, isLocalPlayer, numberOfPlayers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView
#include "GlobalNamespace/MultiplayerResultsTableView.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: MultiplayerOffsetPositionByLocalPlayerPosition
#include "GlobalNamespace/MultiplayerOffsetPositionByLocalPlayerPosition.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MultiplayerResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerResultsTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::MultiplayerResultsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _tableViewRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::dyn__tableViewRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tableViewRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableViewRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsTableCell _winnerTableCell
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::dyn__winnerTableCell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__winnerTableCell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerTableCell"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerResultsTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startRowXPosition
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__startRowXPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__startRowXPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRowXPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowXOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__rowXOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowXOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowXOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__animationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationSeparationTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__animationSeparationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__animationSeparationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationSeparationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _winnerAnimationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__winnerAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__winnerAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_winnerAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duelTablePosXOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::dyn__duelTablePosXOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__duelTablePosXOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelTablePosXOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerOffsetPositionByLocalPlayerPosition _multiplayerOffsetByLocalPlayerPosition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerOffsetPositionByLocalPlayerPosition*& GlobalNamespace::MultiplayerResultsTableView::dyn__multiplayerOffsetByLocalPlayerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__multiplayerOffsetByLocalPlayerPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerOffsetByLocalPlayerPosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerOffsetPositionByLocalPlayerPosition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _outroSfxAudioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::MultiplayerResultsTableView::dyn__outroSfxAudioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__outroSfxAudioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outroSfxAudioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _rowSlideAudioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::MultiplayerResultsTableView::dyn__rowSlideAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rowSlideAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowSlideAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _avatarSlideAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MultiplayerResultsTableView::dyn__avatarSlideAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__avatarSlideAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarSlideAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerResultsTableView::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLayoutProvider _layoutProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLayoutProvider*& GlobalNamespace::MultiplayerResultsTableView::dyn__layoutProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__layoutProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layoutProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLayoutProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& GlobalNamespace::MultiplayerResultsTableView::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<MultiplayerPlayerResultsData> _dataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>*& GlobalNamespace::MultiplayerResultsTableView::dyn__dataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__dataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MultiplayerResultsTableView::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MultiplayerResultsTableView::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastParentPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastParentPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _lastParentRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::dyn__lastParentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastParentRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView.CellSize
float GlobalNamespace::MultiplayerResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.NumberOfCells
int GlobalNamespace::MultiplayerResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.Awake
void GlobalNamespace::MultiplayerResultsTableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.OnDestroy
void GlobalNamespace::MultiplayerResultsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::MultiplayerResultsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: MultiplayerResultsTableView.SetData
void GlobalNamespace::MultiplayerResultsTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated method: MultiplayerResultsTableView.StartAnimation
float GlobalNamespace::MultiplayerResultsTableView::StartAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::StartAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.PlayRandomRowSlideInSound
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayRandomRowSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.PlayAvatarSlideInSound
::System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAvatarSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_1
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_4
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_5
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_5(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableCell cell
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableCell*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_cell() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::dyn_cell");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cell"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__0
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__0(::UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__2
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__2(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RectTransform winnerRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::dyn_winnerRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::dyn_winnerRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "winnerRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_1.<StartAnimation>b__3
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::$StartAnimation$b__3(::UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::<StartAnimation>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableView*& GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerResultsTableView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsTableView*& GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsTableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MusicPackPromoBanner
#include "GlobalNamespace/MusicPackPromoBanner.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x10ED998
// Autogenerated static field getter
// Get static field: static private System.String kPlayNow
::StringW GlobalNamespace::MusicPackPromoBanner::_get_kPlayNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_get_kPlayNow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MusicPackPromoBanner", "kPlayNow"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayNow
void GlobalNamespace::MusicPackPromoBanner::_set_kPlayNow(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_set_kPlayNow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MusicPackPromoBanner", "kPlayNow", value));
}
// [LocalizationKeyAttribute] Offset: 0x10ED9A8
// Autogenerated static field getter
// Get static field: static private System.String kGetNow
::StringW GlobalNamespace::MusicPackPromoBanner::_get_kGetNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_get_kGetNow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MusicPackPromoBanner", "kGetNow"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGetNow
void GlobalNamespace::MusicPackPromoBanner::_set_kGetNow(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::_set_kGetNow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MusicPackPromoBanner", "kGetNow", value));
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _promoText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MusicPackPromoBanner::dyn__promoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__promoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _backgroundImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MusicPackPromoBanner::dyn__backgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__backgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _coverImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MusicPackPromoBanner::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _promoButtonText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MusicPackPromoBanner::dyn__promoButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__promoButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_promoButtonText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack _currentPromoMusicPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoMusicPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoMusicPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPromoMusicPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel _currentPromoBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::dyn__currentPromoBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPromoBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MusicPackPromoBanner.get_currentPromoBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_currentPromoBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPromoBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.get_currentPromoMusicPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_currentPromoMusicPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPromoMusicPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.get_promoButtonText
::StringW GlobalNamespace::MusicPackPromoBanner::get_promoButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::get_promoButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_promoButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MusicPackPromoBanner.Setup
void GlobalNamespace::MusicPackPromoBanner::Setup(::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* musicPackPromoData, bool probablyOwned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MusicPackPromoBanner::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(musicPackPromoData), ::il2cpp_utils::ExtractType(probablyOwned)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, musicPackPromoData, probablyOwned);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ObjectiveListItem::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _conditionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ObjectiveListItem::dyn__conditionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::dyn__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectiveListItem.set_title
void GlobalNamespace::ObjectiveListItem::set_title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_conditionText
void GlobalNamespace::ObjectiveListItem::set_conditionText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_hideCondition
void GlobalNamespace::ObjectiveListItem::set_hideCondition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectiveListItem::set_hideCondition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCondition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveListItemsList
#include "GlobalNamespace/ObjectiveListItemsList.hpp"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PageControl
#include "GlobalNamespace/PageControl.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: PageControlElement
#include "GlobalNamespace/PageControlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _content
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::PageControl::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spacing
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PageControl::dyn__spacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__spacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PageControlElement _elementPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PageControlElement*& GlobalNamespace::PageControl::dyn__elementPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__elementPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PageControlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<PageControlElement> _activeElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PageControlElement*>*& GlobalNamespace::PageControl::dyn__activeElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__activeElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PageControlElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<PageControlElement> _inactiveElements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::PageControlElement*>*& GlobalNamespace::PageControl::dyn__inactiveElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__inactiveElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inactiveElements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::PageControlElement*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _selectedPage
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PageControl::dyn__selectedPage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__selectedPage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedPage"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pagesCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PageControl::dyn__pagesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::dyn__pagesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pagesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PageControl.SetPagesCount
void GlobalNamespace::PageControl::SetPagesCount(int pagesCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetPagesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPagesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pagesCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pagesCount);
}
// Autogenerated method: PageControl.SetSelectedPageIndex
void GlobalNamespace::PageControl::SetSelectedPageIndex(int page) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetSelectedPageIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedPageIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(page)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, page);
}
// Autogenerated method: PageControl.SetVisible
void GlobalNamespace::PageControl::SetVisible(bool isVisible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControl::SetVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVisible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isVisible);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PageControlElement
#include "GlobalNamespace/PageControlElement.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::PageControlElement::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _imageView
[[deprecated("Use field access instead!")]] ::HMUI::ImageView*& GlobalNamespace::PageControlElement::dyn__imageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__imageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_imageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PageControlElement::dyn__selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__selectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _unselectedColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PageControlElement::dyn__unselectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::dyn__unselectedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unselectedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PageControlElement.get_rectTransform
::UnityEngine::RectTransform* GlobalNamespace::PageControlElement::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: PageControlElement.SetSelected
void GlobalNamespace::PageControlElement::SetSelected(bool isSelected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PageControlElement::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isSelected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isSelected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::ResultObjectiveListItem::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconGlow
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::ResultObjectiveListItem::dyn__iconGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__iconGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconGlow"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _titleText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _conditionText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__conditionText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__conditionText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _valueText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultObjectiveListItem::dyn__valueText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::dyn__valueText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultObjectiveListItem.set_iconColor
void GlobalNamespace::ResultObjectiveListItem::set_iconColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_iconColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_icon
void GlobalNamespace::ResultObjectiveListItem::set_icon(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_iconGlow
void GlobalNamespace::ResultObjectiveListItem::set_iconGlow(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_iconGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_title
void GlobalNamespace::ResultObjectiveListItem::set_title(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_conditionText
void GlobalNamespace::ResultObjectiveListItem::set_conditionText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideConditionText
void GlobalNamespace::ResultObjectiveListItem::set_hideConditionText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_hideConditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideConditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_valueText
void GlobalNamespace::ResultObjectiveListItem::set_valueText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_valueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_valueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideValueText
void GlobalNamespace::ResultObjectiveListItem::set_hideValueText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultObjectiveListItem::set_hideValueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideValueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultObjectiveListItemsList
#include "GlobalNamespace/ResultObjectiveListItemsList.hpp"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _border
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::ResultsTableCell::dyn__border() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__border");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_border"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _orderText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__orderText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__orderText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_orderText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ResultsTableCell::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsTableCell.SetData
void GlobalNamespace::ResultsTableCell::SetData(int order, ::GlobalNamespace::IConnectedPlayer* connectedPlayer, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order), ::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, order, connectedPlayer, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsTableView
#include "GlobalNamespace/ResultsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::ResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::ResultsTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ResultsTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::ResultsTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ResultsTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsTableCell*& GlobalNamespace::ResultsTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ResultsTableView::dyn__rowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__rowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<MultiplayerPlayerResultsData> _dataList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>*& GlobalNamespace::ResultsTableView::dyn__dataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::dyn__dataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResultsTableView.CellSize
float GlobalNamespace::ResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.NumberOfCells
int GlobalNamespace::ResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::ResultsTableView::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: ResultsTableView.SetData
void GlobalNamespace::ResultsTableView::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServerCodeView
#include "GlobalNamespace/ServerCodeView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _serverCodeText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::ServerCodeView::dyn__serverCodeText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__serverCodeText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCodeText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::ServerCodeView::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::ServerCodeView::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ServerCodeView::dyn__serverCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__serverCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _codeIsShown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ServerCodeView::dyn__codeIsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::dyn__codeIsShown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_codeIsShown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ServerCodeView.SetCode
void GlobalNamespace::ServerCodeView::SetCode(::StringW serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::SetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: ServerCodeView.OnEnable
void GlobalNamespace::ServerCodeView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.OnDisable
void GlobalNamespace::ServerCodeView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.HandleShowServerCodeButtonPressed
void GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleShowServerCodeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.RefreshText
void GlobalNamespace::ServerCodeView::RefreshText(bool showCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServerCodeView::RefreshText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelBuyInfoView
#include "GlobalNamespace/StandardLevelBuyInfoView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::StandardLevelBuyInfoView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyLevelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__buyLevelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__buyLevelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyLevelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _openPackButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__openPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__openPackButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openPackButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyPackButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyInfoView::dyn__buyPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::dyn__buyPackButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyPackButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelBuyInfoView.get_buyLevelButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyLevelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_openPackButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_buyPackButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.RefreshView
void GlobalNamespace::StandardLevelBuyInfoView::RefreshView(::StringW infoText, bool canBuyPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyInfoView::RefreshView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infoText), ::il2cpp_utils::ExtractType(canBuyPack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, infoText, canBuyPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelBuyView
#include "GlobalNamespace/StandardLevelBuyView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::StandardLevelBuyView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _buyButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelBuyView::dyn__buyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::dyn__buyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelBuyView.get_buyButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyView::get_buyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::get_buyButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyView.SetContent
void GlobalNamespace::StandardLevelBuyView::SetContent(::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelBuyView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, previewBeatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailView
#include "GlobalNamespace/StandardLevelDetailView.hpp"
// Including type: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34
#include "GlobalNamespace/StandardLevelDetailView_-SetContentForBeatmapDataAsync-d__34.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LevelParamsPanel
#include "GlobalNamespace/LevelParamsPanel.hpp"
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _actionButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelDetailView::dyn__actionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__actionButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _actionButtonText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::StandardLevelDetailView::dyn__actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__actionButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButtonText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _practiceButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::StandardLevelDetailView::dyn__practiceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__practiceButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelBar _levelBar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelBar*& GlobalNamespace::StandardLevelDetailView::dyn__levelBar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__levelBar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelBar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelBar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelParamsPanel _levelParamsPanel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelParamsPanel*& GlobalNamespace::StandardLevelDetailView::dyn__levelParamsPanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__levelParamsPanel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelParamsPanel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelParamsPanel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultySegmentedControlController _beatmapDifficultySegmentedControlController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultySegmentedControlController*& GlobalNamespace::StandardLevelDetailView::dyn__beatmapDifficultySegmentedControlController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__beatmapDifficultySegmentedControlController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDifficultySegmentedControlController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultySegmentedControlController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSegmentedControlController _beatmapCharacteristicSegmentedControlController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSegmentedControlController*& GlobalNamespace::StandardLevelDetailView::dyn__beatmapCharacteristicSegmentedControlController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__beatmapCharacteristicSegmentedControlController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicSegmentedControlController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSegmentedControlController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _favoriteToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::StandardLevelDetailView::dyn__favoriteToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__favoriteToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_favoriteToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<StandardLevelDetailView,IDifficultyBeatmap> didChangeDifficultyBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>*& GlobalNamespace::StandardLevelDetailView::dyn_didChangeDifficultyBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn_didChangeDifficultyBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeDifficultyBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<StandardLevelDetailView,UnityEngine.UI.Toggle> didFavoriteToggleChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>*& GlobalNamespace::StandardLevelDetailView::dyn_didFavoriteToggleChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn_didFavoriteToggleChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFavoriteToggleChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevel _level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevel*& GlobalNamespace::StandardLevelDetailView::dyn__level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerData _playerData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerData*& GlobalNamespace::StandardLevelDetailView::dyn__playerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__playerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDifficultyBeatmap _selectedDifficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::StandardLevelDetailView::dyn__selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__selectedDifficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedDifficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::StandardLevelDetailView::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelDetailView.get_selectedDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.get_actionButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_actionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_actionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_actionButtonText
void GlobalNamespace::StandardLevelDetailView::set_actionButtonText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::set_actionButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.get_practiceButton
::UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_practiceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::get_practiceButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_hidePracticeButton
void GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.add_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent(::System::Action_2<::GlobalNamespace::StandardLevelDetailView*, ::UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.SetContent
void GlobalNamespace::StandardLevelDetailView::SetContent(::GlobalNamespace::IBeatmapLevel* level, ::GlobalNamespace::BeatmapDifficulty defaultDifficulty, ::GlobalNamespace::BeatmapCharacteristicSO* defaultBeatmapCharacteristic, ::GlobalNamespace::PlayerData* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(defaultDifficulty), ::il2cpp_utils::ExtractType(defaultBeatmapCharacteristic), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, defaultDifficulty, defaultBeatmapCharacteristic, playerData);
}
// Autogenerated method: StandardLevelDetailView.Awake
void GlobalNamespace::StandardLevelDetailView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.OnDestroy
void GlobalNamespace::StandardLevelDetailView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty(::GlobalNamespace::BeatmapDifficultySegmentedControlController* controller, ::GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(difficulty)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, difficulty);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSegmentedControlController* controller, ::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller, beatmapCharacteristic);
}
// Autogenerated method: StandardLevelDetailView.RefreshContent
void GlobalNamespace::StandardLevelDetailView::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.SetContentForBeatmapDataAsync
void GlobalNamespace::StandardLevelDetailView::SetContentForBeatmapDataAsync(::GlobalNamespace::IDifficultyBeatmap* selectedDifficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::SetContentForBeatmapDataAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContentForBeatmapDataAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedDifficultyBeatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedDifficultyBeatmap);
}
// Autogenerated method: StandardLevelDetailView.ClearContent
void GlobalNamespace::StandardLevelDetailView::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.<Awake>b__29_0
void GlobalNamespace::StandardLevelDetailView::$Awake$b__29_0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::<Awake>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34
#include "GlobalNamespace/StandardLevelDetailView_-SetContentForBeatmapDataAsync-d__34.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapDataBasicInfo
#include "GlobalNamespace/IBeatmapDataBasicInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public StandardLevelDetailView <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::StandardLevelDetailView*& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardLevelDetailView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDifficultyBeatmap selectedDifficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_selectedDifficultyBeatmap");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedDifficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IBeatmapDataBasicInfo> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>& GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IBeatmapDataBasicInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34.MoveNext
void GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView/<SetContentForBeatmapDataAsync>d__34.SetStateMachine
void GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardLevelDetailView::$SetContentForBeatmapDataAsync$d__34::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AbTestExperimentDefinitionSO
#include "GlobalNamespace/AbTestExperimentDefinitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _experimentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__experimentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__experimentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _test1GroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test1GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test1GroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test1GroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _test2GroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test2GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__test2GroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_test2GroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controlGroupSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__controlGroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__controlGroupSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controlGroupSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _salt
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AbTestExperimentDefinitionSO/Group _currentUserTreatmentGroup
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AbTestExperimentDefinitionSO::Group& GlobalNamespace::AbTestExperimentDefinitionSO::dyn__currentUserTreatmentGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::dyn__currentUserTreatmentGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentUserTreatmentGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AbTestExperimentDefinitionSO::Group*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_test1GroupSize
float GlobalNamespace::AbTestExperimentDefinitionSO::get_test1GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_test1GroupSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_test1GroupSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_test2GroupSize
float GlobalNamespace::AbTestExperimentDefinitionSO::get_test2GroupSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_test2GroupSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_test2GroupSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_experimentName
::StringW GlobalNamespace::AbTestExperimentDefinitionSO::get_experimentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_experimentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.get_currentUserTreatmentGroup
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::get_currentUserTreatmentGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::get_currentUserTreatmentGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentUserTreatmentGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AbTestExperimentDefinitionSO::Group, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.OnValidate
void GlobalNamespace::AbTestExperimentDefinitionSO::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AbTestExperimentDefinitionSO.ComputeCurrentUserTreatment
void GlobalNamespace::AbTestExperimentDefinitionSO::ComputeCurrentUserTreatment(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::ComputeCurrentUserTreatment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeCurrentUserTreatment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: AbTestExperimentDefinitionSO.ForceSetTreatmentGroup
void GlobalNamespace::AbTestExperimentDefinitionSO::ForceSetTreatmentGroup(::GlobalNamespace::AbTestExperimentDefinitionSO::Group group) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::ForceSetTreatmentGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceSetTreatmentGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(group)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, group);
}
// Autogenerated method: AbTestExperimentDefinitionSO.AbSplit
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::AbSplit(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::AbSplit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AbSplit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AbTestExperimentDefinitionSO::Group, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AbTestExperimentDefinitionSO/Group
#include "GlobalNamespace/AbTestExperimentDefinitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Control
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Control() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Control");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Control"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Control
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Control(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Control");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Control", value));
}
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Test1
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Test1"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Test1
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test1(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Test1", value));
}
// Autogenerated static field getter
// Get static field: static public AbTestExperimentDefinitionSO/Group Test2
::GlobalNamespace::AbTestExperimentDefinitionSO::Group GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_get_Test2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AbTestExperimentDefinitionSO::Group>("", "AbTestExperimentDefinitionSO/Group", "Test2"));
}
// Autogenerated static field setter
// Set static field: static public AbTestExperimentDefinitionSO/Group Test2
void GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test2(::GlobalNamespace::AbTestExperimentDefinitionSO::Group value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::_set_Test2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AbTestExperimentDefinitionSO/Group", "Test2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AbTestExperimentDefinitionSO::Group::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AbTestExperimentDefinitionSO::Group::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AssetObjectListSO
#include "GlobalNamespace/AssetObjectListSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Object[] _objects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Object*>& GlobalNamespace::AssetObjectListSO::dyn__objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssetObjectListSO::dyn__objects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Object*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AssetObjectListSO.get_objects
::ArrayW<::UnityEngine::Object*> GlobalNamespace::AssetObjectListSO::get_objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssetObjectListSO::get_objects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_Element.hpp"
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_EnvironmentColor.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassBackgroundColorsGradient*& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__bloomPrePassBackgroundColorsGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__bloomPrePassBackgroundColorsGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColorsGradient"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundColorsGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element[] _elements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*>& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentColorManager _colorManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorManager*& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradientFromColorSchemeColors.Start
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean loadFromColorScheme
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_loadFromColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_loadFromColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loadFromColorScheme"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor environmentColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_environmentColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_environmentColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Element::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors_EnvironmentColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0Boost
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color0Boost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0Boost"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color0Boost
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0Boost(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color0Boost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color0Boost", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1Boost
::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_get_Color1Boost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor>("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1Boost"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor Color1Boost
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1Boost(::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::_set_Color1Boost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColorsGradientFromColorSchemeColors/EnvironmentColor", "Color1Boost", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::EnvironmentColor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ColorScheme _colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorScheme*& GlobalNamespace::ColorManager::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorManager.get_obstaclesColor
::UnityEngine::Color GlobalNamespace::ColorManager::get_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::get_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorManager.ColorForType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForType(::GlobalNamespace::EnvironmentColorType type, bool boost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(boost)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type, boost);
}
// Autogenerated method: ColorManager.ColorForType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForType(::GlobalNamespace::ColorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.ColorForSaberType
::UnityEngine::Color GlobalNamespace::ColorManager::ColorForSaberType(::GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::ColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.EffectsColorForSaberType
::UnityEngine::Color GlobalNamespace::ColorManager::EffectsColorForSaberType(::GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::EffectsColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EffectsColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.GetObstacleEffectColor
::UnityEngine::Color GlobalNamespace::ColorManager::GetObstacleEffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManager::GetObstacleEffectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacleEffectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeConverter
#include "GlobalNamespace/ColorSchemeConverter.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: ColorSchemeNetSerializable
#include "GlobalNamespace/ColorSchemeNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeConverter.FromNetSerializable
::GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeConverter::FromNetSerializable(::GlobalNamespace::ColorSchemeNetSerializable serialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeConverter::FromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorSchemeConverter", "FromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialized)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorScheme*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, serialized);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CrashManagerSO
#include "GlobalNamespace/CrashManagerSO.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _logString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CrashManagerSO::dyn__logString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::dyn__logString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _stackTrace
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CrashManagerSO::dyn__stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::dyn__stackTrace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stackTrace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CrashManagerSO.get_logString
::StringW GlobalNamespace::CrashManagerSO::get_logString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::get_logString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.get_stackTrace
::StringW GlobalNamespace::CrashManagerSO::get_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::get_stackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.StartCatchingExceptions
void GlobalNamespace::CrashManagerSO::StartCatchingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::StartCatchingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCatchingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.OnDisable
void GlobalNamespace::CrashManagerSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.HandleLog
void GlobalNamespace::CrashManagerSO::HandleLog(::StringW logString, ::StringW stackTrace, ::UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CrashManagerSO::HandleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logString, stackTrace, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DirectoryHelper
#include "GlobalNamespace/DirectoryHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DirectoryHelper.IsDirectoryWritable
bool GlobalNamespace::DirectoryHelper::IsDirectoryWritable(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DirectoryHelper::IsDirectoryWritable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DirectoryHelper", "IsDirectoryWritable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelDataSO
#include "GlobalNamespace/DlcPromoPanelDataSO.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _defaultMusicPackPromoIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__defaultMusicPackPromoIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__defaultMusicPackPromoIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultMusicPackPromoIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO/MusicPackPromoInfo[] _musicPackPromoInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>& GlobalNamespace::DlcPromoPanelDataSO::dyn__musicPackPromoInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__musicPackPromoInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackPromoInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cutOffTest
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__cutOffTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__cutOffTest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOffTest"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _minNumberOfNotOwnedPacks
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelDataSO::dyn__minNumberOfNotOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::dyn__minNumberOfNotOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minNumberOfNotOwnedPacks"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelDataSO.get_cutOffTest
int GlobalNamespace::DlcPromoPanelDataSO::get_cutOffTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_cutOffTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutOffTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_minNumberOfNotOwnedPacks
int GlobalNamespace::DlcPromoPanelDataSO::get_minNumberOfNotOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_minNumberOfNotOwnedPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minNumberOfNotOwnedPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_musicPackPromoInfos
::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*> GlobalNamespace::DlcPromoPanelDataSO::get_musicPackPromoInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_musicPackPromoInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_musicPackPromoInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO.get_defaultMusicPackPromo
::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* GlobalNamespace::DlcPromoPanelDataSO::get_defaultMusicPackPromo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::get_defaultMusicPackPromo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultMusicPackPromo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PreviewBeatmapLevelPackSO _beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PreviewBeatmapLevelPackSO*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviewBeatmapLevelPackSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO _beatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSO*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__beatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _bannerImage
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::dyn__bannerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bannerImage"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_previewBeatmapLevelPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_previewBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelDataSO/MusicPackPromoInfo.get_bannerImage
::UnityEngine::Sprite* GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo::get_bannerImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bannerImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _defaultColorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::EnvironmentColorManager::dyn__defaultColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__defaultColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor0Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleColorSO _environmentColor1Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleColorSO*& GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__environmentColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorScheme _colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorScheme*& GlobalNamespace::EnvironmentColorManager::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor0
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor0Boost
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1Boost
::UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Awake
void GlobalNamespace::EnvironmentColorManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Start
void GlobalNamespace::EnvironmentColorManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentColorManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FirstPersonFlyingController
#include "GlobalNamespace/FirstPersonFlyingController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FirstPersonFlyingController::dyn__moveSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__moveSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::FirstPersonFlyingController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::FirstPersonFlyingController::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFov
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FirstPersonFlyingController::dyn__cameraFov() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__cameraFov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFov"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRCenterAdjust _centerAdjust
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRCenterAdjust*& GlobalNamespace::FirstPersonFlyingController::dyn__centerAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__centerAdjust");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerAdjust"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRCenterAdjust**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::FirstPersonFlyingController::dyn__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::FirstPersonFlyingController::dyn__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.VRInputModule _vrInputModule
[[deprecated("Use field access instead!")]] ::VRUIControls::VRInputModule*& GlobalNamespace::FirstPersonFlyingController::dyn__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<::VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _controllerModels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::FirstPersonFlyingController::dyn__controllerModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__controllerModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllerModels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MouseLook _mouseLook
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MouseLook*& GlobalNamespace::FirstPersonFlyingController::dyn__mouseLook() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__mouseLook");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouseLook"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MouseLook**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shouldBeEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::FirstPersonFlyingController::dyn__shouldBeEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__shouldBeEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shouldBeEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _cameraTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::FirstPersonFlyingController::dyn__cameraTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::dyn__cameraTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FirstPersonFlyingController.Awake
void GlobalNamespace::FirstPersonFlyingController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Start
void GlobalNamespace::FirstPersonFlyingController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnEnable
void GlobalNamespace::FirstPersonFlyingController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnDisable
void GlobalNamespace::FirstPersonFlyingController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Update
void GlobalNamespace::FirstPersonFlyingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Inject
void GlobalNamespace::FirstPersonFlyingController::Inject(::UnityEngine::Camera* camera, ::GlobalNamespace::VRCenterAdjust* centerAdjust, ::GlobalNamespace::VRController* controller0, ::GlobalNamespace::VRController* controller1, ::VRUIControls::VRInputModule* vrInputModule, bool shouldBeEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FirstPersonFlyingController::Inject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Inject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(centerAdjust), ::il2cpp_utils::ExtractType(controller0), ::il2cpp_utils::ExtractType(controller1), ::il2cpp_utils::ExtractType(vrInputModule), ::il2cpp_utils::ExtractType(shouldBeEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, centerAdjust, controller0, controller1, vrInputModule, shouldBeEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _xSensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__xSensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__xSensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xSensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ySensitivity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__ySensitivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__ySensitivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ySensitivity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clampVerticalRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__clampVerticalRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__clampVerticalRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clampVerticalRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minimumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__minimumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__minimumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minimumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maximumX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__maximumX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__maximumX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maximumX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _smooth
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smoothTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MouseLook::dyn__smoothTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__smoothTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lockCursor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__lockCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__lockCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _characterTargetRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MouseLook::dyn__characterTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__characterTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_characterTargetRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _cameraTargetRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MouseLook::dyn__cameraTargetRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__cameraTargetRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraTargetRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cursorIsLocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MouseLook::dyn__cursorIsLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::dyn__cursorIsLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorIsLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MouseLook.Init
void GlobalNamespace::MouseLook::Init(::UnityEngine::Transform* character, ::UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetRotations
void GlobalNamespace::MouseLook::SetRotations(::UnityEngine::Quaternion characterRotation, ::UnityEngine::Quaternion cameraRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::SetRotations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(characterRotation), ::il2cpp_utils::ExtractType(cameraRotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, characterRotation, cameraRotation);
}
// Autogenerated method: MouseLook.LookRotation
void GlobalNamespace::MouseLook::LookRotation(::UnityEngine::Transform* character, ::UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetCursorLock
void GlobalNamespace::MouseLook::SetCursorLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::SetCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MouseLook.UpdateCursorLock
void GlobalNamespace::MouseLook::UpdateCursorLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::UpdateCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.InternalLockUpdate
void GlobalNamespace::MouseLook::InternalLockUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::InternalLockUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.ClampRotationAroundXAxis
::UnityEngine::Quaternion GlobalNamespace::MouseLook::ClampRotationAroundXAxis(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MouseLook::ClampRotationAroundXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampRotationAroundXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, q);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LanguageSO
#include "GlobalNamespace/LanguageSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakeIdMapper
#include "GlobalNamespace/BakeIdMapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE0F4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap1PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_get__lightMap1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap1PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_set__lightMap1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE104
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _lightMap2PropertyId
int GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_get__lightMap2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightDataLoader", "_lightMap2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _lightMap2PropertyId
void GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::_set__lightMap2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightDataLoader", "_lightMap2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private LightmapDataSO _lightmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightmapDataSO*& GlobalNamespace::BakedLightDataLoader::dyn__lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::dyn__lightmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmapDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blackTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::BakedLightDataLoader::dyn__blackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::dyn__blackTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakedLightDataLoader.get_lightmapData
::GlobalNamespace::LightmapDataSO* GlobalNamespace::BakedLightDataLoader::get_lightmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::get_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightmapDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.set_lightmapData
void GlobalNamespace::BakedLightDataLoader::set_lightmapData(::GlobalNamespace::LightmapDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::set_lightmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BakedLightDataLoader..cctor
void GlobalNamespace::BakedLightDataLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightDataLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.Start
void GlobalNamespace::BakedLightDataLoader::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BakedLightDataLoader.SetTextureDataToShaders
void GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightDataLoader::SetTextureDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RenderTextureDescriptor
#include "UnityEngine/RenderTextureDescriptor.hpp"
// Including type: BakedLightTexturePacking
#include "GlobalNamespace/BakedLightTexturePacking.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kBakedLightTexturePackingShaderName
::StringW GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get_kBakedLightTexturePackingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBakedLightTexturePackingShaderName
void GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set_kBakedLightTexturePackingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "kBakedLightTexturePackingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE114
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] _texPropertyIds
::ArrayW<int> GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get__texPropertyIds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("", "BakedLightTexturePacking", "_texPropertyIds"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] _texPropertyIds
void GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set__texPropertyIds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_texPropertyIds", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE124
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::BakedLightTexturePacking::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "BakedLightTexturePacking", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::BakedLightTexturePacking::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightTexturePacking", "_material", value));
}
// Autogenerated method: BakedLightTexturePacking..cctor
void GlobalNamespace::BakedLightTexturePacking::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightTexturePacking.PackTextures
::UnityEngine::RenderTexture* GlobalNamespace::BakedLightTexturePacking::PackTextures(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::RenderTexture*>* textures, ::UnityEngine::RenderTextureDescriptor descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightTexturePacking::PackTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightTexturePacking", "PackTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textures), ::il2cpp_utils::ExtractType(descriptor)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textures, descriptor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedLightUtils
#include "GlobalNamespace/BakedLightUtils.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kMirrorParentNameToIgnore
::StringW GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get_kMirrorParentNameToIgnore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightUtils", "kMirrorParentNameToIgnore"));
}
// Autogenerated static field setter
// Set static field: static public System.String kMirrorParentNameToIgnore
void GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set_kMirrorParentNameToIgnore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kMirrorParentNameToIgnore", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDepthOnlyShaderName
::StringW GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get_kDepthOnlyShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "BakedLightUtils", "kDepthOnlyShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDepthOnlyShaderName
void GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set_kDepthOnlyShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "kDepthOnlyShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE134
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _zWritePropertyId
int GlobalNamespace::BakedLightUtils::_get__zWritePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__zWritePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_zWritePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _zWritePropertyId
void GlobalNamespace::BakedLightUtils::_set__zWritePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__zWritePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_zWritePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE144
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilRefValuePropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilRefValuePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilRefValuePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilRefValuePropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilRefValuePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilRefValuePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE154
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilCompPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilCompPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilCompPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilCompPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilCompPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilCompPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE164
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stencilPassOpPropertyId
int GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_get__stencilPassOpPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedLightUtils", "_stencilPassOpPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stencilPassOpPropertyId
void GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::_set__stencilPassOpPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedLightUtils", "_stencilPassOpPropertyId", value));
}
// Autogenerated method: BakedLightUtils..cctor
void GlobalNamespace::BakedLightUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedLightUtils.ValidateLoadedEnvironmentScene
void GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene(bool validateBakedGIEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedLightUtils::ValidateLoadedEnvironmentScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedLightUtils", "ValidateLoadedEnvironmentScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validateBakedGIEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, validateBakedGIEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE200
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMinPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMinPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMinPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMinPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE210
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeBoundsMaxPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeBoundsMaxPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeBoundsMaxPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeBoundsMaxPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE220
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbePositionPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbePositionPropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbePositionPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbePositionPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE230
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture1PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture1PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture1PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture1PropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE240
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
int GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_get__reflectionProbeTexture2PropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _reflectionProbeTexture2PropertyId
void GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::_set__reflectionProbeTexture2PropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BakedReflectionProbe", "_reflectionProbeTexture2PropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _resolutionBeforeDownsample
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakedReflectionProbe::dyn__resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__resolutionBeforeDownsample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolutionBeforeDownsample"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _downsampleByHalfCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BakedReflectionProbe::dyn__downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__downsampleByHalfCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampleByHalfCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _size
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakedReflectionProbe::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::BakedReflectionProbe::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ReflectionProbeDataSO _reflectionProbeData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ReflectionProbeDataSO*& GlobalNamespace::BakedReflectionProbe::dyn__reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__reflectionProbeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ReflectionProbeDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _blackCubemap
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::BakedReflectionProbe::dyn__blackCubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::dyn__blackCubemap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackCubemap"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BakedReflectionProbe.get_reflectionProbeData
::GlobalNamespace::ReflectionProbeDataSO* GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ReflectionProbeDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.set_reflectionProbeData
void GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData(::GlobalNamespace::ReflectionProbeDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::set_reflectionProbeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BakedReflectionProbe.get_position
::UnityEngine::Vector3 GlobalNamespace::BakedReflectionProbe::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_resolutionBeforeDownsample
int GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_resolutionBeforeDownsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resolutionBeforeDownsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.get_downsampleByHalfCount
int GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::get_downsampleByHalfCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_downsampleByHalfCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe..cctor
void GlobalNamespace::BakedReflectionProbe::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BakedReflectionProbe", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.Start
void GlobalNamespace::BakedReflectionProbe::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BakedReflectionProbe.SendDataToShaders
void GlobalNamespace::BakedReflectionProbe::SendDataToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BakedReflectionProbe::SendDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubemapHelpers
#include "GlobalNamespace/CubemapHelpers.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCubemapHelpersShaderName
::StringW GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapHelpersShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "CubemapHelpers", "kCubemapHelpersShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCubemapHelpersShaderName
void GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapHelpersShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapHelpersShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE250
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _cubemapHelpersMaterial
::UnityEngine::Material* GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapHelpersMaterial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "CubemapHelpers", "_cubemapHelpersMaterial"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _cubemapHelpersMaterial
void GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapHelpersMaterial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapHelpersMaterial", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE260
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapHelpers::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapHelpers::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubePropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE270
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubeFaceNumberId
int GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubeFaceNumberId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "_cubeFaceNumberId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubeFaceNumberId
void GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubeFaceNumberId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubeFaceNumberId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapDownsamplePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapDownsamplePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapDownsamplePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapDownsamplePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapDownsamplePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapDownsamplePass", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kCubemapTo2DTexturePass
int GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get_kCubemapTo2DTexturePass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapHelpers", "kCubemapTo2DTexturePass"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kCubemapTo2DTexturePass
void GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set_kCubemapTo2DTexturePass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "kCubemapTo2DTexturePass", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE280
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>* GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapFaceToCubeFaceNumberDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>*>("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.CubemapFace,System.Int32> _cubemapFaceToCubeFaceNumberDict
void GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict(::System::Collections::Generic::Dictionary_2<::UnityEngine::CubemapFace, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapFaceToCubeFaceNumberDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaceToCubeFaceNumberDict", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE290
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
::ArrayW<::UnityEngine::CubemapFace> GlobalNamespace::CubemapHelpers::_get__cubemapFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_get__cubemapFaces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::CubemapFace>>("", "CubemapHelpers", "_cubemapFaces"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.CubemapFace[] _cubemapFaces
void GlobalNamespace::CubemapHelpers::_set__cubemapFaces(::ArrayW<::UnityEngine::CubemapFace> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::_set__cubemapFaces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapHelpers", "_cubemapFaces", value));
}
// Autogenerated method: CubemapHelpers.get_cubemapHelpersMaterial
::UnityEngine::Material* GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::get_cubemapHelpersMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "get_cubemapHelpersMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers..cctor
void GlobalNamespace::CubemapHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapHelpers.Downsample
void GlobalNamespace::CubemapHelpers::Downsample(::UnityEngine::Texture* src, ::UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::Downsample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Downsample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, dest);
}
// Autogenerated method: CubemapHelpers.CreateDownsampledCubemap
::UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap(::UnityEngine::RenderTexture* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::CreateDownsampledCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "CreateDownsampledCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src, count);
}
// Autogenerated method: CubemapHelpers.Create2DTextureFromCubemap
::UnityEngine::RenderTexture* GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap(::UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::Create2DTextureFromCubemap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "Create2DTextureFromCubemap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated method: CubemapHelpers.DrawCubemapFace
void GlobalNamespace::CubemapHelpers::DrawCubemapFace(::UnityEngine::Texture* cubemap, ::UnityEngine::CubemapFace cubemapFace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapHelpers::DrawCubemapFace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapHelpers", "DrawCubemapFace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cubemap), ::il2cpp_utils::ExtractType(cubemapFace)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cubemap, cubemapFace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubemapTest
#include "GlobalNamespace/CubemapTest.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE2D0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cubePropertyId
int GlobalNamespace::CubemapTest::_get__cubePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::_get__cubePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CubemapTest", "_cubePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cubePropertyId
void GlobalNamespace::CubemapTest::_set__cubePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::_set__cubePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CubemapTest", "_cubePropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::CubemapTest::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _cubemapMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::CubemapTest::dyn__cubemapMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _flatMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::CubemapTest::dyn__flatMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__flatMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flatMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__cubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _downsampledCubemapRenderTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__downsampledCubemapRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__downsampledCubemapRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downsampledCubemapRenderTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _cubemapFlatTexture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::CubemapTest::dyn__cubemapFlatTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::dyn__cubemapFlatTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cubemapFlatTexture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CubemapTest..cctor
void GlobalNamespace::CubemapTest::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubemapTest", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CubemapTest.Start
void GlobalNamespace::CubemapTest::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CubemapTest.Update
void GlobalNamespace::CubemapTest::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubemapTest::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableWhenMirrorIsEnabled
#include "GlobalNamespace/DisableWhenMirrorIsEnabled.hpp"
// Including type: Mirror
#include "GlobalNamespace/Mirror.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mirror _mirror
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Mirror*& GlobalNamespace::DisableWhenMirrorIsEnabled::dyn__mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::dyn__mirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirror"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Mirror**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.get_mirror
::GlobalNamespace::Mirror* GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::get_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Mirror*, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.set_mirror
void GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror(::GlobalNamespace::Mirror* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::set_mirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.Start
void GlobalNamespace::DisableWhenMirrorIsEnabled::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.OnDestroy
void GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisableWhenMirrorIsEnabled.HandleMirrorDidChangeEnabledState
void GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState(bool isEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableWhenMirrorIsEnabled::HandleMirrorDidChangeEnabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMirrorDidChangeEnabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DuplicateMirrorForReflectionProbe
#include "GlobalNamespace/DuplicateMirrorForReflectionProbe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeReflectionDynamicObjectsState
#include "GlobalNamespace/FakeReflectionDynamicObjectsState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Disabled
::GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Disabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled(::GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public FakeReflectionDynamicObjectsState Enabled
::GlobalNamespace::FakeReflectionDynamicObjectsState GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_get_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FakeReflectionDynamicObjectsState>("", "FakeReflectionDynamicObjectsState", "Enabled"));
}
// Autogenerated static field setter
// Set static field: static public FakeReflectionDynamicObjectsState Enabled
void GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled(::GlobalNamespace::FakeReflectionDynamicObjectsState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::_set_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FakeReflectionDynamicObjectsState", "Enabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FakeReflectionDynamicObjectsState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeReflectionDynamicObjectsState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IgnoreForReflectionProbeBaking
#include "GlobalNamespace/IgnoreForReflectionProbeBaking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightBakingPersistentSettingsSO
#include "GlobalNamespace/LightBakingPersistentSettingsSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: MainEffectSO
#include "GlobalNamespace/MainEffectSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
// Including type: MainEffectGraphicsSettingsPresetsSO
#include "GlobalNamespace/MainEffectGraphicsSettingsPresetsSO.hpp"
// Including type: BloomPrePassGraphicsSettingsPresetsSO
#include "GlobalNamespace/BloomPrePassGraphicsSettingsPresetsSO.hpp"
// Including type: MirrorRendererSO
#include "GlobalNamespace/MirrorRendererSO.hpp"
// Including type: MainEffectContainerSO
#include "GlobalNamespace/MainEffectContainerSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: BakedLightDataLoader
#include "GlobalNamespace/BakedLightDataLoader.hpp"
// Including type: BakedReflectionProbe
#include "GlobalNamespace/BakedReflectionProbe.hpp"
// Including type: LightmapLightsWithIds
#include "GlobalNamespace/LightmapLightsWithIds.hpp"
// Including type: FakeMirrorObjectsInstaller
#include "GlobalNamespace/FakeMirrorObjectsInstaller.hpp"
// Including type: FakeMirrorSettings
#include "GlobalNamespace/FakeMirrorSettings.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMirrorGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMirrorGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMirrorGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMirrorGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMirrorGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMainEffectGraphicsSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultMainEffectGraphicsSettings
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMainEffectGraphicsSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMainEffectGraphicsSettings", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultAntiAliasingLevel
int GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultAntiAliasingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultAntiAliasingLevel
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultAntiAliasingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultAntiAliasingLevel", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultVrResolutionScale
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultVrResolutionScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultVrResolutionScale
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultVrResolutionScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultVrResolutionScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
float GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultMenuVRResolutionScaleMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDefaultMenuVRResolutionScaleMultiplier
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultMenuVRResolutionScaleMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultMenuVRResolutionScaleMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultUseFixedFoveatedRenderingDuringGameplay
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultUseFixedFoveatedRenderingDuringGameplay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultUseFixedFoveatedRenderingDuringGameplay", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultBurnMarkTrailsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultBurnMarkTrailsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultBurnMarkTrailsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultBurnMarkTrailsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
bool GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_get_kDefaultScreenDisplacementEffectsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean kDefaultScreenDisplacementEffectsEnabled
void GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::_set_kDefaultScreenDisplacementEffectsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightBakingPersistentSettingsSO", "kDefaultScreenDisplacementEffectsEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _reflectionsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__reflectionsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffectToneMappingOff
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectToneMappingOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectToneMappingOff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectToneMappingOff"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectSO _mainEffectForBaking
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectForBaking");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectForBaking"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorFromSchemeAlpha
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__colorFromSchemeAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorFromSchemeAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _bakedLightEditorColors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightEditorColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightEditorColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererGraphicsSettingsPresets*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectGraphicsSettingsPresetsSO _mainEffectGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassGraphicsSettingsPresetsSO _bloomPrePassGraphicsSettingsPresets
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassGraphicsSettingsPresetsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererSO _mirrorRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MirrorRendererSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mirrorRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainEffectContainerSO _mainEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainEffectContainerSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__mainEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomPrePassEffectContainerSO*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BakedLightDataLoader _bakedLightDataLoaderPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakedLightDataLoader*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedLightDataLoaderPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedLightDataLoaderPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakedLightDataLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BakedReflectionProbe _bakedReflectionProbePrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BakedReflectionProbe*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__bakedReflectionProbePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedReflectionProbePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BakedReflectionProbe**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightmapLightsWithIds _lightmapLightsWithIds
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightmapLightsWithIds*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__lightmapLightsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__lightmapLightsWithIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapLightsWithIds"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightmapLightsWithIds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorObjectsInstaller _fakeMirrorObjectsInstallerPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FakeMirrorObjectsInstaller*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorObjectsInstallerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorObjectsInstallerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FakeMirrorObjectsInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FakeMirrorSettings _fakeMirrorSettingsPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FakeMirrorSettings*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__fakeMirrorSettingsPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeMirrorSettingsPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FakeMirrorSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _defaultDepthOnlyWriteMaterialForFakeMirror
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::LightBakingPersistentSettingsSO::dyn__defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::dyn__defaultDepthOnlyWriteMaterialForFakeMirror");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultDepthOnlyWriteMaterialForFakeMirror"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_reflectionsCount
int GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_reflectionsCount
void GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_reflectionsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_colorFromSchemeAlpha
float GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_colorFromSchemeAlpha
void GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_colorFromSchemeAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorFromSchemeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightEditorColors
::ArrayW<::UnityEngine::Color> GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightEditorColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightEditorColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Color>, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_defaultDepthOnlyWriteMaterialForFakeMirror
::UnityEngine::Material* GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_defaultDepthOnlyWriteMaterialForFakeMirror");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultDepthOnlyWriteMaterialForFakeMirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_mainEffectForBakingIsOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.set_mainEffectForBakingIsOn
void GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::set_mainEffectForBakingIsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mainEffectForBakingIsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedLightDataLoaderPrefab
::GlobalNamespace::BakedLightDataLoader* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedLightDataLoaderPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedLightDataLoaderPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakedLightDataLoader*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_bakedReflectionProbePrefab
::GlobalNamespace::BakedReflectionProbe* GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_bakedReflectionProbePrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bakedReflectionProbePrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BakedReflectionProbe*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_lightmapLightsWithIds
::GlobalNamespace::LightmapLightsWithIds* GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightsWithIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_lightmapLightsWithIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmapLightsWithIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightmapLightsWithIds*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorObjectsInstallerPrefab
::GlobalNamespace::FakeMirrorObjectsInstaller* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorObjectsInstallerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorObjectsInstallerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FakeMirrorObjectsInstaller*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.get_fakeMirrorSettingsPrefab
::GlobalNamespace::FakeMirrorSettings* GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::get_fakeMirrorSettingsPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fakeMirrorSettingsPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::FakeMirrorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetGraphicsSettingsForBaking
void GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetGraphicsSettingsForBaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGraphicsSettingsForBaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetPlatformGraphics
void GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetPlatformGraphics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlatformGraphics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightBakingPersistentSettingsSO.SetToneMappingOn
void GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::SetToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: LightBakingPersistentSettingsSO.IsToneMappingOn
bool GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightBakingPersistentSettingsSO::IsToneMappingOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsToneMappingOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmapDataSO
#include "GlobalNamespace/LightmapDataSO.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap1
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::LightmapDataSO::dyn__lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::dyn__lightmap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap1"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _lightmap2
[[deprecated("Use field access instead!")]] ::UnityEngine::Texture2D*& GlobalNamespace::LightmapDataSO::dyn__lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::dyn__lightmap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmap2"))->offset;
  return *reinterpret_cast<::UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmapDataSO.get_lightmap1
::UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::get_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap1
void GlobalNamespace::LightmapDataSO::set_lightmap1(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::set_lightmap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightmapDataSO.get_lightmap2
::UnityEngine::Texture2D* GlobalNamespace::LightmapDataSO::get_lightmap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::get_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(this, ___internal__method);
}
// Autogenerated method: LightmapDataSO.set_lightmap2
void GlobalNamespace::LightmapDataSO::set_lightmap2(::UnityEngine::Texture2D* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightmapDataSO::set_lightmap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightmap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PseudoHDREncoding
#include "GlobalNamespace/PseudoHDREncoding.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE4D0
// Autogenerated static field getter
// Get static field: static private System.String kPseudoHDREncodingShaderName
::StringW GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_get_kPseudoHDREncodingShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPseudoHDREncodingShaderName
void GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_set_kPseudoHDREncodingShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "kPseudoHDREncodingShaderName", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE4E0
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
::UnityEngine::Material* GlobalNamespace::PseudoHDREncoding::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Material*>("", "PseudoHDREncoding", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::PseudoHDREncoding::_set__material(::UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PseudoHDREncoding", "_material", value));
}
// Autogenerated method: PseudoHDREncoding.CreatePseudoHDREncodedTexture
::UnityEngine::RenderTexture* GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture(::UnityEngine::RenderTexture* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PseudoHDREncoding::CreatePseudoHDREncodedTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PseudoHDREncoding", "CreatePseudoHDREncodedTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, src);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeDataSO
#include "GlobalNamespace/ReflectionProbeDataSO.hpp"
// Including type: UnityEngine.Cubemap
#include "UnityEngine/Cubemap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap1
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap1"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Cubemap _reflectionProbeCubemap2
[[deprecated("Use field access instead!")]] ::UnityEngine::Cubemap*& GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::dyn__reflectionProbeCubemap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionProbeCubemap2"))->offset;
  return *reinterpret_cast<::UnityEngine::Cubemap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap1
::UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cubemap*, false>(this, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap1
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1(::UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ReflectionProbeDataSO.get_reflectionProbeCubemap2
::UnityEngine::Cubemap* GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::get_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Cubemap*, false>(this, ___internal__method);
}
// Autogenerated method: ReflectionProbeDataSO.set_reflectionProbeCubemap2
void GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2(::UnityEngine::Cubemap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ReflectionProbeDataSO::set_reflectionProbeCubemap2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_reflectionProbeCubemap2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UseOnlyForReflectionProbeBaking
#include "GlobalNamespace/UseOnlyForReflectionProbeBaking.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UseOnlyForReflectionProbeBaking.Awake
void GlobalNamespace::UseOnlyForReflectionProbeBaking::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UseOnlyForReflectionProbeBaking::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListExtensions
#include "GlobalNamespace/ListExtensions.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.IComparable`1
#include "System/IComparable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EE510
// Autogenerated static field getter
// Get static field: static private readonly System.Random _random
::System::Random* GlobalNamespace::ListExtensions::_get__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::_get__random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Random*>("", "ListExtensions", "_random"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random _random
void GlobalNamespace::ListExtensions::_set__random(::System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::_set__random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListExtensions", "_random", value));
}
// Autogenerated method: ListExtensions..cctor
void GlobalNamespace::ListExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ListExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO
#include "GlobalNamespace/LocalizedAudioClipSO.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo[] _localizedAudioClipInfo
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>& GlobalNamespace::LocalizedAudioClipSO::dyn__localizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::dyn__localizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClipInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo _lastLocalizedAudioClipInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*& GlobalNamespace::LocalizedAudioClipSO::dyn__lastLocalizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::dyn__lastLocalizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLocalizedAudioClipInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedAudioClipSO.get_localizedAudioClip
::UnityEngine::AudioClip* GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip localizedAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_localizedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedAudioClipSO/<>c__DisplayClass4_0.<get_localizedAudioClip>b__0
bool GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::$get_localizedAudioClip$b__0(::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::<get_localizedAudioClip>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedAudioClip>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo[] _textInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>& GlobalNamespace::LocalizedTextAsset::dyn__textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::dyn__textInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo _lastTextInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset::TextInfo*& GlobalNamespace::LocalizedTextAsset::dyn__lastTextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::dyn__lastTextInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTextInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedTextAsset.get_textInfos
::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*> GlobalNamespace::LocalizedTextAsset::get_textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::get_textInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: LocalizedTextAsset.get_localizedText
::StringW GlobalNamespace::LocalizedTextAsset::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset localizedText
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_localizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedText"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedTextAsset/<>c__DisplayClass6_0.<get_localizedText>b__1
bool GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::$get_localizedText$b__1(::GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::<get_localizedText>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LocalizedTextAsset/<>c <>9
::GlobalNamespace::LocalizedTextAsset::$$c* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalizedTextAsset::$$c*>("", "LocalizedTextAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LocalizedTextAsset/<>c <>9
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9(::GlobalNamespace::LocalizedTextAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>*>("", "LocalizedTextAsset/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9__6_0", value)));
}
// Autogenerated method: LocalizedTextAsset/<>c..cctor
void GlobalNamespace::LocalizedTextAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizedTextAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizedTextAsset/<>c.<get_localizedText>b__6_0
bool GlobalNamespace::LocalizedTextAsset::$$c::$get_localizedText$b__6_0(::GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::<get_localizedText>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CompositeLogger
#include "GlobalNamespace/CompositeLogger.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IBeatSaberLogger> _loggers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IBeatSaberLogger*>*& GlobalNamespace::CompositeLogger::dyn__loggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::dyn__loggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loggers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatSaberLogger*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CompositeLogger.AddLogger
void GlobalNamespace::CompositeLogger::AddLogger(::GlobalNamespace::IBeatSaberLogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::AddLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logger);
}
// Autogenerated method: CompositeLogger.Log
void GlobalNamespace::CompositeLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.Log
void GlobalNamespace::CompositeLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogWarning
void GlobalNamespace::CompositeLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.LogWarning
void GlobalNamespace::CompositeLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogError
void GlobalNamespace::CompositeLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.LogError
void GlobalNamespace::CompositeLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogException
void GlobalNamespace::CompositeLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: CompositeLogger.LogException
void GlobalNamespace::CompositeLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatSaberLogger.Log
void GlobalNamespace::IBeatSaberLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.Log
void GlobalNamespace::IBeatSaberLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogWarning
void GlobalNamespace::IBeatSaberLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.LogWarning
void GlobalNamespace::IBeatSaberLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogError
void GlobalNamespace::IBeatSaberLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.LogError
void GlobalNamespace::IBeatSaberLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogException
void GlobalNamespace::IBeatSaberLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: IBeatSaberLogger.LogException
void GlobalNamespace::IBeatSaberLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListLogger
#include "GlobalNamespace/ListLogger.hpp"
// Including type: ListLogger/LogType
#include "GlobalNamespace/ListLogger_LogType.hpp"
// Including type: ListLogger/LogMessage
#include "GlobalNamespace/ListLogger_LogMessage.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ListLogger/LogMessage> _messages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>*& GlobalNamespace::ListLogger::dyn__messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::dyn__messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListLogger.get_messages
::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>* GlobalNamespace::ListLogger::get_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::get_messages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: ListLogger.Log
void GlobalNamespace::ListLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.Log
void GlobalNamespace::ListLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogWarning
void GlobalNamespace::ListLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.LogWarning
void GlobalNamespace::ListLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogError
void GlobalNamespace::ListLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.LogError
void GlobalNamespace::ListLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogException
void GlobalNamespace::ListLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: ListLogger.LogException
void GlobalNamespace::ListLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListLogger/LogType
#include "GlobalNamespace/ListLogger_LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Info
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Info"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Info
void GlobalNamespace::ListLogger::LogType::_set_Info(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Warning
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Warning
void GlobalNamespace::ListLogger::LogType::_set_Warning(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Error
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Error
void GlobalNamespace::ListLogger::LogType::_set_Error(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Exception
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Exception
void GlobalNamespace::ListLogger::LogType::_set_Exception(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Exception", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ListLogger::LogType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListLogger/LogMessage
#include "GlobalNamespace/ListLogger_LogMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ListLogger/LogType type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ListLogger::LogType& GlobalNamespace::ListLogger::LogMessage::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ListLogger::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ListLogger::LogMessage::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Object context
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ListLogger::LogMessage::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListLogger/LogMessage.ToString
::StringW GlobalNamespace::ListLogger::LogMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityDebugLogger
#include "GlobalNamespace/UnityDebugLogger.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityDebugLogger.Log
void GlobalNamespace::UnityDebugLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.Log
void GlobalNamespace::UnityDebugLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogWarning
void GlobalNamespace::UnityDebugLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.LogWarning
void GlobalNamespace::UnityDebugLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogError
void GlobalNamespace::UnityDebugLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.LogError
void GlobalNamespace::UnityDebugLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogException
void GlobalNamespace::UnityDebugLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: UnityDebugLogger.LogException
void GlobalNamespace::UnityDebugLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MainCamera::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MainCamera::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainCamera.get_camera
::UnityEngine::Camera* GlobalNamespace::MainCamera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.set_enableCamera
void GlobalNamespace::MainCamera::set_enableCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::set_enableCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainCamera.get_position
::UnityEngine::Vector3 GlobalNamespace::MainCamera::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.get_rotation
::UnityEngine::Quaternion GlobalNamespace::MainCamera::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.Awake
void GlobalNamespace::MainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader
#include "GlobalNamespace/AudioClipAsyncLoader.hpp"
// Including type: AudioClipAsyncLoader/LoadMethodDelegate
#include "GlobalNamespace/AudioClipAsyncLoader_LoadMethodDelegate.hpp"
// Including type: AudioClipAsyncLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass16_0.hpp"
// Including type: AudioClipAsyncLoader/<>c__DisplayClass17_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass17_0.hpp"
// Including type: AudioClipAsyncLoader/<>c
#include "GlobalNamespace/AudioClipAsyncLoader_--c.hpp"
// Including type: AudioClipAsyncLoader/<Unload>d__21
#include "GlobalNamespace/AudioClipAsyncLoader_-Unload-d__21.hpp"
// Including type: IReferenceCountingCache`2
#include "GlobalNamespace/IReferenceCountingCache_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IMediaAsyncLoader
#include "GlobalNamespace/IMediaAsyncLoader.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IAssetSongPreviewAudioClipProvider
#include "GlobalNamespace/IAssetSongPreviewAudioClipProvider.hpp"
// Including type: IAssetSongAudioClipProvider
#include "GlobalNamespace/IAssetSongAudioClipProvider.hpp"
// Including type: IFilePathSongPreviewAudioClipProvider
#include "GlobalNamespace/IFilePathSongPreviewAudioClipProvider.hpp"
// Including type: IFilePathSongAudioClipProvider
#include "GlobalNamespace/IFilePathSongAudioClipProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IReferenceCountingCache`2<System.Int32,System.Threading.Tasks.Task`1<UnityEngine.AudioClip>> _cache
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReferenceCountingCache_2<int, ::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*>*& GlobalNamespace::AudioClipAsyncLoader::dyn__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::dyn__cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cache"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReferenceCountingCache_2<int, ::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMediaAsyncLoader _mediaAsyncLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMediaAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::dyn__mediaAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::dyn__mediaAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mediaAsyncLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader.LoadPreview
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadPreview(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.LoadSong
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadSong(::GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.UnloadPreview
void GlobalNamespace::AudioClipAsyncLoader::UnloadPreview(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::UnloadPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.UnloadSong
void GlobalNamespace::AudioClipAsyncLoader::UnloadSong(::GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::UnloadSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IAssetSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IAssetSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IFilePathSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IFilePathSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IAssetSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IAssetSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IFilePathSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IFilePathSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(int cacheKey, ::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate* loadMethodDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cacheKey), ::il2cpp_utils::ExtractType(loadMethodDelegate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, cacheKey, loadMethodDelegate);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(int cacheKey, ::System::Action_1<::UnityEngine::AudioClip*>* onDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cacheKey), ::il2cpp_utils::ExtractType(onDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cacheKey, onDelete);
}
// Autogenerated method: AudioClipAsyncLoader.GetCacheKey
int GlobalNamespace::AudioClipAsyncLoader::GetCacheKey(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::GetCacheKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCacheKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.GetCacheKey
int GlobalNamespace::AudioClipAsyncLoader::GetCacheKey(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::GetCacheKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCacheKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.LogError
void GlobalNamespace::AudioClipAsyncLoader::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioClipAsyncLoader", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioClipAsyncLoader/LoadMethodDelegate
#include "GlobalNamespace/AudioClipAsyncLoader_LoadMethodDelegate.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.Invoke
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.EndInvoke
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass16_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<>c__DisplayClass16_0.<Load>b__0
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::$Load$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c__DisplayClass17_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass17_0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioClipAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String audioClipFilePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_audioClipFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_audioClipFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClipFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<>c__DisplayClass17_0.<Load>b__0
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::$Load$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c
#include "GlobalNamespace/AudioClipAsyncLoader_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AudioClipAsyncLoader/<>c <>9
::GlobalNamespace::AudioClipAsyncLoader::$$c* GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AudioClipAsyncLoader::$$c*>("", "AudioClipAsyncLoader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AudioClipAsyncLoader/<>c <>9
void GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9(::GlobalNamespace::AudioClipAsyncLoader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AudioClipAsyncLoader/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngine.AudioClip> <>9__19_0
::System::Action_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::AudioClip*>*>("", "AudioClipAsyncLoader/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngine.AudioClip> <>9__19_0
void GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9__19_0(::System::Action_1<::UnityEngine::AudioClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AudioClipAsyncLoader/<>c", "<>9__19_0", value)));
}
// Autogenerated method: AudioClipAsyncLoader/<>c..cctor
void GlobalNamespace::AudioClipAsyncLoader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioClipAsyncLoader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/<>c.<Unload>b__19_0
void GlobalNamespace::AudioClipAsyncLoader::$$c::$Unload$b__19_0(::UnityEngine::AudioClip* loadedAudioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::<Unload>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Unload>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedAudioClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loadedAudioClip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<Unload>d__21
#include "GlobalNamespace/AudioClipAsyncLoader_-Unload-d__21.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioClipAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cacheKey
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_cacheKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_cacheKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cacheKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.AudioClip> onDelete
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::AudioClip*>*& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_onDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_onDelete");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDelete"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<Unload>d__21.MoveNext
void GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/<Unload>d__21.SetStateMachine
void GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioReferenceCountingCache
#include "GlobalNamespace/AudioReferenceCountingCache.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioTypeHelper
#include "GlobalNamespace/AudioTypeHelper.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioTypeHelper.GetAudioTypeFromPath
::UnityEngine::AudioType GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioTypeHelper", "GetAudioTypeFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAssetSongAudioClipProvider
#include "GlobalNamespace/IAssetSongAudioClipProvider.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAssetSongAudioClipProvider.get_songAudioClip
::UnityEngine::AudioClip* GlobalNamespace::IAssetSongAudioClipProvider::get_songAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAssetSongAudioClipProvider::get_songAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAssetSongPreviewAudioClipProvider
#include "GlobalNamespace/IAssetSongPreviewAudioClipProvider.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAssetSongPreviewAudioClipProvider.get_songPreviewAudioClip
::UnityEngine::AudioClip* GlobalNamespace::IAssetSongPreviewAudioClipProvider::get_songPreviewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAssetSongPreviewAudioClipProvider::get_songPreviewAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFilePathSongAudioClipProvider
#include "GlobalNamespace/IFilePathSongAudioClipProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFilePathSongAudioClipProvider.get_songAudioClipPath
::StringW GlobalNamespace::IFilePathSongAudioClipProvider::get_songAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFilePathSongAudioClipProvider::get_songAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFilePathSongPreviewAudioClipProvider
#include "GlobalNamespace/IFilePathSongPreviewAudioClipProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFilePathSongPreviewAudioClipProvider.get_songPreviewAudioClipPath
::StringW GlobalNamespace::IFilePathSongPreviewAudioClipProvider::get_songPreviewAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFilePathSongPreviewAudioClipProvider::get_songPreviewAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMediaAsyncLoader
#include "GlobalNamespace/IMediaAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMediaAsyncLoader.LoadAudioClipFromFilePathAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISpriteAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker
#include "GlobalNamespace/InternetConnectionChecker.hpp"
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InternetConnectionChecker.IsConnectedToInternetAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InternetConnectionChecker", "IsConnectedToInternetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.MoveNext
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.SetStateMachine
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader
#include "GlobalNamespace/MediaAsyncLoader.hpp"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader.LoadWebpage
::System::Threading::Tasks::Task_1<::StringW>* GlobalNamespace::MediaAsyncLoader::LoadWebpage(::StringW uri, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadWebpage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadWebpage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadAudioClipFromFilePathAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: MediaAsyncLoader.LoadTextureAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* GlobalNamespace::MediaAsyncLoader::LoadTextureAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.Log
void GlobalNamespace::MediaAsyncLoader::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Texture2D> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Texture2D*>& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: AsyncCachedLoader`2
#include "GlobalNamespace/AsyncCachedLoader_2.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxNumberOfSpriteCachedElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxNumberOfSpriteCachedElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AsyncCachedLoader`2<System.String,UnityEngine.Sprite> _spriteAsyncCachedLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AsyncCachedLoader_2<::StringW, ::UnityEngine::Sprite*>*& GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteAsyncCachedLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AsyncCachedLoader_2<::StringW, ::UnityEngine::Sprite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader.ClearCache
void GlobalNamespace::CachedMediaAsyncLoader::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::ClearCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CachedMediaAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CachedMediaAsyncLoader*& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CachedMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoveAndRotateWithMainCamera
#include "GlobalNamespace/MoveAndRotateWithMainCamera.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainCamera*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoveAndRotateWithMainCamera.Awake
void GlobalNamespace::MoveAndRotateWithMainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoveAndRotateWithMainCamera.LateUpdate
void GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedValueChecker
#include "GlobalNamespace/NamedValueChecker.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedValueChecker.Check
bool GlobalNamespace::NamedValueChecker::Check(::StringW fieldName, ::Il2CppObject* value, ::Il2CppObject* expectedValue, ::System::Text::StringBuilder* assertMessageSb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedValueChecker::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NamedValueChecker", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expectedValue), ::il2cpp_utils::ExtractType(assertMessageSb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldName, value, expectedValue, assertMessageSb);
}
