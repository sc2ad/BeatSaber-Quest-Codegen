// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.Invoke
bool Mono::Security::Interface::MonoRemoteCertificateValidationCallback::Invoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoRemoteCertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, targetHost, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.BeginInvoke
::System::IAsyncResult* Mono::Security::Interface::MonoRemoteCertificateValidationCallback::BeginInvoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509Certificate* certificate, ::System::Security::Cryptography::X509Certificates::X509Chain* chain, ::Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoRemoteCertificateValidationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetHost, certificate, chain, sslPolicyErrors, callback, object);
}
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.EndInvoke
bool Mono::Security::Interface::MonoRemoteCertificateValidationCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoRemoteCertificateValidationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.Invoke
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::Invoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoLocalCertificateSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.BeginInvoke
::System::IAsyncResult* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::BeginInvoke(::StringW targetHost, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, ::System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::ArrayW<::StringW> acceptableIssuers, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoLocalCertificateSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, callback, object);
}
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.EndInvoke
::System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoLocalCertificateSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_ID
::System::Guid Mono::Security::Interface::MonoTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_Name
::StringW Mono::Security::Interface::MonoTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsSslStream
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_SupportsSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsConnectionInfo
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_SupportsConnectionInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsConnectionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsMonoExtensions
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_SupportsMonoExtensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsMonoExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportedProtocols
::System::Security::Authentication::SslProtocols Mono::Security::Interface::MonoTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_SupportedProtocols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsCleanShutdown
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::get_SupportsCleanShutdown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsCleanShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.CreateSslStream
::Mono::Security::Interface::IMonoSslStream* Mono::Security::Interface::MonoTlsProvider::CreateSslStream(::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::CreateSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.CreateSslStreamInternal
::Mono::Security::Interface::IMonoSslStream* Mono::Security::Interface::MonoTlsProvider::CreateSslStreamInternal(::System::Net::Security::SslStream* sslStream, ::System::IO::Stream* innerStream, bool leaveInnerStreamOpen, ::Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::CreateSslStreamInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sslStream), ::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.ValidateCertificate
bool Mono::Security::Interface::MonoTlsProvider::ValidateCertificate(::Mono::Security::Interface::ICertificateValidator2* validator, ::StringW targetHost, bool serverMode, ::System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, ByRef<::System::Security::Cryptography::X509Certificates::X509Chain*> chain, ByRef<::Mono::Security::Interface::MonoSslPolicyErrors> errors, ByRef<int> status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProvider::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validator), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(wantsChain), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errors), ::il2cpp_utils::ExtractType(status11)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, byref(chain), byref(errors), byref(status11));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.MonoTlsProviderFactory
#include "Mono/Security/Interface/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoTlsProviderFactory.GetProvider
::Mono::Security::Interface::MonoTlsProvider* Mono::Security::Interface::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsProviderFactory::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator
#include "Mono/Security/Interface/ICertificateValidator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsSettings defaultSettings
::Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::_get_defaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::_get_defaultSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::MonoTlsSettings*>("Mono.Security.Interface", "MonoTlsSettings", "defaultSettings"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsSettings defaultSettings
void Mono::Security::Interface::MonoTlsSettings::_set_defaultSettings(::Mono::Security::Interface::MonoTlsSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::_set_defaultSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoTlsSettings", "defaultSettings", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoRemoteCertificateValidationCallback <RemoteCertificateValidationCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*& Mono::Security::Interface::MonoTlsSettings::dyn_$RemoteCertificateValidationCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$RemoteCertificateValidationCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RemoteCertificateValidationCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.MonoLocalCertificateSelectionCallback <ClientCertificateSelectionCallback>k__BackingField
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*& Mono::Security::Interface::MonoTlsSettings::dyn_$ClientCertificateSelectionCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$ClientCertificateSelectionCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ClientCertificateSelectionCallback>k__BackingField"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.DateTime> <CertificateValidationTime>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& Mono::Security::Interface::MonoTlsSettings::dyn_$CertificateValidationTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$CertificateValidationTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CertificateValidationTime>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.X509Certificates.X509CertificateCollection <TrustAnchors>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::X509Certificates::X509CertificateCollection*& Mono::Security::Interface::MonoTlsSettings::dyn_$TrustAnchors$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$TrustAnchors$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TrustAnchors>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::X509Certificates::X509CertificateCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <UserSettings>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Mono::Security::Interface::MonoTlsSettings::dyn_$UserSettings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$UserSettings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserSettings>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] <CertificateSearchPaths>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& Mono::Security::Interface::MonoTlsSettings::dyn_$CertificateSearchPaths$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$CertificateSearchPaths$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CertificateSearchPaths>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <SendCloseNotify>k__BackingField
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_$SendCloseNotify$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$SendCloseNotify$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SendCloseNotify>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<Mono.Security.Interface.TlsProtocols> <EnabledProtocols>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::Mono::Security::Interface::TlsProtocols>& Mono::Security::Interface::MonoTlsSettings::dyn_$EnabledProtocols$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$EnabledProtocols$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnabledProtocols>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::Mono::Security::Interface::TlsProtocols>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.CipherSuiteCode[] <EnabledCiphers>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Security::Interface::CipherSuiteCode>& Mono::Security::Interface::MonoTlsSettings::dyn_$EnabledCiphers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_$EnabledCiphers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnabledCiphers>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Security::Interface::CipherSuiteCode>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cloned
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_cloned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_cloned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCertName
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_checkCertName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_checkCertName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCertName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean checkCertRevocationStatus
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_checkCertRevocationStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_checkCertRevocationStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCertRevocationStatus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Boolean> useServicePointManagerCallback
[[deprecated("Use field access instead!")]] ::System::Nullable_1<bool>& Mono::Security::Interface::MonoTlsSettings::dyn_useServicePointManagerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_useServicePointManagerCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useServicePointManagerCallback"))->offset;
  return *reinterpret_cast<::System::Nullable_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipSystemValidators
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_skipSystemValidators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_skipSystemValidators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipSystemValidators"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean callbackNeedsChain
[[deprecated("Use field access instead!")]] bool& Mono::Security::Interface::MonoTlsSettings::dyn_callbackNeedsChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_callbackNeedsChain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callbackNeedsChain"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.ICertificateValidator certificateValidator
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::ICertificateValidator*& Mono::Security::Interface::MonoTlsSettings::dyn_certificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::dyn_certificateValidator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "certificateValidator"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::ICertificateValidator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_RemoteCertificateValidationCallback
::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Security::Interface::MonoTlsSettings::get_RemoteCertificateValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_RemoteCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_RemoteCertificateValidationCallback
void Mono::Security::Interface::MonoTlsSettings::set_RemoteCertificateValidationCallback(::Mono::Security::Interface::MonoRemoteCertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_RemoteCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_ClientCertificateSelectionCallback
::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* Mono::Security::Interface::MonoTlsSettings::get_ClientCertificateSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_ClientCertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoLocalCertificateSelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_ClientCertificateSelectionCallback
void Mono::Security::Interface::MonoTlsSettings::set_ClientCertificateSelectionCallback(::Mono::Security::Interface::MonoLocalCertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_ClientCertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_UseServicePointManagerCallback
::System::Nullable_1<bool> Mono::Security::Interface::MonoTlsSettings::get_UseServicePointManagerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_UseServicePointManagerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseServicePointManagerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_UseServicePointManagerCallback
void Mono::Security::Interface::MonoTlsSettings::set_UseServicePointManagerCallback(::System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_UseServicePointManagerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseServicePointManagerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CallbackNeedsCertificateChain
bool Mono::Security::Interface::MonoTlsSettings::get_CallbackNeedsCertificateChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_CallbackNeedsCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallbackNeedsCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateValidationTime
::System::Nullable_1<::System::DateTime> Mono::Security::Interface::MonoTlsSettings::get_CertificateValidationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_CertificateValidationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_CertificateValidationTime
void Mono::Security::Interface::MonoTlsSettings::set_CertificateValidationTime(::System::Nullable_1<::System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_CertificateValidationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateValidationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_TrustAnchors
::System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Security::Interface::MonoTlsSettings::get_TrustAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_TrustAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrustAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_TrustAnchors
void Mono::Security::Interface::MonoTlsSettings::set_TrustAnchors(::System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_TrustAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrustAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_UserSettings
::Il2CppObject* Mono::Security::Interface::MonoTlsSettings::get_UserSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_UserSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_UserSettings
void Mono::Security::Interface::MonoTlsSettings::set_UserSettings(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_UserSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateSearchPaths
::ArrayW<::StringW> Mono::Security::Interface::MonoTlsSettings::get_CertificateSearchPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_CertificateSearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateSearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_CertificateSearchPaths
void Mono::Security::Interface::MonoTlsSettings::set_CertificateSearchPaths(::ArrayW<::StringW> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_CertificateSearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateSearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_SendCloseNotify
bool Mono::Security::Interface::MonoTlsSettings::get_SendCloseNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_SendCloseNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendCloseNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_SendCloseNotify
void Mono::Security::Interface::MonoTlsSettings::set_SendCloseNotify(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_SendCloseNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendCloseNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_EnabledProtocols
::System::Nullable_1<::Mono::Security::Interface::TlsProtocols> Mono::Security::Interface::MonoTlsSettings::get_EnabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_EnabledProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::Mono::Security::Interface::TlsProtocols>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_EnabledProtocols
void Mono::Security::Interface::MonoTlsSettings::set_EnabledProtocols(::System::Nullable_1<::Mono::Security::Interface::TlsProtocols> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_EnabledProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_EnabledCiphers
::ArrayW<::Mono::Security::Interface::CipherSuiteCode> Mono::Security::Interface::MonoTlsSettings::get_EnabledCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_EnabledCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Security::Interface::CipherSuiteCode>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_EnabledCiphers
void Mono::Security::Interface::MonoTlsSettings::set_EnabledCiphers(::ArrayW<::Mono::Security::Interface::CipherSuiteCode> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::set_EnabledCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_DefaultSettings
::Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::get_DefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_DefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsSettings", "get_DefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateValidator
::Mono::Security::Interface::ICertificateValidator* Mono::Security::Interface::MonoTlsSettings::get_CertificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::get_CertificateValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::ICertificateValidator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.CopyDefaultSettings
::Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::CopyDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::CopyDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsSettings", "CopyDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.CloneWithValidator
::Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::CloneWithValidator(::Mono::Security::Interface::ICertificateValidator* validator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::CloneWithValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneWithValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method, validator);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.Clone
::Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::MonoTlsSettings::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.TlsException
#include "Mono/Security/Interface/TlsException.hpp"
// Including type: Mono.Security.Interface.Alert
#include "Mono/Security/Interface/Alert.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Interface.Alert alert
[[deprecated("Use field access instead!")]] ::Mono::Security::Interface::Alert*& Mono::Security::Interface::TlsException::dyn_alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsException::dyn_alert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alert"))->offset;
  return *reinterpret_cast<::Mono::Security::Interface::Alert**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Zero
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Zero
void Mono::Security::Interface::TlsProtocols::_set_Zero(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10Client
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls10Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10Client
void Mono::Security::Interface::TlsProtocols::_set_Tls10Client(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls10Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10Server
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls10Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10Server
void Mono::Security::Interface::TlsProtocols::_set_Tls10Server(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls10Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10
void Mono::Security::Interface::TlsProtocols::_set_Tls10(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11Client
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls11Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11Client
void Mono::Security::Interface::TlsProtocols::_set_Tls11Client(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls11Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11Server
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls11Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11Server
void Mono::Security::Interface::TlsProtocols::_set_Tls11Server(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls11Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11
void Mono::Security::Interface::TlsProtocols::_set_Tls11(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12Client
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls12Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12Client
void Mono::Security::Interface::TlsProtocols::_set_Tls12Client(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls12Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12Server
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls12Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12Server
void Mono::Security::Interface::TlsProtocols::_set_Tls12Server(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls12Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12
void Mono::Security::Interface::TlsProtocols::_set_Tls12(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols ClientMask
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_ClientMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_ClientMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "ClientMask"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols ClientMask
void Mono::Security::Interface::TlsProtocols::_set_ClientMask(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_ClientMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "ClientMask", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols ServerMask
::Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_ServerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_get_ServerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "ServerMask"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols ServerMask
void Mono::Security::Interface::TlsProtocols::_set_ServerMask(::Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::_set_ServerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "ServerMask", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Security::Interface::TlsProtocols::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Interface::TlsProtocols::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.ARC4Managed
#include "Mono/Security/Cryptography/ARC4Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::ARC4Managed::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::ARC4Managed::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte x
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Cryptography::ARC4Managed::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte y
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Cryptography::ARC4Managed::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::ARC4Managed::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::ARC4Managed::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_InputBlockSize
int Mono::Security::Cryptography::ARC4Managed::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_OutputBlockSize
int Mono::Security::Cryptography::ARC4Managed::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.KeySetup
void Mono::Security::Cryptography::ARC4Managed::KeySetup(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::KeySetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CheckInput
void Mono::Security::Cryptography::ARC4Managed::CheckInput(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformBlock
int Mono::Security::Cryptography::ARC4Managed::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::TransformBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.InternalTransformBlock
int Mono::Security::Cryptography::ARC4Managed::InternalTransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformFinalBlock
::ArrayW<uint8_t> Mono::Security::Cryptography::ARC4Managed::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_Key
::ArrayW<uint8_t> Mono::Security::Cryptography::ARC4Managed::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.set_Key
void Mono::Security::Cryptography::ARC4Managed::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Finalize
void Mono::Security::Cryptography::ARC4Managed::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Dispose
void Mono::Security::Cryptography::ARC4Managed::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateIV
void Mono::Security::Cryptography::ARC4Managed::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateKey
void Mono::Security::Cryptography::ARC4Managed::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.CryptoConvert
#include "Mono/Security/Cryptography/CryptoConvert.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToInt32LE
int Mono::Security::Cryptography::CryptoConvert::ToInt32LE(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::ToInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToUInt32LE
uint Mono::Security::Cryptography::CryptoConvert::ToUInt32LE(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::ToUInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToUInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.Trim
::ArrayW<uint8_t> Mono::Security::Cryptography::CryptoConvert::Trim(::ArrayW<uint8_t> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob(::ArrayW<uint8_t> blob) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlob
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob(::ArrayW<uint8_t> blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToHex
::StringW Mono::Security::Cryptography::CryptoConvert::ToHex(::ArrayW<uint8_t> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::CryptoConvert::ToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.KeyBuilder
#include "Mono/Security/Cryptography/KeyBuilder.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Security.Cryptography", "KeyBuilder", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Security::Cryptography::KeyBuilder::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyBuilder", "rng", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.Key
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder::Key(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder::Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2
#include "Mono/Security/Cryptography/MD2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD2.Create
::Mono::Security::Cryptography::MD2* Mono::Security::Cryptography::MD2::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD2*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2Managed
#include "Mono/Security/Cryptography/MD2Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PI_SUBST
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PI_SUBST
void Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] checksum
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::MD2Managed::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed..cctor
void Mono::Security::Cryptography::MD2Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.MD2Transform
void Mono::Security::Cryptography::MD2Managed::MD2Transform(::ArrayW<uint8_t> state, ::ArrayW<uint8_t> checksum, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::MD2Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD2Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(checksum), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, checksum, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Initialize
void Mono::Security::Cryptography::MD2Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashCore
void Mono::Security::Cryptography::MD2Managed::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4
#include "Mono/Security/Cryptography/MD4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4.Create
::Mono::Security::Cryptography::MD4* Mono::Security::Cryptography::MD4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD4*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4Managed
#include "Mono/Security/Cryptography/MD4Managed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] count
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] digest
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed::dyn_digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::dyn_digest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digest"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.F
uint Mono::Security::Cryptography::MD4Managed::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.G
uint Mono::Security::Cryptography::MD4Managed::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.H
uint Mono::Security::Cryptography::MD4Managed::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.ROL
uint Mono::Security::Cryptography::MD4Managed::ROL(uint x, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::ROL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ROL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.FF
void Mono::Security::Cryptography::MD4Managed::FF(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::FF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.GG
void Mono::Security::Cryptography::MD4Managed::GG(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::GG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HH
void Mono::Security::Cryptography::MD4Managed::HH(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Encode
void Mono::Security::Cryptography::MD4Managed::Encode(::ArrayW<uint8_t> output, ::ArrayW<uint> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Decode
void Mono::Security::Cryptography::MD4Managed::Decode(::ArrayW<uint> output, ::ArrayW<uint8_t> input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.MD4Transform
void Mono::Security::Cryptography::MD4Managed::MD4Transform(::ArrayW<uint> state, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::MD4Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD4Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Initialize
void Mono::Security::Cryptography::MD4Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashCore
void Mono::Security::Cryptography::MD4Managed::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS1
#include "Mono/Security/Cryptography/PKCS1.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA1
void Mono::Security::Cryptography::PKCS1::_set_emptySHA1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA256
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA256"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA256
void Mono::Security::Cryptography::PKCS1::_set_emptySHA256(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA256", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA384
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA384"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA384
void Mono::Security::Cryptography::PKCS1::_set_emptySHA384(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA384", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA512
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1::_get_emptySHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_get_emptySHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA512"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA512
void Mono::Security::Cryptography::PKCS1::_set_emptySHA512(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::_set_emptySHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA512", value));
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1..cctor
void Mono::Security::Cryptography::PKCS1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.HashNameFromOid
::StringW Mono::Security::Cryptography::PKCS1::HashNameFromOid(::StringW oid, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::HashNameFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "HashNameFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid, throwOnError);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromOid
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromOid(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::CreateFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromName
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.get_PrivateKey
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.RemoveLeadingZero
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero(::ArrayW<uint8_t> bigInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "RemoveLeadingZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Normalize
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize(::ArrayW<uint8_t> bigInt, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt, length);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.DecodeRSA
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA(::ArrayW<uint8_t> keypair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keypair)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keypair);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.DecodeDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA(::ArrayW<uint8_t> privateKey, ::System::Security::Cryptography::DSAParameters dsaParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKey), ::il2cpp_utils::ExtractType(dsaParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, privateKey, dsaParameters);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Encode
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(::System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aa);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_EncryptedPrivateKeyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_Algorithm
::StringW Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_EncryptedData
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_Salt
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_IterationCount
int Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.RC4
#include "Mono/Security/Cryptography/RC4.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> Mono::Security::Cryptography::RC4::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("Mono.Security.Cryptography", "RC4", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void Mono::Security::Cryptography::RC4::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalKeySizes", value));
}
// Autogenerated method: Mono.Security.Cryptography.RC4..cctor
void Mono::Security::Cryptography::RC4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.Create
::Mono::Security::Cryptography::RC4* Mono::Security::Cryptography::RC4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::RC4*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.get_IV
::ArrayW<uint8_t> Mono::Security::Cryptography::RC4::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.set_IV
void Mono::Security::Cryptography::RC4::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RC4::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean isCRTpossible
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_isCRTpossible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_isCRTpossible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isCRTpossible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean keypairGenerated
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_keypairGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_keypairGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keypairGenerated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::RSAManaged::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger d
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_d() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_d");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "d"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger p
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_p() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_p");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "p"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger q
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_q() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_q");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "q"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dp
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_dp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_dp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dp"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger dq
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_dq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_dq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dq"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger qInv
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_qInv() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_qInv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "qInv"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger n
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_n() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_n");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "n"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger e
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Security::Cryptography::RSAManaged::dyn_e() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_e");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "e"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler KeyGenerated
[[deprecated("Use field access instead!")]] ::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler*& Mono::Security::Cryptography::RSAManaged::dyn_KeyGenerated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::dyn_KeyGenerated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyGenerated"))->offset;
  return *reinterpret_cast<::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::RSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::RSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GetPaddedValue
::ArrayW<uint8_t> Mono::Security::Cryptography::RSAManaged::GetPaddedValue(::Mono::Math::BigInteger* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::GetPaddedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ExportParameters
::System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::RSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ImportParameters
void Mono::Security::Cryptography::RSAManaged::ImportParameters(::System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.BeginInvoke
::System::IAsyncResult* Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::BeginInvoke(::Il2CppObject* sender, ::System::EventArgs* e, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/Mono.Security.Cryptography.KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Authenticode.PrivateKey
#include "Mono/Security/Authenticode/PrivateKey.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean encrypted
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::PrivateKey::dyn_encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_encrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA rsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::Authenticode::PrivateKey::dyn_rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean weak
[[deprecated("Use field access instead!")]] bool& Mono::Security::Authenticode::PrivateKey::dyn_weak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_weak");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weak"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 keyType
[[deprecated("Use field access instead!")]] int& Mono::Security::Authenticode::PrivateKey::dyn_keyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::dyn_keyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.get_RSA
::System::Security::Cryptography::RSA* Mono::Security::Authenticode::PrivateKey::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::get_RSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.DeriveKey
::ArrayW<uint8_t> Mono::Security::Authenticode::PrivateKey::DeriveKey(::ArrayW<uint8_t> salt, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, salt, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.Decode
bool Mono::Security::Authenticode::PrivateKey::Decode(::ArrayW<uint8_t> pvk, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvk), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pvk, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
::Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::StringW filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
::Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::StringW filename, ::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, password);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::ArrayW<uint> Mono::Math::BigInteger::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger::_set_smallPrimes(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 length
[[deprecated("Use field access instead!")]] uint& Mono::Math::BigInteger::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Math::BigInteger::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits, ::System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(rng)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
::Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::BitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::ArrayW<uint8_t> Mono::Math::BigInteger::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString(uint radix, ::StringW characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(characterSet)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModInverse(::Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
::Mono::Math::BigInteger* Mono::Math::BigInteger::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Incr2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::StringW Mono::Math::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
::Mono::Math::BigInteger* Mono::Math::operator-(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(::Mono::Math::BigInteger& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
::Mono::Math::BigInteger* Mono::Math::operator%(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
::Mono::Math::BigInteger* Mono::Math::operator/(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
::Mono::Math::BigInteger* Mono::Math::operator*(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
::Mono::Math::BigInteger* Mono::Math::operator<<(::Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
::Mono::Math::BigInteger* Mono::Math::operator>>(::Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.Sign
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Negative
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Negative
void Mono::Math::BigInteger::Sign::_set_Negative(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Zero
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Zero
void Mono::Math::BigInteger::Sign::_set_Zero(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Mono.Math.Sign Positive
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Mono.Math.Sign Positive
void Mono::Math::BigInteger::Sign::_set_Positive(::Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::BigInteger::Sign::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Sign::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger mod
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Math::BigInteger::ModulusRing::dyn_mod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::dyn_mod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mod"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Math.BigInteger constant
[[deprecated("Use field access instead!")]] ::Mono::Math::BigInteger*& Mono::Math::BigInteger::ModulusRing::dyn_constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::dyn_constant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "constant"))->offset;
  return *reinterpret_cast<::Mono::Math::BigInteger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.BarrettReduction
void Mono::Math::BigInteger::ModulusRing::BarrettReduction(::Mono::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Multiply
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Multiply(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Difference
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Difference(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Pow
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(::Mono::Math::BigInteger* a, ::Mono::Math::BigInteger* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.ModulusRing.Pow
::Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(uint b, ::Mono::Math::BigInteger* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, b, exp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Mono.Math.Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: Mono.Math.BigInteger/Mono.Math.Sign
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Subtract
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::Subtract(::Mono::Math::BigInteger* big, ::Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.MinusEq
void Mono::Math::BigInteger::Kernel::MinusEq(::Mono::Math::BigInteger* big, ::Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.PlusEq
void Mono::Math::BigInteger::Kernel::PlusEq(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Compare
::Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Kernel::Compare(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger::Sign, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.DwordMod
uint Mono::Math::BigInteger::Kernel::DwordMod(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.DwordDivMod
::ArrayW<::Mono::Math::BigInteger*> Mono::Math::BigInteger::Kernel::DwordDivMod(::Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.multiByteDivide
::ArrayW<::Mono::Math::BigInteger*> Mono::Math::BigInteger::Kernel::multiByteDivide(::Mono::Math::BigInteger* bi1, ::Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Mono::Math::BigInteger*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.LeftShift
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::LeftShift(::Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.RightShift
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::RightShift(::Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.Multiply
void Mono::Math::BigInteger::Kernel::Multiply(::ArrayW<uint> x, uint xOffset, uint xLen, ::ArrayW<uint> y, uint yOffset, uint yLen, ::ArrayW<uint> d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod(::ArrayW<uint> x, int xOffset, int xLen, ::ArrayW<uint> y, int yOffest, int yLen, ::ArrayW<uint> d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffest), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset), ::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.modInverse
uint Mono::Math::BigInteger::Kernel::modInverse(::Mono::Math::BigInteger* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Mono.Math.Kernel.modInverse
::Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::modInverse(::Mono::Math::BigInteger* bi, ::Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor::_set_Low(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor::_set_Medium(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor::_set_High(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor::_set_Provable(::Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Math::Prime::ConfidenceFactor::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::ConfidenceFactor::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest::Invoke(::Mono::Math::BigInteger* bi, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.BeginInvoke
::System::IAsyncResult* Mono::Math::Prime::PrimalityTest::BeginInvoke(::Mono::Math::BigInteger* bi, ::Mono::Math::Prime::ConfidenceFactor confidence, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, bi, confidence, callback, object);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.EndInvoke
bool Mono::Math::Prime::PrimalityTest::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTest::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests::GetSPPRounds(::Mono::Math::BigInteger* bi, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests::RabinMillerTest(::Mono::Math::BigInteger* n, ::Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::PrimalityTests::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, confidence);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
::Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Confidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::ConfidenceFactor, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
::Mono::Math::Prime::PrimalityTest* Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimalityTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::Prime::PrimalityTest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrialDivisionBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSearchBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable(::Mono::Math::BigInteger* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimeAcceptable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
::Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Locale
#include "GlobalNamespace/Locale_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Locale.GetText
::StringW GlobalNamespace::Locale_::GetText(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Locale_::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: Locale.GetText
::StringW GlobalNamespace::Locale_::GetText(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Locale_::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::StringW GlobalNamespace::SR::Format(::StringW resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Runtime
#include "Mono/Runtime.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Runtime.mono_runtime_install_handlers
void Mono::Runtime::mono_runtime_install_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::mono_runtime_install_handlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_install_handlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.InstallSignalHandlers
void Mono::Runtime::InstallSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::InstallSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "InstallSignalHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.mono_runtime_cleanup_handlers
void Mono::Runtime::mono_runtime_cleanup_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::mono_runtime_cleanup_handlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.RemoveSignalHandlers
void Mono::Runtime::RemoveSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::RemoveSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "RemoveSignalHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetDisplayName
::StringW Mono::Runtime::GetDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetNativeStackTrace
::StringW Mono::Runtime::GetNativeStackTrace(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::GetNativeStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "GetNativeStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Mono.Runtime.SetGCAllowSynchronousMajor
bool Mono::Runtime::SetGCAllowSynchronousMajor(bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Runtime::SetGCAllowSynchronousMajor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, flag);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: Mono.RuntimeStructs/Mono.MonoClass
#include "Mono/RuntimeStructs_MonoClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/Mono.MonoClass* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::MonoClass*& Mono::RuntimeClassHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::MonoClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeClassHandle.get_Value
::Mono::RuntimeStructs::MonoClass* Mono::RuntimeClassHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::RuntimeStructs::MonoClass*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle..ctor
// ABORTED elsewhere.  Mono::RuntimeClassHandle::RuntimeClassHandle(::Mono::RuntimeStructs::MonoClass* value)
// Autogenerated method: Mono.RuntimeClassHandle..ctor
Mono::RuntimeClassHandle::RuntimeClassHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeFromClass
::System::IntPtr Mono::RuntimeClassHandle::GetTypeFromClass(::Mono::RuntimeStructs::MonoClass* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetTypeFromClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeClassHandle", "GetTypeFromClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeHandle
::System::RuntimeTypeHandle Mono::RuntimeClassHandle::GetTypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.Equals
bool Mono::RuntimeClassHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetHashCode
int Mono::RuntimeClassHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeClassHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeRemoteClassHandle
#include "Mono/RuntimeRemoteClassHandle.hpp"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: Mono.RuntimeStructs/Mono.RemoteClass
#include "Mono/RuntimeStructs_RemoteClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/Mono.RemoteClass* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::RemoteClass*& Mono::RuntimeRemoteClassHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeRemoteClassHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::RemoteClass**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeRemoteClassHandle.get_ProxyClass
::Mono::RuntimeClassHandle Mono::RuntimeRemoteClassHandle::get_ProxyClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeRemoteClassHandle::get_ProxyClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ProxyClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::RuntimeClassHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGenericParamInfoHandle
#include "Mono/RuntimeGenericParamInfoHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimeStructs/Mono.GenericParamInfo
#include "Mono/RuntimeStructs_GenericParamInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/Mono.GenericParamInfo* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::GenericParamInfo*& Mono::RuntimeGenericParamInfoHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::GenericParamInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Constraints
::ArrayW<::System::Type*> Mono::RuntimeGenericParamInfoHandle::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Attributes
::System::Reflection::GenericParameterAttributes Mono::RuntimeGenericParamInfoHandle::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle..ctor
Mono::RuntimeGenericParamInfoHandle::RuntimeGenericParamInfoHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraints
::ArrayW<::System::Type*> Mono::RuntimeGenericParamInfoHandle::GetConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::GetConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraintsCount
int Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraintsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeEventHandle
#include "Mono/RuntimeEventHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr value
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::RuntimeEventHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeEventHandle.get_Value
::System::IntPtr Mono::RuntimeEventHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeEventHandle..ctor
// ABORTED elsewhere.  Mono::RuntimeEventHandle::RuntimeEventHandle(::System::IntPtr v)
// Autogenerated method: Mono.RuntimeEventHandle.Equals
bool Mono::RuntimeEventHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeEventHandle.GetHashCode
int Mono::RuntimeEventHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeEventHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr value
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::RuntimePropertyHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimePropertyHandle.get_Value
::System::IntPtr Mono::RuntimePropertyHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimePropertyHandle..ctor
// ABORTED elsewhere.  Mono::RuntimePropertyHandle::RuntimePropertyHandle(::System::IntPtr v)
// Autogenerated method: Mono.RuntimePropertyHandle.Equals
bool Mono::RuntimePropertyHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimePropertyHandle.GetHashCode
int Mono::RuntimePropertyHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimePropertyHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGPtrArrayHandle
#include "Mono/RuntimeGPtrArrayHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimeStructs/Mono.GPtrArray
#include "Mono/RuntimeStructs_GPtrArray.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeStructs/Mono.GPtrArray* value
[[deprecated("Use field access instead!")]] ::Mono::RuntimeStructs::GPtrArray*& Mono::RuntimeGPtrArrayHandle::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::dyn_value");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Mono::RuntimeStructs::GPtrArray**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Length
int Mono::RuntimeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Item
::System::IntPtr Mono::RuntimeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle..ctor
Mono::RuntimeGPtrArrayHandle::RuntimeGPtrArrayHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.Lookup
::System::IntPtr Mono::RuntimeGPtrArrayHandle::Lookup(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.GPtrArrayFree
void Mono::RuntimeGPtrArrayHandle::GPtrArrayFree(::Mono::RuntimeStructs::GPtrArray* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::GPtrArrayFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "GPtrArrayFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.DestroyAndFree
void Mono::RuntimeGPtrArrayHandle::DestroyAndFree(ByRef<::Mono::RuntimeGPtrArrayHandle> h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeGPtrArrayHandle::DestroyAndFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "DestroyAndFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(h));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeMarshal
#include "Mono/RuntimeMarshal.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
// Including type: Mono.MonoAssemblyName
#include "Mono/MonoAssemblyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeMarshal.PtrToUtf8String
::StringW Mono::RuntimeMarshal::PtrToUtf8String(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::PtrToUtf8String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "PtrToUtf8String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.MarshalString
::Mono::SafeStringMarshal Mono::RuntimeMarshal::MarshalString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::MarshalString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "MarshalString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::SafeStringMarshal, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobSize
int Mono::RuntimeMarshal::DecodeBlobSize(::System::IntPtr in_ptr, ByRef<::System::IntPtr> out_ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::DecodeBlobSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(in_ptr), ::il2cpp_utils::ExtractIndependentType<::System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, in_ptr, byref(out_ptr));
}
// Autogenerated method: Mono.RuntimeMarshal.DecodeBlobArray
::ArrayW<uint8_t> Mono::RuntimeMarshal::DecodeBlobArray(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::DecodeBlobArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "DecodeBlobArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.RuntimeMarshal.AsciHexDigitValue
int Mono::RuntimeMarshal::AsciHexDigitValue(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::AsciHexDigitValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "AsciHexDigitValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.RuntimeMarshal.FreeAssemblyName
void Mono::RuntimeMarshal::FreeAssemblyName(ByRef<::Mono::MonoAssemblyName> name, bool freeStruct) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::RuntimeMarshal::FreeAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeMarshal", "FreeAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(freeStruct)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(name), freeStruct);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.SafeGPtrArrayHandle
#include "Mono/SafeGPtrArrayHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.RuntimeGPtrArrayHandle handle
[[deprecated("Use field access instead!")]] ::Mono::RuntimeGPtrArrayHandle& Mono::SafeGPtrArrayHandle::dyn_handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::dyn_handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handle"))->offset;
  return *reinterpret_cast<::Mono::RuntimeGPtrArrayHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Length
int Mono::SafeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.get_Item
::System::IntPtr Mono::SafeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle..ctor
Mono::SafeGPtrArrayHandle::SafeGPtrArrayHandle(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ptr);
}
// Autogenerated method: Mono.SafeGPtrArrayHandle.Dispose
void Mono::SafeGPtrArrayHandle::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeGPtrArrayHandle::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.SafeStringMarshal
#include "Mono/SafeStringMarshal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String str
[[deprecated("Use field access instead!")]] ::StringW& Mono::SafeStringMarshal::dyn_str() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::dyn_str");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "str"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr marshaled_string
[[deprecated("Use field access instead!")]] ::System::IntPtr& Mono::SafeStringMarshal::dyn_marshaled_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::dyn_marshaled_string");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "marshaled_string"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.SafeStringMarshal.get_Value
::System::IntPtr Mono::SafeStringMarshal::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.SafeStringMarshal..ctor
Mono::SafeStringMarshal::SafeStringMarshal(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: Mono.SafeStringMarshal.StringToUtf8
::System::IntPtr Mono::SafeStringMarshal::StringToUtf8(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::StringToUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "StringToUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: Mono.SafeStringMarshal.GFree
void Mono::SafeStringMarshal::GFree(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::GFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "SafeStringMarshal", "GFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: Mono.SafeStringMarshal.Dispose
void Mono::SafeStringMarshal::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::SafeStringMarshal::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SecurityParser
#include "Mono/Xml/SecurityParser.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityElement root
[[deprecated("Use field access instead!")]] ::System::Security::SecurityElement*& Mono::Xml::SecurityParser::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::System::Security::SecurityElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityElement current
[[deprecated("Use field access instead!")]] ::System::Security::SecurityElement*& Mono::Xml::SecurityParser::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::System::Security::SecurityElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack stack
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SecurityParser::dyn_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::dyn_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stack"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SecurityParser.LoadXml
void Mono::Xml::SecurityParser::LoadXml(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::LoadXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Xml.SecurityParser.ToXml
::System::Security::SecurityElement* Mono::Xml::SecurityParser::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartParsing
void Mono::Xml::SecurityParser::OnStartParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnStartParsing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnProcessingInstruction
void Mono::Xml::SecurityParser::OnProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnIgnorableWhitespace
void Mono::Xml::SecurityParser::OnIgnorableWhitespace(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnIgnorableWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnIgnorableWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnStartElement
void Mono::Xml::SecurityParser::OnStartElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndElement
void Mono::Xml::SecurityParser::OnEndElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnChars
void Mono::Xml::SecurityParser::OnChars(::StringW ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ch);
}
// Autogenerated method: Mono.Xml.SecurityParser.OnEndParsing
void Mono::Xml::SecurityParser::OnEndParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SecurityParser::OnEndParsing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser
#include "Mono/Xml/SmallXmlParser.hpp"
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler handler
[[deprecated("Use field access instead!")]] ::Mono::Xml::SmallXmlParser::IContentHandler*& Mono::Xml::SmallXmlParser::dyn_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_handler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handler"))->offset;
  return *reinterpret_cast<::Mono::Xml::SmallXmlParser::IContentHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& Mono::Xml::SmallXmlParser::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack elementNames
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SmallXmlParser::dyn_elementNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_elementNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementNames"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Stack xmlSpaces
[[deprecated("Use field access instead!")]] ::System::Collections::Stack*& Mono::Xml::SmallXmlParser::dyn_xmlSpaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_xmlSpaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpaces"))->offset;
  return *reinterpret_cast<::System::Collections::Stack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String xmlSpace
[[deprecated("Use field access instead!")]] ::StringW& Mono::Xml::SmallXmlParser::dyn_xmlSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_xmlSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "xmlSpace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder buffer
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& Mono::Xml::SmallXmlParser::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] nameBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Mono::Xml::SmallXmlParser::dyn_nameBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_nameBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nameBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isWhitespace
[[deprecated("Use field access instead!")]] bool& Mono::Xml::SmallXmlParser::dyn_isWhitespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_isWhitespace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isWhitespace"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl attributes
[[deprecated("Use field access instead!")]] ::Mono::Xml::SmallXmlParser::AttrListImpl*& Mono::Xml::SmallXmlParser::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::Mono::Xml::SmallXmlParser::AttrListImpl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 line
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParser::dyn_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParser::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean resetColumn
[[deprecated("Use field access instead!")]] bool& Mono::Xml::SmallXmlParser::dyn_resetColumn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::dyn_resetColumn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resetColumn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Error
::System::Exception* Mono::Xml::SmallXmlParser::Error(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method, msg);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.UnexpectedEndError
::System::Exception* Mono::Xml::SmallXmlParser::UnexpectedEndError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::UnexpectedEndError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnexpectedEndError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsNameChar
bool Mono::Xml::SmallXmlParser::IsNameChar(::Il2CppChar c, bool start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IsNameChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNameChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c, start);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.IsWhitespace
bool Mono::Xml::SmallXmlParser::IsWhitespace(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IsWhitespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleWhitespaces
void Mono::Xml::SmallXmlParser::HandleWhitespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::HandleWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.SkipWhitespaces
void Mono::Xml::SmallXmlParser::SkipWhitespaces(bool expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::SkipWhitespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SkipWhitespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, expected);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Peek
int Mono::Xml::SmallXmlParser::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Peek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Read
int Mono::Xml::SmallXmlParser::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Expect
void Mono::Xml::SmallXmlParser::Expect(int c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Expect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Expect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadUntil
::StringW Mono::Xml::SmallXmlParser::ReadUntil(::Il2CppChar until, bool handleReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadUntil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(until), ::il2cpp_utils::ExtractType(handleReferences)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, until, handleReferences);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadName
::StringW Mono::Xml::SmallXmlParser::ReadName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Parse
void Mono::Xml::SmallXmlParser::Parse(::System::IO::TextReader* input, ::Mono::Xml::SmallXmlParser::IContentHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, handler);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.Cleanup
void Mono::Xml::SmallXmlParser::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadContent
void Mono::Xml::SmallXmlParser::ReadContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.HandleBufferedContent
void Mono::Xml::SmallXmlParser::HandleBufferedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::HandleBufferedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBufferedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacters
void Mono::Xml::SmallXmlParser::ReadCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadReference
void Mono::Xml::SmallXmlParser::ReadReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCharacterReference
int Mono::Xml::SmallXmlParser::ReadCharacterReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCharacterReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCharacterReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadAttribute
void Mono::Xml::SmallXmlParser::ReadAttribute(::Mono::Xml::SmallXmlParser::AttrListImpl* a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadCDATASection
void Mono::Xml::SmallXmlParser::ReadCDATASection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadCDATASection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCDATASection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser.ReadComment
void Mono::Xml::SmallXmlParser::ReadComment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::ReadComment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler
#include "Mono/Xml/SmallXmlParser_IContentHandler.hpp"
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnStartParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnStartParsing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnEndParsing
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing(::Mono::Xml::SmallXmlParser* parser) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnEndParsing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndParsing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parser)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parser);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnStartElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement(::StringW name, ::Mono::Xml::SmallXmlParser::IAttrList* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnStartElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStartElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, attrs);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnEndElement
void Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnEndElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEndElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnProcessingInstruction
void Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction(::StringW name, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnChars
void Mono::Xml::SmallXmlParser::IContentHandler::OnChars(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IContentHandler.OnIgnorableWhitespace
void Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IContentHandler::OnIgnorableWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnIgnorableWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList
#include "Mono/Xml/SmallXmlParser_IAttrList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.get_Length
int Mono::Xml::SmallXmlParser::IAttrList::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.get_Names
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::IAttrList::get_Names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Names");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Names", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.get_Values
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::IAttrList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.GetName
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetName(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.GetValue
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetValue(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.IAttrList.GetValue
::StringW Mono::Xml::SmallXmlParser::IAttrList::GetValue(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::IAttrList::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl
#include "Mono/Xml/SmallXmlParser_AttrListImpl.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> attrNames
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrNames"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> attrValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::dyn_attrValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attrValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.get_Length
int Mono::Xml::SmallXmlParser::AttrListImpl::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.get_Names
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::AttrListImpl::get_Names() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Names");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Names", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.get_Values
::ArrayW<::StringW> Mono::Xml::SmallXmlParser::AttrListImpl::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.GetName
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetName(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.GetValue
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetValue(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.GetValue
::StringW Mono::Xml::SmallXmlParser::AttrListImpl::GetValue(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.Clear
void Mono::Xml::SmallXmlParser::AttrListImpl::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Xml.SmallXmlParser/Mono.Xml.AttrListImpl.Add
void Mono::Xml::SmallXmlParser::AttrListImpl::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParser::AttrListImpl::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Xml.SmallXmlParserException
#include "Mono/Xml/SmallXmlParserException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 line
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParserException::dyn_line() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParserException::dyn_line");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "line"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 column
[[deprecated("Use field access instead!")]] int& Mono::Xml::SmallXmlParserException::dyn_column() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Xml::SmallXmlParserException::dyn_column");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "column"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer/Mono.Globalization.Unicode.TableRange[] ranges
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::CodePointIndexer::TableRange>& Mono::Globalization::Unicode::CodePointIndexer::dyn_ranges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_ranges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ranges"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::CodePointIndexer::TableRange>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TotalCount
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_TotalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_TotalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TotalCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultIndex
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 defaultCP
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::dyn_defaultCP");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultCP"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.CodePointIndexer.ToIndex
int Mono::Globalization::Unicode::CodePointIndexer::ToIndex(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::ToIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.CodePointIndexer/Mono.Globalization.Unicode.TableRange
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Start
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 End
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_End");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "End"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Count
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_Count");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 IndexStart
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexStart");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IndexStart"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 IndexEnd
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::dyn_IndexEnd");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IndexEnd"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.CodePointIndexer/Mono.Globalization.Unicode.TableRange..ctor
Mono::Globalization::Unicode::CodePointIndexer::TableRange::TableRange(int start, int end, int indexStart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::CodePointIndexer::TableRange::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(indexStart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, indexStart);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 LCID
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_LCID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LCID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TailoringIndex
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TailoringIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 TailoringCount
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_TailoringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TailoringCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean FrenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::TailoringInfo::dyn_FrenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::TailoringInfo::dyn_FrenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FrenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Index
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::Contraction::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Char[] Source
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Mono::Globalization::Unicode::Contraction::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String Replacement
[[deprecated("Use field access instead!")]] ::StringW& Mono::Globalization::Unicode::Contraction::dyn_Replacement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_Replacement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Replacement"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] SortKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::Contraction::dyn_SortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Contraction::dyn_SortKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SortKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.ContractionComparer
#include "Mono/Globalization/Unicode/ContractionComparer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
::Mono::Globalization::Unicode::ContractionComparer* Mono::Globalization::Unicode::ContractionComparer::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::ContractionComparer*>("Mono.Globalization.Unicode", "ContractionComparer", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.ContractionComparer Instance
void Mono::Globalization::Unicode::ContractionComparer::_set_Instance(::Mono::Globalization::Unicode::ContractionComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "ContractionComparer", "Instance", value));
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer..cctor
void Mono::Globalization::Unicode::ContractionComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "ContractionComparer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.ContractionComparer.Compare
int Mono::Globalization::Unicode::ContractionComparer::Compare(::Mono::Globalization::Unicode::Contraction* c1, ::Mono::Globalization::Unicode::Contraction* c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::ContractionComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, c1, c2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte Source
[[deprecated("Use field access instead!")]] uint8_t& Mono::Globalization::Unicode::Level2Map::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Level2Map::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte Replace
[[deprecated("Use field access instead!")]] uint8_t& Mono::Globalization::Unicode::Level2Map::dyn_Replace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::Level2Map::dyn_Replace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Replace"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable.hpp"
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: Mono.Globalization.Unicode.TailoringInfo
#include "Mono/Globalization/Unicode/TailoringInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MaxExpansionLength
int Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_MaxExpansionLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MaxExpansionLength
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_MaxExpansionLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "MaxExpansionLength", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* ignorableFlags
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_ignorableFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* ignorableFlags
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_ignorableFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ignorableFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* categories
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_categories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* categories
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_categories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "categories", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte* level3
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte* level3
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "level3", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHScategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHScategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHScategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHScategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHScategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOcategory
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOcategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOcategory
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOcategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOcategory", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHSlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHSlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHSlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHSlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHSlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkCHTlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkCHTlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkCHTlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkCHTlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkCHTlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkJAlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkJAlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkJAlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkJAlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkJAlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv1
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv1
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte* cjkKOlv2
uint8_t* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_cjkKOlv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte* cjkKOlv2
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2(uint8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_cjkKOlv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "cjkKOlv2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] tailoringArr
::ArrayW<::Il2CppChar> Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringArr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] tailoringArr
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringArr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringArr", value));
}
// Autogenerated static field getter
// Get static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*> Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_tailoringInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*>>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos"));
}
// Autogenerated static field setter
// Set static field: static private readonly Mono.Globalization.Unicode.TailoringInfo[] tailoringInfos
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos(::ArrayW<::Mono::Globalization::Unicode::TailoringInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_tailoringInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "tailoringInfos", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object forLock
::Il2CppObject* Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_forLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object forLock
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_forLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "forLock", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean isReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_get_isReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean isReady
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::_set_isReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "isReady", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.get_IsReady
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::get_IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "get_IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetTailoringInfo
::Mono::Globalization::Unicode::TailoringInfo* Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo(int lcid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::GetTailoringInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetTailoringInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lcid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::TailoringInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lcid);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.BuildTailoringTables
void Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables(::System::Globalization::CultureInfo* culture, ::Mono::Globalization::Unicode::TailoringInfo* t, ByRef<::ArrayW<::Mono::Globalization::Unicode::Contraction*>> contractions, ByRef<::ArrayW<::Mono::Globalization::Unicode::Level2Map*>> diacriticals) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::BuildTailoringTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "BuildTailoringTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(contractions), ::il2cpp_utils::ExtractType(diacriticals)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, t, byref(contractions), byref(diacriticals));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.SetCJKReferences
void Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences(::StringW name, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::SetCJKReferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "SetCJKReferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Category
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level1
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level2
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.Level3
uint8_t Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::Level3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "Level3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorable
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable(int cp, uint8_t flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, flag);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsIgnorableNonSpacing
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsIgnorableNonSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsIgnorableNonSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToKanaTypeInsensitive
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::ToKanaTypeInsensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToKanaTypeInsensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.ToWidthCompat
int Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::ToWidthCompat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "ToWidthCompat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.HasSpecialWeight
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::HasSpecialWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "HasSpecialWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHalfWidthKana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHalfWidthKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHalfWidthKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsHiragana
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsHiragana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsHiragana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.IsJapaneseSmallLetter
bool Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::IsJapaneseSmallLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "IsJapaneseSmallLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.GetResource
::System::IntPtr Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::GetResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "GetResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.UInt32FromBytePtr
uint Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr(uint8_t* raw, uint idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::UInt32FromBytePtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "UInt32FromBytePtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raw), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, raw, idx);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJK
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK(::StringW culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable.FillCJKCore
void Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore(::StringW culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkLv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::FillCJKCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable", "FillCJKCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(cjkLv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(cjkLv2Indexer), byref(lv2Table));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c
#include "Mono/Globalization/Unicode/MSCompatUnicodeTable_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c <>9
::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c <>9
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9(::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>* Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>*>("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<Mono.Globalization.Unicode.Level2Map> <>9__17_0
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0(::System::Comparison_1<::Mono::Globalization::Unicode::Level2Map*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", "<>9__17_0", value)));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTable/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTable/Mono.Globalization.Unicode.<>c.<BuildTailoringTables>b__17_0
int Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::$BuildTailoringTables$b__17_0(::Mono::Globalization::Unicode::Level2Map* a, ::Mono::Globalization::Unicode::Level2Map* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTable::$$c::<BuildTailoringTables>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BuildTailoringTables>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil
#include "Mono/Globalization/Unicode/MSCompatUnicodeTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Ignorable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Ignorable
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Ignorable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Ignorable", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Category");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Category
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Category");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Category", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level1
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level2
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Level3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Level3
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Level3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Level3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_CjkCHS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer CjkCHS
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_CjkCHS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "CjkCHS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_get_Cjk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Cjk
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_set_Cjk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", "Cjk", value));
}
// Autogenerated method: Mono.Globalization.Unicode.MSCompatUnicodeTableUtil..cctor
void Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::MSCompatUnicodeTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "MSCompatUnicodeTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.NormalizationTableUtil
#include "Mono/Globalization/Unicode/NormalizationTableUtil.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Prop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Prop
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Prop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Prop", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Map");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Map
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Map");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Map", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Combining");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Combining
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Combining");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Combining", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Composite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Composite
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Composite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Composite", value));
}
// Autogenerated static field getter
// Get static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
::Mono::Globalization::Unicode::CodePointIndexer* Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_get_Helper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::CodePointIndexer*>("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper"));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Globalization.Unicode.CodePointIndexer Helper
void Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper(::Mono::Globalization::Unicode::CodePointIndexer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::_set_Helper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "NormalizationTableUtil", "Helper", value));
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil..cctor
void Mono::Globalization::Unicode::NormalizationTableUtil::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.PropIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::PropIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "PropIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.NormalizationTableUtil.MapIdx
int Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::NormalizationTableUtil::MapIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "NormalizationTableUtil", "MapIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Escape
#include "Mono/Globalization/Unicode/SimpleCollator_Escape.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: Mono.Globalization.Unicode.CodePointIndexer
#include "Mono/Globalization/Unicode/CodePointIndexer.hpp"
// Including type: Mono.Globalization.Unicode.Contraction
#include "Mono/Globalization/Unicode/Contraction.hpp"
// Including type: Mono.Globalization.Unicode.Level2Map
#include "Mono/Globalization/Unicode/Level2Map.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean QuickCheckDisabled
bool Mono::Globalization::Unicode::SimpleCollator::_get_QuickCheckDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_get_QuickCheckDisabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Globalization.Unicode", "SimpleCollator", "QuickCheckDisabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean QuickCheckDisabled
void Mono::Globalization::Unicode::SimpleCollator::_set_QuickCheckDisabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_set_QuickCheckDisabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "QuickCheckDisabled", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
::Mono::Globalization::Unicode::SimpleCollator* Mono::Globalization::Unicode::SimpleCollator::_get_invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_get_invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator*>("Mono.Globalization.Unicode", "SimpleCollator", "invariant"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Globalization.Unicode.SimpleCollator invariant
void Mono::Globalization::Unicode::SimpleCollator::_set_invariant(::Mono::Globalization::Unicode::SimpleCollator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_set_invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "invariant", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 UnsafeFlagLength
int Mono::Globalization::Unicode::SimpleCollator::_get_UnsafeFlagLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_get_UnsafeFlagLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Globalization.Unicode", "SimpleCollator", "UnsafeFlagLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 UnsafeFlagLength
void Mono::Globalization::Unicode::SimpleCollator::_set_UnsafeFlagLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::_set_UnsafeFlagLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator", "UnsafeFlagLength", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Globalization.TextInfo textInfo
[[deprecated("Use field access instead!")]] ::System::Globalization::TextInfo*& Mono::Globalization::Unicode::SimpleCollator::dyn_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_textInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textInfo"))->offset;
  return *reinterpret_cast<::System::Globalization::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkIndexer
[[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkIndexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkIndexer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkIndexer"))->offset;
  return *reinterpret_cast<::Mono::Globalization::Unicode::CodePointIndexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.Contraction[] contractions
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Contraction*>& Mono::Globalization::Unicode::SimpleCollator::dyn_contractions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_contractions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contractions"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::Contraction*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.Level2Map[] level2Maps
[[deprecated("Use field access instead!")]] ::ArrayW<::Mono::Globalization::Unicode::Level2Map*>& Mono::Globalization::Unicode::SimpleCollator::dyn_level2Maps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_level2Maps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level2Maps"))->offset;
  return *reinterpret_cast<::ArrayW<::Mono::Globalization::Unicode::Level2Map*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] unsafeFlags
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SimpleCollator::dyn_unsafeFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_unsafeFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unsafeFlags"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkCatTable
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkCatTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkCatTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkCatTable"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkLv1Table
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv1Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv1Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv1Table"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte* cjkLv2Table
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv2Table"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Mono.Globalization.Unicode.CodePointIndexer cjkLv2Indexer
[[deprecated("Use field access instead!")]] ::Mono::Globalization::Unicode::CodePointIndexer*& Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Indexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_cjkLv2Indexer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cjkLv2Indexer"))->offset;
  return *reinterpret_cast<::Mono::Globalization::Unicode::CodePointIndexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 lcid
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean frenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SimpleCollator::dyn_frenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::dyn_frenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator..cctor
void Mono::Globalization::Unicode::SimpleCollator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.SetCJKTable
void Mono::Globalization::Unicode::SimpleCollator::SetCJKTable(::System::Globalization::CultureInfo* culture, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> cjkIndexer, ByRef<uint8_t*> catTable, ByRef<uint8_t*> lv1Table, ByRef<::Mono::Globalization::Unicode::CodePointIndexer*> lv2Indexer, ByRef<uint8_t*> lv2Table) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::SetCJKTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCJKTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(cjkIndexer), ::il2cpp_utils::ExtractType(catTable), ::il2cpp_utils::ExtractType(lv1Table), ::il2cpp_utils::ExtractType(lv2Indexer), ::il2cpp_utils::ExtractType(lv2Table)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, culture, byref(cjkIndexer), byref(catTable), byref(lv1Table), byref(lv2Indexer), byref(lv2Table));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetNeutralCulture
::System::Globalization::CultureInfo* Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture(::System::Globalization::CultureInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetNeutralCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "GetNeutralCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Category
uint8_t Mono::Globalization::Unicode::SimpleCollator::Category(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Category");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Category", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level1
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level1(int cp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Level1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Level1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Level2
uint8_t Mono::Globalization::Unicode::SimpleCollator::Level2(int cp, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Level2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Level2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(ext)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, cp, ext);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsHalfKana
bool Mono::Globalization::Unicode::SimpleCollator::IsHalfKana(int cp, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsHalfKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsHalfKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cp), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cp, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::StringW s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(clist)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::StringW s, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetTailContraction
::Mono::Globalization::Unicode::Contraction* Mono::Globalization::Unicode::SimpleCollator::GetTailContraction(::StringW s, int start, int end, ::ArrayW<::Mono::Globalization::Unicode::Contraction*> clist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetTailContraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTailContraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(clist)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::Contraction*, false>(this, ___internal__method, s, start, end, clist);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterOptions
int Mono::Globalization::Unicode::SimpleCollator::FilterOptions(int i, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FilterOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetExtenderType
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::GetExtenderType(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetExtenderType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExtenderType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ToDashTypeValue
uint8_t Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ToDashTypeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "ToDashTypeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FilterExtender
int Mono::Globalization::Unicode::SimpleCollator::FilterExtender(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FilterExtender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FilterExtender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i, ext, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsIgnorable
bool Mono::Globalization::Unicode::SimpleCollator::IsIgnorable(int i, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsIgnorable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Globalization.Unicode", "SimpleCollator", "IsIgnorable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, i, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSafe
bool Mono::Globalization::Unicode::SimpleCollator::IsSafe(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, i);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
::System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, s, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
::System::Globalization::SortKey* Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, int start, int length, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method, s, start, length, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.GetSortKey
void Mono::Globalization::Unicode::SimpleCollator::GetSortKey(::StringW s, int start, int end, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::GetSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(opt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s, start, end, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw(int i, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ::Mono::Globalization::Unicode::SortKeyBuffer* buf, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FillSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSortKeyRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(opt)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, ext, buf, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.FillSurrogateSortKeyRaw
void Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw(int i, ::Mono::Globalization::Unicode::SortKeyBuffer* buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::FillSurrogateSortKeyRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSurrogateSortKeyRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, buf);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.Compare
int Mono::Globalization::Unicode::SimpleCollator::Compare(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ::System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(len1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(idx2), ::il2cpp_utils::ExtractType(len2), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, options);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.ClearBuffer
void Mono::Globalization::Unicode::SimpleCollator::ClearBuffer(uint8_t* buffer, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ClearBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, size);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareInternal
int Mono::Globalization::Unicode::SimpleCollator::CompareInternal(::StringW s1, int idx1, int len1, ::StringW s2, int idx2, int len2, ByRef<bool> targetConsumed, ByRef<bool> sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::CompareInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(idx1), ::il2cpp_utils::ExtractType(len1), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(idx2), ::il2cpp_utils::ExtractType(len2), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(skipHeadingExtenders), ::il2cpp_utils::ExtractType(immediateBreakup), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s1, idx1, len1, s2, idx2, len2, byref(targetConsumed), byref(sourceConsumed), skipHeadingExtenders, immediateBreakup, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.CompareFlagPair
int Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair(bool b1, bool b2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::CompareFlagPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareFlagPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b1), ::il2cpp_utils::ExtractType(b2)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b1, b2);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsPrefix
bool Mono::Globalization::Unicode::SimpleCollator::IsPrefix(::StringW s, ::StringW target, int start, int length, bool skipHeadingExtenders, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(skipHeadingExtenders), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, skipHeadingExtenders, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::StringW src, ::StringW target, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, src, target, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IsSuffix
bool Mono::Globalization::Unicode::SimpleCollator::IsSuffix(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IsSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.QuickIndexOf
int Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf(::StringW s, ::StringW target, int start, int length, ByRef<bool> testWasUnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::QuickIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QuickIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, byref(testWasUnable));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::StringW s, ::StringW target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal(::StringW s, ::Il2CppChar target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey(::StringW s, int start, int length, uint8_t* sortkey, ::Il2CppChar target, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOfSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, start, length, sortkey, target, ti, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.IndexOf
int Mono::Globalization::Unicode::SimpleCollator::IndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(targetSortKey), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::StringW s, ::StringW target, int start, int length, ::System::Globalization::CompareOptions opt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(opt)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, opt);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfOrdinal
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal(::StringW s, ::StringW target, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOfOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOfSortKey
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey(::StringW s, int start, int orgStart, int length, uint8_t* sortkey, int ti, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOfSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOfSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, start, orgStart, length, sortkey, ti, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.LastIndexOf
int Mono::Globalization::Unicode::SimpleCollator::LastIndexOf(::StringW s, ::StringW target, int start, int length, uint8_t* targetSortKey, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(targetSortKey), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s, target, start, length, targetSortKey, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForward(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesForward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesForward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, ti, sortkey, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesForwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore(::StringW s, ByRef<int> idx, int end, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesForwardCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesForwardCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, ti, sortkey, noLv4, ext, byref(ct), byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesPrimitive
bool Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive(::System::Globalization::CompareOptions opt, uint8_t* source, int si, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, uint8_t* target, int ti, bool noLv4) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(noLv4)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, opt, source, si, ext, target, ti, noLv4);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackward
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackward(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesBackward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesBackward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, orgStart, ti, sortkey, noLv4, byref(ctx));
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator.MatchesBackwardCore
bool Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore(::StringW s, ByRef<int> idx, int end, int orgStart, int ti, uint8_t* sortkey, bool noLv4, ::Mono::Globalization::Unicode::SimpleCollator::ExtenderType ext, ByRef<::Mono::Globalization::Unicode::Contraction*> ct, ByRef<::Mono::Globalization::Unicode::SimpleCollator::Context> ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::MatchesBackwardCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchesBackwardCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(orgStart), ::il2cpp_utils::ExtractType(ti), ::il2cpp_utils::ExtractType(sortkey), ::il2cpp_utils::ExtractType(noLv4), ::il2cpp_utils::ExtractType(ext), ::il2cpp_utils::ExtractType(ct), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, s, byref(idx), end, orgStart, ti, sortkey, noLv4, ext, byref(ct), byref(ctx));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context
#include "Mono/Globalization/Unicode/SimpleCollator_Context.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Globalization.CompareOptions Option
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Option() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Option");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Option"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte* NeverMatchFlags
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_NeverMatchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_NeverMatchFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NeverMatchFlags"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte* AlwaysMatchFlags
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_AlwaysMatchFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_AlwaysMatchFlags");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AlwaysMatchFlags"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* Buffer1
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer1"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* Buffer2
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_Buffer2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Buffer2"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PrevCode
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevCode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevCode"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* PrevSortKey
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevSortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::dyn_PrevSortKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PrevSortKey"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.Context..ctor
Mono::Globalization::Unicode::SimpleCollator::Context::Context(::System::Globalization::CompareOptions opt, uint8_t* alwaysMatchFlags, uint8_t* neverMatchFlags, uint8_t* buffer1, uint8_t* buffer2, uint8_t* prev1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::Context::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(alwaysMatchFlags), ::il2cpp_utils::ExtractType(neverMatchFlags), ::il2cpp_utils::ExtractType(buffer1), ::il2cpp_utils::ExtractType(buffer2), ::il2cpp_utils::ExtractType(prev1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, opt, alwaysMatchFlags, neverMatchFlags, buffer1, buffer2, prev1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.PreviousInfo
#include "Mono/Globalization/Unicode/SimpleCollator_PreviousInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Code
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_Code");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Code"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte* SortKey
[[deprecated("Use field access instead!")]] uint8_t*& Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_SortKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::dyn_SortKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SortKey"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.PreviousInfo..ctor
Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::PreviousInfo(bool dummy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::PreviousInfo::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dummy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dummy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType
#include "Mono/Globalization/Unicode/SimpleCollator_ExtenderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType None
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType None
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Simple
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Simple
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Voiced
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Voiced");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Voiced
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Voiced");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Voiced", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Conditional
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Conditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Conditional
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Conditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Conditional", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Buggy
::Mono::Globalization::Unicode::SimpleCollator::ExtenderType Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_get_Buggy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Mono::Globalization::Unicode::SimpleCollator::ExtenderType>("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Globalization.Unicode.SimpleCollator/Mono.Globalization.Unicode.ExtenderType Buggy
void Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy(::Mono::Globalization::Unicode::SimpleCollator::ExtenderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::_set_Buggy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Globalization.Unicode", "SimpleCollator/ExtenderType", "Buggy", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SimpleCollator::ExtenderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SimpleCollator::ExtenderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Globalization.Unicode.SortKeyBuffer
#include "Mono/Globalization/Unicode/SortKeyBuffer.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l1b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l2b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l3b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4sb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4sb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4tb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4tb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4tb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4kb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4kb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4kb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l4wb
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4wb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4wb"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] l5b
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5b"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String source
[[deprecated("Use field access instead!")]] ::StringW& Mono::Globalization::Unicode::SortKeyBuffer::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l1
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l2
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l3
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4s
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4s"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4t
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4t"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4k
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4k"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l4w
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l4w");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l4w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 l5
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_l5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lcid
[[deprecated("Use field access instead!")]] int& Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_lcid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lcid"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareOptions options
[[deprecated("Use field access instead!")]] ::System::Globalization::CompareOptions& Mono::Globalization::Unicode::SortKeyBuffer::dyn_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "options"))->offset;
  return *reinterpret_cast<::System::Globalization::CompareOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean processLevel2
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_processLevel2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processLevel2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSort
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSort"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean frenchSorted
[[deprecated("Use field access instead!")]] bool& Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::dyn_frenchSorted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frenchSorted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Reset
void Mono::Globalization::Unicode::SortKeyBuffer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.Initialize
void Mono::Globalization::Unicode::SortKeyBuffer::Initialize(::System::Globalization::CompareOptions options, int lcid, ::StringW s, bool frenchSort) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(lcid), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(frenchSort)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, options, lcid, s, frenchSort);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendCJKExtension
void Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension(uint8_t lv1msb, uint8_t lv1lsb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendCJKExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendCJKExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lv1msb), ::il2cpp_utils::ExtractType(lv1lsb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lv1msb, lv1lsb);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendKana
void Mono::Globalization::Unicode::SortKeyBuffer::AppendKana(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3, bool isSmallKana, uint8_t markType, bool isKatakana, bool isHalfWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendKana");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendKana", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3), ::il2cpp_utils::ExtractType(isSmallKana), ::il2cpp_utils::ExtractType(markType), ::il2cpp_utils::ExtractType(isKatakana), ::il2cpp_utils::ExtractType(isHalfWidth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3, isSmallKana, markType, isKatakana, isHalfWidth);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendNormal
void Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal(uint8_t category, uint8_t lv1, uint8_t lv2, uint8_t lv3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1), ::il2cpp_utils::ExtractType(lv2), ::il2cpp_utils::ExtractType(lv3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1, lv2, lv3);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendLevel5
void Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5(uint8_t category, uint8_t lv1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendLevel5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLevel5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(category), ::il2cpp_utils::ExtractType(lv1)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, category, lv1);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.AppendBufferPrimitive
void Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive(uint8_t value, ByRef<::ArrayW<uint8_t>> buf, ByRef<int> bidx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::AppendBufferPrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendBufferPrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(bidx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, byref(buf), byref(bidx));
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResultAndReset
::System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetResultAndReset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResultAndReset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetOptimizedLength
int Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength(::ArrayW<uint8_t> data, int len, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetOptimizedLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptimizedLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(len), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, data, len, defaultValue);
}
// Autogenerated method: Mono.Globalization.Unicode.SortKeyBuffer.GetResult
::System::Globalization::SortKey* Mono::Globalization::Unicode::SortKeyBuffer::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Globalization::Unicode::SortKeyBuffer::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::SortKey*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte m_nTag
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::ASN1_::dyn_m_nTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_m_nTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nTag"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_aValue
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::ASN1_::dyn_m_aValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_m_aValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_aValue"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList elist
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::ASN1_::dyn_elist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::dyn_elist");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elist"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.ASN1.get_Count
int Mono::Security::ASN1_::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Tag
uint8_t Mono::Security::ASN1_::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Length
int Mono::Security::ASN1_::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Value
::ArrayW<uint8_t> Mono::Security::ASN1_::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.set_Value
void Mono::Security::ASN1_::set_Value(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.get_Item
::Mono::Security::ASN1_* Mono::Security::ASN1_::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.ASN1.CompareArray
bool Mono::Security::ASN1_::CompareArray(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::CompareArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.ASN1.CompareValue
bool Mono::Security::ASN1_::CompareValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::CompareValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.Add
::Mono::Security::ASN1_* Mono::Security::ASN1_::Add(::Mono::Security::ASN1_* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1.GetBytes
::ArrayW<uint8_t> Mono::Security::ASN1_::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.Decode
void Mono::Security::ASN1_::Decode(::ArrayW<uint8_t> asn1, ByRef<int> anPos, int anLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(anPos), ::il2cpp_utils::ExtractType(anLength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(anPos), anLength);
}
// Autogenerated method: Mono.Security.ASN1.DecodeTLV
void Mono::Security::ASN1_::DecodeTLV(::ArrayW<uint8_t> asn1, ByRef<int> pos, ByRef<uint8_t> tag, ByRef<int> length, ByRef<::ArrayW<uint8_t>> content) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::DecodeTLV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeTLV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<uint8_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asn1, byref(pos), byref(tag), byref(length), byref(content));
}
// Autogenerated method: Mono.Security.ASN1.Element
::Mono::Security::ASN1_* Mono::Security::ASN1_::Element(int index, uint8_t anTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(anTag)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method, index, anTag);
}
// Autogenerated method: Mono.Security.ASN1.ToString
::StringW Mono::Security::ASN1_::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1_::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.ASN1Convert
#include "Mono/Security/ASN1Convert_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.ASN1Convert.FromInt32
::Mono::Security::ASN1_* Mono::Security::ASN1Convert_::FromInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert_::FromInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1Convert.FromOid
::Mono::Security::ASN1_* Mono::Security::ASN1Convert_::FromOid(::StringW oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert_::FromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToInt32
int Mono::Security::ASN1Convert_::ToInt32(::Mono::Security::ASN1_* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert_::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToOid
::StringW Mono::Security::ASN1Convert_::ToOid(::Mono::Security::ASN1_* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert_::ToOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToDateTime
::System::DateTime Mono::Security::ASN1Convert_::ToDateTime(::Mono::Security::ASN1_* time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::ASN1Convert_::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.BitConverterLE
#include "Mono/Security/BitConverterLE_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.BitConverterLE.GetUIntBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetUIntBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetUIntBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetUIntBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetULongBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetULongBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetULongBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetULongBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::ArrayW<uint8_t> Mono::Security::BitConverterLE_::GetBytes(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.UIntFromBytes
void Mono::Security::BitConverterLE_::UIntFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::UIntFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UIntFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ULongFromBytes
void Mono::Security::BitConverterLE_::ULongFromBytes(uint8_t* dst, ::ArrayW<uint8_t> src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ULongFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ULongFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToSingle
float Mono::Security::BitConverterLE_::ToSingle(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ToSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToDouble
double Mono::Security::BitConverterLE_::ToDouble(::ArrayW<uint8_t> value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::BitConverterLE_::ToDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7__ContentInfo.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String contentType
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::PKCS7_::ContentInfo::dyn_contentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::dyn_contentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 content
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::PKCS7_::ContentInfo::dyn_content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::dyn_content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "content"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_ASN1
::Mono::Security::ASN1_* Mono::Security::PKCS7_::ContentInfo::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_Content
::Mono::Security::ASN1_* Mono::Security::PKCS7_::ContentInfo::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.set_Content
void Mono::Security::PKCS7_::ContentInfo::set_Content(::Mono::Security::ASN1_* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.get_ContentType
::StringW Mono::Security::PKCS7_::ContentInfo::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.set_ContentType
void Mono::Security::PKCS7_::ContentInfo::set_ContentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.ContentInfo.GetASN1
::Mono::Security::ASN1_* Mono::Security::PKCS7_::ContentInfo::GetASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::ContentInfo::GetASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.PKCS7/Mono.Security.EncryptedData
#include "Mono/Security/PKCS7__EncryptedData.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7__ContentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte _version
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::PKCS7_::EncryptedData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.PKCS7/Mono.Security.ContentInfo _content
[[deprecated("Use field access instead!")]] ::Mono::Security::PKCS7_::ContentInfo*& Mono::Security::PKCS7_::EncryptedData::dyn__content() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::dyn__content");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_content"))->offset;
  return *reinterpret_cast<::Mono::Security::PKCS7_::ContentInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.PKCS7/Mono.Security.ContentInfo _encryptionAlgorithm
[[deprecated("Use field access instead!")]] ::Mono::Security::PKCS7_::ContentInfo*& Mono::Security::PKCS7_::EncryptedData::dyn__encryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::dyn__encryptionAlgorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionAlgorithm"))->offset;
  return *reinterpret_cast<::Mono::Security::PKCS7_::ContentInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _encrypted
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::PKCS7_::EncryptedData::dyn__encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::dyn__encrypted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encrypted"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.EncryptedData.get_EncryptionAlgorithm
::Mono::Security::PKCS7_::ContentInfo* Mono::Security::PKCS7_::EncryptedData::get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::get_EncryptionAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptionAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::PKCS7_::ContentInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/Mono.Security.EncryptedData.get_EncryptedContent
::ArrayW<uint8_t> Mono::Security::PKCS7_::EncryptedData::get_EncryptedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::PKCS7_::EncryptedData::get_EncryptedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.SafeBag
#include "Mono/Security/X509/SafeBag_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _bagOID
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::SafeBag_::dyn__bagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag_::dyn__bagOID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bagOID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 _asn1
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::X509::SafeBag_::dyn__asn1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag_::dyn__asn1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asn1"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_BagOID
::StringW Mono::Security::X509::SafeBag_::get_BagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag_::get_BagOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BagOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_ASN1
::Mono::Security::ASN1_* Mono::Security::X509::SafeBag_::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::SafeBag_::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.PKCS12
#include "Mono/Security/X509/PKCS12_.hpp"
// Including type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes
#include "Mono/Security/X509/PKCS12__DeriveBytes.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection_.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate_.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.EncryptedData
#include "Mono/Security/PKCS7__EncryptedData.hpp"
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8__PrivateKeyInfo.hpp"
// Including type: Mono.Security.PKCS7/Mono.Security.ContentInfo
#include "Mono/Security/PKCS7__ContentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 password_max_length
int Mono::Security::X509::PKCS12_::_get_password_max_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::_get_password_max_length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.X509", "PKCS12", "password_max_length"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 password_max_length
void Mono::Security::X509::PKCS12_::_set_password_max_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::_set_password_max_length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12", "password_max_length", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _password
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::PKCS12_::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _keyBags
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::PKCS12_::dyn__keyBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__keyBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _secretBags
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::PKCS12_::dyn__secretBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__secretBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secretBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509CertificateCollection _certs
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509CertificateCollection_*& Mono::Security::X509::PKCS12_::dyn__certs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__certs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certs"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509CertificateCollection_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keyBagsChanged
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::PKCS12_::dyn__keyBagsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__keyBagsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyBagsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _secretBagsChanged
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::PKCS12_::dyn__secretBagsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__secretBagsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secretBagsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _certsChanged
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::PKCS12_::dyn__certsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__certsChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_certsChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::PKCS12_::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _safeBags
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::X509::PKCS12_::dyn__safeBags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__safeBags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_safeBags"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RandomNumberGenerator _rng
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RandomNumberGenerator*& Mono::Security::X509::PKCS12_::dyn__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::dyn__rng");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rng"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RandomNumberGenerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_Password
void Mono::Security::X509::PKCS12_::set_Password(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_IterationCount
int Mono::Security::X509::PKCS12_::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_IterationCount
void Mono::Security::X509::PKCS12_::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Keys
::System::Collections::ArrayList* Mono::Security::X509::PKCS12_::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Certificates
::Mono::Security::X509::X509CertificateCollection_* Mono::Security::X509::PKCS12_::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_RNG
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::X509::PKCS12_::get_RNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::get_RNG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RNG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_MaximumPasswordLength
int Mono::Security::X509::PKCS12_::get_MaximumPasswordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::get_MaximumPasswordLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", "get_MaximumPasswordLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12..cctor
void Mono::Security::X509::PKCS12_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decode
void Mono::Security::X509::PKCS12_::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Compare
bool Mono::Security::X509::PKCS12_::Compare(::ArrayW<uint8_t> expected, ::ArrayW<uint8_t> actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, expected, actual);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetSymmetricAlgorithm
::System::Security::Cryptography::SymmetricAlgorithm* Mono::Security::X509::PKCS12_::GetSymmetricAlgorithm(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::GetSymmetricAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSymmetricAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::SymmetricAlgorithm*, false>(this, ___internal__method, algorithmOid, salt, iterationCount);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::Decrypt(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount, ::ArrayW<uint8_t> encryptedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(encryptedData)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algorithmOid, salt, iterationCount, encryptedData);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::Decrypt(::Mono::Security::PKCS7_::EncryptedData* ed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, ed);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Encrypt
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::Encrypt(::StringW algorithmOid, ::ArrayW<uint8_t> salt, int iterationCount, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, algorithmOid, salt, iterationCount, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetExistingParameters
::System::Security::Cryptography::DSAParameters Mono::Security::X509::PKCS12_::GetExistingParameters(ByRef<bool> found) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::GetExistingParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExistingParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, byref(found));
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddPrivateKey
void Mono::Security::X509::PKCS12_::AddPrivateKey(::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo* pki) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::AddPrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pki)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pki);
}
// Autogenerated method: Mono.Security.X509.PKCS12.ReadSafeBag
void Mono::Security::X509::PKCS12_::ReadSafeBag(::Mono::Security::ASN1_* safeBag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::ReadSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, safeBag);
}
// Autogenerated method: Mono.Security.X509.PKCS12.CertificateSafeBag
::Mono::Security::ASN1_* Mono::Security::X509::PKCS12_::CertificateSafeBag(::Mono::Security::X509::X509Certificate_* x509, ::System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::CertificateSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x509), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method, x509, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.MAC
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::MAC(::ArrayW<uint8_t> password, ::ArrayW<uint8_t> salt, int iterations, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::MAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterations), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, password, salt, iterations, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetBytes
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.EncryptedContentInfo
::Mono::Security::PKCS7_::ContentInfo* Mono::Security::X509::PKCS12_::EncryptedContentInfo(::Mono::Security::ASN1_* safeBags, ::StringW algorithmOid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::EncryptedContentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptedContentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBags), ::il2cpp_utils::ExtractType(algorithmOid)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::PKCS7_::ContentInfo*, false>(this, ___internal__method, safeBags, algorithmOid);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12_::AddCertificate(::Mono::Security::X509::X509Certificate_* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12_::AddCertificate(::Mono::Security::X509::X509Certificate_* cert, ::System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12_::RemoveCertificate(::Mono::Security::X509::X509Certificate_* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12_::RemoveCertificate(::Mono::Security::X509::X509Certificate_* cert, ::System::Collections::IDictionary* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cert, attrs);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Clone
::Il2CppObject* Mono::Security::X509::PKCS12_::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Finalize
void Mono::Security::X509::PKCS12_::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes
#include "Mono/Security/X509/PKCS12__DeriveBytes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] keyDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::_get_keyDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_get_keyDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] keyDiversifier
void Mono::Security::X509::PKCS12_::DeriveBytes::_set_keyDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_set_keyDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] ivDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::_get_ivDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_get_ivDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ivDiversifier
void Mono::Security::X509::PKCS12_::DeriveBytes::_set_ivDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_set_ivDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] macDiversifier
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::_get_macDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_get_macDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] macDiversifier
void Mono::Security::X509::PKCS12_::DeriveBytes::_set_macDiversifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::_set_macDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _hashName
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::PKCS12_::DeriveBytes::dyn__hashName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::dyn__hashName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hashName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::PKCS12_::DeriveBytes::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _password
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::PKCS12_::DeriveBytes::dyn__password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::dyn__password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_password"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::PKCS12_::DeriveBytes::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_HashName
void Mono::Security::X509::PKCS12_::DeriveBytes::set_HashName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_IterationCount
void Mono::Security::X509::PKCS12_::DeriveBytes::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_Password
void Mono::Security::X509::PKCS12_::DeriveBytes::set_Password(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.set_Salt
void Mono::Security::X509::PKCS12_::DeriveBytes::set_Salt(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::set_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes..cctor
void Mono::Security::X509::PKCS12_::DeriveBytes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12/DeriveBytes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.Adjust
void Mono::Security::X509::PKCS12_::DeriveBytes::Adjust(::ArrayW<uint8_t> a, int aOff, ::ArrayW<uint8_t> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(aOff), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, a, aOff, b);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.Derive
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::Derive(::ArrayW<uint8_t> diversifier, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::Derive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Derive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diversifier), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, diversifier, n);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveKey
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::DeriveKey(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveIV
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::DeriveIV(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::DeriveIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/Mono.Security.X509.DeriveBytes.DeriveMAC
::ArrayW<uint8_t> Mono::Security::X509::PKCS12_::DeriveBytes::DeriveMAC(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::PKCS12_::DeriveBytes::DeriveMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X501
#include "Mono/Security/X509/X501_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] countryName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_countryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_countryName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "countryName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] countryName
void Mono::Security::X509::X501_::_set_countryName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_countryName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "countryName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_organizationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_organizationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "organizationName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationName
void Mono::Security::X509::X501_::_set_organizationName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_organizationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationalUnitName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_organizationalUnitName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_organizationalUnitName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "organizationalUnitName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationalUnitName
void Mono::Security::X509::X501_::_set_organizationalUnitName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_organizationalUnitName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationalUnitName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] commonName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_commonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_commonName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "commonName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] commonName
void Mono::Security::X509::X501_::_set_commonName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_commonName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "commonName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] localityName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_localityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_localityName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "localityName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] localityName
void Mono::Security::X509::X501_::_set_localityName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_localityName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "localityName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] stateOrProvinceName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_stateOrProvinceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_stateOrProvinceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "stateOrProvinceName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] stateOrProvinceName
void Mono::Security::X509::X501_::_set_stateOrProvinceName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_stateOrProvinceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "stateOrProvinceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] streetAddress
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_streetAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_streetAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "streetAddress"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] streetAddress
void Mono::Security::X509::X501_::_set_streetAddress(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_streetAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "streetAddress", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] domainComponent
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_domainComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_domainComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "domainComponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] domainComponent
void Mono::Security::X509::X501_::_set_domainComponent(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_domainComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "domainComponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] userid
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_userid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_userid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "userid"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] userid
void Mono::Security::X509::X501_::_set_userid(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_userid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "userid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] email
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "email"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] email
void Mono::Security::X509::X501_::_set_email(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "email", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dnQualifier
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_dnQualifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_dnQualifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "dnQualifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dnQualifier
void Mono::Security::X509::X501_::_set_dnQualifier(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_dnQualifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "dnQualifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] title
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "title"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] title
void Mono::Security::X509::X501_::_set_title(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "title", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] surname
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_surname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_surname");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "surname"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] surname
void Mono::Security::X509::X501_::_set_surname(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_surname");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "surname", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] givenName
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_givenName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_givenName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "givenName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] givenName
void Mono::Security::X509::X501_::_set_givenName(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_givenName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "givenName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] initial
::ArrayW<uint8_t> Mono::Security::X509::X501_::_get_initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_get_initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.X509", "X501", "initial"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] initial
void Mono::Security::X509::X501_::_set_initial(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::_set_initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "initial", value));
}
// Autogenerated method: Mono.Security.X509.X501..cctor
void Mono::Security::X509::X501_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::StringW Mono::Security::X509::X501_::ToString(::Mono::Security::ASN1_* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seq);
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::StringW Mono::Security::X509::X501_::ToString(::Mono::Security::ASN1_* seq, bool reversed, ::StringW separator, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq), ::il2cpp_utils::ExtractType(reversed), ::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(quotes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seq, reversed, separator, quotes);
}
// Autogenerated method: Mono.Security.X509.X501.AppendEntry
void Mono::Security::X509::X501_::AppendEntry(::System::Text::StringBuilder* sb, ::Mono::Security::ASN1_* entry, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X501_::AppendEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "AppendEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(quotes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, entry, quotes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection_.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String encoding_error
::StringW Mono::Security::X509::X509Certificate_::_get_encoding_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::_get_encoding_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.X509", "X509Certificate", "encoding_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String encoding_error
void Mono::Security::X509::X509Certificate_::_set_encoding_error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::_set_encoding_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Certificate", "encoding_error", value));
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 decoder
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::X509::X509Certificate_::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_encodedcert
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_m_encodedcert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_encodedcert");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_encodedcert"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_from
[[deprecated("Use field access instead!")]] ::System::DateTime& Mono::Security::X509::X509Certificate_::dyn_m_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_from");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_from"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime m_until
[[deprecated("Use field access instead!")]] ::System::DateTime& Mono::Security::X509::X509Certificate_::dyn_m_until() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_until");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_until"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 issuer
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::X509::X509Certificate_::dyn_issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_issuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issuer"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_issuername
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X509Certificate_::dyn_m_issuername() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_issuername");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_issuername"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_keyalgo
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X509Certificate_::dyn_m_keyalgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_keyalgo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyalgo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_keyalgoparams
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_m_keyalgoparams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_keyalgoparams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_keyalgoparams"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.ASN1 subject
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::X509::X509Certificate_::dyn_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subject"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_subject
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X509Certificate_::dyn_m_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_publickey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_m_publickey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_publickey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_publickey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] signature
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_signature");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signature"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_signaturealgo
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X509Certificate_::dyn_m_signaturealgo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_signaturealgo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_signaturealgo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_signaturealgoparams
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_m_signaturealgoparams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_m_signaturealgoparams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_signaturealgoparams"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RSA _rsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSA*& Mono::Security::X509::X509Certificate_::dyn__rsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn__rsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.DSA _dsa
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::DSA*& Mono::Security::X509::X509Certificate_::dyn__dsa() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn__dsa");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dsa"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::DSA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 version
[[deprecated("Use field access instead!")]] int& Mono::Security::X509::X509Certificate_::dyn_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] serialnumber
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_serialnumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_serialnumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serialnumber"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] issuerUniqueID
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_issuerUniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_issuerUniqueID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "issuerUniqueID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] subjectUniqueID
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::X509::X509Certificate_::dyn_subjectUniqueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_subjectUniqueID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subjectUniqueID"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Security.X509.X509ExtensionCollection extensions
[[deprecated("Use field access instead!")]] ::Mono::Security::X509::X509ExtensionCollection_*& Mono::Security::X509::X509Certificate_::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::Mono::Security::X509::X509ExtensionCollection_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_DSA
::System::Security::Cryptography::DSA* Mono::Security::X509::X509Certificate_::get_DSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_DSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_IssuerName
::StringW Mono::Security::X509::X509Certificate_::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_KeyAlgorithmParameters
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate_::get_KeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithmParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RSA
::System::Security::Cryptography::RSA* Mono::Security::X509::X509Certificate_::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_RSA");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RawData
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate_::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_RawData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SerialNumber
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate_::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SubjectName
::StringW Mono::Security::X509::X509Certificate_::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidFrom
::System::DateTime Mono::Security::X509::X509Certificate_::get_ValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_ValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidUntil
::System::DateTime Mono::Security::X509::X509Certificate_::get_ValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::get_ValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate..cctor
void Mono::Security::X509::X509Certificate_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.Parse
void Mono::Security::X509::X509Certificate_::Parse(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetUnsignedBigInteger
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate_::GetUnsignedBigInteger(::ArrayW<uint8_t> integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::GetUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, integer);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetIssuerName
::Mono::Security::ASN1_* Mono::Security::X509::X509Certificate_::GetIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::GetIssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetSubjectName
::Mono::Security::ASN1_* Mono::Security::X509::X509Certificate_::GetSubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::GetSubjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::ASN1_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetObjectData
void Mono::Security::X509::X509Certificate_::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.PEM
::ArrayW<uint8_t> Mono::Security::X509::X509Certificate_::PEM(::StringW type, ::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Certificate_::PEM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", "PEM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection_.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection__X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate_.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.get_Item
::Mono::Security::X509::X509Certificate_* Mono::Security::X509::X509CertificateCollection_::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate_*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.Add
int Mono::Security::X509::X509CertificateCollection_::Add(::Mono::Security::X509::X509Certificate_* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetEnumerator
::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator* Mono::Security::X509::X509CertificateCollection_::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Mono::Security::X509::X509CertificateCollection_::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetHashCode
int Mono::Security::X509::X509CertificateCollection_::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection__X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::dyn_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::dyn_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.get_Current
::Mono::Security::X509::X509Certificate_* Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::X509::X509Certificate_*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.System.Collections.IEnumerator.Reset
void Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/Mono.Security.X509.X509CertificateEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509CertificateCollection_::X509CertificateEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.String extnOid
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::X509::X509Extension_::dyn_extnOid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::dyn_extnOid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnOid"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean extnCritical
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::X509Extension_::dyn_extnCritical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::dyn_extnCritical");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnCritical"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected Mono.Security.ASN1 extnValue
[[deprecated("Use field access instead!")]] ::Mono::Security::ASN1_*& Mono::Security::X509::X509Extension_::dyn_extnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::dyn_extnValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extnValue"))->offset;
  return *reinterpret_cast<::Mono::Security::ASN1_**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Decode
void Mono::Security::X509::X509Extension_::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.WriteLine
void Mono::Security::X509::X509Extension_::WriteLine(::System::Text::StringBuilder* sb, int n, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sb, n, pos);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Equals
bool Mono::Security::X509::X509Extension_::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.Security.X509.X509Extension.GetHashCode
int Mono::Security::X509::X509Extension_::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.ToString
::StringW Mono::Security::X509::X509Extension_::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509Extension_::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection_.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1_.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean readOnly
[[deprecated("Use field access instead!")]] bool& Mono::Security::X509::X509ExtensionCollection_::dyn_readOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection_::dyn_readOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.X509.X509ExtensionCollection.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Mono::Security::X509::X509ExtensionCollection_::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::X509::X509ExtensionCollection_::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.ARC4Managed
#include "Mono/Security/Cryptography/ARC4Managed_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::ARC4Managed_::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::ARC4Managed_::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte x
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Cryptography::ARC4Managed_::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte y
[[deprecated("Use field access instead!")]] uint8_t& Mono::Security::Cryptography::ARC4Managed_::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::dyn_y");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_disposed
[[deprecated("Use field access instead!")]] bool& Mono::Security::Cryptography::ARC4Managed_::dyn_m_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::dyn_m_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::ARC4Managed_::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_InputBlockSize
int Mono::Security::Cryptography::ARC4Managed_::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_OutputBlockSize
int Mono::Security::Cryptography::ARC4Managed_::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.KeySetup
void Mono::Security::Cryptography::ARC4Managed_::KeySetup(::ArrayW<uint8_t> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::KeySetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CheckInput
void Mono::Security::Cryptography::ARC4Managed_::CheckInput(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformBlock
int Mono::Security::Cryptography::ARC4Managed_::TransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::TransformBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.InternalTransformBlock
int Mono::Security::Cryptography::ARC4Managed_::InternalTransformBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount, ::ArrayW<uint8_t> outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformFinalBlock
::ArrayW<uint8_t> Mono::Security::Cryptography::ARC4Managed_::TransformFinalBlock(::ArrayW<uint8_t> inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_Key
::ArrayW<uint8_t> Mono::Security::Cryptography::ARC4Managed_::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.set_Key
void Mono::Security::Cryptography::ARC4Managed_::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Finalize
void Mono::Security::Cryptography::ARC4Managed_::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Dispose
void Mono::Security::Cryptography::ARC4Managed_::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateEncryptor
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed_::CreateEncryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateDecryptor
::System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed_::CreateDecryptor(::ArrayW<uint8_t> rgbKey, ::ArrayW<uint8_t> rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateIV
void Mono::Security::Cryptography::ARC4Managed_::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateKey
void Mono::Security::Cryptography::ARC4Managed_::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::ARC4Managed_::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.KeyBuilder
#include "Mono/Security/Cryptography/KeyBuilder_.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder_::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RandomNumberGenerator*>("Mono.Security.Cryptography", "KeyBuilder", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Security::Cryptography::KeyBuilder_::_set_rng(::System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyBuilder", "rng", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.get_Rng
::System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder_::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.Key
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder_::Key(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.IV
::ArrayW<uint8_t> Mono::Security::Cryptography::KeyBuilder_::IV(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyBuilder_::IV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _userPathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__userPathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _userPathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__userPathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _userPath
::StringW Mono::Security::Cryptography::KeyPairPersistence::_get__userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__userPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userPath
void Mono::Security::Cryptography::KeyPairPersistence::_set__userPath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__userPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_userPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _machinePathExists
bool Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__machinePathExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _machinePathExists
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__machinePathExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePathExists", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _machinePath
::StringW Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get__machinePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _machinePath
void Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set__machinePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "_machinePath", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object lockobj
::Il2CppObject* Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_get_lockobj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lockobj
void Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_set_lockobj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyPairPersistence", "lockobj", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CspParameters _params
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CspParameters*& Mono::Security::Cryptography::KeyPairPersistence::dyn__params() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__params");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_params"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CspParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keyvalue
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__keyvalue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyvalue"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _filename
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__filename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_filename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _container
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::KeyPairPersistence::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_Filename
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_Filename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_Filename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_KeyValue
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.set_KeyValue
void Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::set_KeyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UserPath
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_UserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_MachinePath
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_MachinePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "get_MachinePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_CanChange
bool Mono::Security::Cryptography::KeyPairPersistence::get_CanChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_CanChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseDefaultKeyContainer
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UseDefaultKeyContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseDefaultKeyContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_UseMachineKeyStore
bool Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_UseMachineKeyStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseMachineKeyStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.get_ContainerName
::StringW Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::get_ContainerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence..cctor
void Mono::Security::Cryptography::KeyPairPersistence::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Load
bool Mono::Security::Cryptography::KeyPairPersistence::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Save
void Mono::Security::Cryptography::KeyPairPersistence::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Remove
void Mono::Security::Cryptography::KeyPairPersistence::Remove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::_CanSecure(::StringW root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence._IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::_IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "_IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.CanSecure
bool Mono::Security::Cryptography::KeyPairPersistence::CanSecure(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::CanSecure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "CanSecure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectUser
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectUser(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ProtectUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ProtectMachine
bool Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ProtectMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "ProtectMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsUserProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::IsUserProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsUserProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.IsMachineProtected
bool Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::IsMachineProtected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyPairPersistence", "IsMachineProtected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.Copy
::System::Security::Cryptography::CspParameters* Mono::Security::Cryptography::KeyPairPersistence::Copy(::System::Security::Cryptography::CspParameters* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::Copy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Copy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspParameters*, false>(this, ___internal__method, p);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.FromXml
void Mono::Security::Cryptography::KeyPairPersistence::FromXml(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::FromXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xml);
}
// Autogenerated method: Mono.Security.Cryptography.KeyPairPersistence.ToXml
::StringW Mono::Security::Cryptography::KeyPairPersistence::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::KeyPairPersistence::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2
#include "Mono/Security/Cryptography/MD2_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD2.Create
::Mono::Security::Cryptography::MD2_* Mono::Security::Cryptography::MD2_::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2_::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD2_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2Managed
#include "Mono/Security/Cryptography/MD2Managed_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PI_SUBST
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::_get_PI_SUBST() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::_get_PI_SUBST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PI_SUBST
void Mono::Security::Cryptography::MD2Managed_::_set_PI_SUBST(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::_set_PI_SUBST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] checksum
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_checksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_checksum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checksum"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::MD2Managed_::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD2Managed_::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed..cctor
void Mono::Security::Cryptography::MD2Managed_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.MD2Transform
void Mono::Security::Cryptography::MD2Managed_::MD2Transform(::ArrayW<uint8_t> state, ::ArrayW<uint8_t> checksum, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::MD2Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD2Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(checksum), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, checksum, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Initialize
void Mono::Security::Cryptography::MD2Managed_::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashCore
void Mono::Security::Cryptography::MD2Managed_::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD2Managed_::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD2Managed_::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4
#include "Mono/Security/Cryptography/MD4_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4.Create
::Mono::Security::Cryptography::MD4_* Mono::Security::Cryptography::MD4_::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4_::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Mono::Security::Cryptography::MD4_*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4Managed
#include "Mono/Security/Cryptography/MD4Managed_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] state
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed_::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] count
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] x
[[deprecated("Use field access instead!")]] ::ArrayW<uint>& Mono::Security::Cryptography::MD4Managed_::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_x");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] digest
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::MD4Managed_::dyn_digest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::dyn_digest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "digest"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Padding
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed_::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.F
uint Mono::Security::Cryptography::MD4Managed_::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.G
uint Mono::Security::Cryptography::MD4Managed_::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.H
uint Mono::Security::Cryptography::MD4Managed_::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.ROL
uint Mono::Security::Cryptography::MD4Managed_::ROL(uint x, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::ROL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ROL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.FF
void Mono::Security::Cryptography::MD4Managed_::FF(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::FF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.GG
void Mono::Security::Cryptography::MD4Managed_::GG(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::GG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HH
void Mono::Security::Cryptography::MD4Managed_::HH(ByRef<uint> a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(a), b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Encode
void Mono::Security::Cryptography::MD4Managed_::Encode(::ArrayW<uint8_t> output, ::ArrayW<uint> input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Decode
void Mono::Security::Cryptography::MD4Managed_::Decode(::ArrayW<uint> output, ::ArrayW<uint8_t> input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, output, input, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.MD4Transform
void Mono::Security::Cryptography::MD4Managed_::MD4Transform(::ArrayW<uint> state, ::ArrayW<uint8_t> block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::MD4Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD4Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Initialize
void Mono::Security::Cryptography::MD4Managed_::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashCore
void Mono::Security::Cryptography::MD4Managed_::HashCore(::ArrayW<uint8_t> array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashFinal
::ArrayW<uint8_t> Mono::Security::Cryptography::MD4Managed_::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::MD4Managed_::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS1
#include "Mono/Security/Cryptography/PKCS1_.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA1
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA256
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA256"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA256
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA256(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA256", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA384
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA384"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA384
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA384(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA384", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA512
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::_get_emptySHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_get_emptySHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Mono.Security.Cryptography", "PKCS1", "emptySHA512"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA512
void Mono::Security::Cryptography::PKCS1_::_set_emptySHA512(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::_set_emptySHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA512", value));
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1..cctor
void Mono::Security::Cryptography::PKCS1_::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Compare
bool Mono::Security::Cryptography::PKCS1_::Compare(::ArrayW<uint8_t> array1, ::ArrayW<uint8_t> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.I2OSP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::I2OSP(::ArrayW<uint8_t> x, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::I2OSP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "I2OSP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, size);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.OS2IP
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::OS2IP(::ArrayW<uint8_t> x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::OS2IP");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "OS2IP", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.RSAVP1
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::RSAVP1(::System::Security::Cryptography::RSA* rsa, ::ArrayW<uint8_t> s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::RSAVP1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "RSAVP1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, s);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue, signature);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::StringW hashName, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hashName), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hashName, hashValue, signature);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Verify_v15
bool Mono::Security::Cryptography::PKCS1_::Verify_v15(::System::Security::Cryptography::RSA* rsa, ::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, ::ArrayW<uint8_t> signature, bool tryNonStandardEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Verify_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Verify_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa), ::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(signature), ::il2cpp_utils::ExtractType(tryNonStandardEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rsa, hash, hashValue, signature, tryNonStandardEncoding);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.Encode_v15
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS1_::Encode_v15(::System::Security::Cryptography::HashAlgorithm* hash, ::ArrayW<uint8_t> hashValue, int emLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::Encode_v15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "Encode_v15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hash), ::il2cpp_utils::ExtractType(hashValue), ::il2cpp_utils::ExtractType(emLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hash, hashValue, emLength);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromName
::System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1_::CreateFromName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS1_::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8__PrivateKeyInfo.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _version
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _key
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_key"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList _list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::dyn__list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.get_PrivateKey
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.RemoveLeadingZero
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::RemoveLeadingZero(::ArrayW<uint8_t> bigInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::RemoveLeadingZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "RemoveLeadingZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.Normalize
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::Normalize(::ArrayW<uint8_t> bigInt, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bigInt, length);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.DecodeRSA
::System::Security::Cryptography::RSA* Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::DecodeRSA(::ArrayW<uint8_t> keypair) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keypair)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keypair);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.PrivateKeyInfo.DecodeDSA
::System::Security::Cryptography::DSA* Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::DecodeDSA(::ArrayW<uint8_t> privateKey, ::System::Security::Cryptography::DSAParameters dsaParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::PrivateKeyInfo::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKey), ::il2cpp_utils::ExtractType(dsaParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::DSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, privateKey, dsaParameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8__EncryptedPrivateKeyInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _algorithm
[[deprecated("Use field access instead!")]] ::StringW& Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__algorithm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_algorithm"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _salt
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__salt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_salt"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _iterations
[[deprecated("Use field access instead!")]] int& Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__iterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__iterations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_Algorithm
::StringW Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_EncryptedData
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_EncryptedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_EncryptedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_Salt
::ArrayW<uint8_t> Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.get_IterationCount
int Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/Mono.Security.Cryptography.EncryptedPrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::Decode(::ArrayW<uint8_t> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Mono::Security::Cryptography::PKCS8_::EncryptedPrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
