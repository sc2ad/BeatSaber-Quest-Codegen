// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController
#include "GlobalNamespace/SelectableStateController.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::SelectableStateController::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SelectableStateController/ViewState,System.Boolean> stateDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::SelectableStateController::ViewState, bool>*& GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::dyn_stateDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stateDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::SelectableStateController::ViewState, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectableStateController/ViewState <currentViewState>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectableStateController::ViewState& GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::dyn_$currentViewState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentViewState>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectableStateController::ViewState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SelectableStateController.get_tweeningManager
::Tweening::TimeTweeningManager* GlobalNamespace::SelectableStateController::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Tweening::TimeTweeningManager*, false>(this, ___internal__method);
}
// Autogenerated method: SelectableStateController.get_viewState
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::get_viewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::get_viewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SelectableStateController::ViewState, false>(this, ___internal__method);
}
// Autogenerated method: SelectableStateController.get_currentViewState
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::get_currentViewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::get_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SelectableStateController::ViewState, false>(this, ___internal__method);
}
// Autogenerated method: SelectableStateController.set_currentViewState
void GlobalNamespace::SelectableStateController::set_currentViewState(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::set_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.add_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::add_stateDidChangeEvent(::System::Action_2<::GlobalNamespace::SelectableStateController::ViewState, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.remove_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent(::System::Action_2<::GlobalNamespace::SelectableStateController::ViewState, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.SetState
void GlobalNamespace::SelectableStateController::SetState(::GlobalNamespace::SelectableStateController::ViewState state, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, animated);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController/ViewState
#include "GlobalNamespace/SelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Normal
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Normal
void GlobalNamespace::SelectableStateController::ViewState::_set_Normal(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Highlighted
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Highlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Pressed
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Pressed
void GlobalNamespace::SelectableStateController::ViewState::_set_Pressed(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Disabled
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Disabled
void GlobalNamespace::SelectableStateController::ViewState::_set_Disabled(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Selected
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Selected
void GlobalNamespace::SelectableStateController::ViewState::_set_Selected(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState SelectedAndHighlighted
::GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "SelectedAndHighlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState SelectedAndHighlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted(::GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "SelectedAndHighlighted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SelectableStateController::ViewState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableStateController::ViewState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoTransitionButtonSelectableStateController
#include "GlobalNamespace/NoTransitionButtonSelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoTransitionButtonSelectableStateController.OnEnable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.OnDisable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.HandleNoTransitionButtonSelectionStateDidChange
void GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange(::HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTransitionButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.ResolveSelectionState
void GlobalNamespace::NoTransitionButtonSelectableStateController::ResolveSelectionState(::HMUI::NoTransitionsButton::SelectionState state, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionButtonSelectableStateController::ResolveSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, animated);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoTransitionToggleSelectableStateController
#include "GlobalNamespace/NoTransitionToggleSelectableStateController.hpp"
// Including type: HMUI.NoTransitionsToggle
#include "HMUI/NoTransitionsToggle.hpp"
// Including type: HMUI.UISelectionState
#include "HMUI/UISelectionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoTransitionToggleSelectableStateController.OnEnable
void GlobalNamespace::NoTransitionToggleSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionToggleSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionToggleSelectableStateController.OnDisable
void GlobalNamespace::NoTransitionToggleSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionToggleSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionToggleSelectableStateController.HandleNoTransitionToggleSelectionStateDidChange
void GlobalNamespace::NoTransitionToggleSelectableStateController::HandleNoTransitionToggleSelectionStateDidChange(::HMUI::UISelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionToggleSelectableStateController::HandleNoTransitionToggleSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTransitionToggleSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: NoTransitionToggleSelectableStateController.ResolveSelectionState
void GlobalNamespace::NoTransitionToggleSelectableStateController::ResolveSelectionState(::HMUI::UISelectionState state, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoTransitionToggleSelectableStateController::ResolveSelectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveSelectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, animated);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectableCellSelectableStateController
#include "GlobalNamespace/SelectableCellSelectableStateController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectableCellSelectableStateController.OnEnable
void GlobalNamespace::SelectableCellSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectableCellSelectableStateController.OnDisable
void GlobalNamespace::SelectableCellSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectableCellSelectableStateController.HandleSelectableCellInteractableDidChange
void GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellInteractableDidChange(::HMUI::Interactable* interactableCell, bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellInteractableDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableCellInteractableDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactableCell), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interactableCell, interactable);
}
// Autogenerated method: SelectableCellSelectableStateController.HandleSelectableCellHighlightDidChange
void GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellHighlightDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellHighlightDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableCellHighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType);
}
// Autogenerated method: SelectableCellSelectableStateController.HandleSelectableCellSelectionStateDidChange
void GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellSelectionStateDidChange(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType, ::Il2CppObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::HandleSelectableCellSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableCellSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType), ::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType, owner);
}
// Autogenerated method: SelectableCellSelectableStateController.ResolveState
void GlobalNamespace::SelectableCellSelectableStateController::ResolveState(::HMUI::SelectableCell* selectableCell, ::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectableCellSelectableStateController::ResolveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectableCell), ::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectableCell, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapGraphicViewStateTransition
#include "GlobalNamespace/SpriteSwapGraphicViewStateTransition.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SpriteSwapTransitionSO _transition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SpriteSwapTransitionSO*& GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpriteSwapTransitionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.get_transition
::GlobalNamespace::BaseTransitionSO* GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _normalSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__normalSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _highlightedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__highlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _pressedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__pressedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _disabledSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__disabledSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _selectedAndHighlightedSprite
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::dyn__selectedAndHighlightedSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpriteSwapTransitionSO.get_normalSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_highlightedSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_pressedSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_disabledSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedAndHighlightedSprite
::UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EaseType _easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::TransitionTimingSO::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransitionTimingSO::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _easeDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TransitionTimingSO::dyn__easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransitionTimingSO::dyn__easeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransitionTimingSO.get_easeType
::GlobalNamespace::EaseType GlobalNamespace::TransitionTimingSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransitionTimingSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: TransitionTimingSO.get_easeDuration
float GlobalNamespace::TransitionTimingSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransitionTimingSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _normalState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__normalState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _highlightedState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__highlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _pressedState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__pressedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pressedState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _disabledState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__disabledState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__selectedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _selectedAndHighlightedState
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::dyn__selectedAndHighlightedState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedAndHighlightedState"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vector3TransitionSO.get_normalState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_highlightedState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_pressedState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_disabledState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedAndHighlightedState
::UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TextMeshProButton _keyButtonPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TextMeshProButton*& GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn__keyButtonPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyButtonPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TextMeshProButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Char> textKeyWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppChar>*& GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn_textKeyWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textKeyWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppChar>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action deleteButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn_deleteButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deleteButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action okButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn_okButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn_cancelButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _okButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__okButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn__okButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::UIKeyboard::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _okButtonInteractivity
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn__okButtonInteractivity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_okButtonInteractivity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hideCancelButton
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::UIKeyboard::dyn__hideCancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::dyn__hideCancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideCancelButton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard.set_enableOkButtonInteractivity
void GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableOkButtonInteractivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.set_hideCancelButton
void GlobalNamespace::UIKeyboard::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent(::System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent(::System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.Awake
void GlobalNamespace::UIKeyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_0
void GlobalNamespace::UIKeyboard::$Awake$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::<Awake>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_1
void GlobalNamespace::UIKeyboard::$Awake$b__21_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::<Awake>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_2
void GlobalNamespace::UIKeyboard::$Awake$b__21_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::<Awake>b__21_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_3
void GlobalNamespace::UIKeyboard::$Awake$b__21_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::<Awake>b__21_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_key");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UIKeyboard <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UIKeyboard*& GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboard/<>c__DisplayClass21_0.<Awake>b__4
void GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::$Awake$b__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::<Awake>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboardManager
#include "GlobalNamespace/UIKeyboardManager.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kKeyboardTopOffset
float GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UIKeyboardManager", "kKeyboardTopOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kKeyboardTopOffset
void GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UIKeyboardManager", "kKeyboardTopOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.UIKeyboard _uiKeyboard
[[deprecated("Use field access instead!")]] ::HMUI::UIKeyboard*& GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<::HMUI::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _keyboardModalView
[[deprecated("Use field access instead!")]] ::HMUI::ModalView*& GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__keyboardModalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardModalView"))->offset;
  return *reinterpret_cast<::HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _keyboardContainerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__keyboardContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardContainerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentContainerTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__parentContainerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentContainerTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VRUIControls.VRInputModule _vrInputModule
[[deprecated("Use field access instead!")]] ::VRUIControls::VRInputModule*& GlobalNamespace::UIKeyboardManager::dyn__vrInputModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__vrInputModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInputModule"))->offset;
  return *reinterpret_cast<::VRUIControls::VRInputModule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.InputFieldView _selectedInput
[[deprecated("Use field access instead!")]] ::HMUI::InputFieldView*& GlobalNamespace::UIKeyboardManager::dyn__selectedInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::dyn__selectedInput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedInput"))->offset;
  return *reinterpret_cast<::HMUI::InputFieldView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UIKeyboardManager.get_keyboard
::HMUI::UIKeyboard* GlobalNamespace::UIKeyboardManager::get_keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::get_keyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::UIKeyboard*, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.Start
void GlobalNamespace::UIKeyboardManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnEnable
void GlobalNamespace::UIKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDisable
void GlobalNamespace::UIKeyboardManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDestroy
void GlobalNamespace::UIKeyboardManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OpenKeyboardFor
void GlobalNamespace::UIKeyboardManager::OpenKeyboardFor(::HMUI::InputFieldView* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::OpenKeyboardFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenKeyboardFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UIKeyboardManager.CloseKeyboard
void GlobalNamespace::UIKeyboardManager::CloseKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::CloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.TransferKeyboardTo
void GlobalNamespace::UIKeyboardManager::TransferKeyboardTo(::HMUI::InputFieldView* nextInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::TransferKeyboardTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferKeyboardTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextInput)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nextInput);
}
// Autogenerated method: UIKeyboardManager.ShouldCloseKeyboard
bool GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard(::UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldCloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, root);
}
// Autogenerated method: UIKeyboardManager.ProcessMousePress
void GlobalNamespace::UIKeyboardManager::ProcessMousePress(::UnityEngine::GameObject* currentOverGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentOverGo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentOverGo);
}
// Autogenerated method: UIKeyboardManager.HandleKeyboardOkButton
void GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboardOkButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTextEntryController
#include "GlobalNamespace/VRTextEntryController.hpp"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UIKeyboard _uiKeyboard
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UIKeyboard*& GlobalNamespace::VRTextEntryController::dyn__uiKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__uiKeyboard");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiKeyboard"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UIKeyboard**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::VRTextEntryController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _cursorText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::VRTextEntryController::dyn__cursorText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__cursorText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cursorText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRTextEntryController::dyn__maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowBlank
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRTextEntryController::dyn__allowBlank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__allowBlank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowBlank"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> textDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::VRTextEntryController::dyn_textDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn_textDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action okButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::VRTextEntryController::dyn_okButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn_okButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action cancelButtonWasPressedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::VRTextEntryController::dyn_cancelButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn_cancelButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _stopBlinkingCursor
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRTextEntryController::dyn__stopBlinkingCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::dyn__stopBlinkingCursor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopBlinkingCursor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTextEntryController.set_hideCancelButton
void GlobalNamespace::VRTextEntryController::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.get_text
::StringW GlobalNamespace::VRTextEntryController::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.set_text
void GlobalNamespace::VRTextEntryController::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::add_textDidChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::add_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.Awake
void GlobalNamespace::VRTextEntryController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnEnable
void GlobalNamespace::VRTextEntryController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnDisable
void GlobalNamespace::VRTextEntryController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.BlinkCursor
::System::Collections::IEnumerator* GlobalNamespace::VRTextEntryController::BlinkCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::BlinkCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardTextKeyWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed(::Il2CppChar key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardTextKeyWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardDeleteButtonWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardDeleteButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_0
void GlobalNamespace::VRTextEntryController::$Awake$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::<Awake>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_1
void GlobalNamespace::VRTextEntryController::$Awake$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::<Awake>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRTextEntryController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRTextEntryController*& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRTextEntryController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <cursorColor>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$cursorColor$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::dyn_$cursorColor$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cursorColor>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.IDisposable.Dispose
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.MoveNext
bool GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsContent
#include "GlobalNamespace/CreditsContent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _normalTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__normalTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__normalTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _normalLocalizedTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__normalLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__normalLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _titleTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__titleTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__titleTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _titleLocalizedTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__titleLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__titleLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _headerTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__headerTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__headerTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _headerLocalizedTextPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CreditsContent::dyn__headerLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__headerLocalizedTextPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerLocalizedTextPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _columnCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CreditsContent::dyn__columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__columnCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_columnCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spaceHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsContent::dyn__spaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__spaceHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spaceHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _titleHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsContent::dyn__titleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__titleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _contentRoot
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::CreditsContent::dyn__contentRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__contentRoot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRoot"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rootRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::CreditsContent::dyn__rootRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__rootRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _creditsContentTextAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::CreditsContent::dyn__creditsContentTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::dyn__creditsContentTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creditsContentTextAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsContent.get_normalTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_normalTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_normalLocalizedTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_titleTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleLocalizedTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_headerTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerLocalizedTextPrefab
::UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_columnCount
int GlobalNamespace::CreditsContent::get_columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_columnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_columnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_spaceHeight
float GlobalNamespace::CreditsContent::get_spaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_spaceHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spaceHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleHeight
float GlobalNamespace::CreditsContent::get_titleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_titleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_contentRoot
::UnityEngine::Transform* GlobalNamespace::CreditsContent::get_contentRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_contentRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_rootRectTransform
::UnityEngine::RectTransform* GlobalNamespace::CreditsContent::get_rootRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_rootRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_creditsContentTextAsset
::UnityEngine::TextAsset* GlobalNamespace::CreditsContent::get_creditsContentTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsContent::get_creditsContentTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_creditsContentTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsController
#include "GlobalNamespace/CreditsController.hpp"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CreditsScenesTransitionSetupDataSO _creditsSceneSetupDataSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsScenesTransitionSetupDataSO*& GlobalNamespace::CreditsController::dyn__creditsSceneSetupDataSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__creditsSceneSetupDataSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_creditsSceneSetupDataSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPlayerBase _audioPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioPlayerBase*& GlobalNamespace::CreditsController::dyn__audioPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__audioPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPlayerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _continueButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::CreditsController::dyn__continueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__continueButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continueButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentRectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::CreditsController::dyn__contentRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__contentRectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentRectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _overflowHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsController::dyn__overflowHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__overflowHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overflowHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _contentWrapper
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::CreditsController::dyn__contentWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__contentWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_contentWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::CreditsController::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::CreditsController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didFinish
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CreditsController::dyn__didFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__didFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPaused
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CreditsController::dyn__isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::dyn__isPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsController.Start
void GlobalNamespace::CreditsController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.OnDestroy
void GlobalNamespace::CreditsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.Finish
void GlobalNamespace::CreditsController::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.ScrollCoroutine
::System::Collections::IEnumerator* GlobalNamespace::CreditsController::ScrollCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::ScrollCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusCaptured
void GlobalNamespace::CreditsController::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusReleased
void GlobalNamespace::CreditsController::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsController*& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <contentHeight>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentHeight$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentHeight$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contentHeight>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <contentWrapperHeight>5__3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentWrapperHeight$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$contentWrapperHeight$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<contentWrapperHeight>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <posY>5__4
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$posY$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$posY$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<posY>5__4"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <scrollingSpeed>5__5
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$scrollingSpeed$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::dyn_$scrollingSpeed$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<scrollingSpeed>5__5"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.MoveNext
bool GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData
#include "GlobalNamespace/CreditsData.hpp"
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/RootCreditsItem[] creditsItems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CreditsData::RootCreditsItem*>& GlobalNamespace::CreditsData::dyn_creditsItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::dyn_creditsItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creditsItems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CreditsData::RootCreditsItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData.Deserialize
::GlobalNamespace::CreditsData* GlobalNamespace::CreditsData::Deserialize(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CreditsData", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CreditsData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Normal
::GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Normal
void GlobalNamespace::CreditsData::TextStyle::_set_Normal(::GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Title
::GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_get_Title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Title"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Title
void GlobalNamespace::CreditsData::TextStyle::_set_Title(::GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_set_Title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Title", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Header
::GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Header"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Header
void GlobalNamespace::CreditsData::TextStyle::_set_Header(::GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Header", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CreditsData::TextStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::TextStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String text
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CreditsData::Text::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Text::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean localized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CreditsData::Text::dyn_localized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Text::dyn_localized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/TextStyle style
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsData::TextStyle& GlobalNamespace::CreditsData::Text::dyn_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Text::dyn_style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "style"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsData::TextStyle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/Text.IsEmpty
bool GlobalNamespace::CreditsData::Text::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Text::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/Text.ToString
::StringW GlobalNamespace::CreditsData::Text::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::Text::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text title
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::RootCreditsItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text text
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::RootCreditsItem::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rowCountOverride
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CreditsData::RootCreditsItem::dyn_rowCountOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::dyn_rowCountOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rowCountOverride"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/ChildCreditsItem[] creditsItems
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CreditsData::ChildCreditsItem*>& GlobalNamespace::CreditsData::RootCreditsItem::dyn_creditsItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::dyn_creditsItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creditsItems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CreditsData::ChildCreditsItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::RootCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasText
bool GlobalNamespace::CreditsData::RootCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasRowItems
bool GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRowItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text title
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::ChildCreditsItem::dyn_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::ChildCreditsItem::dyn_title");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "title"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CreditsData/Text text
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreditsData::Text*& GlobalNamespace::CreditsData::ChildCreditsItem::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::ChildCreditsItem::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreditsData::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreditsData/ChildCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/ChildCreditsItem.HasText
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreditsData::ChildCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuShockwave
#include "GlobalNamespace/MenuShockwave.hpp"
// Including type: VRUIControls.VRPointer
#include "VRUIControls/VRPointer.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _shockwavePS
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::MenuShockwave::dyn__shockwavePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::dyn__shockwavePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRUIControls.VRPointer _vrPointer
[[deprecated("Use field access instead!")]] ::VRUIControls::VRPointer*& GlobalNamespace::MenuShockwave::dyn__vrPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::dyn__vrPointer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPointer"))->offset;
  return *reinterpret_cast<::VRUIControls::VRPointer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal[] _buttonClickEvents
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::Signal*>& GlobalNamespace::MenuShockwave::dyn__buttonClickEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::dyn__buttonClickEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonClickEvents"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Signal*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _shockwavePSEmitParams
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::MenuShockwave::dyn__shockwavePSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::dyn__shockwavePSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuShockwave.Awake
void GlobalNamespace::MenuShockwave::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnEnable
void GlobalNamespace::MenuShockwave::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnDisable
void GlobalNamespace::MenuShockwave::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.HandleButtonClickEvent
void GlobalNamespace::MenuShockwave::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.SpawnShockwave
void GlobalNamespace::MenuShockwave::SpawnShockwave(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuShockwave::SpawnShockwave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnShockwave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _overrideEnvironmentsToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEnvironmentsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _elementsGO
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elementsGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elementsGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementsGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentOverrideSettingsPanelController/Elements[] _elements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements*>& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
[[deprecated("Use field access instead!")]] ::HMUI::PanelAnimationSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _allEnvironments
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__allEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__allEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allEnvironments"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OverrideEnvironmentSettings _overrideEnvironmentSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OverrideEnvironmentSettings*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__overrideEnvironmentSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideEnvironmentSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OverrideEnvironmentSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.get_overrideEnvironmentSettings
::GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.SetData
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData(::GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideEnvironmentSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, overrideEnvironmentSettings);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.Refresh
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleOverrideEnvironmentsToggleValueChanged
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideEnvironmentsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.<HandleOverrideEnvironmentsToggleValueChanged>b__16_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$HandleOverrideEnvironmentsToggleValueChanged$b__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::<HandleOverrideEnvironmentsToggleValueChanged>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideEnvironmentsToggleValueChanged>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshProUGUI label
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "label"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HMUI.SimpleTextDropdown simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentTypeSO environmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<EnvironmentInfoSO> <environmentInfos>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>*& GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_$environmentInfos$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::dyn_$environmentInfos$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<environmentInfos>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.get_environmentInfos
::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.set_environmentInfos
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos(::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9(::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__12_0
::System::Func_2<::GlobalNamespace::EnvironmentInfoSO*, ::StringW>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::EnvironmentInfoSO*, ::StringW>*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__12_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__12_0(::System::Func_2<::GlobalNamespace::EnvironmentInfoSO*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__12_0", value)));
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c..cctor
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentOverrideSettingsPanelController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c.<SetData>b__12_0
::StringW GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::$SetData$b__12_0(::GlobalNamespace::EnvironmentInfoSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::<SetData>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::FileBrowserTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FileBrowserTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FileBrowserTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserTableCell.get_text
::StringW GlobalNamespace::FileBrowserTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableCell.set_text
void GlobalNamespace::FileBrowserTableCell::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableCell.SelectionDidChange
void GlobalNamespace::FileBrowserTableCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: FileBrowserTableCell.HighlightDidChange
void GlobalNamespace::FileBrowserTableCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserTableView
#include "GlobalNamespace/FileBrowserTableView.hpp"
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::StringW GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "FileBrowserTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FileBrowserTableView", "kCellIdentifier", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.TableView _tableView
[[deprecated("Use field access instead!")]] ::HMUI::TableView*& GlobalNamespace::FileBrowserTableView::dyn__tableView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::dyn__tableView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tableView"))->offset;
  return *reinterpret_cast<::HMUI::TableView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserTableCell _cellPrefab
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FileBrowserTableCell*& GlobalNamespace::FileBrowserTableView::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FileBrowserTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FileBrowserTableView::dyn__cellHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::dyn__cellHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<FileBrowserTableView,FileBrowserItem> didSelectRow
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::FileBrowserTableView*, ::GlobalNamespace::FileBrowserItem*>*& GlobalNamespace::FileBrowserTableView::dyn_didSelectRow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::dyn_didSelectRow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectRow"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::FileBrowserTableView*, ::GlobalNamespace::FileBrowserItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserItem[] _items
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FileBrowserItem*>& GlobalNamespace::FileBrowserTableView::dyn__items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::dyn__items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_items"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserTableView.add_didSelectRow
void GlobalNamespace::FileBrowserTableView::add_didSelectRow(::System::Action_2<::GlobalNamespace::FileBrowserTableView*, ::GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.remove_didSelectRow
void GlobalNamespace::FileBrowserTableView::remove_didSelectRow(::System::Action_2<::GlobalNamespace::FileBrowserTableView*, ::GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.Init
void GlobalNamespace::FileBrowserTableView::Init(::ArrayW<::GlobalNamespace::FileBrowserItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SetItems
void GlobalNamespace::FileBrowserTableView::SetItems(::ArrayW<::GlobalNamespace::FileBrowserItem*> items) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::SetItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRowToItemWithPath
bool GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath(::StringW folderPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRowToItemWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folderPath)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, folderPath);
}
// Autogenerated method: FileBrowserTableView.CellSize
float GlobalNamespace::FileBrowserTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.NumberOfCells
int GlobalNamespace::FileBrowserTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.CellForIdx
::HMUI::TableCell* GlobalNamespace::FileBrowserTableView::CellForIdx(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.HandleDidSelectRowEvent
void GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent(::HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRow
void GlobalNamespace::FileBrowserTableView::SelectAndScrollRow(int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::SelectAndScrollRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: FileBrowserTableView.ClearSelection
void GlobalNamespace::FileBrowserTableView::ClearSelection(bool animated, bool scrollToRow0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(scrollToRow0)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, scrollToRow0);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator
#include "GlobalNamespace/CampaignFlowCoordinator.hpp"
// Including type: CampaignFlowCoordinator/<>c__DisplayClass20_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass20_0.hpp"
// Including type: CampaignFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: MissionSelectionNavigationController
#include "GlobalNamespace/MissionSelectionNavigationController.hpp"
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsClearedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__resultsClearedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__resultsClearedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsClearedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsFailedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__resultsFailedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__resultsFailedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsFailedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _newObjectiveLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::CampaignFlowCoordinator::dyn__newObjectiveLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__newObjectiveLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newObjectiveLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::CampaignFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsManager*& GlobalNamespace::CampaignFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionSelectionNavigationController _missionSelectionNavigationController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionSelectionNavigationController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionSelectionNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__missionSelectionNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionSelectionNavigationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionSelectionNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionResultsViewController _missionResultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionResultsViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionResultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__missionResultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionResultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MissionHelpViewController _missionHelpViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionHelpViewController*& GlobalNamespace::CampaignFlowCoordinator::dyn__missionHelpViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__missionHelpViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionHelpViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionHelpViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::CampaignFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CampaignProgressModel _campaignProgressModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::CampaignFlowCoordinator::dyn__campaignProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__campaignProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignProgressModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CampaignFlowCoordinator> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::CampaignFlowCoordinator*>*& GlobalNamespace::CampaignFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::CampaignFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showCredits
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CampaignFlowCoordinator::dyn__showCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::dyn__showCredits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showCredits"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator.add_didFinishEvent
void GlobalNamespace::CampaignFlowCoordinator::add_didFinishEvent(::System::Action_1<::GlobalNamespace::CampaignFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CampaignFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::CampaignFlowCoordinator::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::CampaignFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionSelectionNavigationControllerDidPressPlayButton
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionSelectionNavigationControllerDidPressPlayButton(::GlobalNamespace::MissionSelectionNavigationController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionSelectionNavigationControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionSelectionNavigationControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionHelpViewControllerDidFinish
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionHelpViewControllerDidFinish(::GlobalNamespace::MissionHelpViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionHelpViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionHelpViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionResultsViewControllerContinueButtonPressed
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerContinueButtonPressed(::GlobalNamespace::MissionResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionResultsViewControllerRetryButtonPressed
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerRetryButtonPressed(::GlobalNamespace::MissionResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionResultsViewControllerRetryButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionResultsViewControllerRetryButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: CampaignFlowCoordinator.StartLevel
void GlobalNamespace::CampaignFlowCoordinator::StartLevel(::System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::StartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionLevelSceneDidFinish
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneDidFinish(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: CampaignFlowCoordinator.HandleMissionLevelSceneRestarted
void GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneRestarted(::GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, ::GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::HandleMissionLevelSceneRestarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneRestarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: CampaignFlowCoordinator.UpdatePlayerStatistics
void GlobalNamespace::CampaignFlowCoordinator::UpdatePlayerStatistics(::GlobalNamespace::MissionCompletionResults* missionCompletionResults, ::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::UpdatePlayerStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionCompletionResults), ::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionCompletionResults, missionNode);
}
// Autogenerated method: CampaignFlowCoordinator.<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0
void GlobalNamespace::CampaignFlowCoordinator::$HandleMissionResultsViewControllerContinueButtonPressed$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerContinueButtonPressed>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CampaignFlowCoordinator.<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1
void GlobalNamespace::CampaignFlowCoordinator::$HandleMissionResultsViewControllerContinueButtonPressed$b__21_1(bool presented) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerContinueButtonPressed>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(presented)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, presented);
}
// Autogenerated method: CampaignFlowCoordinator.DidActivate
void GlobalNamespace::CampaignFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: CampaignFlowCoordinator.DidDeactivate
void GlobalNamespace::CampaignFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: CampaignFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::CampaignFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: CampaignFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::CampaignFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator/<>c__DisplayClass20_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass20_0.hpp"
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CampaignFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionHelpViewController viewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionHelpViewController*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::dyn_viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionHelpViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator/<>c__DisplayClass20_0.<HandleMissionHelpViewControllerDidFinish>b__0
void GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::$HandleMissionHelpViewControllerDidFinish$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass20_0::<HandleMissionHelpViewControllerDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionHelpViewControllerDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CampaignFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/CampaignFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CampaignFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionResultsViewController viewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionResultsViewController*& GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::dyn_viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CampaignFlowCoordinator/<>c__DisplayClass22_0.<HandleMissionResultsViewControllerRetryButtonPressed>b__0
void GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::$HandleMissionResultsViewControllerRetryButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CampaignFlowCoordinator::$$c__DisplayClass22_0::<HandleMissionResultsViewControllerRetryButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionResultsViewControllerRetryButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarFlowCoordinator
#include "GlobalNamespace/EditAvatarFlowCoordinator.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: AvatarTweenController
#include "GlobalNamespace/AvatarTweenController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: EditColorController
#include "GlobalNamespace/EditColorController.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarTweenController _avatarTweenController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarTweenController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarTweenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarTweenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarTweenController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _avatarContainerGameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarContainerGameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarContainerGameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarContainerGameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarViewController _editAvatarViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarViewController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditColorController _editColorViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditColorController*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editColorViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__editColorViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditColorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<EditAvatarViewController/AvatarEditPart,System.Action> _parameterChangedAnimationCallbacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::System::Action*>*& GlobalNamespace::EditAvatarFlowCoordinator::dyn__parameterChangedAnimationCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__parameterChangedAnimationCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameterChangedAnimationCallbacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::EditAvatarViewController::AvatarEditPart, ::System::Action*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditAvatarFlowCoordinator/EditAvatarType _editAvatarType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType& GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn__editAvatarType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<EditAvatarFlowCoordinator,EditAvatarFlowCoordinator/EditAvatarType> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::EditAvatarFlowCoordinator*, ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>*& GlobalNamespace::EditAvatarFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::EditAvatarFlowCoordinator*, ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<EditAvatarFlowCoordinator/EditAvatarType> wasSetupEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>*& GlobalNamespace::EditAvatarFlowCoordinator::dyn_wasSetupEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::dyn_wasSetupEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasSetupEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditAvatarFlowCoordinator.add_didFinishEvent
void GlobalNamespace::EditAvatarFlowCoordinator::add_didFinishEvent(::System::Action_2<::GlobalNamespace::EditAvatarFlowCoordinator*, ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::EditAvatarFlowCoordinator::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::EditAvatarFlowCoordinator*, ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.add_wasSetupEvent
void GlobalNamespace::EditAvatarFlowCoordinator::add_wasSetupEvent(::System::Action_1<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::add_wasSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_wasSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.remove_wasSetupEvent
void GlobalNamespace::EditAvatarFlowCoordinator::remove_wasSetupEvent(::System::Action_1<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::remove_wasSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_wasSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditAvatarFlowCoordinator.Setup
void GlobalNamespace::EditAvatarFlowCoordinator::Setup(::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editAvatarType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, editAvatarType);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerDidRequestColorChange
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidRequestColorChange(::System::Action_1<::UnityEngine::Color>* colorCallback, ::UnityEngine::Color currentColor, ::GlobalNamespace::EditAvatarViewController::AvatarEditPart editPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidRequestColorChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidRequestColorChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorCallback), ::il2cpp_utils::ExtractType(currentColor), ::il2cpp_utils::ExtractType(editPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorCallback, currentColor, editPart, uvSegment);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerChangedAvatarPart
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerChangedAvatarPart(::GlobalNamespace::EditAvatarViewController::AvatarEditPart avatarPart) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerChangedAvatarPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerChangedAvatarPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarPart)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarPart);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditAvatarViewControllerDidFinished
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidFinished(::GlobalNamespace::EditAvatarViewController::FinishAction _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::HandleEditAvatarViewControllerDidFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarViewControllerDidFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, _);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditColorViewControllerDidChangedColor
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidChangedColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidChangedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorViewControllerDidChangedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditAvatarFlowCoordinator.HandleEditColorViewControllerDidFinish
void GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidFinish(bool apply) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::HandleEditColorViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(apply)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, apply);
}
// Autogenerated method: EditAvatarFlowCoordinator.DidActivate
void GlobalNamespace::EditAvatarFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EditAvatarFlowCoordinator.DidDeactivate
void GlobalNamespace::EditAvatarFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditAvatarFlowCoordinator/EditAvatarType
#include "GlobalNamespace/EditAvatarFlowCoordinator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EditAvatarFlowCoordinator/EditAvatarType Create
::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>("", "EditAvatarFlowCoordinator/EditAvatarType", "Create"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarFlowCoordinator/EditAvatarType Create
void GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Create(::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarFlowCoordinator/EditAvatarType", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public EditAvatarFlowCoordinator/EditAvatarType Edit
::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Edit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_get_Edit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType>("", "EditAvatarFlowCoordinator/EditAvatarType", "Edit"));
}
// Autogenerated static field setter
// Set static field: static public EditAvatarFlowCoordinator/EditAvatarType Edit
void GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Edit(::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::_set_Edit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EditAvatarFlowCoordinator/EditAvatarType", "Edit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: HealthWarningFlowCoordinator/InitData
#include "GlobalNamespace/HealthWarningFlowCoordinator_InitData.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: SelectLanguageViewController
#include "GlobalNamespace/SelectLanguageViewController.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: HealthWarningViewController
#include "GlobalNamespace/HealthWarningViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: DlcPromoPanelModel
#include "GlobalNamespace/DlcPromoPanelModel.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AppInitScenesTransitionSetupDataContainerSO _appInitScenesTransitionSetupDataContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__appInitScenesTransitionSetupDataContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__appInitScenesTransitionSetupDataContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appInitScenesTransitionSetupDataContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppInitScenesTransitionSetupDataContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectLanguageViewController _selectLanguageViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectLanguageViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectLanguageViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectLanguageViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectLanguageViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectLanguageViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectRegionViewController _selectRegionViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectRegionViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectRegionViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectRegionViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectRegionViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectRegionViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EulaViewController _eulaViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EulaViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__eulaViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__eulaViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eulaViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EulaViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PrivacyPolicyViewController _privacyPolicyViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrivacyPolicyViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__privacyPolicyViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__privacyPolicyViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_privacyPolicyViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrivacyPolicyViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HealthWarningViewController _healthWarningViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HealthWarningViewController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__healthWarningViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__healthWarningViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DlcPromoPanelModel _dlcPromoPanelModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelModel*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__dlcPromoPanelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__dlcPromoPanelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoPanelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningFlowCoordinator/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HealthWarningFlowCoordinator::InitData*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningFlowCoordinator::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<HMUI.ViewController,System.String> _viewControllerTitles
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::HMUI::ViewController*, ::StringW>*& GlobalNamespace::HealthWarningFlowCoordinator::dyn__viewControllerTitles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__viewControllerTitles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewControllerTitles"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::HMUI::ViewController*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectRegionViewController/Region _selectedRegion
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectRegionViewController::Region& GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectedRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::dyn__selectedRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedRegion"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectRegionViewController::Region*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthWarningFlowCoordinator.Update
void GlobalNamespace::HealthWarningFlowCoordinator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleSelectLanguageViewControllerDidChangeLanguage
void GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidChangeLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidChangeLanguage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectLanguageViewControllerDidChangeLanguage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleSelectLanguageViewControllerDidPressContinueButton
void GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidPressContinueButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectLanguageViewControllerDidPressContinueButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectLanguageViewControllerDidPressContinueButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleSelectRegionViewControllerDidPressContinueButton
void GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectRegionViewControllerDidPressContinueButton(::GlobalNamespace::SelectRegionViewController::Region region) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandleSelectRegionViewControllerDidPressContinueButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectRegionViewControllerDidPressContinueButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(region)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, region);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleEulaViewControllerDidFinish
void GlobalNamespace::HealthWarningFlowCoordinator::HandleEulaViewControllerDidFinish(::GlobalNamespace::EulaViewController::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandleEulaViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEulaViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonType);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandlePrivacyPolicyViewControllerDidFinish
void GlobalNamespace::HealthWarningFlowCoordinator::HandlePrivacyPolicyViewControllerDidFinish(::GlobalNamespace::PrivacyPolicyViewController::ButtonType buttonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandlePrivacyPolicyViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePrivacyPolicyViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonType);
}
// Autogenerated method: HealthWarningFlowCoordinator.HandleHealthWarningViewControllerDidFinish
void GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::HandleHealthWarningViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHealthWarningViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.ResolveMainViewController
::HMUI::ViewController* GlobalNamespace::HealthWarningFlowCoordinator::ResolveMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::ResolveMainViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.ResolvePlayerAgreementsViewController
::HMUI::ViewController* GlobalNamespace::HealthWarningFlowCoordinator::ResolvePlayerAgreementsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::ResolvePlayerAgreementsViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolvePlayerAgreementsViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.GoToNextScene
void GlobalNamespace::HealthWarningFlowCoordinator::GoToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::GoToNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningFlowCoordinator.DidActivate
void GlobalNamespace::HealthWarningFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HealthWarningFlowCoordinator.DidDeactivate
void GlobalNamespace::HealthWarningFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HealthWarningFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::HealthWarningFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningFlowCoordinator/InitData
#include "GlobalNamespace/HealthWarningFlowCoordinator_InitData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScenesTransitionSetupDataSO nextScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::HealthWarningFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthWarningFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HelpFlowCoordinator
#include "GlobalNamespace/HelpFlowCoordinator.hpp"
// Including type: HelpMenuViewController
#include "GlobalNamespace/HelpMenuViewController.hpp"
// Including type: HelpNavigationController
#include "GlobalNamespace/HelpNavigationController.hpp"
// Including type: HealthWarningDisplayViewController
#include "GlobalNamespace/HealthWarningDisplayViewController.hpp"
// Including type: PrivacyPolicyDisplayViewController
#include "GlobalNamespace/PrivacyPolicyDisplayViewController.hpp"
// Including type: EulaDisplayViewController
#include "GlobalNamespace/EulaDisplayViewController.hpp"
// Including type: PlayerStatisticsViewController
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x1129E0C
// Autogenerated static field getter
// Get static field: static private System.String kHowToPlayMenu
::StringW GlobalNamespace::HelpFlowCoordinator::_get_kHowToPlayMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_get_kHowToPlayMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "HelpFlowCoordinator", "kHowToPlayMenu"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHowToPlayMenu
void GlobalNamespace::HelpFlowCoordinator::_set_kHowToPlayMenu(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_set_kHowToPlayMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HelpFlowCoordinator", "kHowToPlayMenu", value));
}
// [LocalizationKeyAttribute] Offset: 0x1129E1C
// Autogenerated static field getter
// Get static field: static private System.String kPrivacyPolicyMenu
::StringW GlobalNamespace::HelpFlowCoordinator::_get_kPrivacyPolicyMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_get_kPrivacyPolicyMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "HelpFlowCoordinator", "kPrivacyPolicyMenu"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPrivacyPolicyMenu
void GlobalNamespace::HelpFlowCoordinator::_set_kPrivacyPolicyMenu(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_set_kPrivacyPolicyMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HelpFlowCoordinator", "kPrivacyPolicyMenu", value));
}
// [LocalizationKeyAttribute] Offset: 0x1129E2C
// Autogenerated static field getter
// Get static field: static private System.String kEulaMenu
::StringW GlobalNamespace::HelpFlowCoordinator::_get_kEulaMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_get_kEulaMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "HelpFlowCoordinator", "kEulaMenu"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEulaMenu
void GlobalNamespace::HelpFlowCoordinator::_set_kEulaMenu(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_set_kEulaMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HelpFlowCoordinator", "kEulaMenu", value));
}
// [LocalizationKeyAttribute] Offset: 0x1129E3C
// Autogenerated static field getter
// Get static field: static private System.String kHealthWarningMenu
::StringW GlobalNamespace::HelpFlowCoordinator::_get_kHealthWarningMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_get_kHealthWarningMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "HelpFlowCoordinator", "kHealthWarningMenu"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHealthWarningMenu
void GlobalNamespace::HelpFlowCoordinator::_set_kHealthWarningMenu(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::_set_kHealthWarningMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HelpFlowCoordinator", "kHealthWarningMenu", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly HelpMenuViewController _helpMenuViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HelpMenuViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__helpMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__helpMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helpMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HelpMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HelpNavigationController _helpNavigationController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HelpNavigationController*& GlobalNamespace::HelpFlowCoordinator::dyn__helpNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__helpNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helpNavigationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HelpNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HowToPlayViewController _howToPlayViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HowToPlayViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__howToPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__howToPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_howToPlayViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HowToPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HealthWarningDisplayViewController _healthWarningDisplayViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HealthWarningDisplayViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__healthWarningDisplayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__healthWarningDisplayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_healthWarningDisplayViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HealthWarningDisplayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PrivacyPolicyDisplayViewController _privacyPolicyDisplayViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrivacyPolicyDisplayViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__privacyPolicyDisplayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__privacyPolicyDisplayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_privacyPolicyDisplayViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrivacyPolicyDisplayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EulaDisplayViewController _eulaDisplayViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EulaDisplayViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__eulaDisplayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__eulaDisplayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eulaDisplayViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EulaDisplayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerStatisticsViewController _playerStatisticsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerStatisticsViewController*& GlobalNamespace::HelpFlowCoordinator::dyn__playerStatisticsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__playerStatisticsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerStatisticsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerStatisticsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::HelpFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::HelpFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<HelpFlowCoordinator> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::HelpFlowCoordinator*>*& GlobalNamespace::HelpFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::HelpFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.ValueTuple`2<HMUI.ViewController,System.String>> _viewControllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::ValueTuple_2<::HMUI::ViewController*, ::StringW>>*& GlobalNamespace::HelpFlowCoordinator::dyn__viewControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::dyn__viewControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewControllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::ValueTuple_2<::HMUI::ViewController*, ::StringW>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HelpFlowCoordinator.add_didFinishEvent
void GlobalNamespace::HelpFlowCoordinator::add_didFinishEvent(::System::Action_1<::GlobalNamespace::HelpFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HelpFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::HelpFlowCoordinator::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::HelpFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HelpFlowCoordinator.HandleDidSelectHelpSubMenu
void GlobalNamespace::HelpFlowCoordinator::HandleDidSelectHelpSubMenu(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::HandleDidSelectHelpSubMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectHelpSubMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: HelpFlowCoordinator.ReplaceViewController
void GlobalNamespace::HelpFlowCoordinator::ReplaceViewController(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::ReplaceViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: HelpFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::HelpFlowCoordinator::HandleHowToPlayViewControllerDidFinish(::GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, howToPlayOptions);
}
// Autogenerated method: HelpFlowCoordinator.DidActivate
void GlobalNamespace::HelpFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HelpFlowCoordinator.DidDeactivate
void GlobalNamespace::HelpFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: HelpFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::HelpFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HelpFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelSelectionFlowCoordinator
#include "GlobalNamespace/LevelSelectionFlowCoordinator.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: LevelSelectionNavigationController
#include "GlobalNamespace/LevelSelectionNavigationController.hpp"
// Including type: SearchFilterParamsViewController
#include "GlobalNamespace/SearchFilterParamsViewController.hpp"
// Including type: LevelSearchViewController
#include "GlobalNamespace/LevelSearchViewController.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: LevelFilterParams
#include "GlobalNamespace/LevelFilterParams.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly PlayerDataModel playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn_playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::dyn_playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly LevelSelectionNavigationController levelSelectionNavigationController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelSelectionNavigationController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn_levelSelectionNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::dyn_levelSelectionNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelSelectionNavigationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelSelectionNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SearchFilterParamsViewController _searchFilterParamsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SearchFilterParamsViewController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__searchFilterParamsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::dyn__searchFilterParamsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_searchFilterParamsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SearchFilterParamsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LevelSearchViewController _levelSearchViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelSearchViewController*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__levelSearchViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::dyn__levelSearchViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSearchViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelSearchViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _startState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::LevelSelectionFlowCoordinator::dyn__startState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::dyn__startState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_isInRootViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_isInRootViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_isInRootViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInRootViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedLevelCategory
::GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedLevelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedBeatmapLevelPack
::GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedDifficultyBeatmap
::GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_selectedBeatmapLevel
::GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_selectedBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialTopScreenViewController
::HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialLeftScreenViewController
::HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialLeftScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_initialLeftScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialLeftScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_initialRightScreenViewController
::HMUI::ViewController* GlobalNamespace::LevelSelectionFlowCoordinator::get_initialRightScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_initialRightScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialRightScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_hidePracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_actionButtonText
::StringW GlobalNamespace::LevelSelectionFlowCoordinator::get_actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_actionButtonText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_mainTitle
::StringW GlobalNamespace::LevelSelectionFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::LevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_enableCustomLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_songPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::LevelSelectionFlowCoordinator::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_songPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_allowedBeatmapDifficultyMask
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::LevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.get_notAllowedCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::LevelSelectionFlowCoordinator::get_notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::get_notAllowedCharacteristics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_notAllowedCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: LevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::LevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::ActionButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.PracticeButtonWasPressed
void GlobalNamespace::LevelSelectionFlowCoordinator::PracticeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::PracticeButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PracticeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.SelectionDidChange
void GlobalNamespace::LevelSelectionFlowCoordinator::SelectionDidChange(::GlobalNamespace::IBeatmapLevelPack* pack, ::GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(beatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pack, beatmap);
}
// Autogenerated method: LevelSelectionFlowCoordinator.Setup
void GlobalNamespace::LevelSelectionFlowCoordinator::Setup(::GlobalNamespace::LevelSelectionFlowCoordinator::State* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidSelectPack
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidSelectPack(::GlobalNamespace::LevelSelectionNavigationController* viewController, ::GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidSelectPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidSelectPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(pack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, pack);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleSearchFilterParamsViewControllerDidFinish
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleSearchFilterParamsViewControllerDidFinish(::GlobalNamespace::SearchFilterParamsViewController* viewController, ::GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleSearchFilterParamsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSearchFilterParamsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelFilterParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, levelFilterParams);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSearchViewControllerDidPressSearchButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSearchViewControllerDidPressSearchButton(::GlobalNamespace::LevelSearchViewController* viewController, ::GlobalNamespace::LevelFilterParams* levelFilterParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSearchViewControllerDidPressSearchButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSearchViewControllerDidPressSearchButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(levelFilterParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, levelFilterParams);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidPressActionButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressActionButton(::GlobalNamespace::LevelSelectionNavigationController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressActionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidPressActionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidPressPracticeButton
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressPracticeButton(::GlobalNamespace::LevelSelectionNavigationController* viewController, ::GlobalNamespace::IBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidPressPracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidPressPracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, level);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap(::GlobalNamespace::LevelSelectionNavigationController* viewController, ::GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(beatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, beatmap);
}
// Autogenerated method: LevelSelectionFlowCoordinator.HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent
void GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent(::GlobalNamespace::LevelSelectionNavigationController* viewController, ::GlobalNamespace::StandardLevelDetailViewController::ContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelSelectionNavigationControllerDidChangeLevelDetailContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(contentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, contentType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.Refresh
void GlobalNamespace::LevelSelectionFlowCoordinator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionFlowCoordinator.IsMainViewController
bool GlobalNamespace::LevelSelectionFlowCoordinator::IsMainViewController(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::IsMainViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelSelectionFlowCoordinator.PresentMainViewController
void GlobalNamespace::LevelSelectionFlowCoordinator::PresentMainViewController(::System::Action* finishedCallback, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::PresentMainViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback, animationType);
}
// Autogenerated method: LevelSelectionFlowCoordinator.DidActivate
void GlobalNamespace::LevelSelectionFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelSelectionFlowCoordinator.DidDeactivate
void GlobalNamespace::LevelSelectionFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LevelSelectionFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::LevelSelectionFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Nullable`1<SelectLevelCategoryViewController/LevelCategory> levelCategory
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_levelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_levelCategory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCategory"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelPack beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IDifficultyBeatmap difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelSelectionFlowCoordinator::State::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainFlowCoordinator
#include "GlobalNamespace/MainFlowCoordinator.hpp"
// Including type: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41
#include "GlobalNamespace/MainFlowCoordinator_-ProcessMenuDestinationRequestAfterFrameCoroutine-d__41.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: SoloFreePlayFlowCoordinator
#include "GlobalNamespace/SoloFreePlayFlowCoordinator.hpp"
// Including type: PartyFreePlayFlowCoordinator
#include "GlobalNamespace/PartyFreePlayFlowCoordinator.hpp"
// Including type: CampaignFlowCoordinator
#include "GlobalNamespace/CampaignFlowCoordinator.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator.hpp"
// Including type: LevelSelectionFlowCoordinator
#include "GlobalNamespace/LevelSelectionFlowCoordinator.hpp"
// Including type: HelpFlowCoordinator
#include "GlobalNamespace/HelpFlowCoordinator.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: PlayerOptionsViewController
#include "GlobalNamespace/PlayerOptionsViewController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean _startWithSettings
bool GlobalNamespace::MainFlowCoordinator::_get__startWithSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::_get__startWithSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "MainFlowCoordinator", "_startWithSettings"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _startWithSettings
void GlobalNamespace::MainFlowCoordinator::_set__startWithSettings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::_set__startWithSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainFlowCoordinator", "_startWithSettings", value));
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::MainFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SoloFreePlayFlowCoordinator _soloFreePlayFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SoloFreePlayFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__soloFreePlayFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__soloFreePlayFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_soloFreePlayFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SoloFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PartyFreePlayFlowCoordinator _partyFreePlayFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyFreePlayFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__partyFreePlayFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__partyFreePlayFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_partyFreePlayFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CampaignFlowCoordinator _campaignFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__campaignFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__campaignFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_campaignFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SettingsFlowCoordinator _settingsFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SettingsFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__settingsFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__settingsFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SettingsFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerModeSelectionFlowCoordinator _multiplayerModeSelectionFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__multiplayerModeSelectionFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__multiplayerModeSelectionFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSelectionFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EditAvatarFlowCoordinator _editAvatarFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EditAvatarFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__editAvatarFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__editAvatarFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editAvatarFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditAvatarFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HelpFlowCoordinator _helpFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HelpFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__helpFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__helpFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_helpFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HelpFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::MainFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MainMenuViewController _mainMenuViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainMenuViewController*& GlobalNamespace::MainFlowCoordinator::dyn__mainMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__mainMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerOptionsViewController _playerOptionsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerOptionsViewController*& GlobalNamespace::MainFlowCoordinator::dyn__playerOptionsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__playerOptionsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerOptionsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerOptionsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly OptionsViewController _optionsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OptionsViewController*& GlobalNamespace::MainFlowCoordinator::dyn__optionsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__optionsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_optionsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OptionsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::MainFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsManager*& GlobalNamespace::MainFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOut
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::MainFlowCoordinator::dyn__fadeInOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__fadeInOut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOut"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::MainFlowCoordinator::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::MainFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::MainFlowCoordinator::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MainFlowCoordinator::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuDestination _menuDestinationRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainFlowCoordinator::dyn__menuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__menuDestinationRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuDestinationRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.FlowCoordinator _afterDialogPromptFlowCoordinator
[[deprecated("Use field access instead!")]] ::HMUI::FlowCoordinator*& GlobalNamespace::MainFlowCoordinator::dyn__afterDialogPromptFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::dyn__afterDialogPromptFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterDialogPromptFlowCoordinator"))->offset;
  return *reinterpret_cast<::HMUI::FlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainFlowCoordinator.PresentFlowCoordinatorOrAskForTutorial
void GlobalNamespace::MainFlowCoordinator::PresentFlowCoordinatorOrAskForTutorial(::HMUI::FlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::PresentFlowCoordinatorOrAskForTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentFlowCoordinatorOrAskForTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleMainMenuViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerDidFinish(::GlobalNamespace::MainMenuViewController* viewController, ::GlobalNamespace::MainMenuViewController::MenuButton subMenuType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainMenuViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(subMenuType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, subMenuType);
}
// Autogenerated method: MainFlowCoordinator.HandleOptionsViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleOptionsViewControllerDidFinish(::GlobalNamespace::OptionsViewController::OptionsButton optionsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleOptionsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOptionsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionsType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, optionsType);
}
// Autogenerated method: MainFlowCoordinator.HandlePlayerOptionsViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandlePlayerOptionsViewControllerDidFinish(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandlePlayerOptionsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerOptionsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: MainFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleHowToPlayViewControllerDidFinish(::GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, howToPlayOptions);
}
// Autogenerated method: MainFlowCoordinator.HandleCampaignFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleCampaignFlowCoordinatorDidFinish(::GlobalNamespace::CampaignFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleCampaignFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCampaignFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleEditAvatarFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleEditAvatarFlowCoordinatorDidFinish(::GlobalNamespace::EditAvatarFlowCoordinator* flowCoordinator, ::GlobalNamespace::EditAvatarFlowCoordinator::EditAvatarType editAvatarType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleEditAvatarFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditAvatarFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator), ::il2cpp_utils::ExtractType(editAvatarType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator, editAvatarType);
}
// Autogenerated method: MainFlowCoordinator.HandleSoloFreePlayFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleSoloFreePlayFlowCoordinatorDidFinish(::GlobalNamespace::LevelSelectionFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleSoloFreePlayFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSoloFreePlayFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandlePartyFreePlayFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandlePartyFreePlayFlowCoordinatorDidFinish(::GlobalNamespace::LevelSelectionFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandlePartyFreePlayFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyFreePlayFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleSettingsFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleSettingsFlowCoordinatorDidFinish(::GlobalNamespace::SettingsFlowCoordinator* settingsFlowCoordinator, ::GlobalNamespace::SettingsFlowCoordinator::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleSettingsFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSettingsFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsFlowCoordinator), ::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settingsFlowCoordinator, finishAction);
}
// Autogenerated method: MainFlowCoordinator.HandleHelpFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleHelpFlowCoordinatorDidFinish(::GlobalNamespace::HelpFlowCoordinator* helpFlowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleHelpFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHelpFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(helpFlowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, helpFlowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleMultiplayerModeSelectionFlowCoordinatorDidFinish
void GlobalNamespace::MainFlowCoordinator::HandleMultiplayerModeSelectionFlowCoordinatorDidFinish(::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator* multiplayerModeSelectionFlowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleMultiplayerModeSelectionFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerModeSelectionFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSelectionFlowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerModeSelectionFlowCoordinator);
}
// Autogenerated method: MainFlowCoordinator.HandleMainMenuViewControllerMusicPackPromoButtonWasPressed
void GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerMusicPackPromoButtonWasPressed(::GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack, ::GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::HandleMainMenuViewControllerMusicPackPromoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainMenuViewControllerMusicPackPromoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevelPack), ::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevelPack, previewBeatmapLevel);
}
// Autogenerated method: MainFlowCoordinator.ProcessMenuDestinationRequest
void GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequest(::GlobalNamespace::MenuDestination* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destination);
}
// Autogenerated method: MainFlowCoordinator.PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator
void GlobalNamespace::MainFlowCoordinator::PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.ProcessMenuDestinationRequestAfterFrameCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequestAfterFrameCoroutine(::GlobalNamespace::MenuDestination* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::ProcessMenuDestinationRequestAfterFrameCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMenuDestinationRequestAfterFrameCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, destination);
}
// Autogenerated method: MainFlowCoordinator.<PresentFlowCoordinatorOrAskForTutorial>b__26_0
void GlobalNamespace::MainFlowCoordinator::$PresentFlowCoordinatorOrAskForTutorial$b__26_0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::<PresentFlowCoordinatorOrAskForTutorial>b__26_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentFlowCoordinatorOrAskForTutorial>b__26_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.<PresentFlowCoordinatorOrAskForTutorial>b__26_1
void GlobalNamespace::MainFlowCoordinator::$PresentFlowCoordinatorOrAskForTutorial$b__26_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::<PresentFlowCoordinatorOrAskForTutorial>b__26_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentFlowCoordinatorOrAskForTutorial>b__26_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.<HandleMainMenuViewControllerDidFinish>b__27_0
void GlobalNamespace::MainFlowCoordinator::$HandleMainMenuViewControllerDidFinish$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::<HandleMainMenuViewControllerDidFinish>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainMenuViewControllerDidFinish>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.<HandleMainMenuViewControllerDidFinish>b__27_1
void GlobalNamespace::MainFlowCoordinator::$HandleMainMenuViewControllerDidFinish$b__27_1(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::<HandleMainMenuViewControllerDidFinish>b__27_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainMenuViewControllerDidFinish>b__27_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__40_0
void GlobalNamespace::MainFlowCoordinator::$PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator$b__40_0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMultiplayerModeSelectionFlowCoordinatorWithDisclaimerAndAvatarCreator>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonNumber);
}
// Autogenerated method: MainFlowCoordinator.DidActivate
void GlobalNamespace::MainFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MainFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::MainFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MainFlowCoordinator.InitialViewControllerWasPresented
void GlobalNamespace::MainFlowCoordinator::InitialViewControllerWasPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::InitialViewControllerWasPresented");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialViewControllerWasPresented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator.DidDeactivate
void GlobalNamespace::MainFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: MainFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MainFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41
#include "GlobalNamespace/MainFlowCoordinator_-ProcessMenuDestinationRequestAfterFrameCoroutine-d__41.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MainFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainFlowCoordinator*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuDestination destination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::dyn_destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41.System.IDisposable.Dispose
void GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41.MoveNext
bool GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MainFlowCoordinator/<ProcessMenuDestinationRequestAfterFrameCoroutine>d__41.System.Collections.IEnumerator.Reset
void GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainFlowCoordinator::$ProcessMenuDestinationRequestAfterFrameCoroutine$d__41::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserFlowCoordinator
#include "GlobalNamespace/GameServerBrowserFlowCoordinator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerBrowserFlowCoordinator.DidActivate
void GlobalNamespace::GameServerBrowserFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerBrowserFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator
#include "GlobalNamespace/GameServerLobbyFlowCoordinator.hpp"
// Including type: GameServerLobbyFlowCoordinator/LobbyType
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_LobbyType.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass70_0.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_1
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass70_1.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass85_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass85_0.hpp"
// Including type: HMUI.ScreenModeSO
#include "HMUI/ScreenModeSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: ServerPlayerListViewController
#include "GlobalNamespace/ServerPlayerListViewController.hpp"
// Including type: SelectModifiersViewController
#include "GlobalNamespace/SelectModifiersViewController.hpp"
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: MultiplayerResultsViewController
#include "GlobalNamespace/MultiplayerResultsViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: ConnectionErrorDialogViewController
#include "GlobalNamespace/ConnectionErrorDialogViewController.hpp"
// Including type: MultiplayerSettingsPanelController
#include "GlobalNamespace/MultiplayerSettingsPanelController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MultiplayerLobbyController
#include "GlobalNamespace/MultiplayerLobbyController.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: LobbySetupViewController
#include "GlobalNamespace/LobbySetupViewController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: HMUI.ScreenModeController
#include "HMUI/ScreenModeController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
// Including type: PreviewDifficultyBeatmap
#include "GlobalNamespace/PreviewDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0x112A064
// Autogenerated static field getter
// Get static field: static private System.String kPlayersMissingEntitlementKey
::StringW GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kPlayersMissingEntitlementKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kPlayersMissingEntitlementKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameServerLobbyFlowCoordinator", "kPlayersMissingEntitlementKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlayersMissingEntitlementKey
void GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kPlayersMissingEntitlementKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kPlayersMissingEntitlementKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator", "kPlayersMissingEntitlementKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxPredictedStartTimeDifference
float GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kMaxPredictedStartTimeDifference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::_get_kMaxPredictedStartTimeDifference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameServerLobbyFlowCoordinator", "kMaxPredictedStartTimeDifference"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxPredictedStartTimeDifference
void GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kMaxPredictedStartTimeDifference(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::_set_kMaxPredictedStartTimeDifference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator", "kMaxPredictedStartTimeDifference", value));
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScreenModeSO _screenMode
[[deprecated("Use field access instead!")]] ::HMUI::ScreenModeSO*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenMode"))->offset;
  return *reinterpret_cast<::HMUI::ScreenModeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _ambienceAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__ambienceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__ambienceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambienceAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ServerPlayerListViewController _serverPlayerListViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ServerPlayerListViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__serverPlayerListViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__serverPlayerListViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverPlayerListViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ServerPlayerListViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SelectModifiersViewController _selectModifiersViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectModifiersViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__selectModifiersViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__selectModifiersViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectModifiersViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectModifiersViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelSelectionFlowCoordinator _multiplayerLevelSelectionFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLevelSelectionFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLevelSelectionFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLevelSelectionFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerResultsViewController _multiplayerResultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerResultsViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerResultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerResultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerResultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectionErrorDialogViewController _connectionErrorDialogViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectionErrorDialogViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__connectionErrorDialogViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__connectionErrorDialogViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionErrorDialogViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectionErrorDialogViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSettingsPanelController _multiplayerSettingsPanelController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerSettingsPanelController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerSettingsPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerSettingsPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSettingsPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerSettingsPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyController _multiplayerLobbyController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLobbyController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__multiplayerLobbyController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOutController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__fadeInOutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__fadeInOutController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOutController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CenterStageScreenController _centerStageScreenController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CenterStageScreenController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__centerStageScreenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__centerStageScreenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerStageScreenController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CenterStageScreenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyGameStateModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyGameStateModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyPlayersDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayersDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayersDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyPlayersDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyPlayerPermissionsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbyPlayerPermissionsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyPlayerPermissionsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyPlayerPermissionsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbySetupViewController _lobbySetupViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbySetupViewController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lobbySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbySetupViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ScreenModeController _screenModeController
[[deprecated("Use field access instead!")]] ::HMUI::ScreenModeController*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenModeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__screenModeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenModeController"))->offset;
  return *reinterpret_cast<::HMUI::ScreenModeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsModel _platformLeaderboardsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__platformLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__platformLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _lastSimpleLevelSelectionFlowCoordinatorState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lastSimpleLevelSelectionFlowCoordinatorState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__lastSimpleLevelSelectionFlowCoordinatorState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSimpleLevelSelectionFlowCoordinatorState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isAlreadyFinishing
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__isAlreadyFinishing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__isAlreadyFinishing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isAlreadyFinishing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.StringBuilder _stringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__stringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__stringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _canStartGameCts
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__canStartGameCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn__canStartGameCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canStartGameCts"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action willFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_willFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_willFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action startGameOrReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_startGameOrReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_startGameOrReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startGameOrReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didSetupEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didSetupEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didSetupEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetupEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didOpenInvitePanelEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didOpenInvitePanelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_didOpenInvitePanelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didOpenInvitePanelEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <rejoinQuickPlay>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_$rejoinQuickPlay$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::dyn_$rejoinQuickPlay$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rejoinQuickPlay>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isPartyOwner
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isPublicGame
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPublicGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_isPublicGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPublicGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isManaged
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isManaged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_isManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isQuickStartServer
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickStartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickStartServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isQuickStartServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_isQuickPlayServer
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickPlayServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_isQuickPlayServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isQuickPlayServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.get_rejoinQuickPlay
bool GlobalNamespace::GameServerLobbyFlowCoordinator::get_rejoinQuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::get_rejoinQuickPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rejoinQuickPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.set_rejoinQuickPlay
void GlobalNamespace::GameServerLobbyFlowCoordinator::set_rejoinQuickPlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::set_rejoinQuickPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rejoinQuickPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_willFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_willFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::add_willFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_willFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_willFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::remove_willFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_didFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_startGameOrReadyEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_startGameOrReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::add_startGameOrReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startGameOrReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_startGameOrReadyEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_startGameOrReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::remove_startGameOrReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startGameOrReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_didSetupEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_didSetupEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::add_didSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_didSetupEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didSetupEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didSetupEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetupEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.add_didOpenInvitePanelEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::add_didOpenInvitePanelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::add_didOpenInvitePanelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didOpenInvitePanelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.remove_didOpenInvitePanelEvent
void GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didOpenInvitePanelEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::remove_didOpenInvitePanelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didOpenInvitePanelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.GetLobbyType
::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType GlobalNamespace::GameServerLobbyFlowCoordinator::GetLobbyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::GetLobbyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLobbyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.PresentBackButtonConfirmationDialog
void GlobalNamespace::GameServerLobbyFlowCoordinator::PresentBackButtonConfirmationDialog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::PresentBackButtonConfirmationDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentBackButtonConfirmationDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.Finish
void GlobalNamespace::GameServerLobbyFlowCoordinator::Finish(::System::Action* finishedCallback, bool withFadeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(withFadeOut)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback, withFadeOut);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.GetInitialGameState
void GlobalNamespace::GameServerLobbyFlowCoordinator::GetInitialGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::GetInitialGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitialGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyPlayersDataModelDidChange
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayersDataModelDidChange(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayersDataModelDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayersDataModelDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerDidOpenInvitePanel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerDidOpenInvitePanel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerDidOpenInvitePanel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerDidOpenInvitePanel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerSelectBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerSelectBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSettingsPanelControllerPlayerActiveStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLobbyDisconnected
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLobbyDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLobbyDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLobbyDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel(::GlobalNamespace::LevelSelectionFlowCoordinator::State* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorDidSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelSelectionFlowCoordinatorCancelSelectLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerSelectModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerSelectModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerSelectModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerClearSelectedBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerClearSelectedModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerClearSelectedModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerClearSelectedModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStateChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStateChanged(::GlobalNamespace::MultiplayerLobbyState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerSelectSuggestedBeatmap
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedBeatmap(::GlobalNamespace::PreviewDifficultyBeatmap* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerSelectSuggestedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers(::GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerSelectSuggestedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleServerPlayerListViewControllerKickPlayer
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerKickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleServerPlayerListViewControllerKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerListViewControllerKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownStarted
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCountdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCountdownCancelled
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCountdownCancelled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCountdownCancelled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStarted(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerStartTimeChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerStartTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerSongStillDownloading
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerSongStillDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerSongStillDownloading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerSongStillDownloading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerStartGameOrReady
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerStartGameOrReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerStartGameOrReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerStartGameOrReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbySetupViewControllerCancelGameOrUnready
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerCancelGameOrUnready() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbySetupViewControllerCancelGameOrUnready");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbySetupViewControllerCancelGameOrUnready", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerCancelStartTime
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCancelStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerCancelStartTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerCancelStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerGameStartedPresentView
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStartedPresentView(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerGameStartedPresentView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStartedPresentView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelFinished
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelFinished(::GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, ::GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateControllerLevelDidGetDisconnected
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelDidGetDisconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateControllerLevelDidGetDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerLevelDidGetDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerResultsViewControllerBackToLobbyPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToLobbyPressed(::GlobalNamespace::MultiplayerResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToLobbyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerResultsViewControllerBackToLobbyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMultiplayerResultsViewControllerBackToMenuPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToMenuPressed(::GlobalNamespace::MultiplayerResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMultiplayerResultsViewControllerBackToMenuPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerResultsViewControllerBackToMenuPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetupLobbyWithPermissions
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetupLobbyWithPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::SetupLobbyWithPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupLobbyWithPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetLobbyPlayerDataToViews
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetLobbyPlayerDataToViews(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::SetLobbyPlayerDataToViews");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerDataToViews", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowSideViewControllers
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowSideViewControllers(bool showSideViewControllers, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::ShowSideViewControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSideViewControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showSideViewControllers), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showSideViewControllers, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowBackButton
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowBackButton(bool show) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::ShowBackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowBackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(show)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, show);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.GetLocalizedTitle
::StringW GlobalNamespace::GameServerLobbyFlowCoordinator::GetLocalizedTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::GetLocalizedTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLocalizedTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.SetTitle
void GlobalNamespace::GameServerLobbyFlowCoordinator::SetTitle(::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::SetTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newViewController, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.ShowDisconnectDialogAndFinish
void GlobalNamespace::GameServerLobbyFlowCoordinator::ShowDisconnectDialogAndFinish(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::ShowDisconnectDialogAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDisconnectDialogAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.UpdateLocalPlayerIsActiveState
void GlobalNamespace::GameServerLobbyFlowCoordinator::UpdateLocalPlayerIsActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::UpdateLocalPlayerIsActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalPlayerIsActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameBeforeSceneSwitchCallback
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameBeforeSceneSwitchCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameBeforeSceneSwitchCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameBeforeSceneSwitchCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyGameStateStartButtonEnabled
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateStartButtonEnabled(::GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyGameStateStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cannotStartGameReason);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel(::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.HandleLobbyPlayerPermissionsModelPermissionsChanged
void GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayerPermissionsModelPermissionsChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::HandleLobbyPlayerPermissionsModelPermissionsChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayerPermissionsModelPermissionsChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DismissViewControllersAndCoordinators
void GlobalNamespace::GameServerLobbyFlowCoordinator::DismissViewControllersAndCoordinators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::DismissViewControllersAndCoordinators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissViewControllersAndCoordinators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.<PresentBackButtonConfirmationDialog>b__69_0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$PresentBackButtonConfirmationDialog$b__69_0(int btnIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::<PresentBackButtonConfirmationDialog>b__69_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentBackButtonConfirmationDialog>b__69_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnIndex);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.<ShowDisconnectDialogAndFinish>b__105_0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$ShowDisconnectDialogAndFinish$b__105_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::<ShowDisconnectDialogAndFinish>b__105_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShowDisconnectDialogAndFinish>b__105_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DidActivate
void GlobalNamespace::GameServerLobbyFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.DidDeactivate
void GlobalNamespace::GameServerLobbyFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.InitialViewControllerWasPresented
void GlobalNamespace::GameServerLobbyFlowCoordinator::InitialViewControllerWasPresented() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::InitialViewControllerWasPresented");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitialViewControllerWasPresented", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TransitionDidStart
void GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TransitionDidFinish
void GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::GameServerLobbyFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: GameServerLobbyFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::GameServerLobbyFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/LobbyType
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_LobbyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameServerLobbyFlowCoordinator/LobbyType HostSetup
::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_HostSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_HostSetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType>("", "GameServerLobbyFlowCoordinator/LobbyType", "HostSetup"));
}
// Autogenerated static field setter
// Set static field: static public GameServerLobbyFlowCoordinator/LobbyType HostSetup
void GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_HostSetup(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_HostSetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator/LobbyType", "HostSetup", value));
}
// Autogenerated static field getter
// Get static field: static public GameServerLobbyFlowCoordinator/LobbyType ClientSetup
::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_ClientSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_ClientSetup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType>("", "GameServerLobbyFlowCoordinator/LobbyType", "ClientSetup"));
}
// Autogenerated static field setter
// Set static field: static public GameServerLobbyFlowCoordinator/LobbyType ClientSetup
void GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_ClientSetup(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_ClientSetup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator/LobbyType", "ClientSetup", value));
}
// Autogenerated static field getter
// Get static field: static public GameServerLobbyFlowCoordinator/LobbyType QuickPlayLobby
::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_QuickPlayLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_QuickPlayLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType>("", "GameServerLobbyFlowCoordinator/LobbyType", "QuickPlayLobby"));
}
// Autogenerated static field setter
// Set static field: static public GameServerLobbyFlowCoordinator/LobbyType QuickPlayLobby
void GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_QuickPlayLobby(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_QuickPlayLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator/LobbyType", "QuickPlayLobby", value));
}
// Autogenerated static field getter
// Get static field: static public GameServerLobbyFlowCoordinator/LobbyType Party
::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_Party() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_get_Party");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType>("", "GameServerLobbyFlowCoordinator/LobbyType", "Party"));
}
// Autogenerated static field setter
// Set static field: static public GameServerLobbyFlowCoordinator/LobbyType Party
void GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_Party(::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::_set_Party");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerLobbyFlowCoordinator/LobbyType", "Party", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::LobbyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass70_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishedCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_1
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass70_1.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass70_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.EventSystems.EventSystem eventSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::EventSystems::EventSystem*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::dyn_eventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::dyn_eventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator/<>c__DisplayClass70_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator/<>c__DisplayClass70_1.<Finish>b__0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::$Finish$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass70_1::<Finish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Finish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerLobbyFlowCoordinator/<>c__DisplayClass85_0
#include "GlobalNamespace/GameServerLobbyFlowCoordinator_--c__DisplayClass85_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameServerLobbyFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerLobbyFlowCoordinator/<>c__DisplayClass85_0.<HandleServerPlayerListViewControllerKickPlayer>b__0
void GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::$HandleServerPlayerListViewControllerKickPlayer$b__0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerLobbyFlowCoordinator::$$c__DisplayClass85_0::<HandleServerPlayerListViewControllerKickPlayer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleServerPlayerListViewControllerKickPlayer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-TryShowModeSelection-d__49.hpp"
// Including type: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-ResolveAndPresentNextFlowCoordinator-d__50.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: GameServerBrowserFlowCoordinator
#include "GlobalNamespace/GameServerBrowserFlowCoordinator.hpp"
// Including type: GameServerLobbyFlowCoordinator
#include "GlobalNamespace/GameServerLobbyFlowCoordinator.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
// Including type: CreateServerViewController
#include "GlobalNamespace/CreateServerViewController.hpp"
// Including type: JoinQuickPlayViewController
#include "GlobalNamespace/JoinQuickPlayViewController.hpp"
// Including type: ServerCodeEntryViewController
#include "GlobalNamespace/ServerCodeEntryViewController.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: JoiningLobbyViewController
#include "GlobalNamespace/JoiningLobbyViewController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: AvatarDataModel
#include "GlobalNamespace/AvatarDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IMultiplayerStatusModel
#include "GlobalNamespace/IMultiplayerStatusModel.hpp"
// Including type: IQuickPlaySetupModel
#include "GlobalNamespace/IQuickPlaySetupModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: MultiplayerModeSelectionViewController/MenuButton
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _ambienceAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__ambienceAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__ambienceAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambienceAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO _songPackMaskModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMaskModelSO*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPackMaskModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMaskModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMaskModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameServerBrowserFlowCoordinator _gameServerBrowserFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerBrowserFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerBrowserFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerBrowserFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerBrowserFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerBrowserFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameServerLobbyFlowCoordinator _gameServerLobbyFlowCoordinator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameServerLobbyFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerLobbyFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__gameServerLobbyFlowCoordinator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameServerLobbyFlowCoordinator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerLobbyFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerModeSelectionViewController _multiplayerModeSelectionViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSelectionViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerModeSelectionViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerModeSelectionViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerModeSelectionViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSelectionViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CreateServerViewController _createServerViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CreateServerViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__createServerViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__createServerViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_createServerViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CreateServerViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly JoinQuickPlayViewController _joinQuickPlayViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::JoinQuickPlayViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joinQuickPlayViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joinQuickPlayViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinQuickPlayViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::JoinQuickPlayViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ServerCodeEntryViewController _serverCodeEntryViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ServerCodeEntryViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__serverCodeEntryViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__serverCodeEntryViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverCodeEntryViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ServerCodeEntryViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly JoiningLobbyViewController _joiningLobbyViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::JoiningLobbyViewController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningLobbyViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::JoiningLobbyViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnifiedNetworkPlayerModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__unifiedNetworkPlayerModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unifiedNetworkPlayerModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnifiedNetworkPlayerModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarDataModel _avatarDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarDataModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__avatarDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__avatarDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOutController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FadeInOutController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__fadeInOutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__fadeInOutController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOutController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyDataModelsManager _lobbyDataModelsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LobbyDataModelsManager*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDataModelsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDataModelsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyDataModelsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LobbyDataModelsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyConnectionController _multiplayerLobbyConnectionController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerLobbyConnectionController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerLobbyConnectionController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerLobbyConnectionController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyConnectionController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerStatusModel _multiplayerStatusModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerStatusModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerStatusModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__multiplayerStatusModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerStatusModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerStatusModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IQuickPlaySetupModel _quickPlaySetupModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IQuickPlaySetupModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__quickPlaySetupModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__quickPlaySetupModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlaySetupModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IQuickPlaySetupModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer _songPreviewPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerModeSelectionFlowCoordinator> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _joiningLobbyCancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__joiningLobbyCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joiningLobbyCancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _transitionFinishedTaskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__transitionFinishedTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__transitionFinishedTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionFinishedTaskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private QuickPlaySetupData _quickPlaySetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuickPlaySetupData*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__quickPlaySetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__quickPlaySetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_quickPlaySetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuickPlaySetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SelectMultiplayerLobbyDestination _lobbyDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectMultiplayerLobbyDestination*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::dyn__lobbyDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectMultiplayerLobbyDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::add_didFinishEvent(::System::Action_1<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.Setup
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::Setup(::GlobalNamespace::SelectMultiplayerLobbyDestination* lobbyDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyDestination);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccessActivateModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionSuccess
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyConnectionControllerConnectionFailed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionFailed(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType connectionType, ::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyConnectionControllerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyConnectionControllerConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionType), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionType, reason);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleMultiplayerLobbyControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyControllerDidFinish(::GlobalNamespace::MultiplayerModeSelectionViewController* viewController, ::GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleMultiplayerLobbyControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLobbyControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, menuButton);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerBrowserFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerBrowserFlowCoordinatorDidFinish(::GlobalNamespace::GameServerBrowserFlowCoordinator* flowCoordinator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerBrowserFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerBrowserFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flowCoordinator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flowCoordinator);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoiningLobbyViewControllerDidCancel
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoiningLobbyViewControllerDidCancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoiningLobbyViewControllerDidCancel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoiningLobbyViewControllerDidCancel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleJoinQuickPlayViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoinQuickPlayViewControllerDidFinish(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleJoinQuickPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinQuickPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleServerCodeEntryViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleServerCodeEntryViewControllerDidFinish(bool success, ::StringW code) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleServerCodeEntryViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerCodeEntryViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(code)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, code);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleCreateServerViewControllerDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleCreateServerViewControllerDidFinish(bool success, ::GlobalNamespace::CreateServerFormData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleCreateServerViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCreateServerViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, success, data);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerLobbyFlowCoordinatorDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleGameServerLobbyFlowCoordinatorWillFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorWillFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleGameServerLobbyFlowCoordinatorWillFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerLobbyFlowCoordinatorWillFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.HandleConnectedPlayerManagerCreated
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleConnectedPlayerManagerCreated(::GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::HandleConnectedPlayerManagerCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, networkPlayerModel);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TryShowModeSelection
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TryShowModeSelection(bool shouldProvideInitialViewControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TryShowModeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryShowModeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shouldProvideInitialViewControllers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shouldProvideInitialViewControllers);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.ResolveAndPresentNextFlowCoordinator
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ResolveAndPresentNextFlowCoordinator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ResolveAndPresentNextFlowCoordinator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveAndPresentNextFlowCoordinator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentConnectionErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentConnectionErrorDialog(::GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType connectionType, ::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentConnectionErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentConnectionErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionType), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionType, reason);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.PresentMasterServerUnavailableErrorDialog
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentMasterServerUnavailableErrorDialog(::GlobalNamespace::MultiplayerUnavailableReason reason, ::System::Exception* exception, ::System::Nullable_1<int64_t> maintenanceWindowEndTime, ::StringW remoteLocalizedMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::PresentMasterServerUnavailableErrorDialog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMasterServerUnavailableErrorDialog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason), ::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(maintenanceWindowEndTime), ::il2cpp_utils::ExtractType(remoteLocalizedMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason, exception, maintenanceWindowEndTime, remoteLocalizedMessage);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.ProcessDeeplinkingToLobby
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ProcessDeeplinkingToLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::ProcessDeeplinkingToLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDeeplinkingToLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<ResolveAndPresentNextFlowCoordinator>b__50_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$b__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<ResolveAndPresentNextFlowCoordinator>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveAndPresentNextFlowCoordinator>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__51_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__51_0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentConnectionErrorDialog>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentConnectionErrorDialog>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentConnectionErrorDialog>b__51_1
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentConnectionErrorDialog$b__51_1(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentConnectionErrorDialog>b__51_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentConnectionErrorDialog>b__51_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.<PresentMasterServerUnavailableErrorDialog>b__52_0
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$PresentMasterServerUnavailableErrorDialog$b__52_0(int btnId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::<PresentMasterServerUnavailableErrorDialog>b__52_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMasterServerUnavailableErrorDialog>b__52_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(btnId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, btnId);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidActivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.DidDeactivate
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TopViewControllerWillChange
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-TryShowModeSelection-d__49.hpp"
// Including type: MultiplayerStatusData
#include "GlobalNamespace/MultiplayerStatusData.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: QuickPlaySetupData
#include "GlobalNamespace/QuickPlaySetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerModeSelectionFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerStatusData <multiplayerStatusData>5__2
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerStatusData*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$multiplayerStatusData$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$multiplayerStatusData$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerStatusData>5__2"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerStatusData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Exception <exception>5__3
[[deprecated("Use field access instead!")]] ::System::Exception*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$exception$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$exception$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<exception>5__3"))->offset;
  return *reinterpret_cast<::System::Exception**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<MultiplayerStatusData> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::MultiplayerStatusData*>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::MultiplayerStatusData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<QuickPlaySetupData> <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::QuickPlaySetupData*>& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::QuickPlaySetupData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49.MoveNext
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<TryShowModeSelection>d__49.SetStateMachine
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$TryShowModeSelection$d__49::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50
#include "GlobalNamespace/MultiplayerModeSelectionFlowCoordinator_-ResolveAndPresentNextFlowCoordinator-d__50.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerModeSelectionFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator*& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50.MoveNext
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionFlowCoordinator/<ResolveAndPresentNextFlowCoordinator>d__50.SetStateMachine
void GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerModeSelectionFlowCoordinator::$ResolveAndPresentNextFlowCoordinator$d__50::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/MultiplayerLevelSelectionFlowCoordinator.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: LevelSelectionFlowCoordinator/State
#include "GlobalNamespace/LevelSelectionFlowCoordinator_State.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO[] _notAllowedCharacteristics
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__notAllowedCharacteristics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notAllowedCharacteristics"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyGameStateController*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__lobbyGameStateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyGameStateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyGameStateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<LevelSelectionFlowCoordinator/State> didSelectLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::LevelSelectionFlowCoordinator::State*>*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didSelectLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didSelectLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::LevelSelectionFlowCoordinator::State*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn_didFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _actionButtonText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__actionButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_actionButtonText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _titleText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__titleText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__titleText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_titleText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask _songPackMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__songPackMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficultyMask _allowedBeatmapDifficultyMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__allowedBeatmapDifficultyMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowedBeatmapDifficultyMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LevelSelectionFlowCoordinator/State _state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelSelectionFlowCoordinator::State*& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelSelectionFlowCoordinator::State**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBeingFinished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__isBeingFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::dyn__isBeingFinished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBeingFinished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didSelectLevelEvent(::System::Action_1<::GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didSelectLevelEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didSelectLevelEvent(::System::Action_1<::GlobalNamespace::LevelSelectionFlowCoordinator::State*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didSelectLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.add_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didFinishedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::add_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.remove_didFinishedEvent
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didFinishedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::remove_didFinishedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.Setup
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::Setup(::GlobalNamespace::LevelSelectionFlowCoordinator::State* state, ::GlobalNamespace::SongPackMask songPackMask, ::GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::StringW actionText, ::StringW titleText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(actionText), ::il2cpp_utils::ExtractType(titleText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, songPackMask, allowedBeatmapDifficultyMask, actionText, titleText);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.HandleLobbyGameStateControllerGameStarted
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::HandleLobbyGameStateControllerGameStarted(::GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::HandleLobbyGameStateControllerGameStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyGameStateControllerGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.DismissViewControllersAndFinish
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::DismissViewControllersAndFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::DismissViewControllersAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissViewControllersAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePracticeButton
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePracticeButton");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_actionButtonText
::StringW GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_actionButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_actionButtonText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_songPackMask
::GlobalNamespace::SongPackMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_songPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_enableCustomLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_allowedBeatmapDifficultyMask
::GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_allowedBeatmapDifficultyMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedBeatmapDifficultyMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDifficultyMask, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_notAllowedCharacteristics
::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*> GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_notAllowedCharacteristics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_notAllowedCharacteristics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_notAllowedCharacteristics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapCharacteristicSO*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.get_mainTitle
::StringW GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::ActionButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidStart
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelSelectionFlowCoordinator.TransitionDidFinish
void GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLevelSelectionFlowCoordinator::TransitionDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyFreePlayFlowCoordinator
#include "GlobalNamespace/PartyFreePlayFlowCoordinator.hpp"
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass17_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass17_0.hpp"
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsClearedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsClearedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsClearedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsClearedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsFailedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsFailedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsFailedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsFailedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsManager*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ResultsViewController _resultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsViewController*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalLeaderboardViewController _localLeaderboardViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalLeaderboardViewController*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__localLeaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__localLeaderboardViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localLeaderboardViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnterPlayerGuestNameViewController _enterNameViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnterPlayerGuestNameViewController*& GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__enterNameViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::dyn__enterNameViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_enterNameViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnterPlayerGuestNameViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.WillScoreGoToLeaderboard
bool GlobalNamespace::PartyFreePlayFlowCoordinator::WillScoreGoToLeaderboard(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::StringW leaderboardId, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::WillScoreGoToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoToLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(practice)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelCompletionResults, leaderboardId, practice);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.IsNewHighScore
bool GlobalNamespace::PartyFreePlayFlowCoordinator::IsNewHighScore(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::StringW leaderboardId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::IsNewHighScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNewHighScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(leaderboardId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelCompletionResults, leaderboardId);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.ProcessScore
void GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessScore(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::StringW leaderboardId, ::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(leaderboardId), ::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, leaderboardId, playerName);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(::GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(::GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_gameMode
::StringW GlobalNamespace::PartyFreePlayFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_leaderboardViewController
::GlobalNamespace::LeaderboardViewController* GlobalNamespace::PartyFreePlayFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::PartyFreePlayFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.get_mainTitle
::StringW GlobalNamespace::PartyFreePlayFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: PartyFreePlayFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass17_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass17_0.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PartyFreePlayFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyFreePlayFlowCoordinator*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LevelCompletionResults levelCompletionResults
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelCompletionResults*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_levelCompletionResults() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_levelCompletionResults");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelCompletionResults"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leaderboardId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_leaderboardId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_leaderboardId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leaderboardId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IReadonlyBeatmapData transformedBeatmapData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_transformedBeatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_transformedBeatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformedBeatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IDifficultyBeatmap difficultyBeatmap
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDifficultyBeatmap*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_difficultyBeatmap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficultyBeatmap"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDifficultyBeatmap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyFreePlayFlowCoordinator/<>c__DisplayClass17_0.<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0
void GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::$ProcessLevelCompletionResultsAfterLevelDidFinish$b__0(::GlobalNamespace::EnterPlayerGuestNameViewController* viewController, ::StringW playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass17_0::<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessLevelCompletionResultsAfterLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(playerName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController, playerName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PartyFreePlayFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/PartyFreePlayFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PartyFreePlayFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PartyFreePlayFlowCoordinator*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PartyFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ResultsViewController resultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsViewController*& GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::dyn_resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::dyn_resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PartyFreePlayFlowCoordinator/<>c__DisplayClass22_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PartyFreePlayFlowCoordinator::$$c__DisplayClass22_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolSettingsFlowCoordinator
#include "GlobalNamespace/RecordingToolSettingsFlowCoordinator.hpp"
// Including type: RecordingToolSettingsFlowCoordinator/InitData
#include "GlobalNamespace/RecordingToolSettingsFlowCoordinator_InitData.hpp"
// Including type: RecordingToolConfigViewController
#include "GlobalNamespace/RecordingToolConfigViewController.hpp"
// Including type: RecordingToolSettingsViewController
#include "GlobalNamespace/RecordingToolSettingsViewController.hpp"
// Including type: RecordingToolLoggingViewController
#include "GlobalNamespace/RecordingToolLoggingViewController.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RecordingToolConfigViewController _recordingToolConfigViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolConfigViewController*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolConfigViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolConfigViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolConfigViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolConfigViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RecordingToolSettingsViewController _recordingToolSettingsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolSettingsViewController*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolSettingsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolSettingsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolSettingsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolSettingsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RecordingToolLoggingViewController _recordingToolLoggingViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolLoggingViewController*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolLoggingViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__recordingToolLoggingViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolLoggingViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolLoggingViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolSettingsFlowCoordinator/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolSettingsFlowCoordinator::InitData*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolSettingsFlowCoordinator::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolSettingsFlowCoordinator.Update
void GlobalNamespace::RecordingToolSettingsFlowCoordinator::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolSettingsFlowCoordinator.HandleRecordingToolSettingsViewControllerDidFinish
void GlobalNamespace::RecordingToolSettingsFlowCoordinator::HandleRecordingToolSettingsViewControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::HandleRecordingToolSettingsViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRecordingToolSettingsViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolSettingsFlowCoordinator.GoToNextScene
void GlobalNamespace::RecordingToolSettingsFlowCoordinator::GoToNextScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::GoToNextScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToNextScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolSettingsFlowCoordinator.DidActivate
void GlobalNamespace::RecordingToolSettingsFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: RecordingToolSettingsFlowCoordinator.DidDeactivate
void GlobalNamespace::RecordingToolSettingsFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolSettingsFlowCoordinator/InitData
#include "GlobalNamespace/RecordingToolSettingsFlowCoordinator_InitData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ScenesTransitionSetupDataSO nextScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ScenesTransitionSetupDataSO*& GlobalNamespace::RecordingToolSettingsFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettingsFlowCoordinator::InitData::dyn_nextScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsFlowCoordinator
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x112A514
// Autogenerated static field getter
// Get static field: static private System.Int32 _selectedSettingsSubMenuInfoIdx
int GlobalNamespace::SettingsFlowCoordinator::_get__selectedSettingsSubMenuInfoIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::_get__selectedSettingsSubMenuInfoIdx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SettingsFlowCoordinator", "_selectedSettingsSubMenuInfoIdx"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _selectedSettingsSubMenuInfoIdx
void GlobalNamespace::SettingsFlowCoordinator::_set__selectedSettingsSubMenuInfoIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::_set__selectedSettingsSubMenuInfoIdx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator", "_selectedSettingsSubMenuInfoIdx", value));
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::SettingsFlowCoordinator::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _mainSettingsMenuViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::SettingsFlowCoordinator::dyn__mainSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::dyn__mainSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SettingsNavigationController _settingsNavigationController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SettingsNavigationController*& GlobalNamespace::SettingsFlowCoordinator::dyn__settingsNavigationController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::dyn__settingsNavigationController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_settingsNavigationController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SettingsNavigationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<SettingsFlowCoordinator,SettingsFlowCoordinator/FinishAction> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::SettingsFlowCoordinator*, ::GlobalNamespace::SettingsFlowCoordinator::FinishAction>*& GlobalNamespace::SettingsFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::SettingsFlowCoordinator*, ::GlobalNamespace::SettingsFlowCoordinator::FinishAction>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SettingsFlowCoordinator.add_didFinishEvent
void GlobalNamespace::SettingsFlowCoordinator::add_didFinishEvent(::System::Action_2<::GlobalNamespace::SettingsFlowCoordinator*, ::GlobalNamespace::SettingsFlowCoordinator::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::SettingsFlowCoordinator::remove_didFinishEvent(::System::Action_2<::GlobalNamespace::SettingsFlowCoordinator*, ::GlobalNamespace::SettingsFlowCoordinator::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsFlowCoordinator..cctor
void GlobalNamespace::SettingsFlowCoordinator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SettingsFlowCoordinator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SettingsFlowCoordinator.ShowSecretViewController
void GlobalNamespace::SettingsFlowCoordinator::ShowSecretViewController(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::ShowSecretViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSecretViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SettingsFlowCoordinator.HandleDidSelectSettingsSubMenu
void GlobalNamespace::SettingsFlowCoordinator::HandleDidSelectSettingsSubMenu(::GlobalNamespace::SettingsSubMenuInfo* settingsSubMenuInfo, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::HandleDidSelectSettingsSubMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectSettingsSubMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settingsSubMenuInfo), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, settingsSubMenuInfo, idx);
}
// Autogenerated method: SettingsFlowCoordinator.ReplaceViewController
void GlobalNamespace::SettingsFlowCoordinator::ReplaceViewController(::HMUI::ViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::ReplaceViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SettingsFlowCoordinator.HandleSettingsNavigationControllerDidFinish
void GlobalNamespace::SettingsFlowCoordinator::HandleSettingsNavigationControllerDidFinish(::GlobalNamespace::SettingsNavigationController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::HandleSettingsNavigationControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSettingsNavigationControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: SettingsFlowCoordinator.ApplySettings
void GlobalNamespace::SettingsFlowCoordinator::ApplySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::ApplySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsFlowCoordinator.CancelSettings
void GlobalNamespace::SettingsFlowCoordinator::CancelSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::CancelSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsFlowCoordinator.DidActivate
void GlobalNamespace::SettingsFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SettingsFlowCoordinator.DidDeactivate
void GlobalNamespace::SettingsFlowCoordinator::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsFlowCoordinator/FinishAction
#include "GlobalNamespace/SettingsFlowCoordinator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Cancel
::GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Cancel
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Cancel(::GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Ok
::GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Ok
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Ok(::GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsFlowCoordinator/FinishAction Apply
::GlobalNamespace::SettingsFlowCoordinator::FinishAction GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SettingsFlowCoordinator::FinishAction>("", "SettingsFlowCoordinator/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public SettingsFlowCoordinator/FinishAction Apply
void GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Apply(::GlobalNamespace::SettingsFlowCoordinator::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsFlowCoordinator/FinishAction", "Apply", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SettingsFlowCoordinator::FinishAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SettingsFlowCoordinator::FinishAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePlayerLevelSelectionFlowCoordinator
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator.hpp"
// Including type: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: PracticeViewController
#include "GlobalNamespace/PracticeViewController.hpp"
// Including type: GameplaySetupViewController
#include "GlobalNamespace/GameplaySetupViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ViewController/HMUI.AnimationType
#include "HMUI/ViewController_AnimationType.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO _degree360BeatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__degree360BeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__degree360BeatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_degree360BeatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly PracticeViewController _practiceViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PracticeViewController*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__practiceViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__practiceViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_practiceViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PracticeViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplaySetupViewController _gameplaySetupViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplaySetupViewController*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__gameplaySetupViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__gameplaySetupViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplaySetupViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplaySetupViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuTransitionsHelper*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__menuTransitionsHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuTransitionsHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuTransitionsHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AppStaticSettingsSO _appStaticSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AppStaticSettingsSO*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__appStaticSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__appStaticSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appStaticSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AppStaticSettingsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SimpleDialogPromptViewController _simpleDialogPromptViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__simpleDialogPromptViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn__simpleDialogPromptViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<SinglePlayerLevelSelectionFlowCoordinator> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameMode
::StringW GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_isInPracticeView
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_isInPracticeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_isInPracticeView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInPracticeView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_playerSettings
::GlobalNamespace::PlayerSpecificSettings* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_playerSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_playerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerSpecificSettings*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_gameplayModifiers
::GlobalNamespace::GameplayModifiers* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_hideGameplaySetup
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_hideGameplaySetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_hideGameplaySetup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideGameplaySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_leaderboardViewController
::GlobalNamespace::LeaderboardViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.add_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::add_didFinishEvent(::System::Action_1<::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.remove_didFinishEvent
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevelOrShow360Prompt
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevelOrShow360Prompt(::System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevelOrShow360Prompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevelOrShow360Prompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.StartLevel
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevel(::System::Action* beforeSceneSwitchCallback, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::StartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandlePracticeViewControllerDidPressPlayButton
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandlePracticeViewControllerDidPressPlayButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandlePracticeViewControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePracticeViewControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleStandardLevelDidFinish
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleStandardLevelDidFinish(::GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleStandardLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SetupGameplaySetupViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SetupGameplaySetupViewController(bool showModifiers, bool showEnvironmentOverrideSettings, bool showColorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SetupGameplaySetupViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupGameplaySetupViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showModifiers), ::il2cpp_utils::ExtractType(showEnvironmentOverrideSettings), ::il2cpp_utils::ExtractType(showColorSchemesSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, showModifiers, showEnvironmentOverrideSettings, showColorSchemesSettings);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.HandleBasicLevelCompletionResults
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleBasicLevelCompletionResults(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::HandleBasicLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBasicLevelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(practice)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelCompletionResults, practice);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.DismissPracticeViewController
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::DismissPracticeViewController(::System::Action* finishedCallback, bool immediately) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::DismissPracticeViewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DismissPracticeViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback), ::il2cpp_utils::ExtractType(immediately)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finishedCallback, immediately);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_enableCustomLevels
bool GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_enableCustomLevels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCustomLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialTopScreenViewController
::HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.get_initialLeftScreenViewController
::HMUI::ViewController* GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialLeftScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::get_initialLeftScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialLeftScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.LevelSelectionFlowCoordinatorTopViewControllerWillChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange(::HMUI::ViewController* oldViewController, ::HMUI::ViewController* newViewController, ::HMUI::ViewController::AnimationType animationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::LevelSelectionFlowCoordinatorTopViewControllerWillChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelSelectionFlowCoordinatorTopViewControllerWillChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldViewController), ::il2cpp_utils::ExtractType(newViewController), ::il2cpp_utils::ExtractType(animationType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, oldViewController, newViewController, animationType);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.ActionButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ActionButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::ActionButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActionButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.PracticeButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::PracticeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::PracticeButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PracticeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.SelectionDidChange
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SelectionDidChange(::GlobalNamespace::IBeatmapLevelPack* pack, ::GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(beatmap)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pack, beatmap);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator.BackButtonWasPressed
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::BackButtonWasPressed(::HMUI::ViewController* topViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::BackButtonWasPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(topViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, topViewController);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0
#include "GlobalNamespace/SinglePlayerLevelSelectionFlowCoordinator_--c__DisplayClass37_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SinglePlayerLevelSelectionFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action beforeSceneSwitchCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_beforeSceneSwitchCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_beforeSceneSwitchCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beforeSceneSwitchCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action <>9__1
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0.<StartLevelOrShow360Prompt>b__0
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::$StartLevelOrShow360Prompt$b__0(int buttonNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::<StartLevelOrShow360Prompt>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevelOrShow360Prompt>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonNumber);
}
// Autogenerated method: SinglePlayerLevelSelectionFlowCoordinator/<>c__DisplayClass37_0.<StartLevelOrShow360Prompt>b__1
void GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::$StartLevelOrShow360Prompt$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePlayerLevelSelectionFlowCoordinator::$$c__DisplayClass37_0::<StartLevelOrShow360Prompt>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevelOrShow360Prompt>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloFreePlayFlowCoordinator
#include "GlobalNamespace/SoloFreePlayFlowCoordinator.hpp"
// Including type: SoloFreePlayFlowCoordinator/<>c__DisplayClass21_0
#include "GlobalNamespace/SoloFreePlayFlowCoordinator_--c__DisplayClass21_0.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: PlatformLeaderboardViewController
#include "GlobalNamespace/PlatformLeaderboardViewController.hpp"
// Including type: PlatformLeaderboardsModel
#include "GlobalNamespace/PlatformLeaderboardsModel.hpp"
// Including type: PlayerLevelStatsData
#include "GlobalNamespace/PlayerLevelStatsData.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: RunLevelMenuDestination
#include "GlobalNamespace/RunLevelMenuDestination.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__defaultLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__defaultLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsClearedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsClearedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsClearedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsClearedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _resultsFailedLightsPreset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsFailedLightsPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsFailedLightsPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsFailedLightsPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuLightsManager _menuLightsManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuLightsManager*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__menuLightsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__menuLightsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuLightsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ResultsViewController _resultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsViewController*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardViewController _platformLeaderboardViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardViewController*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__platformLeaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__platformLeaderboardViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformLeaderboardsModel _platformLeaderboardsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlatformLeaderboardsModel*& GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__platformLeaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::dyn__platformLeaderboardsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformLeaderboardsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlatformLeaderboardsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.IsNewHighScore
bool GlobalNamespace::SoloFreePlayFlowCoordinator::IsNewHighScore(::GlobalNamespace::PlayerLevelStatsData* playerLevelStats, ::GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::IsNewHighScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNewHighScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerLevelStats), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, playerLevelStats, levelCompletionResults);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(::GlobalNamespace::ResultsViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(::GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.__SetupFromDestination
void GlobalNamespace::SoloFreePlayFlowCoordinator::__SetupFromDestination(::GlobalNamespace::RunLevelMenuDestination* runLevelMenuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::__SetupFromDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetupFromDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runLevelMenuDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runLevelMenuDestination);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_gameMode
::StringW GlobalNamespace::SoloFreePlayFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_leaderboardViewController
::GlobalNamespace::LeaderboardViewController* GlobalNamespace::SoloFreePlayFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_showBackButtonForMainViewController
bool GlobalNamespace::SoloFreePlayFlowCoordinator::get_showBackButtonForMainViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::get_showBackButtonForMainViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showBackButtonForMainViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.get_mainTitle
::StringW GlobalNamespace::SoloFreePlayFlowCoordinator::get_mainTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::get_mainTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::SoloFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(::GlobalNamespace::LevelCompletionResults* levelCompletionResults, ::GlobalNamespace::IReadonlyBeatmapData* transformedBeatmapData, ::GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(transformedBeatmapData), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelCompletionResults, transformedBeatmapData, difficultyBeatmap, gameplayModifiers, practice);
}
// Autogenerated method: SoloFreePlayFlowCoordinator.Refresh
void GlobalNamespace::SoloFreePlayFlowCoordinator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloFreePlayFlowCoordinator/<>c__DisplayClass21_0
#include "GlobalNamespace/SoloFreePlayFlowCoordinator_--c__DisplayClass21_0.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SoloFreePlayFlowCoordinator <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SoloFreePlayFlowCoordinator*& GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SoloFreePlayFlowCoordinator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ResultsViewController resultsViewController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ResultsViewController*& GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::dyn_resultsViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::dyn_resultsViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resultsViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ResultsViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SoloFreePlayFlowCoordinator/<>c__DisplayClass21_0.<HandleResultsViewControllerRestartButtonPressed>b__0
void GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::$HandleResultsViewControllerRestartButtonPressed$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SoloFreePlayFlowCoordinator::$$c__DisplayClass21_0::<HandleResultsViewControllerRestartButtonPressed>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleResultsViewControllerRestartButtonPressed>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestFlowCoordinator
#include "GlobalNamespace/TestFlowCoordinator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _viewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::TestFlowCoordinator::dyn__viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::dyn__viewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_viewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _leftViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::TestFlowCoordinator::dyn__leftViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::dyn__leftViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _rightViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::TestFlowCoordinator::dyn__rightViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::dyn__rightViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _bottomScreenViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::TestFlowCoordinator::dyn__bottomScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::dyn__bottomScreenViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bottomScreenViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ViewController _topScreenViewController
[[deprecated("Use field access instead!")]] ::HMUI::ViewController*& GlobalNamespace::TestFlowCoordinator::dyn__topScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::dyn__topScreenViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topScreenViewController"))->offset;
  return *reinterpret_cast<::HMUI::ViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestFlowCoordinator.DidActivate
void GlobalNamespace::TestFlowCoordinator::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestFlowCoordinator::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierToggle
#include "GlobalNamespace/GameplayModifierToggle.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.HoverTextSetter
#include "HMUI/HoverTextSetter.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifierParamsSO _gameplayModifier
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierParamsSO*& GlobalNamespace::GameplayModifierToggle::dyn__gameplayModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__gameplayModifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifier"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierParamsSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::GameplayModifierToggle::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _multiplierText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::GameplayModifierToggle::dyn__multiplierText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__multiplierText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverTextSetter _hoverTextSetter
[[deprecated("Use field access instead!")]] ::HMUI::HoverTextSetter*& GlobalNamespace::GameplayModifierToggle::dyn__hoverTextSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__hoverTextSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverTextSetter"))->offset;
  return *reinterpret_cast<::HMUI::HoverTextSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _icon
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::GameplayModifierToggle::dyn__icon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__icon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_icon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _toggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::GameplayModifierToggle::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _positiveColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::GameplayModifierToggle::dyn__positiveColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::dyn__positiveColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positiveColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierToggle.get_toggle
::UnityEngine::UI::Toggle* GlobalNamespace::GameplayModifierToggle::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierToggle.get_gameplayModifier
::GlobalNamespace::GameplayModifierParamsSO* GlobalNamespace::GameplayModifierToggle::get_gameplayModifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::get_gameplayModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayModifierParamsSO*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayModifierToggle.Start
void GlobalNamespace::GameplayModifierToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierToggle::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::GuestNameButtonsListItem::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::GuestNameButtonsListItem::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action _buttonPressed
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GuestNameButtonsListItem::dyn__buttonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::dyn__buttonPressed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonPressed"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GuestNameButtonsListItem.set_nameText
void GlobalNamespace::GuestNameButtonsListItem::set_nameText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::set_nameText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nameText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuestNameButtonsListItem.set_buttonPressed
void GlobalNamespace::GuestNameButtonsListItem::set_buttonPressed(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::set_buttonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_buttonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GuestNameButtonsListItem.Awake
void GlobalNamespace::GuestNameButtonsListItem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GuestNameButtonsListItem.<Awake>b__7_0
void GlobalNamespace::GuestNameButtonsListItem::$Awake$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GuestNameButtonsListItem::<Awake>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GuestNameButtonsListItemsList
#include "GlobalNamespace/GuestNameButtonsListItemsList.hpp"
// Including type: GuestNameButtonsListItem
#include "GlobalNamespace/GuestNameButtonsListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardEntry
#include "GlobalNamespace/LeaderboardEntry.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _scoreText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardEntry::dyn__scoreText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardEntry::dyn__scoreText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _playerNameText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardEntry::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardEntry::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _rankText
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::LeaderboardEntry::dyn__rankText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardEntry::dyn__rankText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rankText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::LeaderboardEntry::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardEntry::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LeaderboardEntry.SetScore
void GlobalNamespace::LeaderboardEntry::SetScore(int score, ::StringW playerName, int rank, bool highlighted, bool showSeparator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LeaderboardEntry::SetScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(rank), ::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(showSeparator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score, playerName, rank, highlighted, showSeparator);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedHoverHint
#include "GlobalNamespace/LocalizedHoverHint.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalizedHoverHint.SetText
void GlobalNamespace::LocalizedHoverHint::SetText(::HMUI::HoverHint* hoverHint, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHoverHint::SetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverHint), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverHint, value);
}
// Autogenerated method: LocalizedHoverHint.UpdateAlignment
void GlobalNamespace::LocalizedHoverHint::UpdateAlignment(::HMUI::HoverHint* hoverHint, ::Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedHoverHint::UpdateAlignment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hoverHint), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hoverHint, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuPlayerController
#include "GlobalNamespace/MenuPlayerController.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VRController _leftController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::MenuPlayerController::dyn__leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::dyn__leftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _rightController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::MenuPlayerController::dyn__rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::dyn__rightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MenuPlayerController::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuPlayerController.get_leftController
::GlobalNamespace::VRController* GlobalNamespace::MenuPlayerController::get_leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::get_leftController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRController*, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_rightController
::GlobalNamespace::VRController* GlobalNamespace::MenuPlayerController::get_rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::get_rightController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRController*, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_headPos
::UnityEngine::Vector3 GlobalNamespace::MenuPlayerController::get_headPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::get_headPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MenuPlayerController.get_headRot
::UnityEngine::Quaternion GlobalNamespace::MenuPlayerController::get_headRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuPlayerController::get_headRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionConnectionsGenerator
#include "GlobalNamespace/MissionConnectionsGenerator.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionConnectionsGenerator::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection _nodeConnectionPref
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeConnection*& GlobalNamespace::MissionConnectionsGenerator::dyn__nodeConnectionPref() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::dyn__nodeConnectionPref");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeConnectionPref"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectionsCanvas
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionConnectionsGenerator::dyn__connectionsCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::dyn__connectionsCanvas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionsCanvas"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<MissionNode> _missionNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::MissionNode*>*& GlobalNamespace::MissionConnectionsGenerator::dyn__missionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::dyn__missionNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::MissionNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionConnectionsGenerator.get__rootMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionConnectionsGenerator::get__rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::get__rootMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get__rootMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.CreateNodeConnections
void GlobalNamespace::MissionConnectionsGenerator::CreateNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::CreateNodeConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNodeConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.RemoveOldConnections
void GlobalNamespace::MissionConnectionsGenerator::RemoveOldConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::RemoveOldConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveOldConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionConnectionsGenerator.CreateConnections
void GlobalNamespace::MissionConnectionsGenerator::CreateConnections(::GlobalNamespace::MissionNode* missionNode, ::System::Collections::Generic::List_1<::GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::CreateConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode), ::il2cpp_utils::ExtractType(visitedNodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode, visitedNodes);
}
// Autogenerated method: MissionConnectionsGenerator.CreateConnectionBetweenNodes
::GlobalNamespace::MissionNodeConnection* GlobalNamespace::MissionConnectionsGenerator::CreateConnectionBetweenNodes(::GlobalNamespace::MissionNode* parentMissionNode, ::GlobalNamespace::MissionNode* childMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionConnectionsGenerator::CreateConnectionBetweenNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateConnectionBetweenNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentMissionNode), ::il2cpp_utils::ExtractType(childMissionNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeConnection*, false>(this, ___internal__method, parentMissionNode, childMissionNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionMapAnimationController
#include "GlobalNamespace/MissionMapAnimationController.hpp"
// Including type: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12
#include "GlobalNamespace/MissionMapAnimationController_-UpdateMissionMapCoroutine-d__12.hpp"
// Including type: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13
#include "GlobalNamespace/MissionMapAnimationController_-UpdateClearedNodeStateCoroutine-d__13.hpp"
// Including type: MissionMapAnimationController/<UpdateStageCoroutine>d__14
#include "GlobalNamespace/MissionMapAnimationController_-UpdateStageCoroutine-d__14.hpp"
// Including type: MissionMapAnimationController/<>c
#include "GlobalNamespace/MissionMapAnimationController_--c.hpp"
// Including type: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15
#include "GlobalNamespace/MissionMapAnimationController_-UpdateNodesAndConnectionCoroutine-d__15.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: MenuShockwave
#include "GlobalNamespace/MenuShockwave.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionMapAnimationController::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ScrollView _mapScrollView
[[deprecated("Use field access instead!")]] ::HMUI::ScrollView*& GlobalNamespace::MissionMapAnimationController::dyn__mapScrollView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__mapScrollView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mapScrollView"))->offset;
  return *reinterpret_cast<::HMUI::ScrollView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionMapAnimationController::dyn__startDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__startDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stageAnimationStartDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionMapAnimationController::dyn__stageAnimationStartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__stageAnimationStartDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageAnimationStartDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _missionConnectionAnimationStartDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionMapAnimationController::dyn__missionConnectionAnimationStartDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__missionConnectionAnimationStartDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionConnectionAnimationStartDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _missionConnectionAnimationSeparationTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionMapAnimationController::dyn__missionConnectionAnimationSeparationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__missionConnectionAnimationSeparationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionConnectionAnimationSeparationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stageAnimationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionMapAnimationController::dyn__stageAnimationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__stageAnimationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stageAnimationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuShockwave _shockwaveEffect
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuShockwave*& GlobalNamespace::MissionMapAnimationController::dyn__shockwaveEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::dyn__shockwaveEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwaveEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuShockwave**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController.get_animatedUpdateIsRequired
bool GlobalNamespace::MissionMapAnimationController::get_animatedUpdateIsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::get_animatedUpdateIsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatedUpdateIsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.ScrollToTopMostNotClearedMission
void GlobalNamespace::MissionMapAnimationController::ScrollToTopMostNotClearedMission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::ScrollToTopMostNotClearedMission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollToTopMostNotClearedMission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.UpdateMissionMapAfterMissionWasCleared
void GlobalNamespace::MissionMapAnimationController::UpdateMissionMapAfterMissionWasCleared(bool animated, ::System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::UpdateMissionMapAfterMissionWasCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMissionMapAfterMissionWasCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, finishCallback);
}
// Autogenerated method: MissionMapAnimationController.UpdateMissionMapCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateMissionMapCoroutine(::GlobalNamespace::MissionNode* lastClearedMissionNode, ::System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::UpdateMissionMapCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMissionMapCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastClearedMissionNode), ::il2cpp_utils::ExtractType(finishCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, lastClearedMissionNode, finishCallback);
}
// Autogenerated method: MissionMapAnimationController.UpdateClearedNodeStateCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateClearedNodeStateCoroutine(::GlobalNamespace::MissionNode* lastClearedMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::UpdateClearedNodeStateCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClearedNodeStateCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastClearedMissionNode)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, lastClearedMissionNode);
}
// Autogenerated method: MissionMapAnimationController.UpdateStageCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateStageCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::UpdateStageCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController.UpdateNodesAndConnectionCoroutine
::System::Collections::IEnumerator* GlobalNamespace::MissionMapAnimationController::UpdateNodesAndConnectionCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::UpdateNodesAndConnectionCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNodesAndConnectionCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12
#include "GlobalNamespace/MissionMapAnimationController_-UpdateMissionMapCoroutine-d__12.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionMapAnimationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionNode lastClearedMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_lastClearedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_lastClearedMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastClearedMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action finishCallback
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_finishCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::dyn_finishCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishCallback"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateMissionMapCoroutine>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateMissionMapCoroutine$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13
#include "GlobalNamespace/MissionMapAnimationController_-UpdateClearedNodeStateCoroutine-d__13.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionNode lastClearedMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_lastClearedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_lastClearedMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastClearedMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionMapAnimationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateClearedNodeStateCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateClearedNodeStateCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateStageCoroutine>d__14
#include "GlobalNamespace/MissionMapAnimationController_-UpdateStageCoroutine-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionMapAnimationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateStageCoroutine>d__14.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateStageCoroutine$d__14::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionMapAnimationController/<>c
#include "GlobalNamespace/MissionMapAnimationController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionMapAnimationController/<>c <>9
::GlobalNamespace::MissionMapAnimationController::$$c* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionMapAnimationController::$$c*>("", "MissionMapAnimationController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionMapAnimationController/<>c <>9
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9(::GlobalNamespace::MissionMapAnimationController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_0
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0(::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_get_$$9__15_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>*>("", "MissionMapAnimationController/<>c", "<>9__15_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionNodeConnection,System.Single> <>9__15_1
void GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1(::System::Func_2<::GlobalNamespace::MissionNodeConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::_set_$$9__15_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionMapAnimationController/<>c", "<>9__15_1", value)));
}
// Autogenerated method: MissionMapAnimationController/<>c..cctor
void GlobalNamespace::MissionMapAnimationController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionMapAnimationController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_0
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_0(::GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated method: MissionMapAnimationController/<>c.<UpdateNodesAndConnectionCoroutine>b__15_1
float GlobalNamespace::MissionMapAnimationController::$$c::$UpdateNodesAndConnectionCoroutine$b__15_1(::GlobalNamespace::MissionNodeConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$$c::<UpdateNodesAndConnectionCoroutine>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UpdateNodesAndConnectionCoroutine>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, connection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15
#include "GlobalNamespace/MissionMapAnimationController_-UpdateNodesAndConnectionCoroutine-d__15.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MissionMapAnimationController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionMapAnimationController*& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionMapAnimationController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] <newEnabledConnection>5__2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$newEnabledConnection$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$newEnabledConnection$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newEnabledConnection>5__2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] <>7__wrap2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::dyn_$$7__wrap3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.IDisposable.Dispose
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.MoveNext
bool GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionMapAnimationController/<UpdateNodesAndConnectionCoroutine>d__15.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionMapAnimationController::$UpdateNodesAndConnectionCoroutine$d__15::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionDataSO
#include "GlobalNamespace/MissionDataSO.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionDataSO _missionDataSO
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionDataSO*& GlobalNamespace::MissionNode::dyn__missionDataSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__missionDataSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionDataSO"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _letterPartName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MissionNode::dyn__letterPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__letterPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_letterPartName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberPartName
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MissionNode::dyn__numberPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__numberPartName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberPartName"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionNode::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _missionNodeVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNode::dyn__missionNodeVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__missionNodeVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodeVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _childNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNode::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNode.get_missionData
::GlobalNamespace::MissionDataSO* GlobalNamespace::MissionNode::get_missionData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_childNodes
::ArrayW<::GlobalNamespace::MissionNode*> GlobalNamespace::MissionNode::get_childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_childNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNode*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionNodeVisualController
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNode::get_missionNodeVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionNodeVisualController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNodeVisualController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_letterPartName
::StringW GlobalNamespace::MissionNode::get_letterPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_letterPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_letterPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_numberPartName
int GlobalNamespace::MissionNode::get_numberPartName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_numberPartName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberPartName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_missionId
::StringW GlobalNamespace::MissionNode::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_formattedMissionNodeName
::StringW GlobalNamespace::MissionNode::get_formattedMissionNodeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_formattedMissionNodeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_formattedMissionNodeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_position
::UnityEngine::Vector2 GlobalNamespace::MissionNode::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: MissionNode.get_radius
float GlobalNamespace::MissionNode::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNode::get_radius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _separator
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionNodeConnection::dyn__separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__separator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_separator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _width
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionNodeConnection::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionNodeConnection::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionNodeConnection::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _parentMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeConnection::dyn__parentMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__parentMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _childMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeConnection::dyn__childMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__childMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::MissionNodeConnection::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _parentMissionNodePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::MissionNodeConnection::dyn__parentMissionNodePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__parentMissionNodePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentMissionNodePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _childMissionNodePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& GlobalNamespace::MissionNodeConnection::dyn__childMissionNodePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__childMissionNodePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childMissionNodePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeConnection::dyn__isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::dyn__isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeConnection.get_parentMissionNode
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_parentMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_parentMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_childMissionNode
::GlobalNamespace::MissionNodeVisualController* GlobalNamespace::MissionNodeConnection::get_childMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_childMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_childMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNodeVisualController*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.get_isActive
bool GlobalNamespace::MissionNodeConnection::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::get_isActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.Setup
void GlobalNamespace::MissionNodeConnection::Setup(::GlobalNamespace::MissionNodeVisualController* parentMissionNode, ::GlobalNamespace::MissionNodeVisualController* childMissionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentMissionNode), ::il2cpp_utils::ExtractType(childMissionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentMissionNode, childMissionNode);
}
// Autogenerated method: MissionNodeConnection.UpdateConnectionRectTransform
void GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::UpdateConnectionRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConnectionRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeConnection.SetActive
void GlobalNamespace::MissionNodeConnection::SetActive(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: MissionNodeConnection.MissionConnectionEnabledDidFinish
void GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeConnection::MissionConnectionEnabledDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionConnectionEnabledDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeGizmos
#include "GlobalNamespace/MissionNodeGizmos.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodeGizmos::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::MissionNodeGizmos::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CampaignProgressModel _missionProgressModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::MissionNodeGizmos::dyn__missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeGizmos::dyn__missionProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionProgressModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeNameGenerator
#include "GlobalNamespace/MissionNodeNameGenerator.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionNodeNameGenerator::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeNameGenerator::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeSelectionManager
#include "GlobalNamespace/MissionNodeSelectionManager.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodesManager*& GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> didSelectMissionNodeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeSelectionManager::dyn_didSelectMissionNodeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn_didSelectMissionNodeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectMissionNodeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _missionNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__missionNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeVisualController _selectedNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeVisualController*& GlobalNamespace::MissionNodeSelectionManager::dyn__selectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::dyn__selectedNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeSelectionManager.add_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::add_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.remove_didSelectMissionNodeEvent
void GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::remove_didSelectMissionNodeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectMissionNodeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeSelectionManager.DeselectSelectedNode
void GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::DeselectSelectedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeselectSelectedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.Start
void GlobalNamespace::MissionNodeSelectionManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.OnDestroy
void GlobalNamespace::MissionNodeSelectionManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasSelect
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect(::GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasSelect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNodeWasSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodeSelectionManager.HandleNodeWasDisplayed
void GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed(::GlobalNamespace::MissionNodeVisualController* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeSelectionManager::HandleNodeWasDisplayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNodeWasDisplayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeUpdatePositionInEditMode
#include "GlobalNamespace/MissionNodeUpdatePositionInEditMode.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection _missionNodeConnection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNodeConnection*& GlobalNamespace::MissionNodeUpdatePositionInEditMode::dyn__missionNodeConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeUpdatePositionInEditMode::dyn__missionNodeConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodeConnection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNodeConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionToggle _missionToggle
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionToggle*& GlobalNamespace::MissionNodeVisualController::dyn__missionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__missionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionToggle"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _missionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodeVisualController::dyn__missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__missionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> nodeWasSelectEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeVisualController::dyn_nodeWasSelectEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn_nodeWasSelectEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeWasSelectEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionNodeVisualController> nodeWasDisplayedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>*& GlobalNamespace::MissionNodeVisualController::dyn_nodeWasDisplayedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn_nodeWasDisplayedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeWasDisplayedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _cleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__cleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodeVisualController::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodeVisualController.get_missionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodeVisualController::get_missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_missionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_selected
bool GlobalNamespace::MissionNodeVisualController::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_isInitialized
bool GlobalNamespace::MissionNodeVisualController::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_cleared
bool GlobalNamespace::MissionNodeVisualController::get_cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_cleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.get_interactable
bool GlobalNamespace::MissionNodeVisualController::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.add_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::add_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasSelectEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::remove_nodeWasSelectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_nodeWasSelectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.add_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::add_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.remove_nodeWasDisplayedEvent
void GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent(::System::Action_1<::GlobalNamespace::MissionNodeVisualController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::remove_nodeWasDisplayedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_nodeWasDisplayedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.SetSelected
void GlobalNamespace::MissionNodeVisualController::SetSelected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionNodeVisualController.OnEnable
void GlobalNamespace::MissionNodeVisualController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Awake
void GlobalNamespace::MissionNodeVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Start
void GlobalNamespace::MissionNodeVisualController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Reset
void GlobalNamespace::MissionNodeVisualController::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.OnDestroy
void GlobalNamespace::MissionNodeVisualController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Init
void GlobalNamespace::MissionNodeVisualController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.Setup
void GlobalNamespace::MissionNodeVisualController::Setup(bool cleared, bool interactable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cleared), ::il2cpp_utils::ExtractType(interactable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cleared, interactable);
}
// Autogenerated method: MissionNodeVisualController.SetupToggle
void GlobalNamespace::MissionNodeVisualController::SetupToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetupToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetMissionCleared
void GlobalNamespace::MissionNodeVisualController::SetMissionCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetMissionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMissionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.SetInteractable
void GlobalNamespace::MissionNodeVisualController::SetInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::SetInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodeVisualController.ChangeNodeSelection
void GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection(bool selected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::ChangeNodeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeNodeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selected);
}
// Autogenerated method: MissionNodeVisualController.HandleMissionToggleSelectionDidChange
void GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange(::GlobalNamespace::MissionToggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodeVisualController::HandleMissionToggleSelectionDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionToggleSelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodesHelper
#include "GlobalNamespace/MissionNodesHelper.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionNodesHelper.GetAllNodesFromRoot
::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot(::GlobalNamespace::MissionNode* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::GetAllNodesFromRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "GetAllNodesFromRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, root);
}
// Autogenerated method: MissionNodesHelper.VisitAllTree
void GlobalNamespace::MissionNodesHelper::VisitAllTree(::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::VisitAllTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "VisitAllTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visitedNodes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, visitedNodes);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(::GlobalNamespace::MissionNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: MissionNodesHelper.CycleDetection
bool GlobalNamespace::MissionNodesHelper::CycleDetection(::GlobalNamespace::MissionNode* node, int layer, ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::MissionNode*, int>* layers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::CycleDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "CycleDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(layer), ::il2cpp_utils::ExtractType(layers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node, layer, layers);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(::GlobalNamespace::MissionNode* finalNode, ::GlobalNamespace::MissionNode* rootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finalNode), ::il2cpp_utils::ExtractType(rootNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finalNode, rootNode);
}
// Autogenerated method: MissionNodesHelper.FinalNodeIsFinal
bool GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal(::GlobalNamespace::MissionNode* finalNode, ::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visitedNodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesHelper::FinalNodeIsFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionNodesHelper", "FinalNodeIsFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finalNode), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visitedNodes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, finalNode, node, visitedNodes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: CampaignProgressModel
#include "GlobalNamespace/CampaignProgressModel.hpp"
// Including type: MissionNodeConnection
#include "GlobalNamespace/MissionNodeConnection.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionNode _rootMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodesManager::dyn__rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__rootMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rootMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode _finalMissionNode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionNode*& GlobalNamespace::MissionNodesManager::dyn__finalMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__finalMissionNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionNode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStagesManager _missionStagesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStagesManager*& GlobalNamespace::MissionNodesManager::dyn__missionStagesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionStagesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStagesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStagesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectionsParentObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionNodesManager::dyn__connectionsParentObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__connectionsParentObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionsParentObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _missionNodesParentObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MissionNodesManager::dyn__missionNodesParentObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionNodesParentObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesParentObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CampaignProgressModel _missionProgressModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CampaignProgressModel*& GlobalNamespace::MissionNodesManager::dyn__missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__missionProgressModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionProgressModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CampaignProgressModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodeConnection[] _allMissionNodeConnections
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNodeConnection*>& GlobalNamespace::MissionNodesManager::dyn__allMissionNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__allMissionNodeConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionNodeConnections"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNodeConnection*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNode[] _allMissionNodes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionNode*>& GlobalNamespace::MissionNodesManager::dyn__allMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__allMissionNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionNodes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionNode*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionNodesManager::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionNodesManager.get_rootMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_rootMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_rootMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_finalMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::get_finalMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_finalMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_finalMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionStagesManager
::GlobalNamespace::MissionStagesManager* GlobalNamespace::MissionNodesManager::get_missionStagesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_missionStagesManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionStagesManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionStagesManager*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_missionProgressModel
::GlobalNamespace::CampaignProgressModel* GlobalNamespace::MissionNodesManager::get_missionProgressModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_missionProgressModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionProgressModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CampaignProgressModel*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_allMissionNodes
::ArrayW<::GlobalNamespace::MissionNode*> GlobalNamespace::MissionNodesManager::get_allMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_allMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNode*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.get_IsInitialized
bool GlobalNamespace::MissionNodesManager::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.Awake
void GlobalNamespace::MissionNodesManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeMap
void GlobalNamespace::MissionNodesManager::SetupNodeMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.MissionWasCleared
bool GlobalNamespace::MissionNodesManager::MissionWasCleared(::GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::MissionWasCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MissionWasCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionNodesManager.GetMissionNodeWithModelClearedStateInconsistency
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetMissionNodeWithModelClearedStateInconsistency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMissionNodeWithModelClearedStateInconsistency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.DidFirstLockedMissionStageChange
bool GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::DidFirstLockedMissionStageChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidFirstLockedMissionStageChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.UpdateStageLockText
void GlobalNamespace::MissionNodesManager::UpdateStageLockText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetTopMostNotClearedMissionNode
::GlobalNamespace::MissionNode* GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetTopMostNotClearedMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopMostNotClearedMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
void GlobalNamespace::MissionNodesManager::GetAllMissionNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.GetAllMissionNodes
::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* GlobalNamespace::MissionNodesManager::GetAllMissionNodes(::GlobalNamespace::MissionNode* node, ::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>* visited) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetAllMissionNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllMissionNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(visited)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::GlobalNamespace::MissionNode*>*, false>(this, ___internal__method, node, visited);
}
// Autogenerated method: MissionNodesManager.GetNewEnabledConnection
::ArrayW<::GlobalNamespace::MissionNodeConnection*> GlobalNamespace::MissionNodesManager::GetNewEnabledConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::GetNewEnabledConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNewEnabledConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::MissionNodeConnection*>, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.ResetAllNodes
void GlobalNamespace::MissionNodesManager::ResetAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::ResetAllNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetAllNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupStages
void GlobalNamespace::MissionNodesManager::SetupStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupStages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupStages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.RegisterAllNodes
void GlobalNamespace::MissionNodesManager::RegisterAllNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::RegisterAllNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterAllNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionNodesManager.SetupNodeTree
void GlobalNamespace::MissionNodesManager::SetupNodeTree(::GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeTree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeTree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(parentCleared)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.IsNodeInteractable
bool GlobalNamespace::MissionNodesManager::IsNodeInteractable(::GlobalNamespace::MissionNodeVisualController* node, bool parentCleared) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::IsNodeInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNodeInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(parentCleared)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node, parentCleared);
}
// Autogenerated method: MissionNodesManager.SetupNodeConnections
void GlobalNamespace::MissionNodesManager::SetupNodeConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionNodesManager::SetupNodeConnections");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupNodeConnections", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _text
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& GlobalNamespace::MissionStageLockView::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MissionStageLockView::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _dstPosY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__dstPosY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__dstPosY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dstPosY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _animationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__animationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__animationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startAnimationTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MissionStageLockView::dyn__startAnimationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::dyn__startAnimationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAnimationTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionStageLockView.UpdateLocalPositionY
void GlobalNamespace::MissionStageLockView::UpdateLocalPositionY(float dstPosY, bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::UpdateLocalPositionY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalPositionY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dstPosY), ::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(animationDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dstPosY, animated, animationDuration);
}
// Autogenerated method: MissionStageLockView.Update
void GlobalNamespace::MissionStageLockView::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStageLockView.UpdateStageLockText
void GlobalNamespace::MissionStageLockView::UpdateStageLockText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStageLockView::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStagesManager
#include "GlobalNamespace/MissionStagesManager.hpp"
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: MissionStageLockView
#include "GlobalNamespace/MissionStageLockView.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionStageLockView _missionStageLockView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStageLockView*& GlobalNamespace::MissionStagesManager::dyn__missionStageLockView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__missionStageLockView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStageLockView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStageLockView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStage[] _missionStages
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::MissionStage*>& GlobalNamespace::MissionStagesManager::dyn__missionStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__missionStages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionStages"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MissionStage*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionStage _firstLockedMissionStage
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MissionStage*& GlobalNamespace::MissionStagesManager::dyn__firstLockedMissionStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::dyn__firstLockedMissionStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_firstLockedMissionStage"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionStage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionStagesManager.get_firstLockedMissionStage
::GlobalNamespace::MissionStage* GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::get_firstLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstLockedMissionStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MissionStage*, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateFirtsLockedMissionStage
void GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateFirtsLockedMissionStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFirtsLockedMissionStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfClearedMissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated method: MissionStagesManager.InitStages
void GlobalNamespace::MissionStagesManager::InitStages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::InitStages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitStages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPosition
void GlobalNamespace::MissionStagesManager::UpdateStageLockPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockPositionAnimated
void GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated(bool animated, float animationDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockPositionAnimated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockPositionAnimated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(animationDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, animated, animationDuration);
}
// Autogenerated method: MissionStagesManager.UpdateStageLockText
void GlobalNamespace::MissionStagesManager::UpdateStageLockText(int numberOfClearedMissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::UpdateStageLockText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStageLockText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numberOfClearedMissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, numberOfClearedMissions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionStagesManager/<>c
#include "GlobalNamespace/MissionStagesManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MissionStage
#include "GlobalNamespace/MissionStage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MissionStagesManager/<>c <>9
::GlobalNamespace::MissionStagesManager::$$c* GlobalNamespace::MissionStagesManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::MissionStagesManager::$$c*>("", "MissionStagesManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MissionStagesManager/<>c <>9
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9(::GlobalNamespace::MissionStagesManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
::System::Func_2<::GlobalNamespace::MissionStage*, int>* GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::MissionStage*, int>*>("", "MissionStagesManager/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MissionStage,System.Int32> <>9__6_0
void GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::MissionStage*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MissionStagesManager/<>c", "<>9__6_0", value)));
}
// Autogenerated method: MissionStagesManager/<>c..cctor
void GlobalNamespace::MissionStagesManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MissionStagesManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MissionStagesManager/<>c.<InitStages>b__6_0
int GlobalNamespace::MissionStagesManager::$$c::$InitStages$b__6_0(::GlobalNamespace::MissionStage* stage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionStagesManager::$$c::<InitStages>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitStages>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stage)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionToggle
#include "GlobalNamespace/MissionToggle.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.Interactable
#include "HMUI/Interactable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _missionToggleWasPressedSignal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Signal*& GlobalNamespace::MissionToggle::dyn__missionToggleWasPressedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__missionToggleWasPressedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionToggleWasPressedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::MissionToggle::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _lockedImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__lockedImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__lockedImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockedImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _clearedImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__clearedImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__clearedImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _strokeImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::MissionToggle::dyn__strokeImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__strokeImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strokeImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.Interactable _vrInteractable
[[deprecated("Use field access instead!")]] ::HMUI::Interactable*& GlobalNamespace::MissionToggle::dyn__vrInteractable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__vrInteractable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrInteractable"))->offset;
  return *reinterpret_cast<::HMUI::Interactable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _disabledColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__disabledColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _normalColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__normalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _invertColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__invertColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__invertColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_invertColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::MissionToggle::dyn__highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MissionToggle> selectionDidChangeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MissionToggle*>*& GlobalNamespace::MissionToggle::dyn_selectionDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn_selectionDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MissionToggle*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _selected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__selected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _interactable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__interactable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interactable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _missionCleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::MissionToggle::dyn__missionCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::dyn__missionCleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionCleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionToggle.set_missionCleared
void GlobalNamespace::MissionToggle::set_missionCleared(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_missionCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_selected
bool GlobalNamespace::MissionToggle::get_selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_selected
void GlobalNamespace::MissionToggle::set_selected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_selected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_interactable
bool GlobalNamespace::MissionToggle::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.set_interactable
void GlobalNamespace::MissionToggle::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.get_highlighted
bool GlobalNamespace::MissionToggle::get_highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::get_highlighted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlighted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.add_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::add_selectionDidChangeEvent(::System::Action_1<::GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::add_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.remove_selectionDidChangeEvent
void GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent(::System::Action_1<::GlobalNamespace::MissionToggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::remove_selectionDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectionDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionToggle.ChangeSelection
void GlobalNamespace::MissionToggle::ChangeSelection(bool value, bool callSelectionDidChange, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::ChangeSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(callSelectionDidChange), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, callSelectionDidChange, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.ChangeHighlight
void GlobalNamespace::MissionToggle::ChangeHighlight(bool value, bool ignoreCurrentValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::ChangeHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(ignoreCurrentValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, ignoreCurrentValue);
}
// Autogenerated method: MissionToggle.SetText
void GlobalNamespace::MissionToggle::SetText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: MissionToggle.InternalToggle
void GlobalNamespace::MissionToggle::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::InternalToggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.RefreshUI
void GlobalNamespace::MissionToggle::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionToggle.OnPointerClick
void GlobalNamespace::MissionToggle::OnPointerClick(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnSubmit
void GlobalNamespace::MissionToggle::OnSubmit(::UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnSubmit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSubmit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerEnter
void GlobalNamespace::MissionToggle::OnPointerEnter(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerEnter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.OnPointerExit
void GlobalNamespace::MissionToggle::OnPointerExit(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::OnPointerExit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: MissionToggle.Start
void GlobalNamespace::MissionToggle::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionToggle::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupController
#include "GlobalNamespace/AutoSetupController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _closeButton
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Button*& GlobalNamespace::AutoSetupController::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _selectBasedOnSuggestionsToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__selectBasedOnSuggestionsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__selectBasedOnSuggestionsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectBasedOnSuggestionsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _autoStartWhenAllReadyToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__autoStartWhenAllReadyToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__autoStartWhenAllReadyToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoStartWhenAllReadyToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _forceAutoStartAfterSongSelectionToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__forceAutoStartAfterSongSelectionToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__forceAutoStartAfterSongSelectionToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceAutoStartAfterSongSelectionToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _randomSongIfNoneSuggestedToggle
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Toggle*& GlobalNamespace::AutoSetupController::dyn__randomSongIfNoneSuggestedToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__randomSongIfNoneSuggestedToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSongIfNoneSuggestedToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<AutoSetupData> didFinishEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::AutoSetupData*>*& GlobalNamespace::AutoSetupController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::AutoSetupData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
[[deprecated("Use field access instead!")]] ::HMUI::ButtonBinder*& GlobalNamespace::AutoSetupController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ToggleBinder _toggleBinder
[[deprecated("Use field access instead!")]] ::HMUI::ToggleBinder*& GlobalNamespace::AutoSetupController::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AutoSetupData _autoSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AutoSetupData*& GlobalNamespace::AutoSetupController::dyn__autoSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::dyn__autoSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_autoSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AutoSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AutoSetupController.add_didFinishEvent
void GlobalNamespace::AutoSetupController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.remove_didFinishEvent
void GlobalNamespace::AutoSetupController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::AutoSetupData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AutoSetupController.Setup
void GlobalNamespace::AutoSetupController::Setup(::GlobalNamespace::AutoSetupData* autoSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(autoSetupData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, autoSetupData);
}
// Autogenerated method: AutoSetupController.OnEnable
void GlobalNamespace::AutoSetupController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.OnDisable
void GlobalNamespace::AutoSetupController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_0
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_1
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_2
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_3
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: AutoSetupController.<OnEnable>b__12_4
void GlobalNamespace::AutoSetupController::$OnEnable$b__12_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupController::<OnEnable>b__12_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__12_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AutoSetupData
#include "GlobalNamespace/AutoSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean selectBasedOnSuggestions
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_selectBasedOnSuggestions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_selectBasedOnSuggestions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectBasedOnSuggestions"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean autoStartWhenAllReady
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_autoStartWhenAllReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_autoStartWhenAllReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStartWhenAllReady"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forceAutoStartAfterSongSelection
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_forceAutoStartAfterSongSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_forceAutoStartAfterSongSelection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceAutoStartAfterSongSelection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean randomSongIfNoneSuggested
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AutoSetupData::dyn_randomSongIfNoneSuggested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AutoSetupData::dyn_randomSongIfNoneSuggested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomSongIfNoneSuggested"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kGongTime
float GlobalNamespace::CountdownController::_get_kGongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::_get_kGongTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "CountdownController", "kGongTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kGongTime
void GlobalNamespace::CountdownController::_set_kGongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::_set_kGongTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CountdownController", "kGongTime", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::CountdownController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CountdownElementController[] _countdownElementControllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CountdownElementController*>& GlobalNamespace::CountdownController::dyn__countdownElementControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownElementControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownElementControllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CountdownElementController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ITimeProvider _timeProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ITimeProvider*& GlobalNamespace::CountdownController::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _countdownEndTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CountdownController::dyn__countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentRemainingSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CountdownController::dyn__currentRemainingSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__currentRemainingSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRemainingSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _gongSounded
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CountdownController::dyn__gongSounded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__gongSounded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gongSounded"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _countdownRunning
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CountdownController::dyn__countdownRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Queue`1<CountdownElementController> _countdownElementControllerQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::CountdownElementController*>*& GlobalNamespace::CountdownController::dyn__countdownElementControllerQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::dyn__countdownElementControllerQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_countdownElementControllerQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::CountdownElementController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CountdownController.Awake
void GlobalNamespace::CountdownController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.Update
void GlobalNamespace::CountdownController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CountdownController.StartCountdown
void GlobalNamespace::CountdownController::StartCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.UpdateCountdown
void GlobalNamespace::CountdownController::UpdateCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::UpdateCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CountdownController.StopCountdown
void GlobalNamespace::CountdownController::StopCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownController::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownElementController
#include "GlobalNamespace/CountdownElementController.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::CountdownElementController::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _animation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& GlobalNamespace::CountdownElementController::dyn__animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::dyn__animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CountdownElementController.SetTextAndRunAnimation
void GlobalNamespace::CountdownElementController::SetTextAndRunAnimation(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::SetTextAndRunAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextAndRunAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: CountdownElementController.StopAndHide
void GlobalNamespace::CountdownElementController::StopAndHide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CountdownElementController::StopAndHide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAndHide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterScreenLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelBasePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelBasePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelBasePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelCountdownPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelCountdownPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__nextLevelCountdownPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelCountdownPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterScreenLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::$Move$b__7_0(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterScreenLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterScreenSystem
#include "GlobalNamespace/MultiplayerLobbyCenterScreenSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterStageLayoutAnimator.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelBasePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelBasePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelBasePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelBasePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _nextLevelCountdownPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelCountdownPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__nextLevelCountdownPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextLevelCountdownPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__transitionDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__transitionDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
[[deprecated("Use field access instead!")]] ::Tweening::TimeTweeningManager*& GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StartCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StartCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.StopCountdown
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::StopCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.Move
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, from, to, duration);
}
// Autogenerated method: MultiplayerLobbyCenterStageLayoutAnimator.<Move>b__7_0
void GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::$Move$b__7_0(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageLayoutAnimator::<Move>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Move>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyCenterStageManager
#include "GlobalNamespace/MultiplayerLobbyCenterStageManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerObjectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerObjectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerObjectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerObjectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CenterStageScreenController _centerStageScreenController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CenterStageScreenController*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerStageScreenController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__centerStageScreenController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerStageScreenController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CenterStageScreenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.Init
void GlobalNamespace::MultiplayerLobbyCenterStageManager::Init(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.ActivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::ActivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateCenterStageManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.DeactivateCenterStageManager
void GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::DeactivateCenterStageManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateCenterStageManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyCenterStageManager.RecalculateCenterPosition
void GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyCenterStageManager::RecalculateCenterPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateCenterPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateServerFormController
#include "GlobalNamespace/CreateServerFormController.hpp"
// Including type: FormattedFloatListSettingsController
#include "GlobalNamespace/FormattedFloatListSettingsController.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMinPlayers
int GlobalNamespace::CreateServerFormController::_get_kMinPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_get_kMinPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMinPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMinPlayers
void GlobalNamespace::CreateServerFormController::_set_kMinPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_set_kMinPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMinPlayers", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPlayers
int GlobalNamespace::CreateServerFormController::_get_kMaxPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_get_kMaxPlayers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CreateServerFormController", "kMaxPlayers"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPlayers
void GlobalNamespace::CreateServerFormController::_set_kMaxPlayers(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::_set_kMaxPlayers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreateServerFormController", "kMaxPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private FormattedFloatListSettingsController _maxPlayersList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FormattedFloatListSettingsController*& GlobalNamespace::CreateServerFormController::dyn__maxPlayersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::dyn__maxPlayersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPlayersList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FormattedFloatListSettingsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _netDiscoverable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CreateServerFormController::dyn__netDiscoverable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::dyn__netDiscoverable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netDiscoverable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CreateServerFormController.get_formData
::GlobalNamespace::CreateServerFormData GlobalNamespace::CreateServerFormController::get_formData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::get_formData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_formData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::CreateServerFormData, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerFormController.Setup
void GlobalNamespace::CreateServerFormController::Setup(int selectedNumberOfPlayers, bool netDiscoverable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CreateServerFormController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedNumberOfPlayers), ::il2cpp_utils::ExtractType(netDiscoverable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selectedNumberOfPlayers, netDiscoverable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicsDropdown
#include "GlobalNamespace/BeatmapCharacteristicsDropdown.hpp"
// Including type: BeatmapCharacteristicsDropdown/<>c
#include "GlobalNamespace/BeatmapCharacteristicsDropdown_--c.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.SimpleTextDropdown _simpleTextDropdown
[[deprecated("Use field access instead!")]] ::HMUI::SimpleTextDropdown*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__simpleTextDropdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__simpleTextDropdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleTextDropdown"))->offset;
  return *reinterpret_cast<::HMUI::SimpleTextDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<BeatmapCharacteristicSO> didSelectCellWithIdxEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>*& GlobalNamespace::BeatmapCharacteristicsDropdown::dyn_didSelectCellWithIdxEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::dyn_didSelectCellWithIdxEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSelectCellWithIdxEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.add_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::add_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.remove_didSelectCellWithIdxEvent
void GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent(::System::Action_1<::GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::remove_didSelectCellWithIdxEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCellWithIdxEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.Start
void GlobalNamespace::BeatmapCharacteristicsDropdown::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.GetSelectedBeatmapCharacteristic
::GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::GetSelectedBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.SelectCellWithBeatmapCharacteristic
void GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::SelectCellWithBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicsDropdown.HandleSimpleTextDropdownDidSelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicsDropdown::HandleSimpleTextDropdownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSimpleTextDropdownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
