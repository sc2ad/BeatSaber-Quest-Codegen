// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.InvalidBindResponses
#include "Zenject/InvalidBindResponses.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.InvalidBindResponses Assert
::Zenject::InvalidBindResponses Zenject::InvalidBindResponses::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InvalidBindResponses::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::InvalidBindResponses>("Zenject", "InvalidBindResponses", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InvalidBindResponses Assert
void Zenject::InvalidBindResponses::_set_Assert(::Zenject::InvalidBindResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InvalidBindResponses::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InvalidBindResponses", "Assert", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.InvalidBindResponses Skip
::Zenject::InvalidBindResponses Zenject::InvalidBindResponses::_get_Skip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InvalidBindResponses::_get_Skip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::InvalidBindResponses>("Zenject", "InvalidBindResponses", "Skip"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.InvalidBindResponses Skip
void Zenject::InvalidBindResponses::_set_Skip(::Zenject::InvalidBindResponses value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InvalidBindResponses::_set_Skip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "InvalidBindResponses", "Skip", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Zenject::InvalidBindResponses::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InvalidBindResponses::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods None
::Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "None"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods None
void Zenject::BindingInheritanceMethods::_set_None(::Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods CopyIntoAll
::Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_CopyIntoAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_get_CopyIntoAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "CopyIntoAll"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods CopyIntoAll
void Zenject::BindingInheritanceMethods::_set_CopyIntoAll(::Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_set_CopyIntoAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "CopyIntoAll", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods CopyDirectOnly
::Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_CopyDirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_get_CopyDirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "CopyDirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods CopyDirectOnly
void Zenject::BindingInheritanceMethods::_set_CopyDirectOnly(::Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_set_CopyDirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "CopyDirectOnly", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods MoveIntoAll
::Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_MoveIntoAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_get_MoveIntoAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "MoveIntoAll"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods MoveIntoAll
void Zenject::BindingInheritanceMethods::_set_MoveIntoAll(::Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_set_MoveIntoAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "MoveIntoAll", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.BindingInheritanceMethods MoveDirectOnly
::Zenject::BindingInheritanceMethods Zenject::BindingInheritanceMethods::_get_MoveDirectOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_get_MoveDirectOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::BindingInheritanceMethods>("Zenject", "BindingInheritanceMethods", "MoveDirectOnly"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.BindingInheritanceMethods MoveDirectOnly
void Zenject::BindingInheritanceMethods::_set_MoveDirectOnly(::Zenject::BindingInheritanceMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::_set_MoveDirectOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "BindingInheritanceMethods", "MoveDirectOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Zenject::BindingInheritanceMethods::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingInheritanceMethods::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean MarkAsCreationBinding
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_MarkAsCreationBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_MarkAsCreationBinding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarkAsCreationBinding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean MarkAsUniqueSingleton
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_MarkAsUniqueSingleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_MarkAsUniqueSingleton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MarkAsUniqueSingleton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object ConcreteIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::BindInfo::dyn_ConcreteIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_ConcreteIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConcreteIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SaveProvider
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_SaveProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_SaveProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SaveProvider"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean OnlyBindIfNotBound
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_OnlyBindIfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_OnlyBindIfNotBound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnlyBindIfNotBound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RequireExplicitScope
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_RequireExplicitScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_RequireExplicitScope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RequireExplicitScope"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object Identifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::BindInfo::dyn_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_Identifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Identifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<System.Type> ContractTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::BindInfo::dyn_ContractTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_ContractTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContractTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.BindingInheritanceMethods BindingInheritanceMethod
[[deprecated("Use field access instead!")]] ::Zenject::BindingInheritanceMethods& Zenject::BindInfo::dyn_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_BindingInheritanceMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BindingInheritanceMethod"))->offset;
  return *reinterpret_cast<::Zenject::BindingInheritanceMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InvalidBindResponses InvalidBindResponse
[[deprecated("Use field access instead!")]] ::Zenject::InvalidBindResponses& Zenject::BindInfo::dyn_InvalidBindResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_InvalidBindResponse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InvalidBindResponse"))->offset;
  return *reinterpret_cast<::Zenject::InvalidBindResponses*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean NonLazy
[[deprecated("Use field access instead!")]] bool& Zenject::BindInfo::dyn_NonLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_NonLazy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NonLazy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.BindingCondition Condition
[[deprecated("Use field access instead!")]] ::Zenject::BindingCondition*& Zenject::BindInfo::dyn_Condition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_Condition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Condition"))->offset;
  return *reinterpret_cast<::Zenject::BindingCondition**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.ToChoices ToChoice
[[deprecated("Use field access instead!")]] ::Zenject::ToChoices& Zenject::BindInfo::dyn_ToChoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_ToChoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToChoice"))->offset;
  return *reinterpret_cast<::Zenject::ToChoices*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ContextInfo
[[deprecated("Use field access instead!")]] ::StringW& Zenject::BindInfo::dyn_ContextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_ContextInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContextInfo"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<System.Type> ToTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::BindInfo::dyn_ToTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_ToTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ToTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopeTypes Scope
[[deprecated("Use field access instead!")]] ::Zenject::ScopeTypes& Zenject::BindInfo::dyn_Scope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_Scope");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Scope"))->offset;
  return *reinterpret_cast<::Zenject::ScopeTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<Zenject.TypeValuePair> Arguments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*& Zenject::BindInfo::dyn_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_Arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Arguments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::TypeValuePair>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`2<Zenject.InjectContext,System.Object> InstantiatedCallback
[[deprecated("Use field access instead!")]] ::System::Action_2<::Zenject::InjectContext*, ::Il2CppObject*>*& Zenject::BindInfo::dyn_InstantiatedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::dyn_InstantiatedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstantiatedCallback"))->offset;
  return *reinterpret_cast<::System::Action_2<::Zenject::InjectContext*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.BindInfo.Dispose
void Zenject::BindInfo::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindInfo.SetContextInfo
void Zenject::BindInfo::SetContextInfo(::StringW contextInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::SetContextInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contextInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contextInfo);
}
// Autogenerated method: Zenject.BindInfo.Reset
void Zenject::BindInfo::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindInfo::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.IDisposable> _disposables
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::IDisposable*>*& Zenject::BindStatement::dyn__disposables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::dyn__disposables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposables"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::IDisposable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.IBindingFinalizer _bindingFinalizer
[[deprecated("Use field access instead!")]] ::Zenject::IBindingFinalizer*& Zenject::BindStatement::dyn__bindingFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::dyn__bindingFinalizer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindingFinalizer"))->offset;
  return *reinterpret_cast<::Zenject::IBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.BindStatement.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::BindStatement::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::get_BindingInheritanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.get_HasFinalizer
bool Zenject::BindStatement::get_HasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::get_HasFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.SetFinalizer
void Zenject::BindStatement::SetFinalizer(::Zenject::IBindingFinalizer* bindingFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::SetFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingFinalizer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bindingFinalizer);
}
// Autogenerated method: Zenject.BindStatement.AssertHasFinalizer
void Zenject::BindStatement::AssertHasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::AssertHasFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssertHasFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.AddDisposable
void Zenject::BindStatement::AddDisposable(::System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::AddDisposable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDisposable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.BindStatement.SpawnBindInfo
::Zenject::BindInfo* Zenject::BindStatement::SpawnBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::SpawnBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.FinalizeBinding
void Zenject::BindStatement::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::FinalizeBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.BindStatement.Reset
void Zenject::BindStatement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.Dispose
void Zenject::BindStatement::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindStatement::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryBindInfo
#include "Zenject/FactoryBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type <FactoryType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FactoryBindInfo::dyn_$FactoryType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::dyn_$FactoryType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FactoryType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<Zenject.DiContainer,Zenject.IProvider> <ProviderFunc>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>*& Zenject::FactoryBindInfo::dyn_$ProviderFunc$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::dyn_$ProviderFunc$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ProviderFunc>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.TypeValuePair> <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*& Zenject::FactoryBindInfo::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::TypeValuePair>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryBindInfo.get_FactoryType
::System::Type* Zenject::FactoryBindInfo::get_FactoryType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::get_FactoryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FactoryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_FactoryType
void Zenject::FactoryBindInfo::set_FactoryType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::set_FactoryType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FactoryType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryBindInfo.get_ProviderFunc
::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>* Zenject::FactoryBindInfo::get_ProviderFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::get_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_ProviderFunc
void Zenject::FactoryBindInfo::set_ProviderFunc(::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::set_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryBindInfo.get_Arguments
::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* Zenject::FactoryBindInfo::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Zenject::TypeValuePair>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryBindInfo.set_Arguments
void Zenject::FactoryBindInfo::set_Arguments(::System::Collections::Generic::List_1<::Zenject::TypeValuePair>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryBindInfo::set_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.GameObjectCreationParameters Default
::Zenject::GameObjectCreationParameters* Zenject::GameObjectCreationParameters::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::GameObjectCreationParameters*>("Zenject", "GameObjectCreationParameters", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.GameObjectCreationParameters Default
void Zenject::GameObjectCreationParameters::_set_Default(::Zenject::GameObjectCreationParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "GameObjectCreationParameters", "Default", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Zenject::GameObjectCreationParameters::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <GroupName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Zenject::GameObjectCreationParameters::dyn_$GroupName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$GroupName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GroupName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform <ParentTransform>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& Zenject::GameObjectCreationParameters::dyn_$ParentTransform$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$ParentTransform$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentTransform>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`2<Zenject.InjectContext,UnityEngine.Transform> <ParentTransformGetter>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>*& Zenject::GameObjectCreationParameters::dyn_$ParentTransformGetter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$ParentTransformGetter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParentTransformGetter>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Vector3> <Position>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Vector3>& Zenject::GameObjectCreationParameters::dyn_$Position$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$Position$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Position>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<UnityEngine.Quaternion> <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::Quaternion>& Zenject::GameObjectCreationParameters::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Name
::StringW Zenject::GameObjectCreationParameters::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Name
void Zenject::GameObjectCreationParameters::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_GroupName
::StringW Zenject::GameObjectCreationParameters::get_GroupName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_GroupName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_GroupName
void Zenject::GameObjectCreationParameters::set_GroupName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_GroupName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GroupName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_ParentTransform
::UnityEngine::Transform* Zenject::GameObjectCreationParameters::get_ParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_ParentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_ParentTransform
void Zenject::GameObjectCreationParameters::set_ParentTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_ParentTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_ParentTransformGetter
::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* Zenject::GameObjectCreationParameters::get_ParentTransformGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_ParentTransformGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentTransformGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_ParentTransformGetter
void Zenject::GameObjectCreationParameters::set_ParentTransformGetter(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_ParentTransformGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParentTransformGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Position
::System::Nullable_1<::UnityEngine::Vector3> Zenject::GameObjectCreationParameters::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Vector3>, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Position
void Zenject::GameObjectCreationParameters::set_Position(::System::Nullable_1<::UnityEngine::Vector3> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_Position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.get_Rotation
::System::Nullable_1<::UnityEngine::Quaternion> Zenject::GameObjectCreationParameters::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::Quaternion>, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.set_Rotation
void Zenject::GameObjectCreationParameters::set_Rotation(::System::Nullable_1<::UnityEngine::Quaternion> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.GameObjectCreationParameters..cctor
void Zenject::GameObjectCreationParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.Equals
bool Zenject::GameObjectCreationParameters::Equals(::Zenject::GameObjectCreationParameters* that) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(that)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, that);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.GetHashCode
int Zenject::GameObjectCreationParameters::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.Equals
bool Zenject::GameObjectCreationParameters::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.op_Equality
bool Zenject::operator ==(::Zenject::GameObjectCreationParameters* left, ::Zenject::GameObjectCreationParameters& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: Zenject.GameObjectCreationParameters.op_Inequality
bool Zenject::operator !=(::Zenject::GameObjectCreationParameters* left, ::Zenject::GameObjectCreationParameters& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::GameObjectCreationParameters::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "GameObjectCreationParameters", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolExpandMethods
#include "Zenject/PoolExpandMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods OneAtATime
::Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_OneAtATime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_get_OneAtATime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "OneAtATime"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods OneAtATime
void Zenject::PoolExpandMethods::_set_OneAtATime(::Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_set_OneAtATime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "OneAtATime", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods Double
::Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "Double"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods Double
void Zenject::PoolExpandMethods::_set_Double(::Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public Zenject.PoolExpandMethods Disabled
::Zenject::PoolExpandMethods Zenject::PoolExpandMethods::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Zenject::PoolExpandMethods>("Zenject", "PoolExpandMethods", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.PoolExpandMethods Disabled
void Zenject::PoolExpandMethods::_set_Disabled(::Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "PoolExpandMethods", "Disabled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Zenject::PoolExpandMethods::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PoolExpandMethods::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.MemoryPoolBindInfo
#include "Zenject/MemoryPoolBindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <ShowExpandWarning>k__BackingField
[[deprecated("Use field access instead!")]] bool& Zenject::MemoryPoolBindInfo::dyn_$ShowExpandWarning$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::dyn_$ShowExpandWarning$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ShowExpandWarning>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.PoolExpandMethods <ExpandMethod>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::PoolExpandMethods& Zenject::MemoryPoolBindInfo::dyn_$ExpandMethod$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::dyn_$ExpandMethod$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ExpandMethod>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::PoolExpandMethods*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <InitialSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Zenject::MemoryPoolBindInfo::dyn_$InitialSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::dyn_$InitialSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<InitialSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <MaxSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Zenject::MemoryPoolBindInfo::dyn_$MaxSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::dyn_$MaxSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_ShowExpandWarning
bool Zenject::MemoryPoolBindInfo::get_ShowExpandWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::get_ShowExpandWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShowExpandWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_ShowExpandWarning
void Zenject::MemoryPoolBindInfo::set_ShowExpandWarning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::set_ShowExpandWarning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShowExpandWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_ExpandMethod
::Zenject::PoolExpandMethods Zenject::MemoryPoolBindInfo::get_ExpandMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::get_ExpandMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpandMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::PoolExpandMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_ExpandMethod
void Zenject::MemoryPoolBindInfo::set_ExpandMethod(::Zenject::PoolExpandMethods value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::set_ExpandMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExpandMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_InitialSize
int Zenject::MemoryPoolBindInfo::get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::get_InitialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InitialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_InitialSize
void Zenject::MemoryPoolBindInfo::set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::set_InitialSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InitialSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.get_MaxSize
int Zenject::MemoryPoolBindInfo::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.MemoryPoolBindInfo.set_MaxSize
void Zenject::MemoryPoolBindInfo::set_MaxSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::MemoryPoolBindInfo::set_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ArgConditionCopyNonLazyBinder.WithArguments
::Zenject::InstantiateCallbackConditionCopyNonLazyBinder* Zenject::ArgConditionCopyNonLazyBinder::WithArguments(::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ArgConditionCopyNonLazyBinder::WithArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InstantiateCallbackConditionCopyNonLazyBinder*, false>(this, ___internal__method, args);
}
// Autogenerated method: Zenject.ArgConditionCopyNonLazyBinder.WithArgumentsExplicit
::Zenject::InstantiateCallbackConditionCopyNonLazyBinder* Zenject::ArgConditionCopyNonLazyBinder::WithArgumentsExplicit(::System::Collections::Generic::IEnumerable_1<::Zenject::TypeValuePair>* extraArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ArgConditionCopyNonLazyBinder::WithArgumentsExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithArgumentsExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(extraArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InstantiateCallbackConditionCopyNonLazyBinder*, false>(this, ___internal__method, extraArgs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConcreteBinderNonGeneric
#include "Zenject/ConcreteBinderNonGeneric.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.ToSelf
::Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::ToSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteBinderNonGeneric::ToSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::FromBinderNonGeneric*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
::Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(::ArrayW<::System::Type*> concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
::Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
::Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(::System::Action_1<::Zenject::ConventionSelectTypesBinder*>* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteBinderNonGeneric::To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(generator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, generator);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.<ToSelf>b__1_0
::Zenject::IProvider* Zenject::ConcreteBinderNonGeneric::$ToSelf$b__1_0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteBinderNonGeneric::<ToSelf>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToSelf>b__1_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteIdBinderNonGeneric
#include "Zenject/ConcreteIdBinderNonGeneric.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteIdBinderNonGeneric.WithId
::Zenject::ConcreteBinderNonGeneric* Zenject::ConcreteIdBinderNonGeneric::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteIdBinderNonGeneric::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteBinderNonGeneric*, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteIdArgConditionCopyNonLazyBinder.WithConcreteId
::Zenject::ArgConditionCopyNonLazyBinder* Zenject::ConcreteIdArgConditionCopyNonLazyBinder::WithConcreteId(::Il2CppObject* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConcreteIdArgConditionCopyNonLazyBinder::WithConcreteId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithConcreteId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, id);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder
#include "Zenject/ConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_0.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_1
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_1.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__4`1
#include "Zenject/ConditionCopyNonLazyBinder_--c__4_1.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__5`1
#include "Zenject/ConditionCopyNonLazyBinder_--c__5_1.hpp"
// Including type: Zenject.BindingCondition
#include "Zenject/BindingCondition.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.When
::Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::When(::Zenject::BindingCondition* condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::When");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "When", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, condition);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.WhenInjectedIntoInstance
::Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::WhenInjectedIntoInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::WhenInjectedIntoInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenInjectedIntoInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder.WhenInjectedInto
::Zenject::CopyNonLazyBinder* Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto(::ArrayW<::System::Type*> targets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::WhenInjectedInto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WhenInjectedInto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targets)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::CopyNonLazyBinder*, false>(this, ___internal__method, targets);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0.<WhenInjectedIntoInstance>b__0
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::$WhenInjectedIntoInstance$b__0(::Zenject::InjectContext* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::<WhenInjectedIntoInstance>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedIntoInstance>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0.__zenCreate
::Il2CppObject* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass2_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass2_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass2_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_0
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type[] targets
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::dyn_targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::dyn_targets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targets"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_0.<WhenInjectedInto>b__0
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::$WhenInjectedInto$b__0(::Zenject::InjectContext* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::<WhenInjectedInto>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedInto>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, r);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_0.__zenCreate
::Il2CppObject* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass3_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass3_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_1
#include "Zenject/ConditionCopyNonLazyBinder_--c__DisplayClass3_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext r
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_1.<WhenInjectedInto>b__1
bool Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::$WhenInjectedInto$b__1(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::<WhenInjectedInto>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WhenInjectedInto>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_1.__zenCreate
::Il2CppObject* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass3_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass3_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConditionCopyNonLazyBinder::$$c__DisplayClass3_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConditionCopyNonLazyBinder/<>c__DisplayClass3_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionAssemblySelectionBinder
#include "Zenject/ConventionAssemblySelectionBinder.hpp"
// Including type: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c
#include "Zenject/ConventionAssemblySelectionBinder_--c.hpp"
// Including type: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/ConventionAssemblySelectionBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.ConventionBindInfo <BindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::ConventionBindInfo*& Zenject::ConventionAssemblySelectionBinder::dyn_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::dyn_$BindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::ConventionBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.get_BindInfo
::Zenject::ConventionBindInfo* Zenject::ConventionAssemblySelectionBinder::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionBindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.set_BindInfo
void Zenject::ConventionAssemblySelectionBinder::set_BindInfo(::Zenject::ConventionBindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAllAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesContaining
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(::ArrayW<::System::Type*> types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesContaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, types);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesContaining
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssembliesContaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesContaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, types);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromThisAssembly
void Zenject::ConventionAssemblySelectionBinder::FromThisAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromThisAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromThisAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembly
void Zenject::ConventionAssemblySelectionBinder::FromAssembly(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAssemblies(::ArrayW<::System::Reflection::Assembly*> assemblies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assemblies);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssemblies
void Zenject::ConventionAssemblySelectionBinder::FromAssemblies(::System::Collections::Generic::IEnumerable_1<::System::Reflection::Assembly*>* assemblies) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblies)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, assemblies);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder.FromAssembliesWhere
void Zenject::ConventionAssemblySelectionBinder::FromAssembliesWhere(::System::Func_2<::System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::FromAssembliesWhere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromAssembliesWhere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c
#include "Zenject/ConventionAssemblySelectionBinder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ConventionAssemblySelectionBinder/Zenject.<>c <>9
::Zenject::ConventionAssemblySelectionBinder::$$c* Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::ConventionAssemblySelectionBinder::$$c*>("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ConventionAssemblySelectionBinder/Zenject.<>c <>9
void Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9(::Zenject::ConventionAssemblySelectionBinder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Reflection.Assembly> <>9__8_0
::System::Func_2<::System::Type*, ::System::Reflection::Assembly*>* Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::System::Reflection::Assembly*>*>("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Reflection.Assembly> <>9__8_0
void Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9__8_0(::System::Func_2<::System::Type*, ::System::Reflection::Assembly*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionAssemblySelectionBinder/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c..cctor
void Zenject::ConventionAssemblySelectionBinder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c.<FromAssembliesContaining>b__8_0
::System::Reflection::Assembly* Zenject::ConventionAssemblySelectionBinder::$$c::$FromAssembliesContaining$b__8_0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::<FromAssembliesContaining>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromAssembliesContaining>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::Assembly*, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::ConventionAssemblySelectionBinder::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionAssemblySelectionBinder::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/ConventionAssemblySelectionBinder_--c__DisplayClass12_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.Reflection.Assembly> assemblies
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::System::Reflection::Assembly*>*& Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::dyn_assemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::dyn_assemblies");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblies"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::System::Reflection::Assembly*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c__DisplayClass12_0.<FromAssemblies>b__0
bool Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::$FromAssemblies$b__0(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::<FromAssemblies>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromAssemblies>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c__DisplayClass12_0.__zenCreate
::Il2CppObject* Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c__DisplayClass12_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionAssemblySelectionBinder/Zenject.<>c__DisplayClass12_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionAssemblySelectionBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionAssemblySelectionBinder/<>c__DisplayClass12_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass6_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass7_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
::System::Collections::Generic::Dictionary_2<::System::Reflection::Assembly*, ::ArrayW<::System::Type*>>* Zenject::ConventionBindInfo::_get__assemblyTypeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::_get__assemblyTypeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Reflection::Assembly*, ::ArrayW<::System::Type*>>*>("Zenject", "ConventionBindInfo", "_assemblyTypeCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
void Zenject::ConventionBindInfo::_set__assemblyTypeCache(::System::Collections::Generic::Dictionary_2<::System::Reflection::Assembly*, ::ArrayW<::System::Type*>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::_set__assemblyTypeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ConventionBindInfo", "_assemblyTypeCache", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Func`2<System.Type,System.Boolean>> _typeFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Func_2<::System::Type*, bool>*>*& Zenject::ConventionBindInfo::dyn__typeFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::dyn__typeFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Func_2<::System::Type*, bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.Func`2<System.Reflection.Assembly,System.Boolean>> _assemblyFilters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Func_2<::System::Reflection::Assembly*, bool>*>*& Zenject::ConventionBindInfo::dyn__assemblyFilters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::dyn__assemblyFilters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_assemblyFilters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Func_2<::System::Reflection::Assembly*, bool>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionBindInfo..cctor
void Zenject::ConventionBindInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.AddAssemblyFilter
void Zenject::ConventionBindInfo::AddAssemblyFilter(::System::Func_2<::System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::AddAssemblyFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAssemblyFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.AddTypeFilter
void Zenject::ConventionBindInfo::AddTypeFilter(::System::Func_2<::System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::AddTypeFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTypeFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetAllAssemblies
::System::Collections::Generic::IEnumerable_1<::System::Reflection::Assembly*>* Zenject::ConventionBindInfo::GetAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::GetAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllAssemblies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Reflection::Assembly*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeAssembly
bool Zenject::ConventionBindInfo::ShouldIncludeAssembly(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::ShouldIncludeAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldIncludeAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeType
bool Zenject::ConventionBindInfo::ShouldIncludeType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::ShouldIncludeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldIncludeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetTypes
::ArrayW<::System::Type*> Zenject::ConventionBindInfo::GetTypes(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::GetTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ResolveTypes
::System::Collections::Generic::List_1<::System::Type*>* Zenject::ConventionBindInfo::ResolveTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::ResolveTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.<ResolveTypes>b__9_0
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::ConventionBindInfo::$ResolveTypes$b__9_0(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::<ResolveTypes>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveTypes>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method, assembly);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass6_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass6_0.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Reflection.Assembly assembly
[[deprecated("Use field access instead!")]] ::System::Reflection::Assembly*& Zenject::ConventionBindInfo::$$c__DisplayClass6_0::dyn_assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass6_0::dyn_assembly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assembly"))->offset;
  return *reinterpret_cast<::System::Reflection::Assembly**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass6_0.<ShouldIncludeAssembly>b__0
bool Zenject::ConventionBindInfo::$$c__DisplayClass6_0::$ShouldIncludeAssembly$b__0(::System::Func_2<::System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass6_0::<ShouldIncludeAssembly>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldIncludeAssembly>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::ConventionBindInfo::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionBindInfo::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass7_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass7_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type type
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionBindInfo::$$c__DisplayClass7_0::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass7_0::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass7_0.<ShouldIncludeType>b__0
bool Zenject::ConventionBindInfo::$$c__DisplayClass7_0::$ShouldIncludeType$b__0(::System::Func_2<::System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass7_0::<ShouldIncludeType>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldIncludeType>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass7_0.__zenCreate
::Il2CppObject* Zenject::ConventionBindInfo::$$c__DisplayClass7_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass7_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo/<>c__DisplayClass7_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionBindInfo/Zenject.<>c__DisplayClass7_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionBindInfo::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionBindInfo::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo/<>c__DisplayClass7_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionFilterTypesBinder
#include "Zenject/ConventionFilterTypesBinder.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass2_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass4_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass4_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass6_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass9_0`1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass9_0_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass14_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass14_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass18_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFromOrEqual
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFromOrEqual(::System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::DerivingFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DerivingFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFrom
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFrom(::System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::DerivingFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DerivingFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithAttribute
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithAttribute(::System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::WithAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithoutAttribute
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithoutAttribute(::System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::WithoutAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithoutAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.Where
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::Where(::System::Func_2<::System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::Where");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Where", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespace
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespace(::StringW ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::InNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, ns);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(::ArrayW<::StringW> namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::InNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaces)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(::System::Collections::Generic::IEnumerable_1<::StringW>* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::InNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaces)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithSuffix
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithSuffix(::StringW suffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::WithSuffix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(suffix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, suffix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithPrefix
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithPrefix(::StringW prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::WithPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefix)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::StringW pattern, ::System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern, options);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(regex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, regex);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.IsInNamespace
bool Zenject::ConventionFilterTypesBinder::IsInNamespace(::System::Type* type, ::StringW requiredNs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::IsInNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder", "IsInNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(requiredNs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, requiredNs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass2_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass2_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type parentType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::dyn_parentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::dyn_parentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass2_0.<DerivingFromOrEqual>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::$DerivingFromOrEqual$b__0(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::<DerivingFromOrEqual>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DerivingFromOrEqual>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass2_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass2_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass2_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass2_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass2_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass4_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass4_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type parentType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::dyn_parentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::dyn_parentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass4_0.<DerivingFrom>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::$DerivingFrom$b__0(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::<DerivingFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DerivingFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass4_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass4_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass4_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass4_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass6_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass6_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type attribute
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass6_0.<WithAttribute>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::$WithAttribute$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::<WithAttribute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithAttribute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass8_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type attribute
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass8_0.<WithoutAttribute>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::$WithoutAttribute$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::<WithoutAttribute>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithoutAttribute>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass8_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass8_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass8_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass8_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.IEnumerable`1<System.String> namespaces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerable_1<::StringW>*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::dyn_namespaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::dyn_namespaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "namespaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerable_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_0.<InNamespaces>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::$InNamespaces$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::<InNamespaces>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InNamespaces>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass13_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass13_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type t
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::dyn_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::dyn_t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "t"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_1.<InNamespaces>b__1
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::$InNamespaces$b__1(::StringW n) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::<InNamespaces>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InNamespaces>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, n);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_1.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass13_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass13_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass13_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass13_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass14_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass14_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String suffix
[[deprecated("Use field access instead!")]] ::StringW& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::dyn_suffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::dyn_suffix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "suffix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass14_0.<WithSuffix>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::$WithSuffix$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::<WithSuffix>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithSuffix>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass14_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass14_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass14_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass14_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass14_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass15_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String prefix
[[deprecated("Use field access instead!")]] ::StringW& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::dyn_prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::dyn_prefix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefix"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass15_0.<WithPrefix>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::$WithPrefix$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::<WithPrefix>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WithPrefix>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass15_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass15_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass15_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass15_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass18_0.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Text.RegularExpressions.Regex regex
[[deprecated("Use field access instead!")]] ::System::Text::RegularExpressions::Regex*& Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::dyn_regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::dyn_regex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "regex"))->offset;
  return *reinterpret_cast<::System::Text::RegularExpressions::Regex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass18_0.<MatchingRegex>b__0
bool Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::$MatchingRegex$b__0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::<MatchingRegex>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MatchingRegex>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass18_0.__zenCreate
::Il2CppObject* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass18_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder/Zenject.<>c__DisplayClass18_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionFilterTypesBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder/<>c__DisplayClass18_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.ConventionSelectTypesBinder/Zenject.<>c
#include "Zenject/ConventionSelectTypesBinder_--c.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: Zenject.ConventionFilterTypesBinder
#include "Zenject/ConventionFilterTypesBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.ConventionBindInfo _bindInfo
[[deprecated("Use field access instead!")]] ::Zenject::ConventionBindInfo*& Zenject::ConventionSelectTypesBinder::dyn__bindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::dyn__bindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindInfo"))->offset;
  return *reinterpret_cast<::Zenject::ConventionBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.CreateNextBinder
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::CreateNextBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::CreateNextBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNextBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllTypes
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::AllTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllClasses
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::AllClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllNonAbstractClasses
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllNonAbstractClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::AllNonAbstractClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllNonAbstractClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllAbstractClasses
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllAbstractClasses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::AllAbstractClasses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllAbstractClasses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder.AllInterfaces
::Zenject::ConventionFilterTypesBinder* Zenject::ConventionSelectTypesBinder::AllInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::AllInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AllInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionSelectTypesBinder/Zenject.<>c
#include "Zenject/ConventionSelectTypesBinder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ConventionSelectTypesBinder/Zenject.<>c <>9
::Zenject::ConventionSelectTypesBinder::$$c* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::ConventionSelectTypesBinder::$$c*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ConventionSelectTypesBinder/Zenject.<>c <>9
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9(::Zenject::ConventionSelectTypesBinder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__4_0
::System::Func_2<::System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__4_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__4_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__5_0
::System::Func_2<::System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__5_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__5_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__5_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__5_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__5_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__5_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__6_0
::System::Func_2<::System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__6_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__6_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.Boolean> <>9__7_0
::System::Func_2<::System::Type*, bool>* Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, bool>*>("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.Boolean> <>9__7_0
void Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__7_0(::System::Func_2<::System::Type*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ConventionSelectTypesBinder/<>c", "<>9__7_0", value)));
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c..cctor
void Zenject::ConventionSelectTypesBinder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionSelectTypesBinder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.<AllClasses>b__4_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllClasses$b__4_0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::<AllClasses>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllClasses>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.<AllNonAbstractClasses>b__5_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllNonAbstractClasses$b__5_0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::<AllNonAbstractClasses>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllNonAbstractClasses>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.<AllAbstractClasses>b__6_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllAbstractClasses$b__6_0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::<AllAbstractClasses>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllAbstractClasses>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.<AllInterfaces>b__7_0
bool Zenject::ConventionSelectTypesBinder::$$c::$AllInterfaces$b__7_0(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::<AllInterfaces>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AllInterfaces>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::ConventionSelectTypesBinder::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionSelectTypesBinder/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ConventionSelectTypesBinder/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ConventionSelectTypesBinder::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ConventionSelectTypesBinder::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ConventionSelectTypesBinder/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.CopyNonLazyBinder
#include "Zenject/CopyNonLazyBinder.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Zenject.BindInfo> _secondaryBindInfos
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Zenject::BindInfo*>*& Zenject::CopyNonLazyBinder::dyn__secondaryBindInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::dyn__secondaryBindInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secondaryBindInfos"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Zenject::BindInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.AddSecondaryCopyBindInfo
void Zenject::CopyNonLazyBinder::AddSecondaryCopyBindInfo(::Zenject::BindInfo* bindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::AddSecondaryCopyBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSecondaryCopyBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bindInfo);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.CopyIntoAllSubContainers
::Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::CopyIntoAllSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::CopyIntoAllSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIntoAllSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.CopyIntoDirectSubContainers
::Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::CopyIntoDirectSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::CopyIntoDirectSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyIntoDirectSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.MoveIntoAllSubContainers
::Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::MoveIntoAllSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::MoveIntoAllSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIntoAllSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.MoveIntoDirectSubContainers
::Zenject::NonLazyBinder* Zenject::CopyNonLazyBinder::MoveIntoDirectSubContainers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::MoveIntoDirectSubContainers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveIntoDirectSubContainers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.CopyNonLazyBinder.SetInheritanceMethod
void Zenject::CopyNonLazyBinder::SetInheritanceMethod(::Zenject::BindingInheritanceMethods method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::CopyNonLazyBinder::SetInheritanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.SubContainerCreatorBindInfo <SubContainerCreatorBindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$SubContainerCreatorBindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$SubContainerCreatorBindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SubContainerCreatorBindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.get_SubContainerCreatorBindInfo
::Zenject::SubContainerCreatorBindInfo* Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::get_SubContainerCreatorBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::get_SubContainerCreatorBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubContainerCreatorBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerCreatorBindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.set_SubContainerCreatorBindInfo
void Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::set_SubContainerCreatorBindInfo(::Zenject::SubContainerCreatorBindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::set_SubContainerCreatorBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubContainerCreatorBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.WithDefaultGameObjectParent
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithDefaultGameObjectParent(::StringW defaultParentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithDefaultGameObjectParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithDefaultGameObjectParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultParentName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, defaultParentName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder0Extensions
#include "Zenject/FactoryFromBinder0Extensions.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/Zenject.<>c__DisplayClass0_0`2
#include "Zenject/FactoryFromBinder0Extensions_--c__DisplayClass0_0_2.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/Zenject.<>c__1`1
#include "Zenject/FactoryFromBinder0Extensions_--c__1_1.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/Zenject.<>c__3`1
#include "Zenject/FactoryFromBinder0Extensions_--c__3_1.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/Zenject.<>c__5`2
#include "Zenject/FactoryFromBinder0Extensions_--c__5_2.hpp"
// Including type: Zenject.FactoryFromBinder0Extensions/Zenject.<>c__DisplayClass6_0`1
#include "Zenject/FactoryFromBinder0Extensions_--c__DisplayClass6_0_1.hpp"
// Including type: Zenject.IPoolable`1
#include "Zenject/IPoolable_1.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPool`2
#include "Zenject/MemoryPool_2.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`1
#include "Zenject/FactoryFromBinder_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`1
#include "Zenject/IFactory_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder1Extensions
#include "Zenject/FactoryFromBinder1Extensions.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/Zenject.<>c__DisplayClass0_0`2
#include "Zenject/FactoryFromBinder1Extensions_--c__DisplayClass0_0_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/Zenject.<>c__1`2
#include "Zenject/FactoryFromBinder1Extensions_--c__1_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/Zenject.<>c__3`2
#include "Zenject/FactoryFromBinder1Extensions_--c__3_2.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/Zenject.<>c__5`3
#include "Zenject/FactoryFromBinder1Extensions_--c__5_3.hpp"
// Including type: Zenject.FactoryFromBinder1Extensions/Zenject.<>c__DisplayClass6_0`3
#include "Zenject/FactoryFromBinder1Extensions_--c__DisplayClass6_0_3.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`2
#include "Zenject/FactoryFromBinder_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`2
#include "Zenject/IFactory_2.hpp"
// Including type: Zenject.IPoolable`2
#include "Zenject/IPoolable_2.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`3
#include "Zenject/MemoryPool_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder2Extensions
#include "Zenject/FactoryFromBinder2Extensions.hpp"
// Including type: Zenject.FactoryFromBinder2Extensions/Zenject.<>c__DisplayClass0_0`3
#include "Zenject/FactoryFromBinder2Extensions_--c__DisplayClass0_0_3.hpp"
// Including type: Zenject.FactoryFromBinder2Extensions/Zenject.<>c__1`3
#include "Zenject/FactoryFromBinder2Extensions_--c__1_3.hpp"
// Including type: Zenject.FactoryFromBinder2Extensions/Zenject.<>c__3`3
#include "Zenject/FactoryFromBinder2Extensions_--c__3_3.hpp"
// Including type: Zenject.FactoryFromBinder2Extensions/Zenject.<>c__5`4
#include "Zenject/FactoryFromBinder2Extensions_--c__5_4.hpp"
// Including type: Zenject.FactoryFromBinder2Extensions/Zenject.<>c__DisplayClass6_0`4
#include "Zenject/FactoryFromBinder2Extensions_--c__DisplayClass6_0_4.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`3
#include "Zenject/FactoryFromBinder_3.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`3
#include "Zenject/IFactory_3.hpp"
// Including type: Zenject.IPoolable`3
#include "Zenject/IPoolable_3.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`4
#include "Zenject/MemoryPool_4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder3Extensions
#include "Zenject/FactoryFromBinder3Extensions.hpp"
// Including type: Zenject.FactoryFromBinder3Extensions/Zenject.<>c__DisplayClass0_0`4
#include "Zenject/FactoryFromBinder3Extensions_--c__DisplayClass0_0_4.hpp"
// Including type: Zenject.FactoryFromBinder3Extensions/Zenject.<>c__1`4
#include "Zenject/FactoryFromBinder3Extensions_--c__1_4.hpp"
// Including type: Zenject.FactoryFromBinder3Extensions/Zenject.<>c__3`4
#include "Zenject/FactoryFromBinder3Extensions_--c__3_4.hpp"
// Including type: Zenject.FactoryFromBinder3Extensions/Zenject.<>c__5`5
#include "Zenject/FactoryFromBinder3Extensions_--c__5_5.hpp"
// Including type: Zenject.FactoryFromBinder3Extensions/Zenject.<>c__DisplayClass6_0`5
#include "Zenject/FactoryFromBinder3Extensions_--c__DisplayClass6_0_5.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`4
#include "Zenject/FactoryFromBinder_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`4
#include "Zenject/IFactory_4.hpp"
// Including type: Zenject.IPoolable`4
#include "Zenject/IPoolable_4.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`5
#include "Zenject/MemoryPool_5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder4Extensions
#include "Zenject/FactoryFromBinder4Extensions.hpp"
// Including type: Zenject.FactoryFromBinder4Extensions/Zenject.<>c__DisplayClass0_0`5
#include "Zenject/FactoryFromBinder4Extensions_--c__DisplayClass0_0_5.hpp"
// Including type: Zenject.FactoryFromBinder4Extensions/Zenject.<>c__1`5
#include "Zenject/FactoryFromBinder4Extensions_--c__1_5.hpp"
// Including type: Zenject.FactoryFromBinder4Extensions/Zenject.<>c__3`5
#include "Zenject/FactoryFromBinder4Extensions_--c__3_5.hpp"
// Including type: Zenject.FactoryFromBinder4Extensions/Zenject.<>c__5`6
#include "Zenject/FactoryFromBinder4Extensions_--c__5_6.hpp"
// Including type: Zenject.FactoryFromBinder4Extensions/Zenject.<>c__DisplayClass6_0`6
#include "Zenject/FactoryFromBinder4Extensions_--c__DisplayClass6_0_6.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`5
#include "Zenject/FactoryFromBinder_5.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`5
#include "Zenject/IFactory_5.hpp"
// Including type: Zenject.IPoolable`5
#include "Zenject/IPoolable_5.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`6
#include "Zenject/MemoryPool_6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder5Extensions
#include "Zenject/FactoryFromBinder5Extensions.hpp"
// Including type: Zenject.FactoryFromBinder5Extensions/Zenject.<>c__DisplayClass0_0`6
#include "Zenject/FactoryFromBinder5Extensions_--c__DisplayClass0_0_6.hpp"
// Including type: Zenject.FactoryFromBinder5Extensions/Zenject.<>c__1`6
#include "Zenject/FactoryFromBinder5Extensions_--c__1_6.hpp"
// Including type: Zenject.FactoryFromBinder5Extensions/Zenject.<>c__3`6
#include "Zenject/FactoryFromBinder5Extensions_--c__3_6.hpp"
// Including type: Zenject.FactoryFromBinder5Extensions/Zenject.<>c__5`7
#include "Zenject/FactoryFromBinder5Extensions_--c__5_7.hpp"
// Including type: Zenject.FactoryFromBinder5Extensions/Zenject.<>c__DisplayClass6_0`7
#include "Zenject/FactoryFromBinder5Extensions_--c__DisplayClass6_0_7.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`6
#include "Zenject/FactoryFromBinder_6.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`6
#include "Zenject/IFactory_6.hpp"
// Including type: Zenject.IPoolable`6
#include "Zenject/IPoolable_6.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`7
#include "Zenject/MemoryPool_7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinder6Extensions
#include "Zenject/FactoryFromBinder6Extensions.hpp"
// Including type: Zenject.FactoryFromBinder6Extensions/Zenject.<>c__DisplayClass0_0`7
#include "Zenject/FactoryFromBinder6Extensions_--c__DisplayClass0_0_7.hpp"
// Including type: Zenject.FactoryFromBinder6Extensions/Zenject.<>c__1`7
#include "Zenject/FactoryFromBinder6Extensions_--c__1_7.hpp"
// Including type: Zenject.FactoryFromBinder6Extensions/Zenject.<>c__3`7
#include "Zenject/FactoryFromBinder6Extensions_--c__3_7.hpp"
// Including type: Zenject.FactoryFromBinder6Extensions/Zenject.<>c__5`8
#include "Zenject/FactoryFromBinder6Extensions_--c__5_8.hpp"
// Including type: Zenject.FactoryFromBinder6Extensions/Zenject.<>c__DisplayClass6_0`8
#include "Zenject/FactoryFromBinder6Extensions_--c__DisplayClass6_0_8.hpp"
// Including type: Zenject.ArgConditionCopyNonLazyBinder
#include "Zenject/ArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`7
#include "Zenject/FactoryFromBinder_7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`7
#include "Zenject/IFactory_7.hpp"
// Including type: Zenject.IPoolable`7
#include "Zenject/IPoolable_7.hpp"
// Including type: Zenject.IMemoryPool
#include "Zenject/IMemoryPool.hpp"
// Including type: Zenject.MemoryPoolInitialSizeMaxSizeBinder`1
#include "Zenject/MemoryPoolInitialSizeMaxSizeBinder_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.MemoryPool`8
#include "Zenject/MemoryPool_8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.FactoryFromBinderUntyped
#include "Zenject/FactoryFromBinderUntyped.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.FactoryBindInfo
#include "Zenject/FactoryBindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase
#include "Zenject/FactoryFromBinderBase.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17
#include "Zenject/FactoryFromBinderBase_-get_AllParentTypes-d__17.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass20_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass20_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass21_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass21_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass23_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass23_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass24_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass24_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass26_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass26_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass27_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass27_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass28_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass28_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass29_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass29_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass30_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass30_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass31_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass31_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass32_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass32_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass33_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass33_0.hpp"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass34_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass34_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.FactoryBindInfo
#include "Zenject/FactoryBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer <BindContainer>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::FactoryFromBinderBase::dyn_$BindContainer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::dyn_$BindContainer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindContainer>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.FactoryBindInfo <FactoryBindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::FactoryBindInfo*& Zenject::FactoryFromBinderBase::dyn_$FactoryBindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::dyn_$FactoryBindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FactoryBindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::FactoryBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <ContractType>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FactoryFromBinderBase::dyn_$ContractType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::dyn_$ContractType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContractType>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.get_BindContainer
::Zenject::DiContainer* Zenject::FactoryFromBinderBase::get_BindContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::get_BindContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.set_BindContainer
void Zenject::FactoryFromBinderBase::set_BindContainer(::Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::set_BindContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.get_FactoryBindInfo
::Zenject::FactoryBindInfo* Zenject::FactoryFromBinderBase::get_FactoryBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::get_FactoryBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FactoryBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::FactoryBindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.set_FactoryBindInfo
void Zenject::FactoryFromBinderBase::set_FactoryBindInfo(::Zenject::FactoryBindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::set_FactoryBindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FactoryBindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.get_ProviderFunc
::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>* Zenject::FactoryFromBinderBase::get_ProviderFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::get_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.set_ProviderFunc
void Zenject::FactoryFromBinderBase::set_ProviderFunc(::System::Func_2<::Zenject::DiContainer*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::set_ProviderFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProviderFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.get_ContractType
::System::Type* Zenject::FactoryFromBinderBase::get_ContractType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::get_ContractType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContractType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.set_ContractType
void Zenject::FactoryFromBinderBase::set_ContractType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::set_ContractType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContractType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.get_AllParentTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::FactoryFromBinderBase::get_AllParentTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::get_AllParentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllParentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNew
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromResolve
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromInstance
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromResolve
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromResolve(::Il2CppObject* subIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromComponentOn
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromComponentOn(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromComponentOn
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromComponentOn(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* gameObjectGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectGetter);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromComponentOnRoot
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromComponentOnRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromComponentOnRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOnRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNewComponentOn
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNewComponentOn(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNewComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNewComponentOn
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNewComponentOn(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* gameObjectGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNewComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectGetter);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNewComponentOnNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNewComponentOnNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNewComponentOnNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromComponentInNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromComponentInNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromComponentInNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromComponentInNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromComponentInNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromComponentInNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNewComponentOnNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNewComponentOnNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNewComponentOnNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromNewScriptableObjectResource
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromNewScriptableObjectResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromNewScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromScriptableObjectResource
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromScriptableObjectResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.FromResource
::Zenject::ConditionCopyNonLazyBinder* Zenject::FactoryFromBinderBase::FromResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::FromResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.<.ctor>b__0_0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$_ctor$b__0_0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::<.ctor>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase.<FromComponentOnRoot>b__25_0
::UnityEngine::GameObject* Zenject::FactoryFromBinderBase::$FromComponentOnRoot$b__25_0(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::<FromComponentOnRoot>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOnRoot>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, ctx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17
#include "Zenject/FactoryFromBinderBase_-get_AllParentTypes-d__17.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type <>2__current
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1/System.Collections.Generic.Enumerator<System.Type> <>7__wrap1
[[deprecated("Use field access instead!")]] typename ::System::Collections::Generic::List_1<::System::Type*>::Enumerator& Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<typename ::System::Collections::Generic::List_1<::System::Type*>::Enumerator*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.Collections.Generic.IEnumerator<System.Type>.get_Current
::System::Type* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_Collections_Generic_IEnumerator$System_Type$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.Collections.Generic.IEnumerator<System.Type>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Type>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.IDisposable.Dispose
void Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.MoveNext
bool Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.<>m__Finally1
void Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.Collections.IEnumerator.Reset
void Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Type*>* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_Collections_Generic_IEnumerable$System_Type$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Type>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<get_AllParentTypes>d__17", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<get_AllParentTypes>d__17.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$get_AllParentTypes$d__17::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<get_AllParentTypes>d__17", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass20_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass20_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass20_0.<FromInstance>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::$FromInstance$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::<FromInstance>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromInstance>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass20_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass20_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass20_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass20_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass21_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass21_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::dyn_subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::dyn_subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass21_0.<FromResolve>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::$FromResolve$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::<FromResolve>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromResolve>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass21_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass21_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass21_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass21_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass21_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass23_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass23_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass23_0.<FromComponentOn>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::$FromComponentOn$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::<FromComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass23_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass23_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass23_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass23_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass23_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass24_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass24_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*& Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::dyn_gameObjectGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::dyn_gameObjectGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass24_0.<FromComponentOn>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::$FromComponentOn$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::<FromComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass24_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass24_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass24_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass24_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass26_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass26_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass26_0.<FromNewComponentOn>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::$FromNewComponentOn$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::<FromNewComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass26_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass26_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass26_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass26_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass26_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass27_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass27_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*& Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::dyn_gameObjectGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::dyn_gameObjectGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass27_0.<FromNewComponentOn>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::$FromNewComponentOn$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::<FromNewComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass27_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass27_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass27_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass27_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass27_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass28_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass28_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass28_0.<FromNewComponentOnNewPrefab>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::$FromNewComponentOnNewPrefab$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::<FromNewComponentOnNewPrefab>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOnNewPrefab>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass28_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass28_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass28_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass28_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass28_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass29_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass29_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass29_0.<FromComponentInNewPrefab>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::$FromComponentInNewPrefab$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::<FromComponentInNewPrefab>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInNewPrefab>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass29_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass29_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass29_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass29_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass29_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass30_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass30_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass30_0.<FromComponentInNewPrefabResource>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::$FromComponentInNewPrefabResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::<FromComponentInNewPrefabResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInNewPrefabResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass30_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass30_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass30_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass30_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass30_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass31_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass31_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass31_0.<FromNewComponentOnNewPrefabResource>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::$FromNewComponentOnNewPrefabResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::<FromNewComponentOnNewPrefabResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOnNewPrefabResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass31_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass31_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass31_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass31_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass31_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass32_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass32_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass32_0.<FromNewScriptableObjectResource>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::$FromNewScriptableObjectResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::<FromNewScriptableObjectResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewScriptableObjectResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass32_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass32_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass32_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass32_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass32_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass33_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass33_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass33_0.<FromScriptableObjectResource>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::$FromScriptableObjectResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::<FromScriptableObjectResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromScriptableObjectResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass33_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass33_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass33_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass33_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass33_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass34_0
#include "Zenject/FactoryFromBinderBase_--c__DisplayClass34_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FactoryFromBinderBase <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FactoryFromBinderBase*& Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FactoryFromBinderBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass34_0.<FromResource>b__0
::Zenject::IProvider* Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::$FromResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::<FromResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass34_0.__zenCreate
::Il2CppObject* Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass34_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FactoryFromBinderBase/Zenject.<>c__DisplayClass34_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FactoryFromBinderBase::$$c__DisplayClass34_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FactoryFromBinderBase/<>c__DisplayClass34_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder
#include "Zenject/FromBinder.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/FromBinder_--c__DisplayClass22_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass28_0`1
#include "Zenject/FromBinder_--c__DisplayClass28_0_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass29_0
#include "Zenject/FromBinder_--c__DisplayClass29_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass30_0
#include "Zenject/FromBinder_--c__DisplayClass30_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass31_0
#include "Zenject/FromBinder_--c__DisplayClass31_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass32_0
#include "Zenject/FromBinder_--c__DisplayClass32_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c
#include "Zenject/FromBinder_--c.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass35_0
#include "Zenject/FromBinder_--c__DisplayClass35_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass36_0
#include "Zenject/FromBinder_--c__DisplayClass36_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass53_0
#include "Zenject/FromBinder_--c__DisplayClass53_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass56_0
#include "Zenject/FromBinder_--c__DisplayClass56_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass57_0
#include "Zenject/FromBinder_--c__DisplayClass57_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass58_0
#include "Zenject/FromBinder_--c__DisplayClass58_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0
#include "Zenject/FromBinder_--c__DisplayClass59_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass59_1
#include "Zenject/FromBinder_--c__DisplayClass59_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0
#include "Zenject/FromBinder_--c__DisplayClass60_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_1
#include "Zenject/FromBinder_--c__DisplayClass60_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2
#include "Zenject/FromBinder_--c__DisplayClass60_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0
#include "Zenject/FromBinder_--c__DisplayClass61_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_1
#include "Zenject/FromBinder_--c__DisplayClass61_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2
#include "Zenject/FromBinder_--c__DisplayClass61_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0
#include "Zenject/FromBinder_--c__DisplayClass62_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_1
#include "Zenject/FromBinder_--c__DisplayClass62_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2
#include "Zenject/FromBinder_--c__DisplayClass62_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass63_0
#include "Zenject/FromBinder_--c__DisplayClass63_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass64_0
#include "Zenject/FromBinder_--c__DisplayClass64_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass64_1
#include "Zenject/FromBinder_--c__DisplayClass64_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0
#include "Zenject/FromBinder_--c__DisplayClass65_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1
#include "Zenject/FromBinder_--c__DisplayClass65_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_2
#include "Zenject/FromBinder_--c__DisplayClass65_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0
#include "Zenject/FromBinder_--c__DisplayClass66_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1
#include "Zenject/FromBinder_--c__DisplayClass66_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_2
#include "Zenject/FromBinder_--c__DisplayClass66_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass67_0
#include "Zenject/FromBinder_--c__DisplayClass67_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass68_0
#include "Zenject/FromBinder_--c__DisplayClass68_0.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass69_0`1
#include "Zenject/FromBinder_--c__DisplayClass69_0_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass70_0`1
#include "Zenject/FromBinder_--c__DisplayClass70_0_1.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass71_0`2
#include "Zenject/FromBinder_--c__DisplayClass71_0_2.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass72_0
#include "Zenject/FromBinder_--c__DisplayClass72_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.SubContainerBinder
#include "Zenject/SubContainerBinder.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: Zenject.IFactory`1
#include "Zenject/IFactory_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.DiContainer <BindContainer>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::FromBinder::dyn_$BindContainer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::dyn_$BindContainer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindContainer>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Zenject.BindStatement <BindStatement>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::BindStatement*& Zenject::FromBinder::dyn_$BindStatement$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::dyn_$BindStatement$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindStatement>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::BindStatement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder.get_BindContainer
::Zenject::DiContainer* Zenject::FromBinder::get_BindContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::get_BindContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.set_BindContainer
void Zenject::FromBinder::set_BindContainer(::Zenject::DiContainer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::set_BindContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FromBinder.get_BindStatement
::Zenject::BindStatement* Zenject::FromBinder::get_BindStatement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::get_BindStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindStatement*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.set_BindStatement
void Zenject::FromBinder::set_BindStatement(::Zenject::BindStatement* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::set_BindStatement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindStatement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FromBinder.set_SubFinalizer
void Zenject::FromBinder::set_SubFinalizer(::Zenject::IBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::set_SubFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.FromBinder.get_AllParentTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::FromBinder::get_AllParentTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::get_AllParentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllParentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.get_ConcreteTypes
::System::Collections::Generic::IEnumerable_1<::System::Type*>* Zenject::FromBinder::get_ConcreteTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::get_ConcreteTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConcreteTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromNew
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromResolve
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromResolve
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolve(::Il2CppObject* subIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier);
}
// Autogenerated method: Zenject.FromBinder.FromResolve
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolve(::Il2CppObject* subIdentifier, ::Zenject::InjectSources source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier, source);
}
// Autogenerated method: Zenject.FromBinder.FromResolveAll
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromResolveAll
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolveAll(::Il2CppObject* subIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier);
}
// Autogenerated method: Zenject.FromBinder.FromResolveAll
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolveAll(::Il2CppObject* subIdentifier, ::Zenject::InjectSources source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier, source);
}
// Autogenerated method: Zenject.FromBinder.FromResolveInternal
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResolveInternal(::Il2CppObject* subIdentifier, bool matchAll, ::Zenject::InjectSources source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResolveInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResolveInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier), ::il2cpp_utils::ExtractType(matchAll), ::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subIdentifier, matchAll, source);
}
// Autogenerated method: Zenject.FromBinder.FromSubContainerResolveAll
::Zenject::SubContainerBinder* Zenject::FromBinder::FromSubContainerResolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromSubContainerResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromSubContainerResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromSubContainerResolveAll
::Zenject::SubContainerBinder* Zenject::FromBinder::FromSubContainerResolveAll(::Il2CppObject* subIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromSubContainerResolveAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromSubContainerResolveAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerBinder*, false>(this, ___internal__method, subIdentifier);
}
// Autogenerated method: Zenject.FromBinder.FromSubContainerResolve
::Zenject::SubContainerBinder* Zenject::FromBinder::FromSubContainerResolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromSubContainerResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromSubContainerResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromSubContainerResolve
::Zenject::SubContainerBinder* Zenject::FromBinder::FromSubContainerResolve(::Il2CppObject* subIdentifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromSubContainerResolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromSubContainerResolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerBinder*, false>(this, ___internal__method, subIdentifier);
}
// Autogenerated method: Zenject.FromBinder.FromSubContainerResolveInternal
::Zenject::SubContainerBinder* Zenject::FromBinder::FromSubContainerResolveInternal(::Il2CppObject* subIdentifier, bool resolveAll) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromSubContainerResolveInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromSubContainerResolveInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subIdentifier), ::il2cpp_utils::ExtractType(resolveAll)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::SubContainerBinder*, false>(this, ___internal__method, subIdentifier, resolveAll);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsOn(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.FromBinder.FromComponentOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentOn(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsOn(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* gameObjectGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectGetter);
}
// Autogenerated method: Zenject.FromBinder.FromComponentOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentOn(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* gameObjectGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectGetter);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsOnRoot
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsOnRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsOnRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsOnRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromComponentOnRoot
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentOnRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentOnRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentOnRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOn(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOn
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOn(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* gameObjectGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectGetter);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentSibling
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOnRoot
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOnRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOnRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOnNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOnNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOnNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOnNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOnNewPrefabResource(::StringW resourcePath, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOnNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOnNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOnNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOnNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.FromBinder.FromNewComponentOnNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewComponentOnNewPrefab(::UnityEngine::Object* prefab, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewComponentOnNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewComponentOnNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInNewPrefab(::UnityEngine::Object* prefab, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInNewPrefab(::UnityEngine::Object* prefab, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInNewPrefabResource(::StringW resourcePath, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInNewPrefabResource(::StringW resourcePath, ::Zenject::GameObjectCreationParameters* gameObjectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(gameObjectInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, gameObjectInfo);
}
// Autogenerated method: Zenject.FromBinder.FromNewScriptableObject
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewScriptableObject(::UnityEngine::ScriptableObject* resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resource);
}
// Autogenerated method: Zenject.FromBinder.FromScriptableObject
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromScriptableObject(::UnityEngine::ScriptableObject* resource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resource);
}
// Autogenerated method: Zenject.FromBinder.FromScriptableObjectInternal
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromScriptableObjectInternal(::UnityEngine::ScriptableObject* resource, bool createNew) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromScriptableObjectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromScriptableObjectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resource), ::il2cpp_utils::ExtractType(createNew)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resource, createNew);
}
// Autogenerated method: Zenject.FromBinder.FromNewScriptableObjectResource
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromNewScriptableObjectResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromNewScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromNewScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromScriptableObjectResource
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromScriptableObjectResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromScriptableObjectResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromScriptableObjectResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromScriptableObjectResourceInternal
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromScriptableObjectResourceInternal(::StringW resourcePath, bool createNew) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromScriptableObjectResourceInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromScriptableObjectResourceInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(createNew)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, createNew);
}
// Autogenerated method: Zenject.FromBinder.FromResource
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromResources
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromResources(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInChildren
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInChildren(bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInChildrenBase
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInChildrenBase(bool excludeSelf, ::System::Func_2<::UnityEngine::Component*, bool>* predicate, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInChildrenBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInChildrenBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(excludeSelf), ::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, excludeSelf, predicate, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInParents
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInParents(bool excludeSelf, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInParents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInParents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(excludeSelf), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, excludeSelf, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInParents
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInParents(bool excludeSelf, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInParents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInParents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(excludeSelf), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, excludeSelf, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromComponentSibling
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsSibling
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsSibling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsSibling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsSibling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.FromBinder.FromComponentInHierarchy
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentInHierarchy(bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromComponentsInHierarchyBase
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromComponentsInHierarchyBase(::System::Func_2<::UnityEngine::Component*, bool>* predicate, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromComponentsInHierarchyBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInHierarchyBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, predicate, includeInactive);
}
// Autogenerated method: Zenject.FromBinder.FromMethodUntyped
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromMethodUntyped(::System::Func_2<::Zenject::InjectContext*, ::Il2CppObject*>* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromMethodUntyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromMethodUntyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, method);
}
// Autogenerated method: Zenject.FromBinder.FromMethodMultipleUntyped
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromMethodMultipleUntyped(::System::Func_2<::Zenject::InjectContext*, ::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromMethodMultipleUntyped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromMethodMultipleUntyped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, method);
}
// Autogenerated method: Zenject.FromBinder.FromInstanceBase
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinder::FromInstanceBase(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::FromInstanceBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromInstanceBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.FromBinder.<FromNewComponentSibling>b__37_0
::Zenject::IProvider* Zenject::FromBinder::$FromNewComponentSibling$b__37_0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::<FromNewComponentSibling>b__37_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentSibling>b__37_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/FromBinder_--c__DisplayClass22_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::FromBinder::$$c__DisplayClass22_0::dyn_subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::dyn_subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectSources source
[[deprecated("Use field access instead!")]] ::Zenject::InjectSources& Zenject::FromBinder::$$c__DisplayClass22_0::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::Zenject::InjectSources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean matchAll
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass22_0::dyn_matchAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::dyn_matchAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "matchAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass22_0.<FromResolveInternal>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass22_0::$FromResolveInternal$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::<FromResolveInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromResolveInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass22_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass22_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass22_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass22_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass22_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass29_0
#include "Zenject/FromBinder_--c__DisplayClass29_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Zenject::FromBinder::$$c__DisplayClass29_0::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass29_0::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass29_0.<FromComponentsOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass29_0::$FromComponentsOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass29_0::<FromComponentsOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass29_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass29_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass29_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass29_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass29_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass29_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass29_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass29_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass30_0
#include "Zenject/FromBinder_--c__DisplayClass30_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Zenject::FromBinder::$$c__DisplayClass30_0::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass30_0::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass30_0.<FromComponentOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass30_0::$FromComponentOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass30_0::<FromComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass30_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass30_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass30_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass30_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass30_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass30_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass30_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass30_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass31_0
#include "Zenject/FromBinder_--c__DisplayClass31_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*& Zenject::FromBinder::$$c__DisplayClass31_0::dyn_gameObjectGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass31_0::dyn_gameObjectGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass31_0.<FromComponentsOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass31_0::$FromComponentsOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass31_0::<FromComponentsOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass31_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass31_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass31_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass31_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass31_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass31_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass31_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass31_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass32_0
#include "Zenject/FromBinder_--c__DisplayClass32_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*& Zenject::FromBinder::$$c__DisplayClass32_0::dyn_gameObjectGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass32_0::dyn_gameObjectGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass32_0.<FromComponentOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass32_0::$FromComponentOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass32_0::<FromComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass32_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass32_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass32_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass32_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass32_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass32_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass32_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass32_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c
#include "Zenject/FromBinder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.FromBinder/Zenject.<>c <>9
::Zenject::FromBinder::$$c* Zenject::FromBinder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::FromBinder::$$c*>("Zenject", "FromBinder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.FromBinder/Zenject.<>c <>9
void Zenject::FromBinder::$$c::_set_$$9(::Zenject::FromBinder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__33_0
::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* Zenject::FromBinder::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*>("Zenject", "FromBinder/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__33_0
void Zenject::FromBinder::$$c::_set_$$9__33_0(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__33_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__34_0
::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* Zenject::FromBinder::$$c::_get_$$9__34_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__34_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*>("Zenject", "FromBinder/<>c", "<>9__34_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__34_0
void Zenject::FromBinder::$$c::_set_$$9__34_0(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__34_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__34_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__38_0
::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* Zenject::FromBinder::$$c::_get_$$9__38_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__38_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*>("Zenject", "FromBinder/<>c", "<>9__38_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> <>9__38_0
void Zenject::FromBinder::$$c::_set_$$9__38_0(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__38_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__38_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__40_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__40_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__40_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__40_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__40_0
void Zenject::FromBinder::$$c::_set_$$9__40_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__40_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__40_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__42_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__42_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__42_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__42_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__42_0
void Zenject::FromBinder::$$c::_set_$$9__42_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__42_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__42_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__44_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__44_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__44_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__44_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__44_0
void Zenject::FromBinder::$$c::_set_$$9__44_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__44_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__44_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__46_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__46_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__46_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__46_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__46_0
void Zenject::FromBinder::$$c::_set_$$9__46_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__46_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__46_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__48_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__48_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__48_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__48_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__48_0
void Zenject::FromBinder::$$c::_set_$$9__48_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__48_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__48_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__50_0
::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__50_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__50_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__50_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> <>9__50_0
void Zenject::FromBinder::$$c::_set_$$9__50_0(::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__50_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__50_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> <>9__63_0
::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__63_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__63_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__63_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> <>9__63_0
void Zenject::FromBinder::$$c::_set_$$9__63_0(::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__63_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__63_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> <>9__64_0
::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* Zenject::FromBinder::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*>("Zenject", "FromBinder/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> <>9__64_0
void Zenject::FromBinder::$$c::_set_$$9__64_0(::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "FromBinder/<>c", "<>9__64_0", value)));
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c..cctor
void Zenject::FromBinder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentsOnRoot>b__33_0
::UnityEngine::GameObject* Zenject::FromBinder::$$c::$FromComponentsOnRoot$b__33_0(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentsOnRoot>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsOnRoot>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentOnRoot>b__34_0
::UnityEngine::GameObject* Zenject::FromBinder::$$c::$FromComponentOnRoot$b__34_0(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentOnRoot>b__34_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentOnRoot>b__34_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromNewComponentOnRoot>b__38_0
::UnityEngine::GameObject* Zenject::FromBinder::$$c::$FromNewComponentOnRoot$b__38_0(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromNewComponentOnRoot>b__38_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOnRoot>b__38_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromNewComponentOnNewPrefabResource>b__40_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromNewComponentOnNewPrefabResource$b__40_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromNewComponentOnNewPrefabResource>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOnNewPrefabResource>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromNewComponentOnNewPrefab>b__42_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromNewComponentOnNewPrefab$b__42_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromNewComponentOnNewPrefab>b__42_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOnNewPrefab>b__42_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentInNewPrefab>b__44_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentInNewPrefab$b__44_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentInNewPrefab>b__44_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInNewPrefab>b__44_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentsInNewPrefab>b__46_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentsInNewPrefab$b__46_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentsInNewPrefab>b__46_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInNewPrefab>b__46_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentInNewPrefabResource>b__48_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentInNewPrefabResource$b__48_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentInNewPrefabResource>b__48_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInNewPrefabResource>b__48_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentsInNewPrefabResource>b__50_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentsInNewPrefabResource$b__50_0(::System::Type* contractType, ::Zenject::IPrefabInstantiator* instantiator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentsInNewPrefabResource>b__50_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInNewPrefabResource>b__50_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(instantiator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, contractType, instantiator);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentSibling>b__63_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentSibling$b__63_0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentSibling>b__63_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentSibling>b__63_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.<FromComponentsSibling>b__64_0
::Zenject::IProvider* Zenject::FromBinder::$$c::$FromComponentsSibling$b__64_0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::<FromComponentsSibling>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsSibling>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass35_0
#include "Zenject/FromBinder_--c__DisplayClass35_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject gameObject
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Zenject::FromBinder::$$c__DisplayClass35_0::dyn_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass35_0::dyn_gameObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder*& Zenject::FromBinder::$$c__DisplayClass35_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass35_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass35_0.<FromNewComponentOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass35_0::$FromNewComponentOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass35_0::<FromNewComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass35_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass35_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass35_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass35_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass35_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass35_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass35_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass35_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass36_0
#include "Zenject/FromBinder_--c__DisplayClass36_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,UnityEngine.GameObject> gameObjectGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>*& Zenject::FromBinder::$$c__DisplayClass36_0::dyn_gameObjectGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass36_0::dyn_gameObjectGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder*& Zenject::FromBinder::$$c__DisplayClass36_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass36_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass36_0.<FromNewComponentOn>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass36_0::$FromNewComponentOn$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass36_0::<FromNewComponentOn>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromNewComponentOn>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass36_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass36_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass36_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass36_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass36_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass36_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass36_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass36_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass53_0
#include "Zenject/FromBinder_--c__DisplayClass53_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ScriptableObject resource
[[deprecated("Use field access instead!")]] ::UnityEngine::ScriptableObject*& Zenject::FromBinder::$$c__DisplayClass53_0::dyn_resource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::dyn_resource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resource"))->offset;
  return *reinterpret_cast<::UnityEngine::ScriptableObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder*& Zenject::FromBinder::$$c__DisplayClass53_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean createNew
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass53_0::dyn_createNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::dyn_createNew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createNew"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass53_0.<FromScriptableObjectInternal>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass53_0::$FromScriptableObjectInternal$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::<FromScriptableObjectInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromScriptableObjectInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass53_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass53_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass53_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass53_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass53_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass53_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass53_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass56_0
#include "Zenject/FromBinder_--c__DisplayClass56_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FromBinder::$$c__DisplayClass56_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder*& Zenject::FromBinder::$$c__DisplayClass56_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean createNew
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass56_0::dyn_createNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::dyn_createNew");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "createNew"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass56_0.<FromScriptableObjectResourceInternal>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass56_0::$FromScriptableObjectResourceInternal$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::<FromScriptableObjectResourceInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromScriptableObjectResourceInternal>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass56_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass56_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass56_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass56_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass56_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass56_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass56_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass57_0
#include "Zenject/FromBinder_--c__DisplayClass57_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FromBinder::$$c__DisplayClass57_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass57_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass57_0.<FromResource>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass57_0::$FromResource$b__0(::Zenject::DiContainer* _, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass57_0::<FromResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass57_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass57_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass57_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass57_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass57_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass57_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass57_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass57_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass58_0
#include "Zenject/FromBinder_--c__DisplayClass58_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::FromBinder::$$c__DisplayClass58_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass58_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass58_0.<FromResources>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass58_0::$FromResources$b__0(::Zenject::DiContainer* _, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass58_0::<FromResources>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromResources>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass58_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass58_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass58_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass58_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass58_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass58_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass58_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass58_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0
#include "Zenject/FromBinder_--c__DisplayClass59_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass59_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0.<FromComponentInChildren>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass59_0::$FromComponentInChildren$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_0::<FromComponentInChildren>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInChildren>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass59_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass59_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass59_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass59_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass59_1
#include "Zenject/FromBinder_--c__DisplayClass59_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass59_0
#include "Zenject/FromBinder_--c__DisplayClass59_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass59_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass59_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass59_0*& Zenject::FromBinder::$$c__DisplayClass59_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass59_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_1.<FromComponentInChildren>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass59_1::$FromComponentInChildren$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_1::<FromComponentInChildren>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInChildren>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass59_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass59_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass59_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass59_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass59_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass59_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0
#include "Zenject/FromBinder_--c__DisplayClass60_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass60_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean excludeSelf
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass60_0::dyn_excludeSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::dyn_excludeSelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludeSelf"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<UnityEngine.Component,System.Boolean> predicate
[[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::Component*, bool>*& Zenject::FromBinder::$$c__DisplayClass60_0::dyn_predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::dyn_predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predicate"))->offset;
  return *reinterpret_cast<::System::Func_2<::UnityEngine::Component*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0.<FromComponentsInChildrenBase>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass60_0::$FromComponentsInChildrenBase$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::<FromComponentsInChildrenBase>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInChildrenBase>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass60_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass60_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_1
#include "Zenject/FromBinder_--c__DisplayClass60_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_0
#include "Zenject/FromBinder_--c__DisplayClass60_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass60_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass60_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass60_0*& Zenject::FromBinder::$$c__DisplayClass60_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass60_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_1.<FromComponentsInChildrenBase>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass60_1::$FromComponentsInChildrenBase$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_1::<FromComponentsInChildrenBase>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInChildrenBase>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass60_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass60_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2
#include "Zenject/FromBinder_--c__DisplayClass60_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext ctx
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::FromBinder::$$c__DisplayClass60_2::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MonoBehaviour monoBehaviour
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& Zenject::FromBinder::$$c__DisplayClass60_2::dyn_monoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::dyn_monoBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoBehaviour"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2.<FromComponentsInChildrenBase>b__2
bool Zenject::FromBinder::$$c__DisplayClass60_2::$FromComponentsInChildrenBase$b__2(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::<FromComponentsInChildrenBase>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInChildrenBase>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2.<FromComponentsInChildrenBase>b__3
bool Zenject::FromBinder::$$c__DisplayClass60_2::$FromComponentsInChildrenBase$b__3(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::<FromComponentsInChildrenBase>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInChildrenBase>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass60_2::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_2", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass60_2.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass60_2::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass60_2::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass60_2", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0
#include "Zenject/FromBinder_--c__DisplayClass61_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass61_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean excludeSelf
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass61_0::dyn_excludeSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_0::dyn_excludeSelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludeSelf"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0.<FromComponentInParents>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass61_0::$FromComponentInParents$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_0::<FromComponentInParents>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInParents>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass61_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass61_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_1
#include "Zenject/FromBinder_--c__DisplayClass61_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_0
#include "Zenject/FromBinder_--c__DisplayClass61_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass61_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass61_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass61_0*& Zenject::FromBinder::$$c__DisplayClass61_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass61_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_1.<FromComponentInParents>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass61_1::$FromComponentInParents$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_1::<FromComponentInParents>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInParents>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass61_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass61_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2
#include "Zenject/FromBinder_--c__DisplayClass61_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext ctx
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::FromBinder::$$c__DisplayClass61_2::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MonoBehaviour monoBehaviour
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& Zenject::FromBinder::$$c__DisplayClass61_2::dyn_monoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::dyn_monoBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoBehaviour"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2.<FromComponentInParents>b__2
bool Zenject::FromBinder::$$c__DisplayClass61_2::$FromComponentInParents$b__2(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::<FromComponentInParents>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInParents>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2.<FromComponentInParents>b__3
bool Zenject::FromBinder::$$c__DisplayClass61_2::$FromComponentInParents$b__3(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::<FromComponentInParents>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInParents>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass61_2::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_2", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass61_2.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass61_2::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass61_2::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass61_2", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0
#include "Zenject/FromBinder_--c__DisplayClass62_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass62_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean excludeSelf
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass62_0::dyn_excludeSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_0::dyn_excludeSelf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludeSelf"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0.<FromComponentsInParents>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass62_0::$FromComponentsInParents$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_0::<FromComponentsInParents>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInParents>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass62_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass62_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_1
#include "Zenject/FromBinder_--c__DisplayClass62_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_0
#include "Zenject/FromBinder_--c__DisplayClass62_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass62_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass62_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass62_0*& Zenject::FromBinder::$$c__DisplayClass62_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass62_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_1.<FromComponentsInParents>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass62_1::$FromComponentsInParents$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_1::<FromComponentsInParents>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInParents>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass62_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass62_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2
#include "Zenject/FromBinder_--c__DisplayClass62_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext ctx
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::FromBinder::$$c__DisplayClass62_2::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MonoBehaviour monoBehaviour
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& Zenject::FromBinder::$$c__DisplayClass62_2::dyn_monoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::dyn_monoBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoBehaviour"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2.<FromComponentsInParents>b__2
bool Zenject::FromBinder::$$c__DisplayClass62_2::$FromComponentsInParents$b__2(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::<FromComponentsInParents>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInParents>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2.<FromComponentsInParents>b__3
bool Zenject::FromBinder::$$c__DisplayClass62_2::$FromComponentsInParents$b__3(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::<FromComponentsInParents>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInParents>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass62_2::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_2", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass62_2.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass62_2::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass62_2::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass62_2", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass63_0
#include "Zenject/FromBinder_--c__DisplayClass63_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass63_0::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass63_0::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass63_0.<FromComponentSibling>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass63_0::$FromComponentSibling$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass63_0::<FromComponentSibling>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentSibling>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass63_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass63_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass63_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass63_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass63_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass63_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass63_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass63_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass64_0
#include "Zenject/FromBinder_--c__DisplayClass64_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass64_0::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_0::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_0.<FromComponentsSibling>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass64_0::$FromComponentsSibling$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_0::<FromComponentsSibling>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsSibling>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass64_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass64_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass64_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass64_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass64_1
#include "Zenject/FromBinder_--c__DisplayClass64_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MonoBehaviour monoBehaviour
[[deprecated("Use field access instead!")]] ::UnityEngine::MonoBehaviour*& Zenject::FromBinder::$$c__DisplayClass64_1::dyn_monoBehaviour() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_1::dyn_monoBehaviour");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monoBehaviour"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_1.<FromComponentsSibling>b__2
bool Zenject::FromBinder::$$c__DisplayClass64_1::$FromComponentsSibling$b__2(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_1::<FromComponentsSibling>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsSibling>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass64_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass64_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass64_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass64_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass64_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass64_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0
#include "Zenject/FromBinder_--c__DisplayClass65_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass65_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0.<FromComponentInHierarchy>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass65_0::$FromComponentInHierarchy$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_0::<FromComponentInHierarchy>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInHierarchy>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass65_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass65_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1
#include "Zenject/FromBinder_--c__DisplayClass65_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_0
#include "Zenject/FromBinder_--c__DisplayClass65_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::FromBinder::$$c__DisplayClass65_1::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass65_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass65_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass65_0*& Zenject::FromBinder::$$c__DisplayClass65_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass65_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<UnityEngine.GameObject,UnityEngine.Component> <>9__2
[[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::GameObject*, ::UnityEngine::Component*>*& Zenject::FromBinder::$$c__DisplayClass65_1::dyn_$$9__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::dyn_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  return *reinterpret_cast<::System::Func_2<::UnityEngine::GameObject*, ::UnityEngine::Component*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1.<FromComponentInHierarchy>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass65_1::$FromComponentInHierarchy$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::<FromComponentInHierarchy>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInHierarchy>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1.<FromComponentInHierarchy>b__2
::UnityEngine::Component* Zenject::FromBinder::$$c__DisplayClass65_1::$FromComponentInHierarchy$b__2(::UnityEngine::GameObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::<FromComponentInHierarchy>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInHierarchy>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass65_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass65_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass65_2
#include "Zenject/FromBinder_--c__DisplayClass65_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext ctx
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::FromBinder::$$c__DisplayClass65_2::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_2::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_2.<FromComponentInHierarchy>b__3
bool Zenject::FromBinder::$$c__DisplayClass65_2::$FromComponentInHierarchy$b__3(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_2::<FromComponentInHierarchy>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentInHierarchy>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_2.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass65_2::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_2::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_2", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass65_2.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass65_2::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass65_2::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass65_2", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0
#include "Zenject/FromBinder_--c__DisplayClass66_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean includeInactive
[[deprecated("Use field access instead!")]] bool& Zenject::FromBinder::$$c__DisplayClass66_0::dyn_includeInactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_0::dyn_includeInactive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includeInactive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<UnityEngine.Component,System.Boolean> predicate
[[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::Component*, bool>*& Zenject::FromBinder::$$c__DisplayClass66_0::dyn_predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_0::dyn_predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "predicate"))->offset;
  return *reinterpret_cast<::System::Func_2<::UnityEngine::Component*, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0.<FromComponentsInHierarchyBase>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass66_0::$FromComponentsInHierarchyBase$b__0(::Zenject::DiContainer* container, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_0::<FromComponentsInHierarchyBase>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInHierarchyBase>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, concreteType);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass66_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass66_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1
#include "Zenject/FromBinder_--c__DisplayClass66_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_0
#include "Zenject/FromBinder_--c__DisplayClass66_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::FromBinder::$$c__DisplayClass66_1::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type concreteType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::FromBinder::$$c__DisplayClass66_1::dyn_concreteType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::dyn_concreteType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.FromBinder/Zenject.<>c__DisplayClass66_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::FromBinder::$$c__DisplayClass66_0*& Zenject::FromBinder::$$c__DisplayClass66_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::FromBinder::$$c__DisplayClass66_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`2<UnityEngine.GameObject,System.Collections.Generic.IEnumerable`1<UnityEngine.Component>> <>9__2
[[deprecated("Use field access instead!")]] ::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Component*>*>*& Zenject::FromBinder::$$c__DisplayClass66_1::dyn_$$9__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::dyn_$$9__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__2"))->offset;
  return *reinterpret_cast<::System::Func_2<::UnityEngine::GameObject*, ::System::Collections::Generic::IEnumerable_1<::UnityEngine::Component*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1.<FromComponentsInHierarchyBase>b__1
::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* Zenject::FromBinder::$$c__DisplayClass66_1::$FromComponentsInHierarchyBase$b__1(::Zenject::InjectContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::<FromComponentsInHierarchyBase>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInHierarchyBase>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1.<FromComponentsInHierarchyBase>b__2
::System::Collections::Generic::IEnumerable_1<::UnityEngine::Component*>* Zenject::FromBinder::$$c__DisplayClass66_1::$FromComponentsInHierarchyBase$b__2(::UnityEngine::GameObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::<FromComponentsInHierarchyBase>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInHierarchyBase>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::UnityEngine::Component*>*, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass66_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass66_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass66_2
#include "Zenject/FromBinder_--c__DisplayClass66_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.InjectContext ctx
[[deprecated("Use field access instead!")]] ::Zenject::InjectContext*& Zenject::FromBinder::$$c__DisplayClass66_2::dyn_ctx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_2::dyn_ctx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx"))->offset;
  return *reinterpret_cast<::Zenject::InjectContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_2.<FromComponentsInHierarchyBase>b__3
bool Zenject::FromBinder::$$c__DisplayClass66_2::$FromComponentsInHierarchyBase$b__3(::UnityEngine::Component* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_2::<FromComponentsInHierarchyBase>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromComponentsInHierarchyBase>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_2.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass66_2::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_2::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_2", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass66_2.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass66_2::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass66_2::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass66_2", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass67_0
#include "Zenject/FromBinder_--c__DisplayClass67_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,System.Object> method
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::Il2CppObject*>*& Zenject::FromBinder::$$c__DisplayClass67_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass67_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass67_0.<FromMethodUntyped>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass67_0::$FromMethodUntyped$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass67_0::<FromMethodUntyped>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromMethodUntyped>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass67_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass67_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass67_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass67_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass67_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass67_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass67_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass67_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass68_0
#include "Zenject/FromBinder_--c__DisplayClass68_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,System.Collections.Generic.IEnumerable`1<System.Object>> method
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>*& Zenject::FromBinder::$$c__DisplayClass68_0::dyn_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass68_0::dyn_method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "method"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::System::Collections::Generic::IEnumerable_1<::Il2CppObject*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass68_0.<FromMethodMultipleUntyped>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass68_0::$FromMethodMultipleUntyped$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass68_0::<FromMethodMultipleUntyped>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromMethodMultipleUntyped>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass68_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass68_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass68_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass68_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass68_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass68_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass68_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass68_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinder/Zenject.<>c__DisplayClass72_0
#include "Zenject/FromBinder_--c__DisplayClass72_0.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object instance
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::FromBinder::$$c__DisplayClass72_0::dyn_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass72_0::dyn_instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instance"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass72_0.<FromInstanceBase>b__0
::Zenject::IProvider* Zenject::FromBinder::$$c__DisplayClass72_0::$FromInstanceBase$b__0(::Zenject::DiContainer* container, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass72_0::<FromInstanceBase>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FromInstanceBase>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass72_0.__zenCreate
::Il2CppObject* Zenject::FromBinder::$$c__DisplayClass72_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass72_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass72_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.FromBinder/Zenject.<>c__DisplayClass72_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::FromBinder::$$c__DisplayClass72_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinder::$$c__DisplayClass72_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "FromBinder/<>c__DisplayClass72_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.FromBinderNonGeneric
#include "Zenject/FromBinderNonGeneric.hpp"
// Including type: Zenject.FromBinderNonGeneric/Zenject.<>c__1`2
#include "Zenject/FromBinderNonGeneric_--c__1_2.hpp"
// Including type: Zenject.IFactory`1
#include "Zenject/IFactory_1.hpp"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConcreteBinderGeneric`1
#include "Zenject/ConcreteBinderGeneric_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.FromBinderNonGeneric.FromInstance
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinderNonGeneric::FromInstance(::Il2CppObject* instance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinderNonGeneric::FromInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, instance);
}
// Autogenerated method: Zenject.FromBinderNonGeneric.FromComponentsInChildren
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinderNonGeneric::FromComponentsInChildren(::System::Func_2<::UnityEngine::Component*, bool>* predicate, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinderNonGeneric::FromComponentsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, predicate, includeInactive);
}
// Autogenerated method: Zenject.FromBinderNonGeneric.FromComponentsInChildren
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinderNonGeneric::FromComponentsInChildren(bool excludeSelf, ::System::Func_2<::UnityEngine::Component*, bool>* predicate, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinderNonGeneric::FromComponentsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(excludeSelf), ::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, excludeSelf, predicate, includeInactive);
}
// Autogenerated method: Zenject.FromBinderNonGeneric.FromComponentsInHierarchy
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::FromBinderNonGeneric::FromComponentsInHierarchy(::System::Func_2<::UnityEngine::Component*, bool>* predicate, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::FromBinderNonGeneric::FromComponentsInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromComponentsInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(predicate), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, predicate, includeInactive);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectMoqExtensions
#include "Zenject/ZenjectMoqExtensions.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FromBinderGeneric`1
#include "Zenject/FromBinderGeneric_1.hpp"
// Including type: Zenject.ConditionCopyNonLazyBinder
#include "Zenject/ConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.FactoryFromBinder`1
#include "Zenject/FactoryFromBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.WithGameObjectName
::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder::WithGameObjectName(::StringW gameObjectName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder::WithGameObjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithGameObjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObjectName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, gameObjectName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/TransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.GameObjectCreationParameters <GameObjectInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$GameObjectInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::dyn_$GameObjectInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<GameObjectInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.get_GameObjectInfo
::Zenject::GameObjectCreationParameters* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::get_GameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::get_GameObjectInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GameObjectInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::GameObjectCreationParameters*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.set_GameObjectInfo
void Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::set_GameObjectInfo(::Zenject::GameObjectCreationParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::set_GameObjectInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GameObjectInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransform
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform(::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, parent);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransform
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform(::System::Func_2<::Zenject::InjectContext*, ::UnityEngine::Transform*>* parentGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, parentGetter);
}
// Autogenerated method: Zenject.TransformScopeConcreteIdArgConditionCopyNonLazyBinder.UnderTransformGroup
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransformGroup(::StringW transformGroupname) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::TransformScopeConcreteIdArgConditionCopyNonLazyBinder::UnderTransformGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnderTransformGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformGroupname)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, transformGroupname);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IdBinder
#include "Zenject/IdBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo _bindInfo
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::IdBinder::dyn__bindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdBinder::dyn__bindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindInfo"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.IdBinder.WithId
void Zenject::IdBinder::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdBinder::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/IdScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IdScopeConcreteIdArgConditionCopyNonLazyBinder.WithId
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::IdScopeConcreteIdArgConditionCopyNonLazyBinder::WithId(::Il2CppObject* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IdScopeConcreteIdArgConditionCopyNonLazyBinder::WithId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, identifier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IfNotBoundBinder
#include "Zenject/IfNotBoundBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo <BindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::IfNotBoundBinder::dyn_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::dyn_$BindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.IfNotBoundBinder.get_BindInfo
::Zenject::BindInfo* Zenject::IfNotBoundBinder::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IfNotBoundBinder.set_BindInfo
void Zenject::IfNotBoundBinder::set_BindInfo(::Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.IfNotBoundBinder.IfNotBound
void Zenject::IfNotBoundBinder::IfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IfNotBoundBinder::IfNotBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IfNotBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InstantiateCallbackConditionCopyNonLazyBinder
#include "Zenject/InstantiateCallbackConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.InstantiateCallbackConditionCopyNonLazyBinder/Zenject.<>c__DisplayClass2_0`1
#include "Zenject/InstantiateCallbackConditionCopyNonLazyBinder_--c__DisplayClass2_0_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InstantiateCallbackConditionCopyNonLazyBinder.OnInstantiated
::Zenject::ConditionCopyNonLazyBinder* Zenject::InstantiateCallbackConditionCopyNonLazyBinder::OnInstantiated(::System::Action_2<::Zenject::InjectContext*, ::Il2CppObject*>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::InstantiateCallbackConditionCopyNonLazyBinder::OnInstantiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnInstantiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConditionCopyNonLazyBinder*, false>(this, ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NonLazyBinder
#include "Zenject/NonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NonLazyBinder.NonLazy
::Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::NonLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NonLazyBinder::NonLazy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NonLazy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NonLazyBinder.Lazy
::Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::Lazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NonLazyBinder::Lazy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Lazy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsCached
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsSingle
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder.AsTransient
::Zenject::ConcreteIdArgConditionCopyNonLazyBinder* Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsTransient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder::AsTransient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsTransient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder
#include "Zenject/SubContainerBinder.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0
#include "Zenject/SubContainerBinder_--c__DisplayClass7_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/SubContainerBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0
#include "Zenject/SubContainerBinder_--c__DisplayClass10_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0
#include "Zenject/SubContainerBinder_--c__DisplayClass11_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/SubContainerBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/SubContainerBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/SubContainerBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0
#include "Zenject/SubContainerBinder_--c__DisplayClass17_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/SubContainerBinder_--c__DisplayClass18_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0
#include "Zenject/SubContainerBinder_--c__DisplayClass20_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/SubContainerBinder_--c__DisplayClass22_0.hpp"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0
#include "Zenject/SubContainerBinder_--c__DisplayClass24_0.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.BindInfo _bindInfo
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::SubContainerBinder::dyn__bindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__bindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindInfo"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.BindStatement _bindStatement
[[deprecated("Use field access instead!")]] ::Zenject::BindStatement*& Zenject::SubContainerBinder::dyn__bindStatement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__bindStatement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bindStatement"))->offset;
  return *reinterpret_cast<::Zenject::BindStatement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _subIdentifier
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Zenject::SubContainerBinder::dyn__subIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__subIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subIdentifier"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _resolveAll
[[deprecated("Use field access instead!")]] bool& Zenject::SubContainerBinder::dyn__resolveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::dyn__resolveAll");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resolveAll"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder.set_SubFinalizer
void Zenject::SubContainerBinder::set_SubFinalizer(::Zenject::IBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::set_SubFinalizer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubFinalizer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstance
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstance(::Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainer);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstanceGetter
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstanceGetter(::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>* subContainerGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstanceGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstanceGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subContainerGetter)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainerGetter);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstaller
::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstaller(::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByMethod
::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByMethod(::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectMethod(::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewGameObjectMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewGameObjectMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabMethod(::UnityEngine::Object* prefab, ::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectInstaller(::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewGameObjectInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewGameObjectInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabInstaller(::UnityEngine::Object* prefab, ::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab), ::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceMethod
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceMethod(::StringW resourcePath, ::System::Action_1<::Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResourceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(installerMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceInstaller
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceInstaller(::StringW resourcePath, ::System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResourceInstaller");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceInstaller", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath), ::il2cpp_utils::ExtractType(installerType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefab
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewContextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewContextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefabResource
::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefabResource(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::ByNewContextPrefabResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ByNewContextPrefabResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0
#include "Zenject/SubContainerBinder_--c__DisplayClass7_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer subContainer
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::SubContainerBinder::$$c__DisplayClass7_0::dyn_subContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::dyn_subContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainer"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.<ByInstance>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass7_0::$ByInstance$b__0(::Zenject::DiContainer* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::<ByInstance>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstance>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, _);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass7_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass7_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass7_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass7_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0
#include "Zenject/SubContainerBinder_--c__DisplayClass8_0.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Func`2<Zenject.InjectContext,Zenject.DiContainer> subContainerGetter
[[deprecated("Use field access instead!")]] ::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass8_0::dyn_subContainerGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::dyn_subContainerGetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerGetter"))->offset;
  return *reinterpret_cast<::System::Func_2<::Zenject::InjectContext*, ::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.<ByInstanceGetter>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass8_0::$ByInstanceGetter$b__0(::Zenject::DiContainer* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::<ByInstanceGetter>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstanceGetter>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, _);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass8_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass8_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass8_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass8_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0
#include "Zenject/SubContainerBinder_--c__DisplayClass10_0.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorBindInfo subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.<ByInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass10_0::$ByInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::<ByInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass10_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass10_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass10_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass10_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0
#include "Zenject/SubContainerBinder_--c__DisplayClass11_0.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerCreatorBindInfo subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.<ByMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass11_0::$ByMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::<ByMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass11_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass11_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass11_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass11_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0
#include "Zenject/SubContainerBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.<ByNewGameObjectMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass12_0::$ByNewGameObjectMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::<ByNewGameObjectMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewGameObjectMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass12_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass12_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass12_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass12_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0
#include "Zenject/SubContainerBinder_--c__DisplayClass13_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.<ByNewPrefabMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass13_0::$ByNewPrefabMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::<ByNewPrefabMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass13_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass13_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass13_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass13_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0
#include "Zenject/SubContainerBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.<ByNewGameObjectInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass15_0::$ByNewGameObjectInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::<ByNewGameObjectInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewGameObjectInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass15_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass15_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass15_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass15_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0
#include "Zenject/SubContainerBinder_--c__DisplayClass17_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.<ByNewPrefabInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass17_0::$ByNewPrefabInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::<ByNewPrefabInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass17_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass17_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass17_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass17_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0
#include "Zenject/SubContainerBinder_--c__DisplayClass18_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<Zenject.DiContainer> installerMethod
[[deprecated("Use field access instead!")]] ::System::Action_1<::Zenject::DiContainer*>*& Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_installerMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::dyn_installerMethod");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerMethod"))->offset;
  return *reinterpret_cast<::System::Action_1<::Zenject::DiContainer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.<ByNewPrefabResourceMethod>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass18_0::$ByNewPrefabResourceMethod$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::<ByNewPrefabResourceMethod>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabResourceMethod>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass18_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass18_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass18_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass18_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0
#include "Zenject/SubContainerBinder_--c__DisplayClass20_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type installerType
[[deprecated("Use field access instead!")]] ::System::Type*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_installerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_installerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "installerType"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.SubContainerBinder <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerBinder*& Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.<ByNewPrefabResourceInstaller>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass20_0::$ByNewPrefabResourceInstaller$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::<ByNewPrefabResourceInstaller>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewPrefabResourceInstaller>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass20_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass20_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass20_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass20_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0
#include "Zenject/SubContainerBinder_--c__DisplayClass22_0.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Object prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.<ByNewContextPrefab>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass22_0::$ByNewContextPrefab$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::<ByNewContextPrefab>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewContextPrefab>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass22_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass22_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass22_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass22_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0
#include "Zenject/SubContainerBinder_--c__DisplayClass24_0.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: Zenject.ISubContainerCreator
#include "Zenject/ISubContainerCreator.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.GameObjectCreationParameters gameObjectInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_gameObjectInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::dyn_gameObjectInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameObjectInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.<ByNewContextPrefabResource>b__0
::Zenject::ISubContainerCreator* Zenject::SubContainerBinder::$$c__DisplayClass24_0::$ByNewContextPrefabResource$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::<ByNewContextPrefabResource>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ByNewContextPrefabResource>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ISubContainerCreator*, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.__zenCreate
::Il2CppObject* Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass24_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.SubContainerBinder/Zenject.<>c__DisplayClass24_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SubContainerBinder::$$c__DisplayClass24_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "SubContainerBinder/<>c__DisplayClass24_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.WithKernel
::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::DefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.SubContainerCreatorBindInfo
#include "Zenject/SubContainerCreatorBindInfo.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.Kernel
#include "Zenject/Kernel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.SubContainerCreatorBindInfo _subContainerBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::SubContainerCreatorBindInfo*& Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::dyn__subContainerBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::dyn__subContainerBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subContainerBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::SubContainerCreatorBindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder.WithKernel
::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::WithKernelScopeConcreteIdArgConditionCopyNonLazyBinder::WithKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WithKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingUtil
#include "Zenject/BindingUtil.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InvalidBindResponses
#include "Zenject/InvalidBindResponses.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingUtil.AssertIsValidPrefab
void Zenject::BindingUtil::AssertIsValidPrefab(::UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefab)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, prefab);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidGameObject
void Zenject::BindingUtil::AssertIsValidGameObject(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertDerivesFromUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertDerivesFromUnityObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotComponents
void Zenject::BindingUtil::AssertTypesAreNotComponents(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertTypesAreNotComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertTypesAreNotComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidResourcePath
void Zenject::BindingUtil::AssertIsValidResourcePath(::StringW resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsValidResourcePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsValidResourcePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourcePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsInterfaceOrComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotAbstract
void Zenject::BindingUtil::AssertTypesAreNotAbstract(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertTypesAreNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertTypesAreNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(::System::Collections::Generic::IEnumerable_1<::System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(types)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, types);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsNotAbstract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromType
void Zenject::BindingUtil::AssertIsDerivedFromType(::System::Type* concreteType, ::System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(parentType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteType, parentType);
}
// Autogenerated method: Zenject.BindingUtil.AssertConcreteTypeListIsNotEmpty
void Zenject::BindingUtil::AssertConcreteTypeListIsNotEmpty(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertConcreteTypeListIsNotEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertConcreteTypeListIsNotEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes, ::Zenject::InvalidBindResponses invalidBindResponse) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(parentTypes), ::il2cpp_utils::ExtractType(invalidBindResponse)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes, parentTypes, invalidBindResponse);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Collections::Generic::IEnumerable_1<::System::Type*>* concreteTypes, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteTypes, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(::System::Type* concreteType, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertIsDerivedFromTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, concreteType, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::Il2CppObject* instance, ::System::Collections::Generic::IEnumerable_1<::System::Type*>* parentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(parentTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, parentTypes);
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::Il2CppObject* instance, ::System::Type* baseType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(baseType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, baseType);
}
// Autogenerated method: Zenject.BindingUtil.CreateCachedProvider
::Zenject::IProvider* Zenject::BindingUtil::CreateCachedProvider(::Zenject::IProvider* creator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::BindingUtil::CreateCachedProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "BindingUtil", "CreateCachedProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creator)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creator);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::IBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IBindingFinalizer.FinalizeBinding
void Zenject::IBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::IBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NullBindingFinalizer
#include "Zenject/NullBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NullBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::NullBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NullBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NullBindingFinalizer.FinalizeBinding
void Zenject::NullBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::NullBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabBindingFinalizer
#include "Zenject/PrefabBindingFinalizer.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.GameObjectCreationParameters _gameObjectBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::PrefabBindingFinalizer::dyn__gameObjectBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__gameObjectBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Object _prefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Zenject::PrefabBindingFinalizer::dyn__prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__prefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*& Zenject::PrefabBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.FinalizeBindingConcrete
void Zenject::PrefabBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.FinalizeBindingSelf
void Zenject::PrefabBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer.OnFinalizeBinding
void Zenject::PrefabBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Type> concreteTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0*& Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PrefabResourceBindingFinalizer
#include "Zenject/PrefabResourceBindingFinalizer.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.GameObjectCreationParameters
#include "Zenject/GameObjectCreationParameters.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IPrefabInstantiator
#include "Zenject/IPrefabInstantiator.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.GameObjectCreationParameters _gameObjectBindInfo
[[deprecated("Use field access instead!")]] ::Zenject::GameObjectCreationParameters*& Zenject::PrefabResourceBindingFinalizer::dyn__gameObjectBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__gameObjectBindInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjectBindInfo"))->offset;
  return *reinterpret_cast<::Zenject::GameObjectCreationParameters**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _resourcePath
[[deprecated("Use field access instead!")]] ::StringW& Zenject::PrefabResourceBindingFinalizer::dyn__resourcePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__resourcePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resourcePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<System.Type,Zenject.IPrefabInstantiator,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>*& Zenject::PrefabResourceBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::System::Type*, ::Zenject::IPrefabInstantiator*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.FinalizeBindingConcrete
void Zenject::PrefabResourceBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.FinalizeBindingSelf
void Zenject::PrefabResourceBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer.OnFinalizeBinding
void Zenject::PrefabResourceBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.Type> concreteTypes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Type*>*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::dyn_concreteTypes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concreteTypes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Type*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.<FinalizeBindingConcrete>b__1
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::$FinalizeBindingConcrete$b__1(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::<FinalizeBindingConcrete>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass5_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass5_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass5_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_1.hpp"
// Including type: Zenject.PrefabInstantiatorCached
#include "Zenject/PrefabInstantiatorCached.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
// Including type: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0
#include "Zenject/PrefabResourceBindingFinalizer_--c__DisplayClass6_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabInstantiatorCached prefabCreator
[[deprecated("Use field access instead!")]] ::Zenject::PrefabInstantiatorCached*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_prefabCreator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prefabCreator"))->offset;
  return *reinterpret_cast<::Zenject::PrefabInstantiatorCached**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_0 CS$<>8__locals1
[[deprecated("Use field access instead!")]] ::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0*& Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::dyn_CS$$$8__locals1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CS$<>8__locals1"))->offset;
  return *reinterpret_cast<::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.<FinalizeBindingSelf>b__1
::Zenject::IProvider* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::$FinalizeBindingSelf$b__1(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::<FinalizeBindingSelf>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreate
::Il2CppObject* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_1", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.PrefabResourceBindingFinalizer/Zenject.<>c__DisplayClass6_1.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::PrefabResourceBindingFinalizer::$$c__DisplayClass6_1::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "PrefabResourceBindingFinalizer/<>c__DisplayClass6_1", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ProviderBindingFinalizer
#include "Zenject/ProviderBindingFinalizer.hpp"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.ScopeTypes
#include "Zenject/ScopeTypes.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Zenject.BindInfo <BindInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::Zenject::BindInfo*& Zenject::ProviderBindingFinalizer::dyn_$BindInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::dyn_$BindInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::Zenject::BindInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindingInheritanceMethod
::Zenject::BindingInheritanceMethods Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::get_BindingInheritanceMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.get_BindInfo
::Zenject::BindInfo* Zenject::ProviderBindingFinalizer::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.set_BindInfo
void Zenject::ProviderBindingFinalizer::set_BindInfo(::Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BindInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.GetScope
::Zenject::ScopeTypes Zenject::ProviderBindingFinalizer::GetScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::GetScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::ScopeTypes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.FinalizeBinding
void Zenject::ProviderBindingFinalizer::FinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::FinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.OnFinalizeBinding
void Zenject::ProviderBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvider
void Zenject::ProviderBindingFinalizer::RegisterProvider(::Zenject::DiContainer* container, ::System::Type* contractType, ::Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(contractType), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, contractType, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderPerContract
void Zenject::ProviderBindingFinalizer::RegisterProviderPerContract(::Zenject::DiContainer* container, ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProviderPerContract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderPerContract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProviderForAllContracts
void Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts(::Zenject::DiContainer* container, ::Zenject::IProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProviderForAllContracts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProviderForAllContracts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(provider)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, provider);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersPerContractAndConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes, ::System::Func_3<::System::Type*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvidersPerContractAndConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersPerContractAndConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.ValidateBindTypes
bool Zenject::ProviderBindingFinalizer::ValidateBindTypes(::System::Type* concreteType, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::ValidateBindTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateBindTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(concreteType), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, concreteType, contractType);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer.RegisterProvidersForAllContractsPerConcreteType
void Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes, ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>* providerFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::RegisterProvidersForAllContractsPerConcreteType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterProvidersForAllContractsPerConcreteType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes), ::il2cpp_utils::ExtractType(providerFunc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes, providerFunc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ProviderBindingFinalizer/Zenject.<>c
#include "Zenject/ProviderBindingFinalizer_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
::Zenject::ProviderBindingFinalizer::$$c* Zenject::ProviderBindingFinalizer::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Zenject::ProviderBindingFinalizer::$$c*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.ProviderBindingFinalizer/Zenject.<>c <>9
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9(::Zenject::ProviderBindingFinalizer::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__7_0
::System::Func_2<::System::Type*, ::StringW>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9__7_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::StringW>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__7_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0(::System::Func_2<::System::Type*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9__7_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__7_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Type,System.String> <>9__8_0
::System::Func_2<::System::Type*, ::StringW>* Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_get_$$9__8_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Type*, ::StringW>*>("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Type,System.String> <>9__8_0
void Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0(::System::Func_2<::System::Type*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::_set_$$9__8_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Zenject", "ProviderBindingFinalizer/<>c", "<>9__8_0", value)));
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c..cctor
void Zenject::ProviderBindingFinalizer::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<GetScope>b__7_0
::StringW Zenject::ProviderBindingFinalizer::$$c::$GetScope$b__7_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::<GetScope>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetScope>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.<FinalizeBinding>b__8_0
::StringW Zenject::ProviderBindingFinalizer::$$c::$FinalizeBinding$b__8_0(::System::Type* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::<FinalizeBinding>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBinding>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, x);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.__zenCreate
::Il2CppObject* Zenject::ProviderBindingFinalizer::$$c::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ProviderBindingFinalizer/Zenject.<>c.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ProviderBindingFinalizer::$$c::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ProviderBindingFinalizer::$$c::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ProviderBindingFinalizer/<>c", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ScopableBindingFinalizer
#include "Zenject/ScopableBindingFinalizer.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*& Zenject::ScopableBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingConcrete
void Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete(::Zenject::DiContainer* container, ::System::Collections::Generic::List_1<::System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::FinalizeBindingConcrete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingConcrete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(concreteTypes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, concreteTypes);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.FinalizeBindingSelf
void Zenject::ScopableBindingFinalizer::FinalizeBindingSelf(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::FinalizeBindingSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalizeBindingSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer.OnFinalizeBinding
void Zenject::ScopableBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass3_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::ScopableBindingFinalizer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::ScopableBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.<FinalizeBindingConcrete>b__0
::Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::$FinalizeBindingConcrete$b__0(::Zenject::DiContainer* _, ::System::Type* concreteType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::<FinalizeBindingConcrete>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingConcrete>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(concreteType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, concreteType);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.__zenCreate
::Il2CppObject* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass3_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass3_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass3_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass3_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0
#include "Zenject/ScopableBindingFinalizer_--c__DisplayClass4_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InjectTypeInfo
#include "Zenject/InjectTypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Zenject.ScopableBindingFinalizer <>4__this
[[deprecated("Use field access instead!")]] ::Zenject::ScopableBindingFinalizer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Zenject::ScopableBindingFinalizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Zenject.DiContainer container
[[deprecated("Use field access instead!")]] ::Zenject::DiContainer*& Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::dyn_container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.<FinalizeBindingSelf>b__0
::Zenject::IProvider* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::$FinalizeBindingSelf$b__0(::Zenject::DiContainer* _, ::System::Type* contractType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::<FinalizeBindingSelf>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FinalizeBindingSelf>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_), ::il2cpp_utils::ExtractType(contractType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::IProvider*, false>(this, ___internal__method, _, contractType);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.__zenCreate
::Il2CppObject* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreate(::ArrayW<::Il2CppObject*> P_0) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass4_0", "__zenCreate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(P_0)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, P_0);
}
// Autogenerated method: Zenject.ScopableBindingFinalizer/Zenject.<>c__DisplayClass4_0.__zenCreateInjectTypeInfo
::Zenject::InjectTypeInfo* Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::ScopableBindingFinalizer::$$c__DisplayClass4_0::__zenCreateInjectTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Zenject", "ScopableBindingFinalizer/<>c__DisplayClass4_0", "__zenCreateInjectTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Zenject::InjectTypeInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.SingleProviderBindingFinalizer
#include "Zenject/SingleProviderBindingFinalizer.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Func`3<Zenject.DiContainer,System.Type,Zenject.IProvider> _providerFactory
[[deprecated("Use field access instead!")]] ::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>*& Zenject::SingleProviderBindingFinalizer::dyn__providerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SingleProviderBindingFinalizer::dyn__providerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_providerFactory"))->offset;
  return *reinterpret_cast<::System::Func_3<::Zenject::DiContainer*, ::System::Type*, ::Zenject::IProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Zenject.SingleProviderBindingFinalizer.OnFinalizeBinding
void Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Zenject::SingleProviderBindingFinalizer::OnFinalizeBinding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnFinalizeBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
