// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/EnabledObstacleType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType All
::GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "All"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType All
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_All(::GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
::GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_FullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType FullHeightOnly
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly(::GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_FullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "FullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
::GlobalNamespace::GameplayModifiers::EnabledObstacleType GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_NoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_get_NoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::EnabledObstacleType>("", "GameplayModifiers/EnabledObstacleType", "NoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnabledObstacleType NoObstacles
void GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_NoObstacles(::GlobalNamespace::GameplayModifiers::EnabledObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::_set_NoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnabledObstacleType", "NoObstacles", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayModifiers::EnabledObstacleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnabledObstacleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/EnergyType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnergyType Bar
::GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameplayModifiers::EnergyType::_get_Bar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnergyType::_get_Bar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::EnergyType>("", "GameplayModifiers/EnergyType", "Bar"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnergyType Bar
void GlobalNamespace::GameplayModifiers::EnergyType::_set_Bar(::GlobalNamespace::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnergyType::_set_Bar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnergyType", "Bar", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/EnergyType Battery
::GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameplayModifiers::EnergyType::_get_Battery() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnergyType::_get_Battery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::EnergyType>("", "GameplayModifiers/EnergyType", "Battery"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/EnergyType Battery
void GlobalNamespace::GameplayModifiers::EnergyType::_set_Battery(::GlobalNamespace::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnergyType::_set_Battery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/EnergyType", "Battery", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayModifiers::EnergyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::EnergyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiers/SongSpeed
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Normal
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Normal
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Normal(::GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Faster
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Faster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_get_Faster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Faster"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Faster
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Faster(::GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_set_Faster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Faster", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed Slower
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_Slower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_get_Slower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "Slower"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed Slower
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_Slower(::GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_set_Slower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "Slower", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayModifiers/SongSpeed SuperFast
::GlobalNamespace::GameplayModifiers::SongSpeed GlobalNamespace::GameplayModifiers::SongSpeed::_get_SuperFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_get_SuperFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayModifiers::SongSpeed>("", "GameplayModifiers/SongSpeed", "SuperFast"));
}
// Autogenerated static field setter
// Set static field: static public GameplayModifiers/SongSpeed SuperFast
void GlobalNamespace::GameplayModifiers::SongSpeed::_set_SuperFast(::GlobalNamespace::GameplayModifiers::SongSpeed value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::_set_SuperFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiers/SongSpeed", "SuperFast", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayModifiers::SongSpeed::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiers::SongSpeed::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/SongSpeed
#include "GlobalNamespace/GameplayModifiersConfiguration_SongSpeed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kSlower
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSlower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSlower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kSlower"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSlower
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSlower(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSlower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kSlower", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kNormal
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kNormal
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kNormal(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kFaster
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kFaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kFaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kFaster"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kFaster
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kFaster(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kFaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kFaster", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kSuperFast
float GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSuperFast() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_get_kSuperFast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/SongSpeed", "kSuperFast"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSuperFast
void GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSuperFast(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::SongSpeed::_set_kSuperFast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/SongSpeed", "kSuperFast", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/CutAngleTolerance
#include "GlobalNamespace/GameplayModifiersConfiguration_CutAngleTolerance.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefault
float GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/CutAngleTolerance", "kDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefault
void GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kDefault(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/CutAngleTolerance", "kDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kStrict
float GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kStrict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_get_kStrict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/CutAngleTolerance", "kStrict"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kStrict
void GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kStrict(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::CutAngleTolerance::_set_kStrict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/CutAngleTolerance", "kStrict", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifiersConfiguration/NoteUniformScale
#include "GlobalNamespace/GameplayModifiersConfiguration_NoteUniformScale.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kDefault
float GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/NoteUniformScale", "kDefault"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kDefault
void GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kDefault(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/NoteUniformScale", "kDefault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kSmall
float GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_get_kSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameplayModifiersConfiguration/NoteUniformScale", "kSmall"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kSmall
void GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kSmall(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifiersConfiguration::NoteUniformScale::_set_kSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayModifiersConfiguration/NoteUniformScale", "kSmall", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBitMaskUtil
#include "GlobalNamespace/IBitMaskUtil.hpp"
// Including type: IBitMask`1
#include "GlobalNamespace/IBitMask_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBitMaskUtil.GetHexDigit
uint GlobalNamespace::IBitMaskUtil::GetHexDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBitMaskUtil::GetHexDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "IBitMaskUtil", "GetHexDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: IBitMaskUtil.GetBase64Digit
uint GlobalNamespace::IBitMaskUtil::GetBase64Digit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBitMaskUtil::GetBase64Digit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "IBitMaskUtil", "GetBase64Digit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: IBitMaskUtil.GetBase64Char
::Il2CppChar GlobalNamespace::IBitMaskUtil::GetBase64Char(uint64_t digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBitMaskUtil::GetBase64Char");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "IBitMaskUtil", "GetBase64Char", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBladeMovementData
#include "GlobalNamespace/IBladeMovementData.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBladeMovementData.get_bladeSpeed
float GlobalNamespace::IBladeMovementData::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBladeMovementData::get_bladeSpeed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_lastAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBladeMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: IBladeMovementData.get_prevAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::IBladeMovementData::get_prevAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBladeMovementData::get_prevAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPoolableSerializable
#include "GlobalNamespace/IPoolableSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPoolableSerializable.Retain
void GlobalNamespace::IPoolableSerializable::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPoolableSerializable::Retain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IPoolableSerializable.Release
void GlobalNamespace::IPoolableSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPoolableSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberMovementData
#include "GlobalNamespace/ISaberMovementData.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberMovementData.get_lastAddedData
::GlobalNamespace::BladeMovementDataElement GlobalNamespace::ISaberMovementData::get_lastAddedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::get_lastAddedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastAddedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BladeMovementDataElement, false>(this, ___internal__method);
}
// Autogenerated method: ISaberMovementData.AddDataProcessor
void GlobalNamespace::ISaberMovementData::AddDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::AddDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: ISaberMovementData.RemoveDataProcessor
void GlobalNamespace::ISaberMovementData::RemoveDataProcessor(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::RemoveDataProcessor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDataProcessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: ISaberMovementData.RequestLastDataProcessing
void GlobalNamespace::ISaberMovementData::RequestLastDataProcessing(::GlobalNamespace::ISaberMovementDataProcessor* dataProcessor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::RequestLastDataProcessing");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestLastDataProcessing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataProcessor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataProcessor);
}
// Autogenerated method: ISaberMovementData.ComputeSwingRating
float GlobalNamespace::ISaberMovementData::ComputeSwingRating(float overrideSegmentAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideSegmentAngle)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, overrideSegmentAngle);
}
// Autogenerated method: ISaberMovementData.ComputeSwingRating
float GlobalNamespace::ISaberMovementData::ComputeSwingRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementData::ComputeSwingRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSwingRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberMovementDataProcessor
#include "GlobalNamespace/ISaberMovementDataProcessor.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberMovementDataProcessor.ProcessNewData
void GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData(::GlobalNamespace::BladeMovementDataElement newData, ::GlobalNamespace::BladeMovementDataElement prevData, bool prevDataAreValid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberMovementDataProcessor::ProcessNewData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNewData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newData), ::il2cpp_utils::ExtractType(prevData), ::il2cpp_utils::ExtractType(prevDataAreValid)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newData, prevData, prevDataAreValid);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounterDidChangeReceiver.HandleSaberSwingRatingCounterDidChange
void GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver::HandleSaberSwingRatingCounterDidChange(::GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver::HandleSaberSwingRatingCounterDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter), ::il2cpp_utils::ExtractType(rating)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberSwingRatingCounter, rating);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounterDidFinishReceiver.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish(::GlobalNamespace::ISaberSwingRatingCounter* saberSwingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver::HandleSaberSwingRatingCounterDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSwingRatingCounter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberSwingRatingCounter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: ISaberSwingRatingCounterDidChangeReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidChangeReceiver.hpp"
// Including type: ISaberSwingRatingCounterDidFinishReceiver
#include "GlobalNamespace/ISaberSwingRatingCounterDidFinishReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISaberSwingRatingCounter.get_beforeCutRating
float GlobalNamespace::ISaberSwingRatingCounter::get_beforeCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::get_beforeCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beforeCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ISaberSwingRatingCounter.get_afterCutRating
float GlobalNamespace::ISaberSwingRatingCounter::get_afterCutRating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::get_afterCutRating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_afterCutRating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ISaberSwingRatingCounter.RegisterDidChangeReceiver
void GlobalNamespace::ISaberSwingRatingCounter::RegisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::RegisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.RegisterDidFinishReceiver
void GlobalNamespace::ISaberSwingRatingCounter::RegisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::RegisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.UnregisterDidChangeReceiver
void GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidChangeReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidChangeReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidChangeReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidChangeReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: ISaberSwingRatingCounter.UnregisterDidFinishReceiver
void GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidFinishReceiver(::GlobalNamespace::ISaberSwingRatingCounterDidFinishReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISaberSwingRatingCounter::UnregisterDidFinishReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDidFinishReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifiers gameplayModifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers*& GlobalNamespace::LevelCompletionResults::dyn_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 modifiedScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_modifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_modifiedScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 multipliedScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_multipliedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_multipliedScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multipliedScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly RankModel/Rank rank
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RankModel::Rank& GlobalNamespace::LevelCompletionResults::dyn_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rank"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RankModel::Rank*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean fullCombo
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LevelCompletionResults::dyn_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_fullCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullCombo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single leftSaberMovementDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_leftSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_leftSaberMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftSaberMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rightSaberMovementDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_rightSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_rightSaberMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightSaberMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single leftHandMovementDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_leftHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_leftHandMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rightHandMovementDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_rightHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_rightHandMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LevelCompletionResults/LevelEndStateType levelEndStateType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelCompletionResults::LevelEndStateType& GlobalNamespace::LevelCompletionResults::dyn_levelEndStateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_levelEndStateType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelEndStateType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults::LevelEndStateType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LevelCompletionResults/LevelEndAction levelEndAction
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LevelCompletionResults::LevelEndAction& GlobalNamespace::LevelCompletionResults::dyn_levelEndAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_levelEndAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelEndAction"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LevelCompletionResults::LevelEndAction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single energy
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "energy"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 goodCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_goodCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_goodCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 badCutsCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_badCutsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_badCutsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badCutsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 missedCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_missedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_missedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "missedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 notGoodCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_notGoodCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_notGoodCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notGoodCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 okCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_okCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_okCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "okCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_maxCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_maxCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 totalCutScore
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_totalCutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_totalCutScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalCutScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 goodCutsCountForNotesWithFullScoreScoringType
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_goodCutsCountForNotesWithFullScoreScoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_goodCutsCountForNotesWithFullScoreScoringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "goodCutsCountForNotesWithFullScoreScoringType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single averageCenterDistanceCutScoreForNotesWithFullScoreScoringType
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_averageCenterDistanceCutScoreForNotesWithFullScoreScoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_averageCenterDistanceCutScoreForNotesWithFullScoreScoringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averageCenterDistanceCutScoreForNotesWithFullScoreScoringType"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single averageCutScoreForNotesWithFullScoreScoringType
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_averageCutScoreForNotesWithFullScoreScoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_averageCutScoreForNotesWithFullScoreScoringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averageCutScoreForNotesWithFullScoreScoringType"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxCombo
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::dyn_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_maxCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single endSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::LevelCompletionResults::dyn_endSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::dyn_endSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelCompletionResults.CompareTo
int GlobalNamespace::LevelCompletionResults::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: LevelCompletionResults.Serialize
void GlobalNamespace::LevelCompletionResults::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LevelCompletionResults.LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData
::GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResults::LiteNetLib_Utils_INetImmutableSerializable$LevelCompletionResults$_CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.Utils.INetImmutableSerializable<LevelCompletionResults>.CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LevelCompletionResults*, false>(this, ___internal__method, reader);
}
// Autogenerated method: LevelCompletionResults.CreateFromSerializedData
::GlobalNamespace::LevelCompletionResults* GlobalNamespace::LevelCompletionResults::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::CreateFromSerializedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LevelCompletionResults", "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LevelCompletionResults*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResults/LevelEndStateType
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType Incomplete
::GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Incomplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Incomplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "Incomplete"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType Incomplete
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Incomplete(::GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Incomplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "Incomplete", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType Cleared
::GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Cleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Cleared");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "Cleared"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType Cleared
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Cleared(::GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Cleared");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "Cleared", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndStateType Failed
::GlobalNamespace::LevelCompletionResults::LevelEndStateType GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndStateType>("", "LevelCompletionResults/LevelEndStateType", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndStateType Failed
void GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Failed(::GlobalNamespace::LevelCompletionResults::LevelEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndStateType", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::LevelEndStateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndStateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelCompletionResults/LevelEndAction
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction None
::GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "None"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction None
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_None(::GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction Quit
::GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction Quit
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Quit(::GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "Quit", value));
}
// Autogenerated static field getter
// Get static field: static public LevelCompletionResults/LevelEndAction Restart
::GlobalNamespace::LevelCompletionResults::LevelEndAction GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_get_Restart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LevelCompletionResults::LevelEndAction>("", "LevelCompletionResults/LevelEndAction", "Restart"));
}
// Autogenerated static field setter
// Set static field: static public LevelCompletionResults/LevelEndAction Restart
void GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Restart(::GlobalNamespace::LevelCompletionResults::LevelEndAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::_set_Restart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LevelCompletionResults/LevelEndAction", "Restart", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LevelCompletionResults::LevelEndAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelCompletionResults::LevelEndAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String headTopId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_headTopId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_headTopId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 headTopPrimaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_headTopPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_headTopPrimaryColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 headTopSecondaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_headTopSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_headTopSecondaryColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTopSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String glassesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_glassesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_glassesId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 glassesColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_glassesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_glassesColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "glassesColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String facialHairId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_facialHairId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_facialHairId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 facialHairColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_facialHairColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_facialHairColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "facialHairColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String handsId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_handsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_handsId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 handsColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_handsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_handsColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String clothesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_clothesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_clothesId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 clothesPrimaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_clothesPrimaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_clothesPrimaryColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesPrimaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 clothesSecondaryColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_clothesSecondaryColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_clothesSecondaryColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesSecondaryColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color32 clothesDetailColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::MultiplayerAvatarData::dyn_clothesDetailColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_clothesDetailColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clothesDetailColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String skinColorId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_skinColorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_skinColorId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skinColorId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String eyesId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_eyesId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_eyesId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eyesId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String mouthId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MultiplayerAvatarData::dyn_mouthId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::dyn_mouthId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mouthId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarData..ctor
// ABORTED elsewhere.  GlobalNamespace::MultiplayerAvatarData::MultiplayerAvatarData(::StringW headTopId, ::UnityEngine::Color32 headTopPrimaryColor, ::UnityEngine::Color32 headTopSecondaryColor, ::StringW glassesId, ::UnityEngine::Color32 glassesColor, ::StringW facialHairId, ::UnityEngine::Color32 facialHairColor, ::StringW handsId, ::UnityEngine::Color32 handsColor, ::StringW clothesId, ::UnityEngine::Color32 clothesPrimaryColor, ::UnityEngine::Color32 clothesSecondaryColor, ::UnityEngine::Color32 clothesDetailColor, ::StringW skinColorId, ::StringW eyesId, ::StringW mouthId)
// Autogenerated method: MultiplayerAvatarData.Serialize
void GlobalNamespace::MultiplayerAvatarData::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: MultiplayerAvatarData.CreateFromSerializedData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::MultiplayerAvatarData::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(this, ___internal__method, reader);
}
// Autogenerated method: MultiplayerAvatarData.Deserialize
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::MultiplayerAvatarData::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerAvatarData", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: MultiplayerAvatarData.Equals
bool GlobalNamespace::MultiplayerAvatarData::Equals(::GlobalNamespace::MultiplayerAvatarData other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: MultiplayerAvatarData.Equals
bool GlobalNamespace::MultiplayerAvatarData::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: MultiplayerAvatarData.GetHashCode
int GlobalNamespace::MultiplayerAvatarData::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerAvatarData::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteBasicCutInfoHelper
#include "GlobalNamespace/NoteBasicCutInfoHelper.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinBladeSpeedForCut
float GlobalNamespace::NoteBasicCutInfoHelper::_get_kMinBladeSpeedForCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteBasicCutInfoHelper::_get_kMinBladeSpeedForCut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteBasicCutInfoHelper", "kMinBladeSpeedForCut"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinBladeSpeedForCut
void GlobalNamespace::NoteBasicCutInfoHelper::_set_kMinBladeSpeedForCut(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteBasicCutInfoHelper::_set_kMinBladeSpeedForCut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteBasicCutInfoHelper", "kMinBladeSpeedForCut", value));
}
// Autogenerated method: NoteBasicCutInfoHelper.GetBasicCutInfo
void GlobalNamespace::NoteBasicCutInfoHelper::GetBasicCutInfo(::UnityEngine::Transform* noteTransform, ::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteCutDirection cutDirection, ::GlobalNamespace::SaberType saberType, float saberBladeSpeed, ::UnityEngine::Vector3 cutDirVec, float cutAngleTolerance, ByRef<bool> directionOK, ByRef<bool> speedOK, ByRef<bool> saberTypeOK, ByRef<float> cutDirDeviation, ByRef<float> cutDirAngle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteBasicCutInfoHelper::GetBasicCutInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteBasicCutInfoHelper", "GetBasicCutInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteTransform), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(cutDirection), ::il2cpp_utils::ExtractType(saberType), ::il2cpp_utils::ExtractType(saberBladeSpeed), ::il2cpp_utils::ExtractType(cutDirVec), ::il2cpp_utils::ExtractType(cutAngleTolerance), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, noteTransform, colorType, cutDirection, saberType, saberBladeSpeed, cutDirVec, cutAngleTolerance, byref(directionOK), byref(speedOK), byref(saberTypeOK), byref(cutDirDeviation), byref(cutDirAngle));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteCutInfo/FailReason
#include "GlobalNamespace/NoteCutInfo_FailReason.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ISaberMovementData
#include "GlobalNamespace/ISaberMovementData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteData noteData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData*& GlobalNamespace::NoteCutInfo::dyn_noteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_noteData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean speedOK
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutInfo::dyn_speedOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_speedOK");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedOK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean directionOK
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutInfo::dyn_directionOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_directionOK");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "directionOK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean saberTypeOK
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutInfo::dyn_saberTypeOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_saberTypeOK");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberTypeOK"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean wasCutTooSoon
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutInfo::dyn_wasCutTooSoon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_wasCutTooSoon");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasCutTooSoon"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single saberSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfo::dyn_saberSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_saberSpeed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 saberDir
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::NoteCutInfo::dyn_saberDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_saberDir");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberDir"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly SaberType saberType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberType& GlobalNamespace::NoteCutInfo::dyn_saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_saberType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single timeDeviation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfo::dyn_timeDeviation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_timeDeviation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeDeviation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cutDirDeviation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfo::dyn_cutDirDeviation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_cutDirDeviation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDirDeviation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 cutPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::NoteCutInfo::dyn_cutPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_cutPoint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 cutNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::NoteCutInfo::dyn_cutNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_cutNormal");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cutAngle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfo::dyn_cutAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_cutAngle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single cutDistanceToCenter
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfo::dyn_cutDistanceToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_cutDistanceToCenter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDistanceToCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion worldRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::NoteCutInfo::dyn_worldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_worldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "worldRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion inverseWorldRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::NoteCutInfo::dyn_inverseWorldRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_inverseWorldRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inverseWorldRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion noteRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::NoteCutInfo::dyn_noteRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_noteRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 notePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::NoteCutInfo::dyn_notePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_notePosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ISaberMovementData saberMovementData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ISaberMovementData*& GlobalNamespace::NoteCutInfo::dyn_saberMovementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::dyn_saberMovementData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberMovementData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ISaberMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutInfo.get_allIsOK
bool GlobalNamespace::NoteCutInfo::get_allIsOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::get_allIsOK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_allIsOK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutInfo.get_allExceptSaberTypeIsOK
bool GlobalNamespace::NoteCutInfo::get_allExceptSaberTypeIsOK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::get_allExceptSaberTypeIsOK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_allExceptSaberTypeIsOK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutInfo.get_failReason
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::get_failReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::get_failReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_failReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutInfo::FailReason, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutInfo..ctor
// ABORTED elsewhere.  GlobalNamespace::NoteCutInfo::NoteCutInfo(::GlobalNamespace::NoteData* noteData, bool speedOK, bool directionOK, bool saberTypeOK, bool wasCutTooSoon, float saberSpeed, ::UnityEngine::Vector3 saberDir, ::GlobalNamespace::SaberType saberType, float timeDeviation, float cutDirDeviation, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Vector3 cutNormal, float cutDistanceToCenter, float cutAngle, ::UnityEngine::Quaternion worldRotation, ::UnityEngine::Quaternion inverseWorldRotation, ::UnityEngine::Quaternion noteRotation, ::UnityEngine::Vector3 notePosition, ::GlobalNamespace::ISaberMovementData* saberMovementData)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutInfo/FailReason
#include "GlobalNamespace/NoteCutInfo_FailReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteCutInfo/FailReason None
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::FailReason::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutInfo::FailReason>("", "NoteCutInfo/FailReason", "None"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutInfo/FailReason None
void GlobalNamespace::NoteCutInfo::FailReason::_set_None(::GlobalNamespace::NoteCutInfo::FailReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutInfo/FailReason", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutInfo/FailReason TooSoon
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::FailReason::_get_TooSoon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_get_TooSoon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutInfo::FailReason>("", "NoteCutInfo/FailReason", "TooSoon"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutInfo/FailReason TooSoon
void GlobalNamespace::NoteCutInfo::FailReason::_set_TooSoon(::GlobalNamespace::NoteCutInfo::FailReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_set_TooSoon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutInfo/FailReason", "TooSoon", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutInfo/FailReason WrongColor
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::FailReason::_get_WrongColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_get_WrongColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutInfo::FailReason>("", "NoteCutInfo/FailReason", "WrongColor"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutInfo/FailReason WrongColor
void GlobalNamespace::NoteCutInfo::FailReason::_set_WrongColor(::GlobalNamespace::NoteCutInfo::FailReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_set_WrongColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutInfo/FailReason", "WrongColor", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutInfo/FailReason CutHarder
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::FailReason::_get_CutHarder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_get_CutHarder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutInfo::FailReason>("", "NoteCutInfo/FailReason", "CutHarder"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutInfo/FailReason CutHarder
void GlobalNamespace::NoteCutInfo::FailReason::_set_CutHarder(::GlobalNamespace::NoteCutInfo::FailReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_set_CutHarder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutInfo/FailReason", "CutHarder", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutInfo/FailReason WrongDirection
::GlobalNamespace::NoteCutInfo::FailReason GlobalNamespace::NoteCutInfo::FailReason::_get_WrongDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_get_WrongDirection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutInfo::FailReason>("", "NoteCutInfo/FailReason", "WrongDirection"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutInfo/FailReason WrongDirection
void GlobalNamespace::NoteCutInfo::FailReason::_set_WrongDirection(::GlobalNamespace::NoteCutInfo::FailReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::_set_WrongDirection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutInfo/FailReason", "WrongDirection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteCutInfo::FailReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfo::FailReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single saberSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfoNetSerializable::dyn_saberSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_saberSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean cutWasOk
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutWasOk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutWasOk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutWasOk"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable saberDir
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_saberDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_saberDir");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberDir"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable cutPoint
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutPoint"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable cutNormal
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_cutNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutNormal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable notePosition
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_notePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_notePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "notePosition"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable noteScale
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteScale"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuaternionSerializable noteRotation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuaternionSerializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuaternionSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteData/GameplayType gameplayType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::GameplayType& GlobalNamespace::NoteCutInfoNetSerializable::dyn_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_gameplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::GameplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorType colorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::NoteCutInfoNetSerializable::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noteTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 noteLineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_noteLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer lineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteCutInfoNetSerializable::dyn_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_lineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeToNextColorNote
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteCutInfoNetSerializable::dyn_timeToNextColorNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_timeToNextColorNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToNextColorNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable moveVec
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteCutInfoNetSerializable::dyn_moveVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::dyn_moveVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveVec"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutInfoNetSerializable.Obtain
::GlobalNamespace::NoteCutInfoNetSerializable* GlobalNamespace::NoteCutInfoNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteCutInfoNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutInfoNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NoteCutInfoNetSerializable.Init
::GlobalNamespace::NoteCutInfoNetSerializable* GlobalNamespace::NoteCutInfoNetSerializable::Init(ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo, ::GlobalNamespace::NoteData* noteData, ::UnityEngine::Vector3 notePosition, ::UnityEngine::Quaternion noteRotation, ::UnityEngine::Vector3 noteScale, ::UnityEngine::Vector3 moveVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(notePosition), ::il2cpp_utils::ExtractType(noteRotation), ::il2cpp_utils::ExtractType(noteScale), ::il2cpp_utils::ExtractType(moveVec)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutInfoNetSerializable*, false>(this, ___internal__method, byref(noteCutInfo), noteData, notePosition, noteRotation, noteScale, moveVec);
}
// Autogenerated method: NoteCutInfoNetSerializable.Init
::GlobalNamespace::NoteCutInfoNetSerializable* GlobalNamespace::NoteCutInfoNetSerializable::Init(float saberSpeed, bool cutWasOk, ::UnityEngine::Vector3 saberDir, ::UnityEngine::Vector3 cutPoint, ::UnityEngine::Vector3 cutNormal, ::GlobalNamespace::NoteData::GameplayType gameplayType, ::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteLineLayer lineLayer, int noteLineIndex, float noteTime, float timeToNextColorNote, ::UnityEngine::Vector3 notePosition, ::UnityEngine::Quaternion noteRotation, ::UnityEngine::Vector3 noteScale, ::UnityEngine::Vector3 moveVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberSpeed), ::il2cpp_utils::ExtractType(cutWasOk), ::il2cpp_utils::ExtractType(saberDir), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(cutNormal), ::il2cpp_utils::ExtractType(gameplayType), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteTime), ::il2cpp_utils::ExtractType(timeToNextColorNote), ::il2cpp_utils::ExtractType(notePosition), ::il2cpp_utils::ExtractType(noteRotation), ::il2cpp_utils::ExtractType(noteScale), ::il2cpp_utils::ExtractType(moveVec)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutInfoNetSerializable*, false>(this, ___internal__method, saberSpeed, cutWasOk, saberDir, cutPoint, cutNormal, gameplayType, colorType, lineLayer, noteLineIndex, noteTime, timeToNextColorNote, notePosition, noteRotation, noteScale, moveVec);
}
// Autogenerated method: NoteCutInfoNetSerializable.Deserialize
void GlobalNamespace::NoteCutInfoNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NoteCutInfoNetSerializable.Serialize
void GlobalNamespace::NoteCutInfoNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutInfoNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorType <colorType>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::NoteMissInfoNetSerializable::dyn_$colorType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::dyn_$colorType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<colorType>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <noteTime>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <noteLineIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteLineIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteLineIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteLineIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer <noteLineLayer>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteLineLayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::dyn_$noteLineLayer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noteLineLayer>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_colorType
::GlobalNamespace::ColorType GlobalNamespace::NoteMissInfoNetSerializable::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_colorType
void GlobalNamespace::NoteMissInfoNetSerializable::set_colorType(::GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::set_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteTime
float GlobalNamespace::NoteMissInfoNetSerializable::get_noteTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::get_noteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteTime
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::set_noteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteLineIndex
int GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteLineIndex
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noteLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.get_noteLineLayer
::GlobalNamespace::NoteLineLayer GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::get_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.set_noteLineLayer
void GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineLayer(::GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::set_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NoteMissInfoNetSerializable.Obtain
::GlobalNamespace::NoteMissInfoNetSerializable* GlobalNamespace::NoteMissInfoNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteMissInfoNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMissInfoNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NoteMissInfoNetSerializable.Init
::GlobalNamespace::NoteMissInfoNetSerializable* GlobalNamespace::NoteMissInfoNetSerializable::Init(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMissInfoNetSerializable*, false>(this, ___internal__method, noteData);
}
// Autogenerated method: NoteMissInfoNetSerializable.Init
::GlobalNamespace::NoteMissInfoNetSerializable* GlobalNamespace::NoteMissInfoNetSerializable::Init(::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteLineLayer lineLayer, int noteLineIndex, float noteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(noteLineIndex), ::il2cpp_utils::ExtractType(noteTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteMissInfoNetSerializable*, false>(this, ___internal__method, colorType, lineLayer, noteLineIndex, noteTime);
}
// Autogenerated method: NoteMissInfoNetSerializable.Deserialize
void GlobalNamespace::NoteMissInfoNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: NoteMissInfoNetSerializable.Serialize
void GlobalNamespace::NoteMissInfoNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteMissInfoNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteSpawnInfoNetSerializable
#include "GlobalNamespace/NoteSpawnInfoNetSerializable.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer noteLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_noteLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer beforeJumpNoteLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_beforeJumpNoteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_beforeJumpNoteLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beforeJumpNoteLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteData/GameplayType gameplayType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::GameplayType& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_gameplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_gameplayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::GameplayType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteData/ScoringType scoringType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteData::ScoringType& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_scoringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_scoringType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoringType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteData::ScoringType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorType colorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteCutDirection cutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeToNextColorNote
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_timeToNextColorNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_timeToNextColorNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToNextColorNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeToPrevColorNote
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_timeToPrevColorNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_timeToPrevColorNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToPrevColorNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 flipLineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_flipLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_flipLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single flipYSide
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_flipYSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_flipYSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flipYSide"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable moveStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable moveEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable jumpEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpGravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_jumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutDirectionAngleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutDirectionAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDirectionAngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutSfxVolumeMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutSfxVolumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::dyn_cutSfxVolumeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutSfxVolumeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteSpawnInfoNetSerializable.Obtain
::GlobalNamespace::NoteSpawnInfoNetSerializable* GlobalNamespace::NoteSpawnInfoNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NoteSpawnInfoNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteSpawnInfoNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NoteSpawnInfoNetSerializable.Init
::GlobalNamespace::NoteSpawnInfoNetSerializable* GlobalNamespace::NoteSpawnInfoNetSerializable::Init(float time, int lineIndex, ::GlobalNamespace::NoteLineLayer noteLineLayer, ::GlobalNamespace::NoteLineLayer beforeJumpNoteLineLayer, ::GlobalNamespace::NoteData::GameplayType gameplayType, ::GlobalNamespace::NoteData::ScoringType scoringType, ::GlobalNamespace::ColorType colorType, ::GlobalNamespace::NoteCutDirection cutDirection, float timeToNextColorNote, float timeToPrevColorNote, int flipLineIndex, float flipYSide, ::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float jumpGravity, float moveDuration, float jumpDuration, float rotation, float cutDirectionAngleOffset, float cutSfxVolumeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(noteLineLayer), ::il2cpp_utils::ExtractType(beforeJumpNoteLineLayer), ::il2cpp_utils::ExtractType(gameplayType), ::il2cpp_utils::ExtractType(scoringType), ::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(cutDirection), ::il2cpp_utils::ExtractType(timeToNextColorNote), ::il2cpp_utils::ExtractType(timeToPrevColorNote), ::il2cpp_utils::ExtractType(flipLineIndex), ::il2cpp_utils::ExtractType(flipYSide), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(jumpGravity), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(cutDirectionAngleOffset), ::il2cpp_utils::ExtractType(cutSfxVolumeMultiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteSpawnInfoNetSerializable*, false>(this, ___internal__method, time, lineIndex, noteLineLayer, beforeJumpNoteLineLayer, gameplayType, scoringType, colorType, cutDirection, timeToNextColorNote, timeToPrevColorNote, flipLineIndex, flipYSide, moveStartPos, moveEndPos, jumpEndPos, jumpGravity, moveDuration, jumpDuration, rotation, cutDirectionAngleOffset, cutSfxVolumeMultiplier);
}
// Autogenerated method: NoteSpawnInfoNetSerializable.Serialize
void GlobalNamespace::NoteSpawnInfoNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: NoteSpawnInfoNetSerializable.Deserialize
void GlobalNamespace::NoteSpawnInfoNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteSpawnInfoNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSpawnInfoNetSerializable
#include "GlobalNamespace/ObstacleSpawnInfoNetSerializable.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer lineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_lineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 width
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 height
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable moveStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable moveEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable jumpEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_jumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_jumpEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single obstacleHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_obstacleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_obstacleHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_jumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single noteLinesDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_noteLinesDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_noteLinesDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLinesDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleSpawnInfoNetSerializable.Obtain
::GlobalNamespace::ObstacleSpawnInfoNetSerializable* GlobalNamespace::ObstacleSpawnInfoNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObstacleSpawnInfoNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleSpawnInfoNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ObstacleSpawnInfoNetSerializable.Init
::GlobalNamespace::ObstacleSpawnInfoNetSerializable* GlobalNamespace::ObstacleSpawnInfoNetSerializable::Init(float time, int lineIndex, ::GlobalNamespace::NoteLineLayer lineLayer, float duration, int width, int height, ::UnityEngine::Vector3 moveStartPos, ::UnityEngine::Vector3 moveEndPos, ::UnityEngine::Vector3 jumpEndPos, float obstacleHeight, float moveDuration, float jumpDuration, float noteLinesDistance, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(lineIndex), ::il2cpp_utils::ExtractType(lineLayer), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(moveStartPos), ::il2cpp_utils::ExtractType(moveEndPos), ::il2cpp_utils::ExtractType(jumpEndPos), ::il2cpp_utils::ExtractType(obstacleHeight), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(noteLinesDistance), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleSpawnInfoNetSerializable*, false>(this, ___internal__method, time, lineIndex, lineLayer, duration, width, height, moveStartPos, moveEndPos, jumpEndPos, obstacleHeight, moveDuration, jumpDuration, noteLinesDistance, rotation);
}
// Autogenerated method: ObstacleSpawnInfoNetSerializable.Serialize
void GlobalNamespace::ObstacleSpawnInfoNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ObstacleSpawnInfoNetSerializable.Deserialize
void GlobalNamespace::ObstacleSpawnInfoNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSpawnInfoNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayerLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isServerOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__isServerOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__isServerOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isServerOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasRecommendBeatmapsPermission
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasRecommendBeatmapsPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasRecommendBeatmapsPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasRecommendBeatmapsPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasRecommendGameplayModifiersPermission
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasRecommendGameplayModifiersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasRecommendGameplayModifiersPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasRecommendGameplayModifiersPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasKickVotePermission
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasKickVotePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasKickVotePermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasKickVotePermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasInvitePermission
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasInvitePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::dyn__hasInvitePermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasInvitePermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_userId
::StringW GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_isServerOwner
bool GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_isServerOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_isServerOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServerOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_hasRecommendBeatmapsPermission
bool GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasRecommendBeatmapsPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasRecommendBeatmapsPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendBeatmapsPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_hasRecommendGameplayModifiersPermission
bool GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasRecommendGameplayModifiersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasRecommendGameplayModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendGameplayModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_hasKickVotePermission
bool GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasKickVotePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.get_hasInvitePermission
bool GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasInvitePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::get_hasInvitePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasInvitePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.Obtain
::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable* GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayerLobbyPermissionConfigurationNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.Init
::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable* GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Init(::StringW userId, bool isServerOwner, bool hasRecommendBeatmapsPermission, bool hasRecommendGameplayModifiersPermission, bool hasKickVotePermission, bool hasInvitePermission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isServerOwner), ::il2cpp_utils::ExtractType(hasRecommendBeatmapsPermission), ::il2cpp_utils::ExtractType(hasRecommendGameplayModifiersPermission), ::il2cpp_utils::ExtractType(hasKickVotePermission), ::il2cpp_utils::ExtractType(hasInvitePermission)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*, false>(this, ___internal__method, userId, isServerOwner, hasRecommendBeatmapsPermission, hasRecommendGameplayModifiersPermission, hasKickVotePermission, hasInvitePermission);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.Serialize
void GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayerLobbyPermissionConfigurationNetSerializable.Deserialize
void GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayerLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayerLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<PlayerLobbyPermissionConfigurationNetSerializable> _playersPermission
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*>*& GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::dyn__playersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::dyn__playersPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersPermission"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.get_playersPermission
::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*>* GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::get_playersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::get_playersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Obtain
::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayersLobbyPermissionConfigurationNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Init
::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Init(::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable*>* playersPermission) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersPermission)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*, false>(this, ___internal__method, playersPermission);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Serialize
void GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Deserialize
void GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Release
void GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayersLobbyPermissionConfigurationNetSerializable.Retain
void GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable::Retain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<System.String> _playersWithoutEntitlements
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::PlayersMissingEntitlementsNetSerializable::dyn__playersWithoutEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::dyn__playersWithoutEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersWithoutEntitlements"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayersMissingEntitlementsNetSerializable.get_playersWithoutEntitlements
::System::Collections::Generic::List_1<::StringW>* GlobalNamespace::PlayersMissingEntitlementsNetSerializable::get_playersWithoutEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::get_playersWithoutEntitlements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersWithoutEntitlements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayersMissingEntitlementsNetSerializable.Obtain
::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlayersMissingEntitlementsNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PlayersMissingEntitlementsNetSerializable.Init
::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Init(::System::Collections::Generic::IEnumerable_1<::StringW>* playersWithoutEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersWithoutEntitlements)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*, false>(this, ___internal__method, playersWithoutEntitlements);
}
// Autogenerated method: PlayersMissingEntitlementsNetSerializable.Serialize
void GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PlayersMissingEntitlementsNetSerializable.Deserialize
void GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayersMissingEntitlementsNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoolableSerializable
#include "GlobalNamespace/PoolableSerializable.hpp"
// Including type: PoolableSerializable/Pool
#include "GlobalNamespace/PoolableSerializable_Pool.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kPoolSize
int GlobalNamespace::PoolableSerializable::_get_kPoolSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::_get_kPoolSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PoolableSerializable", "kPoolSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kPoolSize
void GlobalNamespace::PoolableSerializable::_set_kPoolSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::_set_kPoolSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PoolableSerializable", "kPoolSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,PoolableSerializable/Pool> _pools
::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::PoolableSerializable::Pool*>* GlobalNamespace::PoolableSerializable::_get__pools() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::_get__pools");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::PoolableSerializable::Pool*>*>("", "PoolableSerializable", "_pools")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,PoolableSerializable/Pool> _pools
void GlobalNamespace::PoolableSerializable::_set__pools(::System::Collections::Generic::Dictionary_2<::System::Type*, ::GlobalNamespace::PoolableSerializable::Pool*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::_set__pools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PoolableSerializable", "_pools", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _referenceCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PoolableSerializable::dyn__referenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::dyn__referenceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_referenceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoolableSerializable.NoDomainReloadInit
void GlobalNamespace::PoolableSerializable::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoolableSerializable", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PoolableSerializable.Retain
void GlobalNamespace::PoolableSerializable::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Retain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoolableSerializable.Release
void GlobalNamespace::PoolableSerializable::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PoolableSerializable.Serialize
void GlobalNamespace::PoolableSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PoolableSerializable.Deserialize
void GlobalNamespace::PoolableSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PoolableSerializable.Release
void GlobalNamespace::PoolableSerializable::Release(::GlobalNamespace::IPoolableSerializable* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Release");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoolableSerializable", "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoolableSerializable/Pool
#include "GlobalNamespace/PoolableSerializable_Pool.hpp"
// Including type: IPoolableSerializable
#include "GlobalNamespace/IPoolableSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IPoolableSerializable[] pool
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::IPoolableSerializable*>& GlobalNamespace::PoolableSerializable::Pool::dyn_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Pool::dyn_pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pool"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::IPoolableSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PoolableSerializable::Pool::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoolableSerializable::Pool::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModel
#include "GlobalNamespace/RankModel.hpp"
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RankModel.GetRankName
::StringW GlobalNamespace::RankModel::GetRankName(::GlobalNamespace::RankModel::Rank rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::GetRankName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RankModel", "GetRankName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rank)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rank);
}
// Autogenerated method: RankModel.GetRankForScore
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::GetRankForScore(int multipliedScore, int modifiedScore, int maxMultipliedScore, int maxModifiedScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::GetRankForScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RankModel", "GetRankForScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multipliedScore), ::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(maxMultipliedScore), ::il2cpp_utils::ExtractType(maxModifiedScore)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RankModel::Rank, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, multipliedScore, modifiedScore, maxMultipliedScore, maxModifiedScore);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RankModel/Rank
#include "GlobalNamespace/RankModel_Rank.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public RankModel/Rank E
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_E() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_E");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "E"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank E
void GlobalNamespace::RankModel::Rank::_set_E(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_E");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "E", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank D
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_D() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_D");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "D"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank D
void GlobalNamespace::RankModel::Rank::_set_D(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_D");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "D", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank C
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "C"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank C
void GlobalNamespace::RankModel::Rank::_set_C(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "C", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank B
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "B"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank B
void GlobalNamespace::RankModel::Rank::_set_B(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "B", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank A
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "A"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank A
void GlobalNamespace::RankModel::Rank::_set_A(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "A", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank S
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_S() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_S");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "S"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank S
void GlobalNamespace::RankModel::Rank::_set_S(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_S");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "S", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank SS
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_SS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_SS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "SS"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank SS
void GlobalNamespace::RankModel::Rank::_set_SS(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_SS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "SS", value));
}
// Autogenerated static field getter
// Get static field: static public RankModel/Rank SSS
::GlobalNamespace::RankModel::Rank GlobalNamespace::RankModel::Rank::_get_SSS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_get_SSS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::RankModel::Rank>("", "RankModel/Rank", "SSS"));
}
// Autogenerated static field setter
// Set static field: static public RankModel/Rank SSS
void GlobalNamespace::RankModel::Rank::_set_SSS(::GlobalNamespace::RankModel::Rank value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::_set_SSS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RankModel/Rank", "SSS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RankModel::Rank::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RankModel::Rank::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SaberType SaberA
::GlobalNamespace::SaberType GlobalNamespace::SaberType::_get_SaberA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberType::_get_SaberA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SaberType>("", "SaberType", "SaberA"));
}
// Autogenerated static field setter
// Set static field: static public SaberType SaberA
void GlobalNamespace::SaberType::_set_SaberA(::GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberType::_set_SaberA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberType", "SaberA", value));
}
// Autogenerated static field getter
// Get static field: static public SaberType SaberB
::GlobalNamespace::SaberType GlobalNamespace::SaberType::_get_SaberB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberType::_get_SaberB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SaberType>("", "SaberType", "SaberB"));
}
// Autogenerated static field setter
// Set static field: static public SaberType SaberB
void GlobalNamespace::SaberType::_set_SaberB(::GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberType::_set_SaberB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberType", "SaberB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SaberType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTypeExtensions
#include "GlobalNamespace/SaberTypeExtensions.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SaberTypeExtensions.MatchesColorType
bool GlobalNamespace::SaberTypeExtensions::MatchesColorType(::GlobalNamespace::SaberType saberType, ::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTypeExtensions::MatchesColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "MatchesColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType), ::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saberType, colorType);
}
// Autogenerated method: SaberTypeExtensions.Node
::UnityEngine::XR::XRNode GlobalNamespace::SaberTypeExtensions::Node(::GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTypeExtensions::Node");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "Node", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::XRNode, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, saberType);
}
// Autogenerated method: SaberTypeExtensions.MainSaber
::GlobalNamespace::SaberType GlobalNamespace::SaberTypeExtensions::MainSaber(bool leftHanded) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTypeExtensions::MainSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "MainSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftHanded)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SaberType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, leftHanded);
}
// Autogenerated method: SaberTypeExtensions.ToSaberType
::GlobalNamespace::SaberType GlobalNamespace::SaberTypeExtensions::ToSaberType(::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTypeExtensions::ToSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberTypeExtensions", "ToSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SaberType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, colorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuantizedMathf
#include "GlobalNamespace/QuantizedMathf.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kQuaternionSerializableScaleFactor
int GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableScaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableScaleFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuantizedMathf", "kQuaternionSerializableScaleFactor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kQuaternionSerializableScaleFactor
void GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableScaleFactor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableScaleFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kQuaternionSerializableScaleFactor", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kQuaternionSerializableEpsilon
float GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_get_kQuaternionSerializableEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kQuaternionSerializableEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kQuaternionSerializableEpsilon
void GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_set_kQuaternionSerializableEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kQuaternionSerializableEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kVectorSerializableScaleInt
int GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScaleInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScaleInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "QuantizedMathf", "kVectorSerializableScaleInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kVectorSerializableScaleInt
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScaleInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScaleInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableScaleInt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kVectorSerializableScale
float GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_get_kVectorSerializableScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kVectorSerializableScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kVectorSerializableScale
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_set_kVectorSerializableScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVectorSerializableEpsilon
float GlobalNamespace::QuantizedMathf::_get_kVectorSerializableEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_get_kVectorSerializableEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuantizedMathf", "kVectorSerializableEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVectorSerializableEpsilon
void GlobalNamespace::QuantizedMathf::_set_kVectorSerializableEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::_set_kVectorSerializableEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuantizedMathf", "kVectorSerializableEpsilon", value));
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(float a, float b, float epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(int a, int b, int epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(epsilon)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, epsilon);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.Approximately
bool GlobalNamespace::QuantizedMathf::Approximately(::UnityEngine::Pose a, ::UnityEngine::Pose b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuantizedMathf.QuantizedVectorComponentToString
::StringW GlobalNamespace::QuantizedMathf::QuantizedVectorComponentToString(int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuantizedMathf::QuantizedVectorComponentToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuantizedMathf", "QuantizedVectorComponentToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vector3Serializable
#include "GlobalNamespace/Vector3Serializable.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _x
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector3Serializable::dyn__x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::dyn__x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _y
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector3Serializable::dyn__y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::dyn__y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _z
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector3Serializable::dyn__z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::dyn__z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vector3Serializable..ctor
GlobalNamespace::Vector3Serializable::Vector3Serializable(::UnityEngine::Vector3 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Vector3Serializable..ctor
GlobalNamespace::Vector3Serializable::Vector3Serializable(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Vector3Serializable.Serialize
void GlobalNamespace::Vector3Serializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: Vector3Serializable.Deserialize
void GlobalNamespace::Vector3Serializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Vector3Serializable.Equals
bool GlobalNamespace::Vector3Serializable::Equals(::GlobalNamespace::Vector3Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Vector3Serializable.Approximately
bool GlobalNamespace::Vector3Serializable::Approximately(::GlobalNamespace::Vector3Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Vector3Serializable.GetSize
int GlobalNamespace::Vector3Serializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.Equals
bool GlobalNamespace::Vector3Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Vector3Serializable.GetHashCode
int GlobalNamespace::Vector3Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.ToString
::StringW GlobalNamespace::Vector3Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Vector3Serializable.op_Addition
::GlobalNamespace::Vector3Serializable GlobalNamespace::operator+(const ::GlobalNamespace::Vector3Serializable& a, const ::GlobalNamespace::Vector3Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Vector3Serializable", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Vector3Serializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Vector3Serializable.op_Subtraction
::GlobalNamespace::Vector3Serializable GlobalNamespace::operator-(const ::GlobalNamespace::Vector3Serializable& a, const ::GlobalNamespace::Vector3Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector3Serializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Vector3Serializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Vector3Serializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Vector4Serializable
#include "GlobalNamespace/Vector4Serializable.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _x
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector4Serializable::dyn__x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::dyn__x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_x"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _y
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector4Serializable::dyn__y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::dyn__y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _z
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector4Serializable::dyn__z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::dyn__z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _w
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Vector4Serializable::dyn__w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::dyn__w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_w"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Vector4Serializable..ctor
GlobalNamespace::Vector4Serializable::Vector4Serializable(::UnityEngine::Vector4 v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, v);
}
// Autogenerated method: Vector4Serializable..ctor
GlobalNamespace::Vector4Serializable::Vector4Serializable(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Vector4Serializable.Serialize
void GlobalNamespace::Vector4Serializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: Vector4Serializable.Deserialize
void GlobalNamespace::Vector4Serializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Vector4Serializable.Equals
bool GlobalNamespace::Vector4Serializable::Equals(::GlobalNamespace::Vector4Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Vector4Serializable.Approximately
bool GlobalNamespace::Vector4Serializable::Approximately(::GlobalNamespace::Vector4Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Vector4Serializable.GetSize
int GlobalNamespace::Vector4Serializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.Equals
bool GlobalNamespace::Vector4Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Vector4Serializable.GetHashCode
int GlobalNamespace::Vector4Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.ToString
::StringW GlobalNamespace::Vector4Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Vector4Serializable.op_Addition
::GlobalNamespace::Vector4Serializable GlobalNamespace::operator+(const ::GlobalNamespace::Vector4Serializable& a, const ::GlobalNamespace::Vector4Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Vector4Serializable", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Vector4Serializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: Vector4Serializable.op_Subtraction
::GlobalNamespace::Vector4Serializable GlobalNamespace::operator-(const ::GlobalNamespace::Vector4Serializable& a, const ::GlobalNamespace::Vector4Serializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Vector4Serializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Vector4Serializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Vector4Serializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: QuaternionSerializable
#include "GlobalNamespace/QuaternionSerializable.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSqrtTwo
float GlobalNamespace::QuaternionSerializable::_get_kSqrtTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_get_kSqrtTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kSqrtTwo"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSqrtTwo
void GlobalNamespace::QuaternionSerializable::_set_kSqrtTwo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_set_kSqrtTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kSqrtTwo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kOneOverSqrtTwo
float GlobalNamespace::QuaternionSerializable::_get_kOneOverSqrtTwo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_get_kOneOverSqrtTwo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kOneOverSqrtTwo"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kOneOverSqrtTwo
void GlobalNamespace::QuaternionSerializable::_set_kOneOverSqrtTwo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_set_kOneOverSqrtTwo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kOneOverSqrtTwo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kScale
float GlobalNamespace::QuaternionSerializable::_get_kScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_get_kScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kScale
void GlobalNamespace::QuaternionSerializable::_set_kScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_set_kScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kScale", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kInvScale
float GlobalNamespace::QuaternionSerializable::_get_kInvScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_get_kInvScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "QuaternionSerializable", "kInvScale"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kInvScale
void GlobalNamespace::QuaternionSerializable::_set_kInvScale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::_set_kInvScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "QuaternionSerializable", "kInvScale", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _a
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuaternionSerializable::dyn__a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::dyn__a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_a"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _b
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuaternionSerializable::dyn__b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::dyn__b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_b"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _c
[[deprecated("Use field access instead!")]] int& GlobalNamespace::QuaternionSerializable::dyn__c() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::dyn__c");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_c"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: QuaternionSerializable.get_identity
::GlobalNamespace::QuaternionSerializable GlobalNamespace::QuaternionSerializable::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuaternionSerializable", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: QuaternionSerializable..ctor
GlobalNamespace::QuaternionSerializable::QuaternionSerializable(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, q);
}
// Autogenerated method: QuaternionSerializable..ctor
GlobalNamespace::QuaternionSerializable::QuaternionSerializable(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: QuaternionSerializable.ToSmallest
void GlobalNamespace::QuaternionSerializable::ToSmallest(::UnityEngine::Quaternion q, ByRef<int> sa, ByRef<int> sb, ByRef<int> sc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::ToSmallest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuaternionSerializable", "ToSmallest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, byref(sa), byref(sb), byref(sc));
}
// Autogenerated method: QuaternionSerializable.FromSmallest
::UnityEngine::Quaternion GlobalNamespace::QuaternionSerializable::FromSmallest(int sa, int sb, int sc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::FromSmallest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuaternionSerializable", "FromSmallest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(sc)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sa, sb, sc);
}
// Autogenerated method: QuaternionSerializable.Serialize
void GlobalNamespace::QuaternionSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: QuaternionSerializable.Deserialize
void GlobalNamespace::QuaternionSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: QuaternionSerializable.Equals
bool GlobalNamespace::QuaternionSerializable::Equals(::GlobalNamespace::QuaternionSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: QuaternionSerializable.Approximately
bool GlobalNamespace::QuaternionSerializable::Approximately(::GlobalNamespace::QuaternionSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: QuaternionSerializable.GetSize
int GlobalNamespace::QuaternionSerializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.Equals
bool GlobalNamespace::QuaternionSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: QuaternionSerializable.GetHashCode
int GlobalNamespace::QuaternionSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.ToString
::StringW GlobalNamespace::QuaternionSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: QuaternionSerializable.op_Addition
::GlobalNamespace::QuaternionSerializable GlobalNamespace::operator+(const ::GlobalNamespace::QuaternionSerializable& a, const ::GlobalNamespace::QuaternionSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuaternionSerializable", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: QuaternionSerializable.op_Subtraction
::GlobalNamespace::QuaternionSerializable GlobalNamespace::operator-(const ::GlobalNamespace::QuaternionSerializable& a, const ::GlobalNamespace::QuaternionSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::QuaternionSerializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "QuaternionSerializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::QuaternionSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable position
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::PoseSerializable::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::dyn_position");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public QuaternionSerializable rotation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::QuaternionSerializable& GlobalNamespace::PoseSerializable::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::QuaternionSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseSerializable.get_identity
::GlobalNamespace::PoseSerializable GlobalNamespace::PoseSerializable::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoseSerializable", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PoseSerializable..ctor
// ABORTED elsewhere.  GlobalNamespace::PoseSerializable::PoseSerializable(::GlobalNamespace::Vector3Serializable position, ::GlobalNamespace::QuaternionSerializable rotation)
// Autogenerated method: PoseSerializable.Serialize
void GlobalNamespace::PoseSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: PoseSerializable.Deserialize
void GlobalNamespace::PoseSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: PoseSerializable.Equals
bool GlobalNamespace::PoseSerializable::Equals(::GlobalNamespace::PoseSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: PoseSerializable.GetSize
int GlobalNamespace::PoseSerializable::GetSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PoseSerializable.Equals
bool GlobalNamespace::PoseSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: PoseSerializable.GetHashCode
int GlobalNamespace::PoseSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: PoseSerializable.ToString
::StringW GlobalNamespace::PoseSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PoseSerializable.op_Addition
::GlobalNamespace::PoseSerializable GlobalNamespace::operator+(const ::GlobalNamespace::PoseSerializable& a, const ::GlobalNamespace::PoseSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoseSerializable", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: PoseSerializable.op_Subtraction
::GlobalNamespace::PoseSerializable GlobalNamespace::operator-(const ::GlobalNamespace::PoseSerializable& a, const ::GlobalNamespace::PoseSerializable& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseSerializable::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PoseSerializable", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PoseSerializable, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSerializable
#include "GlobalNamespace/ColorSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::ColorSerializable::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::dyn__color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSerializable..ctor
// ABORTED elsewhere.  GlobalNamespace::ColorSerializable::ColorSerializable(::UnityEngine::Color color)
// Autogenerated method: ColorSerializable.Serialize
void GlobalNamespace::ColorSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ColorSerializable.Deserialize
void GlobalNamespace::ColorSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ColorSerializable.Equals
bool GlobalNamespace::ColorSerializable::Equals(::GlobalNamespace::ColorSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: ColorSerializable.Equals
bool GlobalNamespace::ColorSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ColorSerializable.GetHashCode
int GlobalNamespace::ColorSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSerializable.ToString
::StringW GlobalNamespace::ColorSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSerializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Color32Serializable
#include "GlobalNamespace/Color32Serializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color32 _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color32& GlobalNamespace::Color32Serializable::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::dyn__color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color32*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Color32Serializable..ctor
// ABORTED elsewhere.  GlobalNamespace::Color32Serializable::Color32Serializable(::UnityEngine::Color32 color)
// Autogenerated method: Color32Serializable.Serialize
void GlobalNamespace::Color32Serializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: Color32Serializable.Deserialize
void GlobalNamespace::Color32Serializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: Color32Serializable.Equals
bool GlobalNamespace::Color32Serializable::Equals(::GlobalNamespace::Color32Serializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Color32Serializable.Equals
bool GlobalNamespace::Color32Serializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Color32Serializable.GetHashCode
int GlobalNamespace::Color32Serializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Color32Serializable.ToString
::StringW GlobalNamespace::Color32Serializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Color32Serializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorNoAlphaSerializable
#include "GlobalNamespace/ColorNoAlphaSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::ColorNoAlphaSerializable::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::dyn__color");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorNoAlphaSerializable..ctor
// ABORTED elsewhere.  GlobalNamespace::ColorNoAlphaSerializable::ColorNoAlphaSerializable(::UnityEngine::Color color)
// Autogenerated method: ColorNoAlphaSerializable.Serialize
void GlobalNamespace::ColorNoAlphaSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ColorNoAlphaSerializable.Deserialize
void GlobalNamespace::ColorNoAlphaSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ColorNoAlphaSerializable.Equals
bool GlobalNamespace::ColorNoAlphaSerializable::Equals(::GlobalNamespace::ColorNoAlphaSerializable other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: ColorNoAlphaSerializable.Equals
bool GlobalNamespace::ColorNoAlphaSerializable::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: ColorNoAlphaSerializable.GetHashCode
int GlobalNamespace::ColorNoAlphaSerializable::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorNoAlphaSerializable.ToString
::StringW GlobalNamespace::ColorNoAlphaSerializable::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorNoAlphaSerializable::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SliderSpawnInfoNetSerializable
#include "GlobalNamespace/SliderSpawnInfoNetSerializable.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ColorType colorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorType& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderData/Type sliderType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderData::Type& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_sliderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_sliderType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderData::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasHeadNote
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_hasHeadNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_hasHeadNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasHeadNote"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 headLineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer headLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer headBeforeJumpLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headBeforeJumpLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headBeforeJumpLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headBeforeJumpLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headControlPointLengthMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headControlPointLengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headControlPointLengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteCutDirection headCutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headCutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headCutDirectionAngleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headCutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headCutDirectionAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCutDirectionAngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasTailNote
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_hasTailNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_hasTailNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasTailNote"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tailTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tailLineIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer tailLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteLineLayer tailBeforeJumpLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailBeforeJumpLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailBeforeJumpLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailBeforeJumpLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tailControlPointLengthMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailControlPointLengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailControlPointLengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NoteCutDirection tailCutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailCutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailCutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tailCutDirectionAngleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailCutDirectionAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailCutDirectionAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailCutDirectionAngleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SliderMidAnchorMode midAnchorMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderMidAnchorMode& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_midAnchorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_midAnchorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "midAnchorMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderMidAnchorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sliceCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_sliceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_sliceCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliceCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single squishAmount
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_squishAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_squishAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "squishAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable headMoveStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headMoveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headMoveStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headMoveStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable headJumpStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable headJumpEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headJumpGravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_headJumpGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headJumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable tailMoveStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailMoveStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailMoveStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailMoveStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable tailJumpStartPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpStartPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpStartPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpStartPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Vector3Serializable tailJumpEndPos
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3Serializable& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpEndPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpEndPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpEndPos"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3Serializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tailJumpGravity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpGravity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_tailJumpGravity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tailJumpGravity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single moveDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_jumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_jumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotation
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::dyn_rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SliderSpawnInfoNetSerializable.Obtain
::GlobalNamespace::SliderSpawnInfoNetSerializable* GlobalNamespace::SliderSpawnInfoNetSerializable::Obtain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::Obtain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SliderSpawnInfoNetSerializable", "Obtain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderSpawnInfoNetSerializable*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SliderSpawnInfoNetSerializable.Init
::GlobalNamespace::SliderSpawnInfoNetSerializable* GlobalNamespace::SliderSpawnInfoNetSerializable::Init(::GlobalNamespace::ColorType colorType, ::GlobalNamespace::SliderData::Type sliderType, bool hasHeadNote, float headTime, int headLineIndex, ::GlobalNamespace::NoteLineLayer headLineLayer, ::GlobalNamespace::NoteLineLayer headBeforeJumpLineLayer, float headControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection headCutDirection, float headCutDirectionAngleOffset, bool hasTailNote, float tailTime, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailLineLayer, ::GlobalNamespace::NoteLineLayer tailBeforeJumpLineLayer, float tailControlPointLengthMultiplier, ::GlobalNamespace::NoteCutDirection tailCutDirection, float tailCutDirectionAngleOffset, ::GlobalNamespace::SliderMidAnchorMode midAnchorMode, int sliceCount, float squishAmount, ::UnityEngine::Vector3 headMoveStartPos, ::UnityEngine::Vector3 headJumpStartPos, ::UnityEngine::Vector3 headJumpEndPos, float headJumpGravity, ::UnityEngine::Vector3 tailMoveStartPos, ::UnityEngine::Vector3 tailJumpStartPos, ::UnityEngine::Vector3 tailJumpEndPos, float tailJumpGravity, float moveDuration, float jumpDuration, float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(sliderType), ::il2cpp_utils::ExtractType(hasHeadNote), ::il2cpp_utils::ExtractType(headTime), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headLineLayer), ::il2cpp_utils::ExtractType(headBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(headControlPointLengthMultiplier), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(headCutDirectionAngleOffset), ::il2cpp_utils::ExtractType(hasTailNote), ::il2cpp_utils::ExtractType(tailTime), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailLineLayer), ::il2cpp_utils::ExtractType(tailBeforeJumpLineLayer), ::il2cpp_utils::ExtractType(tailControlPointLengthMultiplier), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(tailCutDirectionAngleOffset), ::il2cpp_utils::ExtractType(midAnchorMode), ::il2cpp_utils::ExtractType(sliceCount), ::il2cpp_utils::ExtractType(squishAmount), ::il2cpp_utils::ExtractType(headMoveStartPos), ::il2cpp_utils::ExtractType(headJumpStartPos), ::il2cpp_utils::ExtractType(headJumpEndPos), ::il2cpp_utils::ExtractType(headJumpGravity), ::il2cpp_utils::ExtractType(tailMoveStartPos), ::il2cpp_utils::ExtractType(tailJumpStartPos), ::il2cpp_utils::ExtractType(tailJumpEndPos), ::il2cpp_utils::ExtractType(tailJumpGravity), ::il2cpp_utils::ExtractType(moveDuration), ::il2cpp_utils::ExtractType(jumpDuration), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderSpawnInfoNetSerializable*, false>(this, ___internal__method, colorType, sliderType, hasHeadNote, headTime, headLineIndex, headLineLayer, headBeforeJumpLineLayer, headControlPointLengthMultiplier, headCutDirection, headCutDirectionAngleOffset, hasTailNote, tailTime, tailLineIndex, tailLineLayer, tailBeforeJumpLineLayer, tailControlPointLengthMultiplier, tailCutDirection, tailCutDirectionAngleOffset, midAnchorMode, sliceCount, squishAmount, headMoveStartPos, headJumpStartPos, headJumpEndPos, headJumpGravity, tailMoveStartPos, tailJumpStartPos, tailJumpEndPos, tailJumpGravity, moveDuration, jumpDuration, rotation);
}
// Autogenerated method: SliderSpawnInfoNetSerializable.Serialize
void GlobalNamespace::SliderSpawnInfoNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: SliderSpawnInfoNetSerializable.Deserialize
void GlobalNamespace::SliderSpawnInfoNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SliderSpawnInfoNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kHashCount
int GlobalNamespace::SongPackMask::_get_kHashCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_get_kHashCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongPackMask", "kHashCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHashCount
void GlobalNamespace::SongPackMask::_set_kHashCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_set_kHashCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kHashCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kHashBits
int GlobalNamespace::SongPackMask::_get_kHashBits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_get_kHashBits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongPackMask", "kHashBits"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kHashBits
void GlobalNamespace::SongPackMask::_set_kHashBits(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_set_kHashBits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kHashBits", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringPrefix
::StringW GlobalNamespace::SongPackMask::_get_kToStringPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_get_kToStringPrefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SongPackMask", "kToStringPrefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringPrefix
void GlobalNamespace::SongPackMask::_set_kToStringPrefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_set_kToStringPrefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringPrefix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kToStringSuffix
::StringW GlobalNamespace::SongPackMask::_get_kToStringSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_get_kToStringSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "SongPackMask", "kToStringSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kToStringSuffix
void GlobalNamespace::SongPackMask::_set_kToStringSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::_set_kToStringSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMask", "kToStringSuffix", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BitMask128 _bloomFilter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BitMask128& GlobalNamespace::SongPackMask::dyn__bloomFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::dyn__bloomFilter");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFilter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BitMask128*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPackMask.get_all
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::get_all() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::get_all");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "get_all", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMask..ctor
GlobalNamespace::SongPackMask::SongPackMask(::StringW packId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packId);
}
// Autogenerated method: SongPackMask..ctor
// ABORTED elsewhere.  GlobalNamespace::SongPackMask::SongPackMask(::GlobalNamespace::BitMask128 bloomFilter)
// Autogenerated method: SongPackMask..ctor
GlobalNamespace::SongPackMask::SongPackMask(::System::Collections::Generic::IEnumerable_1<::StringW>* packs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packs);
}
// Autogenerated method: SongPackMask.Contains
bool GlobalNamespace::SongPackMask::Contains(::GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.DifferenceFrom
int GlobalNamespace::SongPackMask::DifferenceFrom(::GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::DifferenceFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "DifferenceFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.Serialize
void GlobalNamespace::SongPackMask::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: SongPackMask.CreateFromSerializedData
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(this, ___internal__method, reader);
}
// Autogenerated method: SongPackMask.Deserialize
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: SongPackMask.ToShortString
::StringW GlobalNamespace::SongPackMask::ToShortString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::ToShortString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToShortString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMask.ToBytes
::ArrayW<uint8_t> GlobalNamespace::SongPackMask::ToBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::ToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals(::GlobalNamespace::SongPackMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: SongPackMask.TryParse
bool GlobalNamespace::SongPackMask::TryParse(::StringW stringSerializedMask, ByRef<::GlobalNamespace::SongPackMask> songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::SongPackMask&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringSerializedMask, byref(songPackMask));
}
// Autogenerated method: SongPackMask.Parse
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::Parse(::StringW stringSerializedMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stringSerializedMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stringSerializedMask);
}
// Autogenerated method: SongPackMask.FromBytes
::GlobalNamespace::SongPackMask GlobalNamespace::SongPackMask::FromBytes(::ArrayW<uint8_t> bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::FromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "FromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: SongPackMask.ToString
::StringW GlobalNamespace::SongPackMask::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMask.GetHashCode
int GlobalNamespace::SongPackMask::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMask.Equals
bool GlobalNamespace::SongPackMask::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: SongPackMask.op_BitwiseOr
::GlobalNamespace::SongPackMask GlobalNamespace::operator|(const ::GlobalNamespace::SongPackMask& a, const ::GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::op_BitwiseOr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "op_BitwiseOr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_BitwiseAnd
::GlobalNamespace::SongPackMask GlobalNamespace::operator&(const ::GlobalNamespace::SongPackMask& a, const ::GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::op_BitwiseAnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "op_BitwiseAnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SongPackMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::SongPackMask& a, const ::GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: SongPackMask.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::SongPackMask& a, const ::GlobalNamespace::SongPackMask& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMask::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMask", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMaskConverter
#include "GlobalNamespace/SongPackMaskConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SongPackMaskConverter.CanConvert
bool GlobalNamespace::SongPackMaskConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated method: SongPackMaskConverter.ReadJson
::Il2CppObject* GlobalNamespace::SongPackMaskConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: SongPackMaskConverter.WriteJson
void GlobalNamespace::SongPackMaskConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongPackMaskConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VarIntExtensions
#include "GlobalNamespace/VarIntExtensions.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VarIntExtensions.PutVarInt
void GlobalNamespace::VarIntExtensions::PutVarInt(::LiteNetLib::Utils::NetDataWriter* writer, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::PutVarInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarInt
int GlobalNamespace::VarIntExtensions::GetVarInt(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetVarInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarUInt
void GlobalNamespace::VarIntExtensions::PutVarUInt(::LiteNetLib::Utils::NetDataWriter* writer, uint val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::PutVarUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarUInt
uint GlobalNamespace::VarIntExtensions::GetVarUInt(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetVarUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarLong
void GlobalNamespace::VarIntExtensions::PutVarLong(::LiteNetLib::Utils::NetDataWriter* writer, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::PutVarLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarLong
int64_t GlobalNamespace::VarIntExtensions::GetVarLong(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetVarLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.PutVarULong
void GlobalNamespace::VarIntExtensions::PutVarULong(::LiteNetLib::Utils::NetDataWriter* writer, uint64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::PutVarULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "PutVarULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, val);
}
// Autogenerated method: VarIntExtensions.GetVarULong
uint64_t GlobalNamespace::VarIntExtensions::GetVarULong(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetVarULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetVarULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: VarIntExtensions.TryGetVarUInt
bool GlobalNamespace::VarIntExtensions::TryGetVarUInt(::LiteNetLib::Utils::NetDataReader* reader, ByRef<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::TryGetVarUInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "TryGetVarUInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<uint&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(value));
}
// Autogenerated method: VarIntExtensions.TryGetVarULong
bool GlobalNamespace::VarIntExtensions::TryGetVarULong(::LiteNetLib::Utils::NetDataReader* reader, ByRef<uint64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::TryGetVarULong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "TryGetVarULong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<uint64_t&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, byref(value));
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(uint val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated method: VarIntExtensions.GetSize
int GlobalNamespace::VarIntExtensions::GetSize(uint64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VarIntExtensions::GetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VarIntExtensions", "GetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioHelpers
#include "GlobalNamespace/AudioHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioHelpers.NormalizedVolumeToDB
float GlobalNamespace::AudioHelpers::NormalizedVolumeToDB(float normalizedVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioHelpers::NormalizedVolumeToDB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioHelpers", "NormalizedVolumeToDB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normalizedVolume)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, normalizedVolume);
}
// Autogenerated method: AudioHelpers.DBToNormalizedVolume
float GlobalNamespace::AudioHelpers::DBToNormalizedVolume(float db) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioHelpers::DBToNormalizedVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioHelpers", "DBToNormalizedVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(db)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, db);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CaptureAudioToWav
#include "GlobalNamespace/CaptureAudioToWav.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CaptureAudioToWav::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sampleRate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CaptureAudioToWav::dyn__sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::dyn__sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _headerSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CaptureAudioToWav::dyn__headerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::dyn__headerSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headerSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _recording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CaptureAudioToWav::dyn__recording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::dyn__recording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileStream _fileStream
[[deprecated("Use field access instead!")]] ::System::IO::FileStream*& GlobalNamespace::CaptureAudioToWav::dyn__fileStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::dyn__fileStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileStream"))->offset;
  return *reinterpret_cast<::System::IO::FileStream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CaptureAudioToWav.Awake
void GlobalNamespace::CaptureAudioToWav::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CaptureAudioToWav.Update
void GlobalNamespace::CaptureAudioToWav::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CaptureAudioToWav.StartWriting
void GlobalNamespace::CaptureAudioToWav::StartWriting(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::StartWriting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartWriting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: CaptureAudioToWav.OnAudioFilterRead
void GlobalNamespace::CaptureAudioToWav::OnAudioFilterRead(::ArrayW<float> data, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, channels);
}
// Autogenerated method: CaptureAudioToWav.ConvertAndWrite
void GlobalNamespace::CaptureAudioToWav::ConvertAndWrite(::ArrayW<float> dataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::ConvertAndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertAndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dataSource);
}
// Autogenerated method: CaptureAudioToWav.WriteHeader
void GlobalNamespace::CaptureAudioToWav::WriteHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CaptureAudioToWav::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RandomizedPitch
#include "GlobalNamespace/RandomizedPitch.hpp"
// Including type: RandomizedPitch/<PlayDelayedCoroutine>d__9
#include "GlobalNamespace/RandomizedPitch_-PlayDelayedCoroutine-d__9.hpp"
// Including type: RandomizedPitch/<RestorePitchWithDelay>d__10
#include "GlobalNamespace/RandomizedPitch_-RestorePitchWithDelay-d__10.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::RandomizedPitch::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minPitchMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RandomizedPitch::dyn__minPitchMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__minPitchMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPitchMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPitchMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RandomizedPitch::dyn__maxPitchMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__maxPitchMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPitchMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playOnAwake
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RandomizedPitch::dyn__playOnAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__playOnAwake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playOnAwake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _originalPitch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RandomizedPitch::dyn__originalPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__originalPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _restoringCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::RandomizedPitch::dyn__restoringCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::dyn__restoringCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_restoringCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomizedPitch.OnEnable
void GlobalNamespace::RandomizedPitch::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch.Play
void GlobalNamespace::RandomizedPitch::Play() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::Play");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch.PlayDelayed
void GlobalNamespace::RandomizedPitch::PlayDelayed(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::PlayDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, delay);
}
// Autogenerated method: RandomizedPitch.PlayDelayedCoroutine
::System::Collections::IEnumerator* GlobalNamespace::RandomizedPitch::PlayDelayedCoroutine(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::PlayDelayedCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDelayedCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: RandomizedPitch.RestorePitchWithDelay
::System::Collections::IEnumerator* GlobalNamespace::RandomizedPitch::RestorePitchWithDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::RestorePitchWithDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestorePitchWithDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RandomizedPitch/<PlayDelayedCoroutine>d__9
#include "GlobalNamespace/RandomizedPitch_-PlayDelayedCoroutine-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RandomizedPitch <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomizedPitch*& GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomizedPitch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.IDisposable.Dispose
void GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.MoveNext
bool GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<PlayDelayedCoroutine>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$PlayDelayedCoroutine$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: RandomizedPitch/<RestorePitchWithDelay>d__10
#include "GlobalNamespace/RandomizedPitch_-RestorePitchWithDelay-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RandomizedPitch <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RandomizedPitch*& GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomizedPitch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.IDisposable.Dispose
void GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.MoveNext
bool GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RandomizedPitch/<RestorePitchWithDelay>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RandomizedPitch::$RestorePitchWithDelay$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ActivateOnPlatform
#include "GlobalNamespace/ActivateOnPlatform.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VRPlatformSDK _vrPlatformSdk
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRPlatformSDK& GlobalNamespace::ActivateOnPlatform::dyn__vrPlatformSdk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnPlatform::dyn__vrPlatformSdk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformSdk"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRPlatformSDK*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::ActivateOnPlatform::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnPlatform::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ActivateOnPlatform.Awake
void GlobalNamespace::ActivateOnPlatform::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnPlatform::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CommandLineArguments
#include "GlobalNamespace/CommandLineArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CommandLineArguments.Contains
bool GlobalNamespace::CommandLineArguments::Contains(::StringW argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CommandLineArguments::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CommandLineArguments", "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, argument);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateAnimatorOnInputFocusCapture
#include "GlobalNamespace/DeactivateAnimatorOnInputFocusCapture.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
[[deprecated("Use field access instead!")]] ::UnityEngine::Animator*& GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _wasEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__wasEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::dyn__wasEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wasEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.Start
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.OnDestroy
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.HandleInputFocusCaptured
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAnimatorOnInputFocusCapture.HandleInputFocusReleased
void GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAnimatorOnInputFocusCapture::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateOnInputFocusCapture
#include "GlobalNamespace/DeactivateOnInputFocusCapture.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::DeactivateOnInputFocusCapture::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateOnInputFocusCapture::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeactivateOnInputFocusCapture.OnEnable
void GlobalNamespace::DeactivateOnInputFocusCapture::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateOnInputFocusCapture::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.OnDestroy
void GlobalNamespace::DeactivateOnInputFocusCapture::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateOnInputFocusCapture::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.HandleInputFocusCaptured
void GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateOnInputFocusCapture.HandleInputFocusReleased
void GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateOnInputFocusCapture::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileHelpers
#include "GlobalNamespace/FileHelpers.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileHelpers.GetEscapedURLForFilePath
::StringW GlobalNamespace::FileHelpers::GetEscapedURLForFilePath(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::GetEscapedURLForFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "GetEscapedURLForFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: FileHelpers.GetUniqueDirectoryNameByAppendingNumber
::StringW GlobalNamespace::FileHelpers::GetUniqueDirectoryNameByAppendingNumber(::StringW dirName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::GetUniqueDirectoryNameByAppendingNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "GetUniqueDirectoryNameByAppendingNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dirName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dirName);
}
// Autogenerated method: FileHelpers.GetFilePaths
::ArrayW<::StringW> GlobalNamespace::FileHelpers::GetFilePaths(::StringW directoryPath, ::System::Collections::Generic::HashSet_1<::StringW>* extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::GetFilePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "GetFilePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directoryPath, extensions);
}
// Autogenerated method: FileHelpers.GetFileNamesFromFilePaths
::ArrayW<::StringW> GlobalNamespace::FileHelpers::GetFileNamesFromFilePaths(::ArrayW<::StringW> filePaths) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::GetFileNamesFromFilePaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "GetFileNamesFromFilePaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePaths)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePaths);
}
// Autogenerated method: FileHelpers.SaveToJSONFile
void GlobalNamespace::FileHelpers::SaveToJSONFile(::Il2CppObject* obj, ::StringW filePath, bool prettyPrint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::SaveToJSONFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "SaveToJSONFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(prettyPrint)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, filePath, prettyPrint);
}
// Autogenerated method: FileHelpers.SaveToJSONFile
void GlobalNamespace::FileHelpers::SaveToJSONFile(::Il2CppObject* obj, ::StringW filePath, ::StringW tempFilePath, ::StringW backupFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::SaveToJSONFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "SaveToJSONFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(tempFilePath), ::il2cpp_utils::ExtractType(backupFilePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, filePath, tempFilePath, backupFilePath);
}
// Autogenerated method: FileHelpers.LoadJSONFile
::StringW GlobalNamespace::FileHelpers::LoadJSONFile(::StringW filePath, ::StringW backupFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileHelpers::LoadJSONFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileHelpers", "LoadJSONFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(backupFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, backupFilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FindUnityObjectsHelper
#include "GlobalNamespace/FindUnityObjectsHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FindUnityObjectsHelper.GetMonoBehavioursInLoadedScenes
::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>* GlobalNamespace::FindUnityObjectsHelper::GetMonoBehavioursInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FindUnityObjectsHelper::GetMonoBehavioursInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetMonoBehavioursInLoadedScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllRootGameObjectsInLoadedScenes
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::FindUnityObjectsHelper::GetAllRootGameObjectsInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FindUnityObjectsHelper::GetAllRootGameObjectsInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllRootGameObjectsInLoadedScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllGameObjectsInGameObject
::System::Collections::Generic::List_1<::UnityEngine::GameObject*>* GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInGameObject(::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllGameObjectsInGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, go);
}
// Autogenerated method: FindUnityObjectsHelper.GetAllGameObjectsInLoadedScenes
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInLoadedScenes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FindUnityObjectsHelper::GetAllGameObjectsInLoadedScenes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FindUnityObjectsHelper", "GetAllGameObjectsInLoadedScenes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FixedUpdateVector3SmoothValue
#include "GlobalNamespace/FixedUpdateVector3SmoothValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FixedUpdateVector3SmoothValue.Interpolate
::UnityEngine::Vector3 GlobalNamespace::FixedUpdateVector3SmoothValue::Interpolate(::UnityEngine::Vector3 value0, ::UnityEngine::Vector3 value1, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FixedUpdateVector3SmoothValue::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value0), ::il2cpp_utils::ExtractType(value1), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, value0, value1, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GenericLogger
#include "GlobalNamespace/GenericLogger.hpp"
// Including type: GenericLogger/ScopedStopwatch
#include "GlobalNamespace/GenericLogger_ScopedStopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GenericLogger.VerboseLog
void GlobalNamespace::GenericLogger::VerboseLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GenericLogger::VerboseLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GenericLogger", "VerboseLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: GenericLogger.Log
void GlobalNamespace::GenericLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GenericLogger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GenericLogger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GenericLogger/ScopedStopwatch
#include "GlobalNamespace/GenericLogger_ScopedStopwatch.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _processName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GenericLogger::ScopedStopwatch::dyn__processName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GenericLogger::ScopedStopwatch::dyn__processName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch _stopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::GenericLogger::ScopedStopwatch::dyn__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GenericLogger::ScopedStopwatch::dyn__stopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GenericLogger/ScopedStopwatch.Dispose
void GlobalNamespace::GenericLogger::ScopedStopwatch::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GenericLogger::ScopedStopwatch::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRefreshable
#include "GlobalNamespace/IRefreshable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRefreshable.Refresh
void GlobalNamespace::IRefreshable::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRefreshable::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KeyboardShortcutsManager
#include "GlobalNamespace/KeyboardShortcutsManager.hpp"
// Including type: KeyboardShortcutsManager/KeyboardShortcut
#include "GlobalNamespace/KeyboardShortcutsManager_KeyboardShortcut.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<KeyboardShortcutsManager/KeyboardShortcut,System.Collections.Generic.List`1<System.Action>> _keyboardShortcutActions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, ::System::Collections::Generic::List_1<::System::Action*>*>*& GlobalNamespace::KeyboardShortcutsManager::dyn__keyboardShortcutActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::dyn__keyboardShortcutActions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyboardShortcutActions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, ::System::Collections::Generic::List_1<::System::Action*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KeyboardShortcutsManager.Update
void GlobalNamespace::KeyboardShortcutsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts(::System::Collections::Generic::Dictionary_2<::UnityEngine::KeyCode, ::System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shortcutActions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, ::System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shortcutActions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut* keyboardShortcut, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardShortcut), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboardShortcut, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::UnityEngine::KeyCode combinationKey1, ::UnityEngine::KeyCode combinationKey2, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(combinationKey1), ::il2cpp_utils::ExtractType(combinationKey2), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, combinationKey1, combinationKey2, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::UnityEngine::KeyCode combinationKey1, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(combinationKey1), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, combinationKey1, callback);
}
// Autogenerated method: KeyboardShortcutsManager.RemoveKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::RemoveKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts(::System::Collections::Generic::Dictionary_2<::UnityEngine::KeyCode, ::System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shortcutActions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcuts
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts(::System::Collections::Generic::Dictionary_2<::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut*, ::System::Action*>* shortcutActions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcuts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcuts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shortcutActions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, shortcutActions);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut* keyboardShortcut, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyboardShortcut), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyboardShortcut, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::UnityEngine::KeyCode combinationKey1, ::UnityEngine::KeyCode combinationKey2, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(combinationKey1), ::il2cpp_utils::ExtractType(combinationKey2), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, combinationKey1, combinationKey2, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::UnityEngine::KeyCode combinationKey1, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(combinationKey1), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, combinationKey1, callback);
}
// Autogenerated method: KeyboardShortcutsManager.AddKeyboardShortcut
void GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut(::UnityEngine::KeyCode mainKey, ::System::Action* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::AddKeyboardShortcut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyboardShortcut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainKey), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, mainKey, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KeyboardShortcutsManager/KeyboardShortcut
#include "GlobalNamespace/KeyboardShortcutsManager_KeyboardShortcut.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode mainKey
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_mainKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_mainKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainKey"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode combinationKey1
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_combinationKey1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_combinationKey1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combinationKey1"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.KeyCode combinationKey2
[[deprecated("Use field access instead!")]] ::UnityEngine::KeyCode& GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_combinationKey2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::dyn_combinationKey2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "combinationKey2"))->offset;
  return *reinterpret_cast<::UnityEngine::KeyCode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KeyboardShortcutsManager/KeyboardShortcut.GetHashCode
int GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: KeyboardShortcutsManager/KeyboardShortcut.Equals
bool GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::KeyboardShortcutsManager::KeyboardShortcut::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LinkedListExtension
#include "GlobalNamespace/LinkedListExtension.hpp"
// Including type: System.Collections.Generic.LinkedListNode`1
#include "System/Collections/Generic/LinkedListNode_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MipMapBiasSpriteSetter
#include "GlobalNamespace/MipMapBiasSpriteSetter.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite[] _sprites
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Sprite*>& GlobalNamespace::MipMapBiasSpriteSetter::dyn__sprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MipMapBiasSpriteSetter::dyn__sprites");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprites"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _mipMapBias
[[deprecated("Use field access instead!")]] float& GlobalNamespace::MipMapBiasSpriteSetter::dyn__mipMapBias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MipMapBiasSpriteSetter::dyn__mipMapBias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mipMapBias"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MipMapBiasSpriteSetter.Start
void GlobalNamespace::MipMapBiasSpriteSetter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MipMapBiasSpriteSetter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityScenesHelper
#include "GlobalNamespace/UnityScenesHelper.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityScenesHelper.SetActiveRootObjectsInScene
void GlobalNamespace::UnityScenesHelper::SetActiveRootObjectsInScene(::UnityEngine::SceneManagement::Scene scene, bool active) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityScenesHelper::SetActiveRootObjectsInScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UnityScenesHelper", "SetActiveRootObjectsInScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scene), ::il2cpp_utils::ExtractType(active)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, scene, active);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DrawIfAttribute
#include "GlobalNamespace/DrawIfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String propertyName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DrawIfAttribute::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Object value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::DrawIfAttribute::dyn_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::dyn_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Object orValue
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::DrawIfAttribute::dyn_orValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::dyn_orValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "orValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly DrawIfAttribute/DisablingType disablingType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DrawIfAttribute::DisablingType& GlobalNamespace::DrawIfAttribute::dyn_disablingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::dyn_disablingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disablingType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DrawIfAttribute::DisablingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DrawIfAttribute/DisablingType
#include "GlobalNamespace/DrawIfAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DrawIfAttribute/DisablingType ReadOnly
::GlobalNamespace::DrawIfAttribute::DisablingType GlobalNamespace::DrawIfAttribute::DisablingType::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::DisablingType::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DrawIfAttribute::DisablingType>("", "DrawIfAttribute/DisablingType", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public DrawIfAttribute/DisablingType ReadOnly
void GlobalNamespace::DrawIfAttribute::DisablingType::_set_ReadOnly(::GlobalNamespace::DrawIfAttribute::DisablingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::DisablingType::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DrawIfAttribute/DisablingType", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public DrawIfAttribute/DisablingType DontDraw
::GlobalNamespace::DrawIfAttribute::DisablingType GlobalNamespace::DrawIfAttribute::DisablingType::_get_DontDraw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::DisablingType::_get_DontDraw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DrawIfAttribute::DisablingType>("", "DrawIfAttribute/DisablingType", "DontDraw"));
}
// Autogenerated static field setter
// Set static field: static public DrawIfAttribute/DisablingType DontDraw
void GlobalNamespace::DrawIfAttribute::DisablingType::_set_DontDraw(::GlobalNamespace::DrawIfAttribute::DisablingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::DisablingType::_set_DontDraw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DrawIfAttribute/DisablingType", "DontDraw", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DrawIfAttribute::DisablingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawIfAttribute::DisablingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AssertExtensions
#include "GlobalNamespace/AssertExtensions.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kUnityAssertions
::StringW GlobalNamespace::AssertExtensions::_get_kUnityAssertions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssertExtensions::_get_kUnityAssertions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "AssertExtensions", "kUnityAssertions"));
}
// Autogenerated static field setter
// Set static field: static private System.String kUnityAssertions
void GlobalNamespace::AssertExtensions::_set_kUnityAssertions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssertExtensions::_set_kUnityAssertions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AssertExtensions", "kUnityAssertions", value));
}
// Autogenerated method: AssertExtensions.LessThan
void GlobalNamespace::AssertExtensions::LessThan(float expected, float value, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AssertExtensions::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AssertExtensions", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, value, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ComponentExtensions
#include "GlobalNamespace/ComponentExtensions.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CubicBezierHelper
#include "GlobalNamespace/CubicBezierHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CubicBezierHelper.EvaluateCurve
::UnityEngine::Vector3 GlobalNamespace::CubicBezierHelper::EvaluateCurve(ByRef<::UnityEngine::Vector3> a1, ByRef<::UnityEngine::Vector3> c1, ByRef<::UnityEngine::Vector3> c2, ByRef<::UnityEngine::Vector3> a2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::EvaluateCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "EvaluateCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a1), byref(c1), byref(c2), byref(a2), t);
}
// Autogenerated method: CubicBezierHelper.EvaluateCurveDerivative
::UnityEngine::Vector3 GlobalNamespace::CubicBezierHelper::EvaluateCurveDerivative(ByRef<::UnityEngine::Vector3> a1, ByRef<::UnityEngine::Vector3> c1, ByRef<::UnityEngine::Vector3> c2, ByRef<::UnityEngine::Vector3> a2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::EvaluateCurveDerivative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "EvaluateCurveDerivative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a1), byref(c1), byref(c2), byref(a2), t);
}
// Autogenerated method: CubicBezierHelper.EvaluateCurveSecondDerivative
::UnityEngine::Vector3 GlobalNamespace::CubicBezierHelper::EvaluateCurveSecondDerivative(ByRef<::UnityEngine::Vector3> a1, ByRef<::UnityEngine::Vector3> c1, ByRef<::UnityEngine::Vector3> c2, ByRef<::UnityEngine::Vector3> a2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::EvaluateCurveSecondDerivative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "EvaluateCurveSecondDerivative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a1), byref(c1), byref(c2), byref(a2), t);
}
// Autogenerated method: CubicBezierHelper.Normal
::UnityEngine::Vector3 GlobalNamespace::CubicBezierHelper::Normal(ByRef<::UnityEngine::Vector3> a1, ByRef<::UnityEngine::Vector3> c1, ByRef<::UnityEngine::Vector3> c2, ByRef<::UnityEngine::Vector3> a2, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::Normal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "Normal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a1), ::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2), ::il2cpp_utils::ExtractType(a2), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a1), byref(c1), byref(c2), byref(a2), t);
}
// Autogenerated method: CubicBezierHelper.SplitCurve
void GlobalNamespace::CubicBezierHelper::SplitCurve(::System::Collections::Generic::List_1<::UnityEngine::Vector3>* points, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::SplitCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "SplitCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, t);
}
// Autogenerated method: CubicBezierHelper.EstimateCurveLength
float GlobalNamespace::CubicBezierHelper::EstimateCurveLength(ByRef<::UnityEngine::Vector3> p0, ByRef<::UnityEngine::Vector3> p1, ByRef<::UnityEngine::Vector3> p2, ByRef<::UnityEngine::Vector3> p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CubicBezierHelper::EstimateCurveLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CubicBezierHelper", "EstimateCurveLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(p0), byref(p1), byref(p2), byref(p3));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DrawHelpers
#include "GlobalNamespace/DrawHelpers.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DrawHelpers.DrawTexture
void GlobalNamespace::DrawHelpers::DrawTexture(::UnityEngine::Texture* texture, float x, float y, float w, float h, ::UnityEngine::Material* mat, float sx, float sy, float sw, float sh) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrawHelpers::DrawTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DrawHelpers", "DrawTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(texture), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(w), ::il2cpp_utils::ExtractType(h), ::il2cpp_utils::ExtractType(mat), ::il2cpp_utils::ExtractType(sx), ::il2cpp_utils::ExtractType(sy), ::il2cpp_utils::ExtractType(sw), ::il2cpp_utils::ExtractType(sh)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, texture, x, y, w, h, mat, sx, sy, sw, sh);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DroppedFramesLabel
#include "GlobalNamespace/DroppedFramesLabel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
[[deprecated("Use field access instead!")]] ::TMPro::TextMeshProUGUI*& GlobalNamespace::DroppedFramesLabel::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _expectedFrameRate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DroppedFramesLabel::dyn__expectedFrameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__expectedFrameRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expectedFrameRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _resetInterval
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DroppedFramesLabel::dyn__resetInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__resetInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resetInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _totalNumberOfDroppedFrames
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DroppedFramesLabel::dyn__totalNumberOfDroppedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__totalNumberOfDroppedFrames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalNumberOfDroppedFrames"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _syncedFrameTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DroppedFramesLabel::dyn__syncedFrameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__syncedFrameTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncedFrameTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intervalTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DroppedFramesLabel::dyn__intervalTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__intervalTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intervalTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxFrameTimeInInterval
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DroppedFramesLabel::dyn__maxFrameTimeInInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__maxFrameTimeInInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxFrameTimeInInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameCountInInterval
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DroppedFramesLabel::dyn__frameCountInInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::dyn__frameCountInInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameCountInInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DroppedFramesLabel.Start
void GlobalNamespace::DroppedFramesLabel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroppedFramesLabel.Update
void GlobalNamespace::DroppedFramesLabel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DroppedFramesLabel.RefreshText
void GlobalNamespace::DroppedFramesLabel::RefreshText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DroppedFramesLabel::RefreshText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RenderTextureExtensions
#include "GlobalNamespace/RenderTextureExtensions.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RenderTextureExtensions.GetTexture2D
::UnityEngine::Texture2D* GlobalNamespace::RenderTextureExtensions::GetTexture2D(::UnityEngine::RenderTexture* rt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RenderTextureExtensions::GetTexture2D");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RenderTextureExtensions", "GetTexture2D", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rt)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rt);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimeHelper
#include "GlobalNamespace/TimeHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single <time>k__BackingField
float GlobalNamespace::TimeHelper::_get_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_get_$time$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<time>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <time>k__BackingField
void GlobalNamespace::TimeHelper::_set_$time$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_set_$time$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<time>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single <deltaTime>k__BackingField
float GlobalNamespace::TimeHelper::_get_$deltaTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_get_$deltaTime$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<deltaTime>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <deltaTime>k__BackingField
void GlobalNamespace::TimeHelper::_set_$deltaTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_set_$deltaTime$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<deltaTime>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single <fixedDeltaTime>k__BackingField
float GlobalNamespace::TimeHelper::_get_$fixedDeltaTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_get_$fixedDeltaTime$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<fixedDeltaTime>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <fixedDeltaTime>k__BackingField
void GlobalNamespace::TimeHelper::_set_$fixedDeltaTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_set_$fixedDeltaTime$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<fixedDeltaTime>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single <interpolationFactor>k__BackingField
float GlobalNamespace::TimeHelper::_get_$interpolationFactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_get_$interpolationFactor$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>("", "TimeHelper", "<interpolationFactor>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.Single <interpolationFactor>k__BackingField
void GlobalNamespace::TimeHelper::_set_$interpolationFactor$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::_set_$interpolationFactor$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimeHelper", "<interpolationFactor>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accumulator
[[deprecated("Use field access instead!")]] float& GlobalNamespace::TimeHelper::dyn__accumulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::dyn__accumulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accumulator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TimeHelper.get_time
float GlobalNamespace::TimeHelper::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_time
void GlobalNamespace::TimeHelper::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_deltaTime
float GlobalNamespace::TimeHelper::get_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::get_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "get_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_deltaTime
void GlobalNamespace::TimeHelper::set_deltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::set_deltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "set_deltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_fixedDeltaTime
float GlobalNamespace::TimeHelper::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_fixedDeltaTime
void GlobalNamespace::TimeHelper::set_fixedDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::set_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "set_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.get_interpolationFactor
float GlobalNamespace::TimeHelper::get_interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::get_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "get_interpolationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: TimeHelper.set_interpolationFactor
void GlobalNamespace::TimeHelper::set_interpolationFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::set_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "set_interpolationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TimeHelper.Awake
void GlobalNamespace::TimeHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeHelper.FixedUpdate
void GlobalNamespace::TimeHelper::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeHelper.Update
void GlobalNamespace::TimeHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TimeHelper.__SetTime
void GlobalNamespace::TimeHelper::__SetTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimeHelper::__SetTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "TimeHelper", "__SetTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VersionStringHelper
#include "GlobalNamespace/VersionStringHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VersionStringHelper.GetMajorVersionNumber
int GlobalNamespace::VersionStringHelper::GetMajorVersionNumber(::StringW versionString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VersionStringHelper::GetMajorVersionNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VersionStringHelper", "GetMajorVersionNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(versionString)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, versionString);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Easing
#include "GlobalNamespace/Easing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Easing.Linear
float GlobalNamespace::Easing::Linear(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::Linear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "Linear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InSine
float GlobalNamespace::Easing::InSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutSine
float GlobalNamespace::Easing::OutSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutSine
float GlobalNamespace::Easing::InOutSine(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutSine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutSine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuad
float GlobalNamespace::Easing::InQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuad
float GlobalNamespace::Easing::OutQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuad
float GlobalNamespace::Easing::InOutQuad(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InCubic
float GlobalNamespace::Easing::InCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutCubic
float GlobalNamespace::Easing::OutCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutCubic
float GlobalNamespace::Easing::InOutCubic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutCubic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutCubic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuart
float GlobalNamespace::Easing::InQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InQuart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InQuart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuart
float GlobalNamespace::Easing::OutQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutQuart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutQuart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuart
float GlobalNamespace::Easing::InOutQuart(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutQuart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutQuart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InQuint
float GlobalNamespace::Easing::InQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InQuint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InQuint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutQuint
float GlobalNamespace::Easing::OutQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutQuint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutQuint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutQuint
float GlobalNamespace::Easing::InOutQuint(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutQuint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutQuint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InExpo
float GlobalNamespace::Easing::InExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InExpo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InExpo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutExpo
float GlobalNamespace::Easing::OutExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutExpo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutExpo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutExpo
float GlobalNamespace::Easing::InOutExpo(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutExpo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutExpo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InCirc
float GlobalNamespace::Easing::InCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InCirc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InCirc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutCirc
float GlobalNamespace::Easing::OutCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutCirc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutCirc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutCirc
float GlobalNamespace::Easing::InOutCirc(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutCirc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutCirc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InBack
float GlobalNamespace::Easing::InBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutBack
float GlobalNamespace::Easing::OutBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutBack
float GlobalNamespace::Easing::InOutBack(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InElastic
float GlobalNamespace::Easing::InElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InElastic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InElastic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutElastic
float GlobalNamespace::Easing::OutElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutElastic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutElastic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutElastic
float GlobalNamespace::Easing::InOutElastic(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutElastic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutElastic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InBounce
float GlobalNamespace::Easing::InBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InBounce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InBounce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.OutBounce
float GlobalNamespace::Easing::OutBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::OutBounce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "OutBounce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Easing.InOutBounce
float GlobalNamespace::Easing::InOutBounce(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Easing::InOutBounce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Easing", "InOutBounce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EaseType
#include "GlobalNamespace/EaseType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EaseType None
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "None"));
}
// Autogenerated static field setter
// Set static field: static public EaseType None
void GlobalNamespace::EaseType::_set_None(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType Linear
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public EaseType Linear
void GlobalNamespace::EaseType::_set_Linear(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InSine
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InSine"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InSine
void GlobalNamespace::EaseType::_set_InSine(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InSine", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutSine
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutSine"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutSine
void GlobalNamespace::EaseType::_set_OutSine(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutSine", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutSine
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutSine"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutSine
void GlobalNamespace::EaseType::_set_InOutSine(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutSine", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InQuad
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InQuad"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InQuad
void GlobalNamespace::EaseType::_set_InQuad(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InQuad", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutQuad
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutQuad"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutQuad
void GlobalNamespace::EaseType::_set_OutQuad(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutQuad
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutQuad"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutQuad
void GlobalNamespace::EaseType::_set_InOutQuad(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InCubic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InCubic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InCubic
void GlobalNamespace::EaseType::_set_InCubic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InCubic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutCubic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutCubic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutCubic
void GlobalNamespace::EaseType::_set_OutCubic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutCubic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutCubic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutCubic
void GlobalNamespace::EaseType::_set_InOutCubic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InQuart
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InQuart"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InQuart
void GlobalNamespace::EaseType::_set_InQuart(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InQuart", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutQuart
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutQuart"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutQuart
void GlobalNamespace::EaseType::_set_OutQuart(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutQuart
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutQuart"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutQuart
void GlobalNamespace::EaseType::_set_InOutQuart(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InQuint
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InQuint"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InQuint
void GlobalNamespace::EaseType::_set_InQuint(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InQuint", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutQuint
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutQuint"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutQuint
void GlobalNamespace::EaseType::_set_OutQuint(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutQuint
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutQuint"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutQuint
void GlobalNamespace::EaseType::_set_InOutQuint(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InExpo
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InExpo"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InExpo
void GlobalNamespace::EaseType::_set_InExpo(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InExpo", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutExpo
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutExpo"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutExpo
void GlobalNamespace::EaseType::_set_OutExpo(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutExpo
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutExpo"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutExpo
void GlobalNamespace::EaseType::_set_InOutExpo(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InCirc
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InCirc"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InCirc
void GlobalNamespace::EaseType::_set_InCirc(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InCirc", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutCirc
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutCirc"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutCirc
void GlobalNamespace::EaseType::_set_OutCirc(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutCirc
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutCirc"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutCirc
void GlobalNamespace::EaseType::_set_InOutCirc(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InBack
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InBack"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InBack
void GlobalNamespace::EaseType::_set_InBack(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InBack", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutBack
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutBack"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutBack
void GlobalNamespace::EaseType::_set_OutBack(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutBack", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutBack
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutBack"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutBack
void GlobalNamespace::EaseType::_set_InOutBack(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutBack", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InElastic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InElastic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InElastic
void GlobalNamespace::EaseType::_set_InElastic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InElastic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutElastic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutElastic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutElastic
void GlobalNamespace::EaseType::_set_OutElastic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutElastic
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutElastic"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutElastic
void GlobalNamespace::EaseType::_set_InOutElastic(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InBounce
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InBounce"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InBounce
void GlobalNamespace::EaseType::_set_InBounce(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InBounce", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType OutBounce
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_OutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_OutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "OutBounce"));
}
// Autogenerated static field setter
// Set static field: static public EaseType OutBounce
void GlobalNamespace::EaseType::_set_OutBounce(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_OutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "OutBounce", value));
}
// Autogenerated static field getter
// Get static field: static public EaseType InOutBounce
::GlobalNamespace::EaseType GlobalNamespace::EaseType::_get_InOutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_get_InOutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EaseType>("", "EaseType", "InOutBounce"));
}
// Autogenerated static field setter
// Set static field: static public EaseType InOutBounce
void GlobalNamespace::EaseType::_set_InOutBounce(::GlobalNamespace::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::_set_InOutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EaseType", "InOutBounce", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EaseType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EaseType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Interpolation
#include "GlobalNamespace/Interpolation.hpp"
// Including type: EaseType
#include "GlobalNamespace/EaseType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Interpolation.Interpolate
float GlobalNamespace::Interpolation::Interpolate(float t, ::GlobalNamespace::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Interpolation::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Interpolation", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(easeType)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, easeType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManualUpdate
#include "GlobalNamespace/ManualUpdate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManualUpdateManager
#include "GlobalNamespace/ManualUpdateManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ActivateOnVisible
#include "GlobalNamespace/ActivateOnVisible.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] _gameObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::ActivateOnVisible::dyn__gameObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnVisible::dyn__gameObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ActivateOnVisible.Awake
void GlobalNamespace::ActivateOnVisible::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnVisible::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActivateOnVisible.OnBecameVisible
void GlobalNamespace::ActivateOnVisible::OnBecameVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnVisible::OnBecameVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActivateOnVisible.OnBecameInvisible
void GlobalNamespace::ActivateOnVisible::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActivateOnVisible::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlphabetScrollInfo
#include "GlobalNamespace/AlphabetScrollInfo.hpp"
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlphabetScrollInfo/Data
#include "GlobalNamespace/AlphabetScrollInfo_Data.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Char character
[[deprecated("Use field access instead!")]] ::Il2CppChar& GlobalNamespace::AlphabetScrollInfo::Data::dyn_character() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlphabetScrollInfo::Data::dyn_character");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "character"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 cellIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AlphabetScrollInfo::Data::dyn_cellIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlphabetScrollInfo::Data::dyn_cellIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cellIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnimationStartParams
#include "GlobalNamespace/AnimationStartParams.hpp"
// Including type: UnityEngine.Animation
#include "UnityEngine/Animation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnimationStartParams::dyn__timeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimationStartParams::dyn__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AnimationStartParams::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimationStartParams::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animation _animation
[[deprecated("Use field access instead!")]] ::UnityEngine::Animation*& GlobalNamespace::AnimationStartParams::dyn__animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimationStartParams::dyn__animation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animation"))->offset;
  return *reinterpret_cast<::UnityEngine::Animation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnimationStartParams.Start
void GlobalNamespace::AnimationStartParams::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnimationStartParams::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArrayHelpers
#include "GlobalNamespace/ArrayHelpers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AsyncHelper
#include "GlobalNamespace/AsyncHelper.hpp"
// Including type: AsyncHelper/<>c__DisplayClass0_0`1
#include "GlobalNamespace/AsyncHelper_--c__DisplayClass0_0_1.hpp"
// Including type: AsyncHelper/<>c__DisplayClass1_0
#include "GlobalNamespace/AsyncHelper_--c__DisplayClass1_0.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AsyncHelper.RunSync
void GlobalNamespace::AsyncHelper::RunSync(::System::Func_1<::System::Threading::Tasks::Task*>* asyncTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncHelper::RunSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AsyncHelper", "RunSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncTask);
}
