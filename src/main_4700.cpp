// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO
#include "GlobalNamespace/LocalizedAudioClipSO.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo[] _localizedAudioClipInfo
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>& GlobalNamespace::LocalizedAudioClipSO::dyn__localizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::dyn__localizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClipInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO/LocalizedAudioClipInfo _lastLocalizedAudioClipInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo*& GlobalNamespace::LocalizedAudioClipSO::dyn__lastLocalizedAudioClipInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::dyn__lastLocalizedAudioClipInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastLocalizedAudioClipInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedAudioClipSO.get_localizedAudioClip
::UnityEngine::AudioClip* GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::get_localizedAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip localizedAudioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_localizedAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo::dyn_localizedAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedAudioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedAudioClipSO/<>c__DisplayClass4_0
#include "GlobalNamespace/LocalizedAudioClipSO_--c__DisplayClass4_0.hpp"
// Including type: LocalizedAudioClipSO/LocalizedAudioClipInfo
#include "GlobalNamespace/LocalizedAudioClipSO_LocalizedAudioClipInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedAudioClipSO/<>c__DisplayClass4_0.<get_localizedAudioClip>b__0
bool GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::$get_localizedAudioClip$b__0(::GlobalNamespace::LocalizedAudioClipSO::LocalizedAudioClipInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedAudioClipSO::$$c__DisplayClass4_0::<get_localizedAudioClip>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedAudioClip>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo[] _textInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>& GlobalNamespace::LocalizedTextAsset::dyn__textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::dyn__textInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedTextAsset/TextInfo _lastTextInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LocalizedTextAsset::TextInfo*& GlobalNamespace::LocalizedTextAsset::dyn__lastTextInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::dyn__lastTextInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTextInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LocalizedTextAsset::TextInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedTextAsset.get_textInfos
::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*> GlobalNamespace::LocalizedTextAsset::get_textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::get_textInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::LocalizedTextAsset::TextInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: LocalizedTextAsset.get_localizedText
::StringW GlobalNamespace::LocalizedTextAsset::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.TextAsset localizedText
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::TextInfo::dyn_localizedText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localizedText"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Polyglot.Language language
[[deprecated("Use field access instead!")]] ::Polyglot::Language& GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::dyn_language() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::dyn_language");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "language"))->offset;
  return *reinterpret_cast<::Polyglot::Language*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LocalizedTextAsset/<>c__DisplayClass6_0.<get_localizedText>b__1
bool GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::$get_localizedText$b__1(::GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::<get_localizedText>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c
#include "GlobalNamespace/LocalizedTextAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LocalizedTextAsset/<>c <>9
::GlobalNamespace::LocalizedTextAsset::$$c* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LocalizedTextAsset::$$c*>("", "LocalizedTextAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LocalizedTextAsset/<>c <>9
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9(::GlobalNamespace::LocalizedTextAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>*>("", "LocalizedTextAsset/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<LocalizedTextAsset/TextInfo,System.Boolean> <>9__6_0
void GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::LocalizedTextAsset::TextInfo*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LocalizedTextAsset/<>c", "<>9__6_0", value)));
}
// Autogenerated method: LocalizedTextAsset/<>c..cctor
void GlobalNamespace::LocalizedTextAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalizedTextAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LocalizedTextAsset/<>c.<get_localizedText>b__6_0
bool GlobalNamespace::LocalizedTextAsset::$$c::$get_localizedText$b__6_0(::GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LocalizedTextAsset::$$c::<get_localizedText>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CompositeLogger
#include "GlobalNamespace/CompositeLogger.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IBeatSaberLogger> _loggers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IBeatSaberLogger*>*& GlobalNamespace::CompositeLogger::dyn__loggers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::dyn__loggers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loggers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatSaberLogger*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CompositeLogger.AddLogger
void GlobalNamespace::CompositeLogger::AddLogger(::GlobalNamespace::IBeatSaberLogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::AddLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, logger);
}
// Autogenerated method: CompositeLogger.Log
void GlobalNamespace::CompositeLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.Log
void GlobalNamespace::CompositeLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogWarning
void GlobalNamespace::CompositeLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.LogWarning
void GlobalNamespace::CompositeLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogError
void GlobalNamespace::CompositeLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: CompositeLogger.LogError
void GlobalNamespace::CompositeLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: CompositeLogger.LogException
void GlobalNamespace::CompositeLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: CompositeLogger.LogException
void GlobalNamespace::CompositeLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CompositeLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBeatSaberLogger.Log
void GlobalNamespace::IBeatSaberLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.Log
void GlobalNamespace::IBeatSaberLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogWarning
void GlobalNamespace::IBeatSaberLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.LogWarning
void GlobalNamespace::IBeatSaberLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogError
void GlobalNamespace::IBeatSaberLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: IBeatSaberLogger.LogError
void GlobalNamespace::IBeatSaberLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: IBeatSaberLogger.LogException
void GlobalNamespace::IBeatSaberLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: IBeatSaberLogger.LogException
void GlobalNamespace::IBeatSaberLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IBeatSaberLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListLogger
#include "GlobalNamespace/ListLogger.hpp"
// Including type: ListLogger/LogType
#include "GlobalNamespace/ListLogger_LogType.hpp"
// Including type: ListLogger/LogMessage
#include "GlobalNamespace/ListLogger_LogMessage.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ListLogger/LogMessage> _messages
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>*& GlobalNamespace::ListLogger::dyn__messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::dyn__messages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messages"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListLogger.get_messages
::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>* GlobalNamespace::ListLogger::get_messages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::get_messages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::ListLogger::LogMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: ListLogger.Log
void GlobalNamespace::ListLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.Log
void GlobalNamespace::ListLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogWarning
void GlobalNamespace::ListLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.LogWarning
void GlobalNamespace::ListLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogError
void GlobalNamespace::ListLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: ListLogger.LogError
void GlobalNamespace::ListLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: ListLogger.LogException
void GlobalNamespace::ListLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: ListLogger.LogException
void GlobalNamespace::ListLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListLogger/LogType
#include "GlobalNamespace/ListLogger_LogType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Info
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Info"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Info
void GlobalNamespace::ListLogger::LogType::_set_Info(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Warning
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Warning
void GlobalNamespace::ListLogger::LogType::_set_Warning(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Error
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Error
void GlobalNamespace::ListLogger::LogType::_set_Error(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public ListLogger/LogType Exception
::GlobalNamespace::ListLogger::LogType GlobalNamespace::ListLogger::LogType::_get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_get_Exception");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ListLogger::LogType>("", "ListLogger/LogType", "Exception"));
}
// Autogenerated static field setter
// Set static field: static public ListLogger/LogType Exception
void GlobalNamespace::ListLogger::LogType::_set_Exception(::GlobalNamespace::ListLogger::LogType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::_set_Exception");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListLogger/LogType", "Exception", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ListLogger::LogType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ListLogger/LogMessage
#include "GlobalNamespace/ListLogger_LogMessage.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ListLogger/LogType type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ListLogger::LogType& GlobalNamespace::ListLogger::LogMessage::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ListLogger::LogType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String message
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ListLogger::LogMessage::dyn_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_message");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "message"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Object context
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ListLogger::LogMessage::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ListLogger/LogMessage.ToString
::StringW GlobalNamespace::ListLogger::LogMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ListLogger::LogMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityDebugLogger
#include "GlobalNamespace/UnityDebugLogger.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityDebugLogger.Log
void GlobalNamespace::UnityDebugLogger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.Log
void GlobalNamespace::UnityDebugLogger::Log(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::Log");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogWarning
void GlobalNamespace::UnityDebugLogger::LogWarning(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.LogWarning
void GlobalNamespace::UnityDebugLogger::LogWarning(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogWarning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogError
void GlobalNamespace::UnityDebugLogger::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: UnityDebugLogger.LogError
void GlobalNamespace::UnityDebugLogger::LogError(::StringW message, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, context);
}
// Autogenerated method: UnityDebugLogger.LogException
void GlobalNamespace::UnityDebugLogger::LogException(::System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception);
}
// Autogenerated method: UnityDebugLogger.LogException
void GlobalNamespace::UnityDebugLogger::LogException(::System::Exception* exception, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UnityDebugLogger::LogException");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exception, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::MainCamera::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MainCamera::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainCamera.get_camera
::UnityEngine::Camera* GlobalNamespace::MainCamera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.set_enableCamera
void GlobalNamespace::MainCamera::set_enableCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::set_enableCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainCamera.get_position
::UnityEngine::Vector3 GlobalNamespace::MainCamera::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.get_rotation
::UnityEngine::Quaternion GlobalNamespace::MainCamera::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.Awake
void GlobalNamespace::MainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader
#include "GlobalNamespace/AudioClipAsyncLoader.hpp"
// Including type: AudioClipAsyncLoader/LoadMethodDelegate
#include "GlobalNamespace/AudioClipAsyncLoader_LoadMethodDelegate.hpp"
// Including type: AudioClipAsyncLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass16_0.hpp"
// Including type: AudioClipAsyncLoader/<>c__DisplayClass17_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass17_0.hpp"
// Including type: AudioClipAsyncLoader/<>c
#include "GlobalNamespace/AudioClipAsyncLoader_--c.hpp"
// Including type: AudioClipAsyncLoader/<Unload>d__21
#include "GlobalNamespace/AudioClipAsyncLoader_-Unload-d__21.hpp"
// Including type: IReferenceCountingCache`2
#include "GlobalNamespace/IReferenceCountingCache_2.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: IMediaAsyncLoader
#include "GlobalNamespace/IMediaAsyncLoader.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IAssetSongPreviewAudioClipProvider
#include "GlobalNamespace/IAssetSongPreviewAudioClipProvider.hpp"
// Including type: IAssetSongAudioClipProvider
#include "GlobalNamespace/IAssetSongAudioClipProvider.hpp"
// Including type: IFilePathSongPreviewAudioClipProvider
#include "GlobalNamespace/IFilePathSongPreviewAudioClipProvider.hpp"
// Including type: IFilePathSongAudioClipProvider
#include "GlobalNamespace/IFilePathSongAudioClipProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IReferenceCountingCache`2<System.Int32,System.Threading.Tasks.Task`1<UnityEngine.AudioClip>> _cache
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IReferenceCountingCache_2<int, ::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*>*& GlobalNamespace::AudioClipAsyncLoader::dyn__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::dyn__cache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cache"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReferenceCountingCache_2<int, ::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMediaAsyncLoader _mediaAsyncLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMediaAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::dyn__mediaAsyncLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::dyn__mediaAsyncLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mediaAsyncLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader.LoadPreview
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadPreview(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.LoadSong
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadSong(::GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.UnloadPreview
void GlobalNamespace::AudioClipAsyncLoader::UnloadPreview(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::UnloadPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.UnloadSong
void GlobalNamespace::AudioClipAsyncLoader::UnloadSong(::GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::UnloadSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnloadSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapLevel);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IAssetSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IAssetSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IFilePathSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::GlobalNamespace::IFilePathSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IAssetSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IAssetSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IFilePathSongPreviewAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::GlobalNamespace::IFilePathSongAudioClipProvider* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, source);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.Load
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::Load(int cacheKey, ::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate* loadMethodDelegate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cacheKey), ::il2cpp_utils::ExtractType(loadMethodDelegate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, cacheKey, loadMethodDelegate);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.Unload
void GlobalNamespace::AudioClipAsyncLoader::Unload(int cacheKey, ::System::Action_1<::UnityEngine::AudioClip*>* onDelete) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::Unload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cacheKey), ::il2cpp_utils::ExtractType(onDelete)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cacheKey, onDelete);
}
// Autogenerated method: AudioClipAsyncLoader.GetCacheKey
int GlobalNamespace::AudioClipAsyncLoader::GetCacheKey(::UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::GetCacheKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCacheKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, audioClip);
}
// Autogenerated method: AudioClipAsyncLoader.GetCacheKey
int GlobalNamespace::AudioClipAsyncLoader::GetCacheKey(::StringW audioClipFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::GetCacheKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCacheKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, audioClipFilePath);
}
// Autogenerated method: AudioClipAsyncLoader.LogError
void GlobalNamespace::AudioClipAsyncLoader::LogError(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioClipAsyncLoader", "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AudioClipAsyncLoader/LoadMethodDelegate
#include "GlobalNamespace/AudioClipAsyncLoader_LoadMethodDelegate.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.Invoke
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.BeginInvoke
::System::IAsyncResult* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: AudioClipAsyncLoader/LoadMethodDelegate.EndInvoke
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::LoadMethodDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c__DisplayClass16_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass16_0.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<>c__DisplayClass16_0.<Load>b__0
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::$Load$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass16_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c__DisplayClass17_0
#include "GlobalNamespace/AudioClipAsyncLoader_--c__DisplayClass17_0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AudioClipAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String audioClipFilePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_audioClipFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::dyn_audioClipFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClipFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<>c__DisplayClass17_0.<Load>b__0
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::$Load$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c__DisplayClass17_0::<Load>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Load>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<>c
#include "GlobalNamespace/AudioClipAsyncLoader_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly AudioClipAsyncLoader/<>c <>9
::GlobalNamespace::AudioClipAsyncLoader::$$c* GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::AudioClipAsyncLoader::$$c*>("", "AudioClipAsyncLoader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly AudioClipAsyncLoader/<>c <>9
void GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9(::GlobalNamespace::AudioClipAsyncLoader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AudioClipAsyncLoader/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<UnityEngine.AudioClip> <>9__19_0
::System::Action_1<::UnityEngine::AudioClip*>* GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::UnityEngine::AudioClip*>*>("", "AudioClipAsyncLoader/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<UnityEngine.AudioClip> <>9__19_0
void GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9__19_0(::System::Action_1<::UnityEngine::AudioClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "AudioClipAsyncLoader/<>c", "<>9__19_0", value)));
}
// Autogenerated method: AudioClipAsyncLoader/<>c..cctor
void GlobalNamespace::AudioClipAsyncLoader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioClipAsyncLoader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/<>c.<Unload>b__19_0
void GlobalNamespace::AudioClipAsyncLoader::$$c::$Unload$b__19_0(::UnityEngine::AudioClip* loadedAudioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$$c::<Unload>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Unload>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(loadedAudioClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, loadedAudioClip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioClipAsyncLoader/<Unload>d__21
#include "GlobalNamespace/AudioClipAsyncLoader_-Unload-d__21.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AudioClipAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioClipAsyncLoader*& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioClipAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cacheKey
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_cacheKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_cacheKey");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cacheKey"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.AudioClip> onDelete
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::AudioClip*>*& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_onDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_onDelete");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDelete"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.AudioClip> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>& GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AudioClipAsyncLoader/<Unload>d__21.MoveNext
void GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AudioClipAsyncLoader/<Unload>d__21.SetStateMachine
void GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioClipAsyncLoader::$Unload$d__21::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioReferenceCountingCache
#include "GlobalNamespace/AudioReferenceCountingCache.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AudioTypeHelper
#include "GlobalNamespace/AudioTypeHelper.hpp"
// Including type: UnityEngine.AudioType
#include "UnityEngine/AudioType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AudioTypeHelper.GetAudioTypeFromPath
::UnityEngine::AudioType GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AudioTypeHelper::GetAudioTypeFromPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AudioTypeHelper", "GetAudioTypeFromPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAssetSongAudioClipProvider
#include "GlobalNamespace/IAssetSongAudioClipProvider.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAssetSongAudioClipProvider.get_songAudioClip
::UnityEngine::AudioClip* GlobalNamespace::IAssetSongAudioClipProvider::get_songAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAssetSongAudioClipProvider::get_songAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAssetSongPreviewAudioClipProvider
#include "GlobalNamespace/IAssetSongPreviewAudioClipProvider.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAssetSongPreviewAudioClipProvider.get_songPreviewAudioClip
::UnityEngine::AudioClip* GlobalNamespace::IAssetSongPreviewAudioClipProvider::get_songPreviewAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAssetSongPreviewAudioClipProvider::get_songPreviewAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFilePathSongAudioClipProvider
#include "GlobalNamespace/IFilePathSongAudioClipProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFilePathSongAudioClipProvider.get_songAudioClipPath
::StringW GlobalNamespace::IFilePathSongAudioClipProvider::get_songAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFilePathSongAudioClipProvider::get_songAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFilePathSongPreviewAudioClipProvider
#include "GlobalNamespace/IFilePathSongPreviewAudioClipProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFilePathSongPreviewAudioClipProvider.get_songPreviewAudioClipPath
::StringW GlobalNamespace::IFilePathSongPreviewAudioClipProvider::get_songPreviewAudioClipPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFilePathSongPreviewAudioClipProvider::get_songPreviewAudioClipPath");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPreviewAudioClipPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMediaAsyncLoader
#include "GlobalNamespace/IMediaAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMediaAsyncLoader.LoadAudioClipFromFilePathAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ISpriteAsyncLoader
#include "GlobalNamespace/ISpriteAsyncLoader.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ISpriteAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ISpriteAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker
#include "GlobalNamespace/InternetConnectionChecker.hpp"
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: InternetConnectionChecker.IsConnectedToInternetAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::IsConnectedToInternetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "InternetConnectionChecker", "IsConnectedToInternetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0
#include "GlobalNamespace/InternetConnectionChecker_-IsConnectedToInternetAsync-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.MoveNext
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: InternetConnectionChecker/<IsConnectedToInternetAsync>d__0.SetStateMachine
void GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InternetConnectionChecker::$IsConnectedToInternetAsync$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader
#include "GlobalNamespace/MediaAsyncLoader.hpp"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader.LoadWebpage
::System::Threading::Tasks::Task_1<::StringW>* GlobalNamespace::MediaAsyncLoader::LoadWebpage(::StringW uri, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadWebpage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadWebpage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::StringW>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadAudioClipFromFilePathAsync
::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>* GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadAudioClipFromFilePathAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadAudioClipFromFilePathAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::AudioClip*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: MediaAsyncLoader.LoadTextureAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>* GlobalNamespace::MediaAsyncLoader::LoadTextureAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Texture2D*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::LoadSpriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, cancellationToken);
}
// Autogenerated method: MediaAsyncLoader.Log
void GlobalNamespace::MediaAsyncLoader::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MediaAsyncLoader", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.String> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String uri
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_uri");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "uri"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipFromFilePathAsync-d__1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.AudioClip> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_filePath");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipFromFilePathAsync>d__1.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadAudioClipFromFilePathAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Texture2D> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Texture2D*>& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Texture2D*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$www$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AsyncOperation <request>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::AsyncOperation*& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$request$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<request>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::AsyncOperation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CachedMediaAsyncLoader
#include "GlobalNamespace/CachedMediaAsyncLoader.hpp"
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: AsyncCachedLoader`2
#include "GlobalNamespace/AsyncCachedLoader_2.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxNumberOfSpriteCachedElements
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::dyn__maxNumberOfSpriteCachedElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxNumberOfSpriteCachedElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AsyncCachedLoader`2<System.String,UnityEngine.Sprite> _spriteAsyncCachedLoader
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AsyncCachedLoader_2<::StringW, ::UnityEngine::Sprite*>*& GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::dyn__spriteAsyncCachedLoader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteAsyncCachedLoader"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AsyncCachedLoader_2<::StringW, ::UnityEngine::Sprite*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader.ClearCache
void GlobalNamespace::CachedMediaAsyncLoader::ClearCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::ClearCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader.LoadSpriteAsync
::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>* GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync(::StringW path, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::LoadSpriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSpriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::UnityEngine::Sprite*>*, false>(this, ___internal__method, path, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/CachedMediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<UnityEngine.Sprite> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CachedMediaAsyncLoader <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CachedMediaAsyncLoader*& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CachedMediaAsyncLoader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_path");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UnityEngine.Sprite> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>& GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::UnityEngine::Sprite*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CachedMediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CachedMediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoveAndRotateWithMainCamera
#include "GlobalNamespace/MoveAndRotateWithMainCamera.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MainCamera _mainCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainCamera*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__rotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoveAndRotateWithMainCamera.Awake
void GlobalNamespace::MoveAndRotateWithMainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoveAndRotateWithMainCamera.LateUpdate
void GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MoveAndRotateWithMainCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedValueChecker
#include "GlobalNamespace/NamedValueChecker.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedValueChecker.Check
bool GlobalNamespace::NamedValueChecker::Check(::StringW fieldName, ::Il2CppObject* value, ::Il2CppObject* expectedValue, ::System::Text::StringBuilder* assertMessageSb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NamedValueChecker::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "NamedValueChecker", "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(expectedValue), ::il2cpp_utils::ExtractType(assertMessageSb)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fieldName, value, expectedValue, assertMessageSb);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyPosesSerializer
#include "GlobalNamespace/EmptyPosesSerializer.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyPosesSerializer.SaveToOldFormat
void GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: EmptyPosesSerializer.SaveRecording
void GlobalNamespace::EmptyPosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: EmptyPosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::EmptyPosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: EmptyPosesSerializer.RecordingExists
bool GlobalNamespace::EmptyPosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: EmptyPosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPosesSerializer.SaveToOldFormat
void GlobalNamespace::IPosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: IPosesSerializer.SaveRecording
void GlobalNamespace::IPosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: IPosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::IPosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: IPosesSerializer.RecordingExists
bool GlobalNamespace::IPosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: IPosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::IPosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: PlaybackScreenshotRecorder
#include "GlobalNamespace/PlaybackScreenshotRecorder.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PoseObject[] _poseObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PoseObject*>& GlobalNamespace::ObjectsMovementRecorder::dyn__poseObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__poseObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PoseObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseObjectIdSO _livPoseObjectId
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseObjectIdSO*& GlobalNamespace::ObjectsMovementRecorder::dyn__livPoseObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__livPoseObjectId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_livPoseObjectId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseObjectIdSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecorder _recorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecorder*& GlobalNamespace::ObjectsMovementRecorder::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesPlayback _playback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesPlayback*& GlobalNamespace::ObjectsMovementRecorder::dyn__playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesPlayback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackScreenshotRecorder _playbackScreenshotRecorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackScreenshotRecorder*& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshotRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshotRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackScreenshotRecorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackScreenshotRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer _playbackRender
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer*& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackRender"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _externalCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__externalCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__externalCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::ObjectsMovementRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Camera _hmdCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__hmdCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmdCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ObjectsMovementRecorder/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::InitData*& GlobalNamespace::ObjectsMovementRecorder::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectsMovementRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::ObjectsMovementRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ObjectsMovementRecorder::dyn__recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectsMovementRecorder/CameraView _cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::ObjectsMovementRecorder::dyn__cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _externalCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__externalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__externalCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot[] _playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::ObjectsMovementRecorder::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::ObjectsMovementRecorder::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectsMovementRecorder.Init
void GlobalNamespace::ObjectsMovementRecorder::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectsMovementRecorder.OnDestroy
void GlobalNamespace::ObjectsMovementRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectsMovementRecorder.HandleGameStateChanged
void GlobalNamespace::ObjectsMovementRecorder::HandleGameStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::HandleGameStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/Mode
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Record
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Record
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Record(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Playback
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Playback
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Playback(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Off
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Off
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Off(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/CameraView
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/CameraView FirstPerson
::GlobalNamespace::ObjectsMovementRecorder::CameraView GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_FirstPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_FirstPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::CameraView>("", "ObjectsMovementRecorder/CameraView", "FirstPerson"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/CameraView FirstPerson
void GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_FirstPerson(::GlobalNamespace::ObjectsMovementRecorder::CameraView value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_FirstPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/CameraView", "FirstPerson", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/CameraView ThirdPerson
::GlobalNamespace::ObjectsMovementRecorder::CameraView GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::CameraView>("", "ObjectsMovementRecorder/CameraView", "ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/CameraView ThirdPerson
void GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_ThirdPerson(::GlobalNamespace::ObjectsMovementRecorder::CameraView value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/CameraView", "ThirdPerson", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::CameraView::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ObjectsMovementRecorder/Mode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ObjectsMovementRecorder/CameraView cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlaybackRenderer/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPosesSerializer posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatSaberLogger logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorderEditorInstaller
#include "GlobalNamespace/ObjectsMovementRecorderEditorInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectsMovementRecorderEditorInstaller.InstallBindings
void GlobalNamespace::ObjectsMovementRecorderEditorInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderEditorInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorderSerializedMethods
#include "GlobalNamespace/ObjectsMovementRecorderSerializedMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kRecordRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kRecordRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kRecordRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kRecordRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kRecordRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kRecordRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kRecordRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kRecordRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kPlaybackRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kPlaybackRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kPlaybackRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kPlaybackRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlaybackRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kPlaybackRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kPlaybackRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kPlaybackRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kOffRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kOffRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kOffRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kOffRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kOffRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kOffRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kOffRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kOffRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFirstPersonCameraView
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kFirstPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kFirstPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kFirstPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstPersonCameraView
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kFirstPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kFirstPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kFirstPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kThirdPersonCameraView
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kThirdPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kThirdPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kThirdPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kThirdPersonCameraView
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kThirdPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kThirdPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kThirdPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackgroundPlaybackScreenshotType
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kBackgroundPlaybackScreenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kBackgroundPlaybackScreenshotType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kBackgroundPlaybackScreenshotType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackgroundPlaybackScreenshotType
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kBackgroundPlaybackScreenshotType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kBackgroundPlaybackScreenshotType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kBackgroundPlaybackScreenshotType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kForegroundPlaybackScreenshotType
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kForegroundPlaybackScreenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kForegroundPlaybackScreenshotType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kForegroundPlaybackScreenshotType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kForegroundPlaybackScreenshotType
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kForegroundPlaybackScreenshotType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kForegroundPlaybackScreenshotType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kForegroundPlaybackScreenshotType", value));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::ObjectsMovementRecorder::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.ModeFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::ModeFromSerializedName(::StringW name, ByRef<::GlobalNamespace::ObjectsMovementRecorder::Mode> mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::ModeFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "ModeFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ObjectsMovementRecorder::Mode&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(mode));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::ObjectsMovementRecorder::CameraView cameraView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraView)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraView);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.CameraViewFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::CameraViewFromSerializedName(::StringW name, ByRef<::GlobalNamespace::ObjectsMovementRecorder::CameraView> cameraView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::CameraViewFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "CameraViewFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ObjectsMovementRecorder::CameraView&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(cameraView));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.PlaybackScreenshotTypeFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::PlaybackScreenshotTypeFromSerializedName(::StringW name, ByRef<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type> type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::PlaybackScreenshotTypeFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "PlaybackScreenshotTypeFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(type));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer
#include "GlobalNamespace/PlaybackRenderer.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action texturesReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlaybackRenderer::dyn_texturesReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn_texturesReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturesReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _clearBackgroundShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PlaybackRenderer::dyn__clearBackgroundShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clearBackgroundShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearBackgroundShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSetup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlaybackRenderer::dyn__isSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__isSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PlaybackRenderer::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::PlaybackRenderer::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData/ExternalCameraCalibration _cameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration*& GlobalNamespace::PlaybackRenderer::dyn__cameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__cameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clipQuad
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlaybackRenderer::dyn__clipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clipQuad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipQuad"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PlaybackRenderer::dyn__clipMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clipMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot[] _screenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::PlaybackRenderer::dyn__screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__screenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackRenderer.get_screenshots
::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*> GlobalNamespace::PlaybackRenderer::get_screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::get_screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.add_texturesReadyEvent
void GlobalNamespace::PlaybackRenderer::add_texturesReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::add_texturesReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_texturesReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer.remove_texturesReadyEvent
void GlobalNamespace::PlaybackRenderer::remove_texturesReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::remove_texturesReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_texturesReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer.Setup
void GlobalNamespace::PlaybackRenderer::Setup(::UnityEngine::Camera* hmdCamera, ::UnityEngine::Camera* camera, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* cameraCalibration, int textureWidth, int textureHeight, ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*> screenshots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmdCamera), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraCalibration), ::il2cpp_utils::ExtractType(textureWidth), ::il2cpp_utils::ExtractType(textureHeight), ::il2cpp_utils::ExtractType(screenshots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmdCamera, camera, cameraCalibration, textureWidth, textureHeight, screenshots);
}
// Autogenerated method: PlaybackRenderer.CreateClipQuad
void GlobalNamespace::PlaybackRenderer::CreateClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::CreateClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.InitCamera
void GlobalNamespace::PlaybackRenderer::InitCamera(::UnityEngine::Camera* camera, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* cameraCalibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::InitCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraCalibration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, cameraCalibration);
}
// Autogenerated method: PlaybackRenderer.CreateTextures
void GlobalNamespace::PlaybackRenderer::CreateTextures(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::CreateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated method: PlaybackRenderer.GetDistanceToHMD
float GlobalNamespace::PlaybackRenderer::GetDistanceToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::GetDistanceToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.OrientClipQuad
void GlobalNamespace::PlaybackRenderer::OrientClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::OrientClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OrientClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.RenderForeground
void GlobalNamespace::PlaybackRenderer::RenderForeground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot* screenshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshot);
}
// Autogenerated method: PlaybackRenderer.RenderBackground
void GlobalNamespace::PlaybackRenderer::RenderBackground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot* screenshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshot);
}
// Autogenerated method: PlaybackRenderer.LateUpdate
void GlobalNamespace::PlaybackRenderer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot/Type _type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _texture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _backgroundColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_name
::StringW GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_texture
::UnityEngine::RenderTexture* GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_layerMask
::UnityEngine::LayerMask GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_type
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_path
::StringW GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.set_path
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::set_path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::set_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_backgroundColor
::UnityEngine::Color GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.CreateTexture
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::CreateTexture(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::CreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer/PlaybackScreenshot/Type
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlaybackRenderer/PlaybackScreenshot/Type Foreground
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type>("", "PlaybackRenderer/PlaybackScreenshot/Type", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public PlaybackRenderer/PlaybackScreenshot/Type Foreground
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Foreground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlaybackRenderer/PlaybackScreenshot/Type", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public PlaybackRenderer/PlaybackScreenshot/Type Background
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type>("", "PlaybackRenderer/PlaybackScreenshot/Type", "Background"));
}
// Autogenerated static field setter
// Set static field: static public PlaybackRenderer/PlaybackScreenshot/Type Background
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Background(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlaybackRenderer/PlaybackScreenshot/Type", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackScreenshotRecorder
#include "GlobalNamespace/PlaybackScreenshotRecorder.hpp"
// Including type: PlaybackRenderer
#include "GlobalNamespace/PlaybackRenderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _directory
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackScreenshotRecorder::dyn__directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer _playbackRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer*& GlobalNamespace::PlaybackScreenshotRecorder::dyn__playbackRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__playbackRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlaybackScreenshotRecorder::dyn__frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackScreenshotRecorder.get_directory
::StringW GlobalNamespace::PlaybackScreenshotRecorder::get_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::get_directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.OnEnable
void GlobalNamespace::PlaybackScreenshotRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.OnDisable
void GlobalNamespace::PlaybackScreenshotRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.Init
void GlobalNamespace::PlaybackScreenshotRecorder::Init(::StringW directory, int framerate, ::GlobalNamespace::PlaybackRenderer* playbackRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(framerate), ::il2cpp_utils::ExtractType(playbackRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directory, framerate, playbackRenderer);
}
// Autogenerated method: PlaybackScreenshotRecorder.HandleTexturesReady
void GlobalNamespace::PlaybackScreenshotRecorder::HandleTexturesReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::HandleTexturesReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTexturesReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.SaveScreenshot
void GlobalNamespace::PlaybackScreenshotRecorder::SaveScreenshot(::UnityEngine::RenderTexture* renderTexture, ::StringW directory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::SaveScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(directory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderTexture, directory);
}
// Autogenerated method: PlaybackScreenshotRecorder.ConvertRenderTexture
::UnityEngine::Texture2D* GlobalNamespace::PlaybackScreenshotRecorder::ConvertRenderTexture(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::ConvertRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlaybackScreenshotRecorder", "ConvertRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTexture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PoseObject::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseObjectIdSO _poseObjectId
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseObjectIdSO*& GlobalNamespace::PoseObject::dyn__poseObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::dyn__poseObjectId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseObjectId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseObjectIdSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseObject.get_objectTransform
::UnityEngine::Transform* GlobalNamespace::PoseObject::get_objectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::get_objectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: PoseObject.get_id
::StringW GlobalNamespace::PoseObject::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _serializedId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PoseObjectIdSO::dyn__serializedId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObjectIdSO::dyn__serializedId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseObjectIdSO.get_id
::StringW GlobalNamespace::PoseObjectIdSO::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObjectIdSO::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PosesPlayback::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::PosesPlayback::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::PosesPlayback::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesPlayback::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PosesPlayback::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesPlayback.Update
void GlobalNamespace::PosesPlayback::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesPlayback.Init
void GlobalNamespace::PosesPlayback::Init(::ArrayW<::GlobalNamespace::PoseObject*> poseObjects, ::GlobalNamespace::PosesRecordingData* data, ::GlobalNamespace::IBeatSaberLogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(logger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseObjects, data, logger);
}
// Autogenerated method: PosesPlayback.StartPlayback
void GlobalNamespace::PosesPlayback::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesPlayback.PlaybackTick
void GlobalNamespace::PosesPlayback::PlaybackTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PosesPlayback.StopPlayback
void GlobalNamespace::PosesPlayback::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PosesRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::PosesRecorder::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecorder.get_data
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesRecorder::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.LateUpdate
void GlobalNamespace::PosesRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.Init
void GlobalNamespace::PosesRecorder::Init(::ArrayW<::GlobalNamespace::PoseObject*> poseObjects, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* externalCameraCalibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects), ::il2cpp_utils::ExtractType(externalCameraCalibration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseObjects, externalCameraCalibration);
}
// Autogenerated method: PosesRecorder.StartRecording
void GlobalNamespace::PosesRecorder::StartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.RecordTick
void GlobalNamespace::PosesRecorder::RecordTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PosesRecorder.StopRecording
void GlobalNamespace::PosesRecorder::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PosesRecorder/<>c <>9
::GlobalNamespace::PosesRecorder::$$c* GlobalNamespace::PosesRecorder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::PosesRecorder::$$c*>("", "PosesRecorder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PosesRecorder/<>c <>9
void GlobalNamespace::PosesRecorder::$$c::_set_$$9(::GlobalNamespace::PosesRecorder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__6_0
::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>*>("", "PosesRecorder/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__6_0
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,System.String> <>9__6_1
::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>*>("", "PosesRecorder/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,System.String> <>9__6_1
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_1(::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__6_1", value)));
}
// Autogenerated method: PosesRecorder/<>c..cctor
void GlobalNamespace::PosesRecorder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesRecorder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PosesRecorder/<>c.<Init>b__6_0
::UnityEngine::Transform* GlobalNamespace::PosesRecorder::$$c::$Init$b__6_0(::GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::<Init>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, ro);
}
// Autogenerated method: PosesRecorder/<>c.<Init>b__6_1
::StringW GlobalNamespace::PosesRecorder::$$c::$Init$b__6_1(::GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::<Init>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<PosesRecordingData/TransformsKeyframe> keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>*& GlobalNamespace::PosesRecordingData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingData/ExternalCameraCalibration externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration*& GlobalNamespace::PosesRecordingData::dyn_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingData.AddKeyframe
void GlobalNamespace::PosesRecordingData::AddKeyframe(::GlobalNamespace::PosesRecordingData::TransformsKeyframe* keyframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::AddKeyframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyframe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyframe);
}
// Autogenerated method: PosesRecordingData.Contains
bool GlobalNamespace::PosesRecordingData::Contains(::StringW objectId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectId);
}
// Autogenerated method: PosesRecordingData.ObjectIndex
int GlobalNamespace::PosesRecordingData::ObjectIndex(::StringW objectId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ObjectIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObjectIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, objectId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Pose[] poses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData
#include "GlobalNamespace/PosesRecordingSaveData.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
// Including type: PosesRecordingSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingSaveData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>& GlobalNamespace::PosesRecordingSaveData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/ExternalCameraCalibrationSaveData externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData*& GlobalNamespace::PosesRecordingSaveData::dyn_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotW
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/PoseSaveData[] poses
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingInfoSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData.hpp"
// Including type: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData_ExternalCameraCalibrationSaveData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW GlobalNamespace::PosesRecordingInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesRecordingInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::PosesRecordingInfoSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesRecordingInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PosesRecordingInfoSaveData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingInfoSaveData::dyn__objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData _externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData*& GlobalNamespace::PosesRecordingInfoSaveData::dyn__externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dataFileName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PosesRecordingInfoSaveData::dyn__dataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__dataFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_version
::StringW GlobalNamespace::PosesRecordingInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_objectIds
::ArrayW<::StringW> GlobalNamespace::PosesRecordingInfoSaveData::get_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_objectIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_externalCameraCalibration
::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData* GlobalNamespace::PosesRecordingInfoSaveData::get_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_externalCameraCalibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_externalCameraCalibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_dataFileName
::StringW GlobalNamespace::PosesRecordingInfoSaveData::get_dataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_dataFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_fieldOfVision
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_fieldOfVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_nearClip
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_farClip
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_farClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_farClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_hmdOffset
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_hmdOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_nearOffset
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesSerializer
#include "GlobalNamespace/PosesSerializer.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: RecordingConverter
#include "GlobalNamespace/RecordingConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
// Including type: PosesRecordingInfoSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kInfoFileName
::StringW GlobalNamespace::PosesSerializer::_get_kInfoFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_get_kInfoFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesSerializer", "kInfoFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInfoFileName
void GlobalNamespace::PosesSerializer::_set_kInfoFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_set_kInfoFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesSerializer", "kInfoFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDataFileName
::StringW GlobalNamespace::PosesSerializer::_get_kDataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_get_kDataFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesSerializer", "kDataFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDataFileName
void GlobalNamespace::PosesSerializer::_set_kDataFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_set_kDataFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesSerializer", "kDataFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::PosesSerializer::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingConverter _recordingConverter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingConverter*& GlobalNamespace::PosesSerializer::dyn__recordingConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::dyn__recordingConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingConverter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesSerializer.SaveInfoFile
void GlobalNamespace::PosesSerializer::SaveInfoFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveInfoFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "SaveInfoFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: PosesSerializer.SaveDataFile
void GlobalNamespace::PosesSerializer::SaveDataFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveDataFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "SaveDataFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: PosesSerializer.SaveRecordingIntoDirectory
void GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecordingIntoDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: PosesSerializer.LoadInfoFile
::GlobalNamespace::PosesRecordingInfoSaveData* GlobalNamespace::PosesSerializer::LoadInfoFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadInfoFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadInfoFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingInfoSaveData*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: PosesSerializer.LoadDataFile
::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>* GlobalNamespace::PosesSerializer::LoadDataFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadDataFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDataFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: PosesSerializer.LoadRecordingFromDirectory
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecordingFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.SaveToOldFormat
void GlobalNamespace::PosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: PosesSerializer.SaveRecording
void GlobalNamespace::PosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: PosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.RecordingExists
bool GlobalNamespace::PosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::PosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingConverter
#include "GlobalNamespace/RecordingConverter.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingConverter::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingConverter::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingConverter.SaveToOldFormat
void GlobalNamespace::RecordingConverter::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingConverter::SaveToOldFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomizableEnvironmentCommandLineArgsProviderSO
#include "GlobalNamespace/CustomizableEnvironmentCommandLineArgsProviderSO.hpp"
// Including type: EnvironmentCommandLineArgsProvider
#include "GlobalNamespace/EnvironmentCommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useCustomCommandLineArgs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useCustomCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useCustomCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useCustomCommandLineArgs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useEnvironmentCommandLineArgs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useEnvironmentCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useEnvironmentCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEnvironmentCommandLineArgs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _customCommandLineArgs
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__customCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__customCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customCommandLineArgs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentCommandLineArgsProvider _environmentCommandLineArgsProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentCommandLineArgsProvider*& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__environmentCommandLineArgsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__environmentCommandLineArgsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentCommandLineArgsProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentCommandLineArgsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomizableEnvironmentCommandLineArgsProviderSO.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentCommandLineArgsProvider
#include "GlobalNamespace/EnvironmentCommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentCommandLineArgsProvider.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::EnvironmentCommandLineArgsProvider::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentCommandLineArgsProvider::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICommandLineArgsProvider
#include "GlobalNamespace/ICommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICommandLineArgsProvider.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::ICommandLineArgsProvider::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICommandLineArgsProvider::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<System.String> _arguments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::StringW>*& GlobalNamespace::ProgramArguments::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProgramArguments.get_arguments
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::ProgramArguments::get_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::get_arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: ProgramArguments.Empty
::GlobalNamespace::ProgramArguments* GlobalNamespace::ProgramArguments::Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProgramArguments", "Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ProgramArguments*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor
#include "GlobalNamespace/RecordingToolConfigurationProcessor.hpp"
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
// Including type: RecordingToolConfigurationProcessor/RecordingToolConfiguration
#include "GlobalNamespace/RecordingToolConfigurationProcessor_RecordingToolConfiguration.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kRecordingToolCommandLineArgument
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kRecordingToolCommandLineArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kRecordingToolCommandLineArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kRecordingToolCommandLineArgument"));
}
// Autogenerated static field setter
// Set static field: static public System.String kRecordingToolCommandLineArgument
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kRecordingToolCommandLineArgument(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kRecordingToolCommandLineArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kRecordingToolCommandLineArgument", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSoloMode
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kSoloMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kSoloMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kSoloMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSoloMode
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kSoloMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kSoloMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kSoloMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentType
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentType
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentNameSuffix
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentNameSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentNameSuffix
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentNameSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEverythingLayerMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kEverythingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kEverythingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kEverythingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEverythingLayerMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kEverythingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kEverythingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kEverythingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNothingLayerMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNothingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNothingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNothingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNothingLayerMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNothingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNothingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNothingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultMrcLayersMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kDefaultMrcLayersMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kDefaultMrcLayersMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultMrcLayersMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kDefaultMrcLayersMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kDefaultMrcLayersMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kDefaultMrcLayersMask", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ProgramArguments _programArguments
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgramArguments*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__programArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__programArguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_programArguments"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProgramArguments**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolResourceContainerSO _resourceContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolResourceContainerSO*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__resourceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__resourceContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resourceContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolResourceContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolConfigurationProcessor.IsRecordingToolEnabled
bool GlobalNamespace::RecordingToolConfigurationProcessor::IsRecordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::IsRecordingToolEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRecordingToolEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetConfigFilePath
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::GetConfigFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetConfigFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.LoadConfigurationFile
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfigurationFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfigurationFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadConfigurationFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filePath);
}
// Autogenerated method: RecordingToolConfigurationProcessor.DeserializeConfigurationFile
::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* GlobalNamespace::RecordingToolConfigurationProcessor::DeserializeConfigurationFile(::StringW jsonData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::DeserializeConfigurationFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeConfigurationFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration*, false>(this, ___internal__method, jsonData);
}
// Autogenerated method: RecordingToolConfigurationProcessor.LoadConfiguration
::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfiguration(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetDefaultMrcLayersMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetDefaultMrcLayersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RecordingToolConfigurationProcessor", "GetDefaultMrcLayersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLayerMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetLayerMask(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method, layerName);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLayersMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetLayersMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLayersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method, layerNames);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLevelPackAndLevelPreviewForLevelId
::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*> GlobalNamespace::RecordingToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId(::StringW packId, ::StringW levelId, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RecordingToolConfigurationProcessor", "GetLevelPackAndLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packId, levelId, beatmapLevelPacks);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateRecordingToolSettingsFromConfiguration
::GlobalNamespace::RecordingToolSettings* GlobalNamespace::RecordingToolConfigurationProcessor::CreateRecordingToolSettingsFromConfiguration(::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* recordingToolConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateRecordingToolSettingsFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRecordingToolSettingsFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolConfiguration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolSettings*, false>(this, ___internal__method, recordingToolConfiguration);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateObjectsMovementRecorderInitDataFromConfiguration
::GlobalNamespace::ObjectsMovementRecorder::InitData* GlobalNamespace::RecordingToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration(::GlobalNamespace::RecordingToolSettings* recordingToolSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectsMovementRecorderInitDataFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectsMovementRecorder::InitData*, false>(this, ___internal__method, recordingToolSettings);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateMenuDestinationFromConfiguration
::GlobalNamespace::MenuDestination* GlobalNamespace::RecordingToolConfigurationProcessor::CreateMenuDestinationFromConfiguration(::GlobalNamespace::RecordingToolSettings* recordingToolSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateMenuDestinationFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMenuDestinationFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method, recordingToolSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single r
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single g
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single b
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] includedLayers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] excludedLayers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecordingToolConfigurationProcessor/ColorSaveData backgroundColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData*& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/RecordingToolConfiguration
#include "GlobalNamespace/RecordingToolConfigurationProcessor_RecordingToolConfiguration.hpp"
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String mode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characteristic
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characteristic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_runLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_runLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cameraView
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecordingToolConfigurationProcessor/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot*>& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolInstallerSO
#include "GlobalNamespace/RecordingToolInstallerSO.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RecordingToolResourceContainerSO _recordingToolResourceContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolResourceContainerSO*& GlobalNamespace::RecordingToolInstallerSO::dyn__recordingToolResourceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolInstallerSO::dyn__recordingToolResourceContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolResourceContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolResourceContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolInstallerSO.InstallDependencies
void GlobalNamespace::RecordingToolInstallerSO::InstallDependencies(::Zenject::DiContainer* container, ::GlobalNamespace::ProgramArguments* programArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolInstallerSO::InstallDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(programArguments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, programArguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolManager
#include "GlobalNamespace/RecordingToolManager.hpp"
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: ListLogger
#include "GlobalNamespace/ListLogger.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kRecordingToolId
::StringW GlobalNamespace::RecordingToolManager::_get_kRecordingToolId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::_get_kRecordingToolId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolManager", "kRecordingToolId"));
}
// Autogenerated static field setter
// Set static field: static public System.String kRecordingToolId
void GlobalNamespace::RecordingToolManager::_set_kRecordingToolId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::_set_kRecordingToolId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolManager", "kRecordingToolId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _recordingToolEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolManager::dyn__recordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__recordingToolEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _configJsonData
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolManager::dyn__configJsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__configJsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configJsonData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolSettings _recordingToolSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolSettings*& GlobalNamespace::RecordingToolManager::dyn__recordingToolSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__recordingToolSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ObjectsMovementRecorder/InitData _objectsMovementRecorderInitData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::InitData*& GlobalNamespace::RecordingToolManager::dyn__objectsMovementRecorderInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__objectsMovementRecorderInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsMovementRecorderInitData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuDestination _menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::RecordingToolManager::dyn__menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ListLogger _listLogger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ListLogger*& GlobalNamespace::RecordingToolManager::dyn__listLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__listLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listLogger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ListLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingToolManager::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::RecordingToolManager::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolManager.get_recordingToolEnabled
bool GlobalNamespace::RecordingToolManager::get_recordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_recordingToolEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingToolEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_showRecordingToolScene
bool GlobalNamespace::RecordingToolManager::get_showRecordingToolScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_showRecordingToolScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showRecordingToolScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_configJsonData
::StringW GlobalNamespace::RecordingToolManager::get_configJsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_configJsonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configJsonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_recordingToolSettings
::GlobalNamespace::RecordingToolSettings* GlobalNamespace::RecordingToolManager::get_recordingToolSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_recordingToolSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingToolSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolSettings*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_objectsMovementRecorderInitData
::GlobalNamespace::ObjectsMovementRecorder::InitData* GlobalNamespace::RecordingToolManager::get_objectsMovementRecorderInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_objectsMovementRecorderInitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsMovementRecorderInitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectsMovementRecorder::InitData*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_menuDestination
::GlobalNamespace::MenuDestination* GlobalNamespace::RecordingToolManager::get_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_menuDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_listLogger
::GlobalNamespace::ListLogger* GlobalNamespace::RecordingToolManager::get_listLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_listLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_listLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ListLogger*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_logger
::GlobalNamespace::IBeatSaberLogger* GlobalNamespace::RecordingToolManager::get_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_logger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatSaberLogger*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_posesSerializer
::GlobalNamespace::IPosesSerializer* GlobalNamespace::RecordingToolManager::get_posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_posesSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_posesSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPosesSerializer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__dlcLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__dlcLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__ostAndExtrasPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _environmentsList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__environmentsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__environmentsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentsList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IBeatmapLevelPack> _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_beatmapLevelPacks
::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_beatmapCharacteristicCollection
::GlobalNamespace::BeatmapCharacteristicCollectionSO* GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapCharacteristicCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_environmentsList
::GlobalNamespace::EnvironmentsListSO* GlobalNamespace::RecordingToolResourceContainerSO::get_environmentsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_environmentsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentsListSO*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.OnEnable
void GlobalNamespace::RecordingToolResourceContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolSettings::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IBeatmapLevelPack pack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::RecordingToolSettings::dyn_pack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_pack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::RecordingToolSettings::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::RecordingToolSettings::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapCharacteristicSO characteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::RecordingToolSettings::dyn_characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_runLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_runLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObjectsMovementRecorder/Mode recordingMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::RecordingToolSettings::dyn_recordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_recordingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolSettings::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObjectsMovementRecorder/CameraView cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::RecordingToolSettings::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlaybackRenderer/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::RecordingToolSettings::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolSettings::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolSettings::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentTypeSO environmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::RecordingToolSettings::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::RecordingToolSettings::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolSettings.ToString
::StringW GlobalNamespace::RecordingToolSettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyValuesPerSecond
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyValuesCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AveragingValueRecorder/AverageValueData> _averageWindowValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::AveragingValueRecorder::AverageValueData>*& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::AveragingValueRecorder::AverageValueData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Single> _historyValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<float>*& GlobalNamespace::AveragingValueRecorder::dyn__historyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__historyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowValuesDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValuesDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder.Update
void GlobalNamespace::AveragingValueRecorder::Update(float value, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, deltaTime);
}
// Autogenerated method: AveragingValueRecorder.GetAverageValue
float GlobalNamespace::AveragingValueRecorder::GetAverageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetAverageValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetLastValue
float GlobalNamespace::AveragingValueRecorder::GetLastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetLastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetHistoryValues
::System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::GetHistoryValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetHistoryValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHistoryValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<float>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder/AverageValueData
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <value>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_value
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_value
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_time
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_time
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData..ctor
// ABORTED elsewhere.  GlobalNamespace::AveragingValueRecorder::AverageValueData::AverageValueData(float value, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFilePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FullVRControllersRecorder::Mode& GlobalNamespace::FullVRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FullVRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _othersSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playbackFloorOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackFloorOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController[] _controllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRController*>& GlobalNamespace::FullVRControllersRecorder::dyn__controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<VRController> didSetControllerTransformEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::VRController*>*& GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetControllerTransformEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorderData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRControllersRecorderData*& GlobalNamespace::FullVRControllersRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRControllersRecorderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FullVRControllersRecorder.add_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent(::System::Action_1<::GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.remove_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent(::System::Action_1<::GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.Start
void GlobalNamespace::FullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.OnDestroy
void GlobalNamespace::FullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.PlaybackTick
void GlobalNamespace::FullVRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.RecordTick
void GlobalNamespace::FullVRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.Update
void GlobalNamespace::FullVRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.LateUpdate
void GlobalNamespace::FullVRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder/Mode
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Record
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Record
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Playback
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Playback
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Off
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Off
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverridePlayerTransformsFromFullVRControllersRecorder
#include "GlobalNamespace/OverridePlayerTransformsFromFullVRControllersRecorder.hpp"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder _fullVRControllersRecorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FullVRControllersRecorder*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullVRControllersRecorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FullVRControllersRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerTransforms*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerVRControllersManager _playerVRControllersManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerVRControllersManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerVRControllersManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerVRControllersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.Start
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.OnDestroy
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.HandleFullVRControllersRecorderDidSetControllerTransform
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform(::GlobalNamespace::VRController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayableDirectorTimer
#include "GlobalNamespace/PlayableDirectorTimer.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayableDirectorTimer.Update
void GlobalNamespace::PlayableDirectorTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleVRNodeRecorder/RecordMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleVRNodeRecorder::RecordMode& GlobalNamespace::SimpleVRNodeRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode _node
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::SimpleVRNodeRecorder::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playbackTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forwardOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SimpleVRNodeRecorder/SavedData/NodeKeyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _prevRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder.Awake
void GlobalNamespace::SimpleVRNodeRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.OnDestroy
void GlobalNamespace::SimpleVRNodeRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.RecordNewKeyFrame
void GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordNewKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Update
void GlobalNamespace::SimpleVRNodeRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Save
void GlobalNamespace::SimpleVRNodeRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Load
void GlobalNamespace::SimpleVRNodeRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleVRNodeRecorder/SavedData/NodeKeyframe[] keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>& GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_pos
::UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_rot
::UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/RecordMode
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Record
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Record
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Playback
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Playback
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Off
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Off
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _recordingTextAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingTextAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFileName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRControllersRecorder::dyn__recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRControllersRecorder::Mode& GlobalNamespace::VRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontMoveHead
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontMoveHead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changeToNonVRCamera
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeToNonVRCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _adjustSabersPositionBasedOnHeadPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustSabersPositionBasedOnHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__headSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFOV
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__cameraFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__cameraFOV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFOV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _recorderCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__recorderCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recorderCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnRotationTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRControllersRecorder/Keyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorder::Keyframe*>*& GlobalNamespace::VRControllersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorder.get_mode
::GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorder::Mode, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(::GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
::UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::StringW GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(::UnityEngine::Transform* transf, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transf), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(targetRot), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
::UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::StringW recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingfilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
::System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::StringW assemblyName, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
