// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmptyPosesSerializer
#include "GlobalNamespace/EmptyPosesSerializer.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EmptyPosesSerializer.SaveToOldFormat
void GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: EmptyPosesSerializer.SaveRecording
void GlobalNamespace::EmptyPosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: EmptyPosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::EmptyPosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: EmptyPosesSerializer.RecordingExists
bool GlobalNamespace::EmptyPosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: EmptyPosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmptyPosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPosesSerializer.SaveToOldFormat
void GlobalNamespace::IPosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: IPosesSerializer.SaveRecording
void GlobalNamespace::IPosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: IPosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::IPosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: IPosesSerializer.RecordingExists
bool GlobalNamespace::IPosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: IPosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::IPosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: PlaybackScreenshotRecorder
#include "GlobalNamespace/PlaybackScreenshotRecorder.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PoseObject[] _poseObjects
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PoseObject*>& GlobalNamespace::ObjectsMovementRecorder::dyn__poseObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__poseObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PoseObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseObjectIdSO _livPoseObjectId
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseObjectIdSO*& GlobalNamespace::ObjectsMovementRecorder::dyn__livPoseObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__livPoseObjectId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_livPoseObjectId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseObjectIdSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecorder _recorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecorder*& GlobalNamespace::ObjectsMovementRecorder::dyn__recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesPlayback _playback
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesPlayback*& GlobalNamespace::ObjectsMovementRecorder::dyn__playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playback"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesPlayback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackScreenshotRecorder _playbackScreenshotRecorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackScreenshotRecorder*& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshotRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshotRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackScreenshotRecorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackScreenshotRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer _playbackRender
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer*& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackRender");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackRender"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _externalCameraPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__externalCameraPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__externalCameraPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCameraPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::ObjectsMovementRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Camera _hmdCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__hmdCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__hmdCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmdCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ObjectsMovementRecorder/InitData _initData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::InitData*& GlobalNamespace::ObjectsMovementRecorder::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectsMovementRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::ObjectsMovementRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ObjectsMovementRecorder::dyn__recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObjectsMovementRecorder/CameraView _cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::ObjectsMovementRecorder::dyn__cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _externalCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::ObjectsMovementRecorder::dyn__externalCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__externalCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot[] _playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::ObjectsMovementRecorder::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::ObjectsMovementRecorder::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObjectsMovementRecorder.Init
void GlobalNamespace::ObjectsMovementRecorder::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectsMovementRecorder.OnDestroy
void GlobalNamespace::ObjectsMovementRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObjectsMovementRecorder.HandleGameStateChanged
void GlobalNamespace::ObjectsMovementRecorder::HandleGameStateChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::HandleGameStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/Mode
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Record
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Record
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Record(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Playback
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Playback
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Playback(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/Mode Off
::GlobalNamespace::ObjectsMovementRecorder::Mode GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::Mode>("", "ObjectsMovementRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/Mode Off
void GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Off(::GlobalNamespace::ObjectsMovementRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/CameraView
#include "GlobalNamespace/ObjectsMovementRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/CameraView FirstPerson
::GlobalNamespace::ObjectsMovementRecorder::CameraView GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_FirstPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_FirstPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::CameraView>("", "ObjectsMovementRecorder/CameraView", "FirstPerson"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/CameraView FirstPerson
void GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_FirstPerson(::GlobalNamespace::ObjectsMovementRecorder::CameraView value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_FirstPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/CameraView", "FirstPerson", value));
}
// Autogenerated static field getter
// Get static field: static public ObjectsMovementRecorder/CameraView ThirdPerson
::GlobalNamespace::ObjectsMovementRecorder::CameraView GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_ThirdPerson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_get_ThirdPerson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ObjectsMovementRecorder::CameraView>("", "ObjectsMovementRecorder/CameraView", "ThirdPerson"));
}
// Autogenerated static field setter
// Set static field: static public ObjectsMovementRecorder/CameraView ThirdPerson
void GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_ThirdPerson(::GlobalNamespace::ObjectsMovementRecorder::CameraView value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::_set_ThirdPerson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorder/CameraView", "ThirdPerson", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::CameraView::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::CameraView::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ObjectsMovementRecorder/Mode mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ObjectsMovementRecorder/CameraView cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PlaybackRenderer/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPosesSerializer posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IBeatSaberLogger logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorder::InitData::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorderEditorInstaller
#include "GlobalNamespace/ObjectsMovementRecorderEditorInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectsMovementRecorderEditorInstaller.InstallBindings
void GlobalNamespace::ObjectsMovementRecorderEditorInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderEditorInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectsMovementRecorderSerializedMethods
#include "GlobalNamespace/ObjectsMovementRecorderSerializedMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kRecordRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kRecordRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kRecordRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kRecordRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kRecordRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kRecordRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kRecordRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kRecordRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kPlaybackRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kPlaybackRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kPlaybackRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kPlaybackRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kPlaybackRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kPlaybackRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kPlaybackRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kPlaybackRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kOffRecordingMode
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kOffRecordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kOffRecordingMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kOffRecordingMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kOffRecordingMode
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kOffRecordingMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kOffRecordingMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kOffRecordingMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kFirstPersonCameraView
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kFirstPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kFirstPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kFirstPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kFirstPersonCameraView
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kFirstPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kFirstPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kFirstPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kThirdPersonCameraView
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kThirdPersonCameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kThirdPersonCameraView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kThirdPersonCameraView"));
}
// Autogenerated static field setter
// Set static field: static private System.String kThirdPersonCameraView
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kThirdPersonCameraView(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kThirdPersonCameraView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kThirdPersonCameraView", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kBackgroundPlaybackScreenshotType
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kBackgroundPlaybackScreenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kBackgroundPlaybackScreenshotType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kBackgroundPlaybackScreenshotType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBackgroundPlaybackScreenshotType
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kBackgroundPlaybackScreenshotType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kBackgroundPlaybackScreenshotType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kBackgroundPlaybackScreenshotType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kForegroundPlaybackScreenshotType
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kForegroundPlaybackScreenshotType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_get_kForegroundPlaybackScreenshotType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ObjectsMovementRecorderSerializedMethods", "kForegroundPlaybackScreenshotType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kForegroundPlaybackScreenshotType
void GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kForegroundPlaybackScreenshotType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::_set_kForegroundPlaybackScreenshotType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObjectsMovementRecorderSerializedMethods", "kForegroundPlaybackScreenshotType", value));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::ObjectsMovementRecorder::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.ModeFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::ModeFromSerializedName(::StringW name, ByRef<::GlobalNamespace::ObjectsMovementRecorder::Mode> mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::ModeFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "ModeFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ObjectsMovementRecorder::Mode&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(mode));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::ObjectsMovementRecorder::CameraView cameraView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraView)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cameraView);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.CameraViewFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::CameraViewFromSerializedName(::StringW name, ByRef<::GlobalNamespace::ObjectsMovementRecorder::CameraView> cameraView) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::CameraViewFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "CameraViewFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::ObjectsMovementRecorder::CameraView&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(cameraView));
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.SerializedName
::StringW GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::SerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "SerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: ObjectsMovementRecorderSerializedMethods.PlaybackScreenshotTypeFromSerializedName
bool GlobalNamespace::ObjectsMovementRecorderSerializedMethods::PlaybackScreenshotTypeFromSerializedName(::StringW name, ByRef<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type> type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObjectsMovementRecorderSerializedMethods::PlaybackScreenshotTypeFromSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ObjectsMovementRecorderSerializedMethods", "PlaybackScreenshotTypeFromSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(type));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer
#include "GlobalNamespace/PlaybackRenderer.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action texturesReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::PlaybackRenderer::dyn_texturesReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn_texturesReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "texturesReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _clearBackgroundShader
[[deprecated("Use field access instead!")]] ::UnityEngine::Shader*& GlobalNamespace::PlaybackRenderer::dyn__clearBackgroundShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clearBackgroundShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearBackgroundShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isSetup
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PlaybackRenderer::dyn__isSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__isSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSetup"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _hmd
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PlaybackRenderer::dyn__hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__hmd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmd"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::PlaybackRenderer::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData/ExternalCameraCalibration _cameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration*& GlobalNamespace::PlaybackRenderer::dyn__cameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__cameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _clipQuad
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::PlaybackRenderer::dyn__clipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clipQuad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipQuad"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _clipMaterial
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::PlaybackRenderer::dyn__clipMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__clipMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clipMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot[] _screenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::PlaybackRenderer::dyn__screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::dyn__screenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_screenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackRenderer.get_screenshots
::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*> GlobalNamespace::PlaybackRenderer::get_screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::get_screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.add_texturesReadyEvent
void GlobalNamespace::PlaybackRenderer::add_texturesReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::add_texturesReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_texturesReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer.remove_texturesReadyEvent
void GlobalNamespace::PlaybackRenderer::remove_texturesReadyEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::remove_texturesReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_texturesReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer.Setup
void GlobalNamespace::PlaybackRenderer::Setup(::UnityEngine::Camera* hmdCamera, ::UnityEngine::Camera* camera, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* cameraCalibration, int textureWidth, int textureHeight, ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*> screenshots) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hmdCamera), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraCalibration), ::il2cpp_utils::ExtractType(textureWidth), ::il2cpp_utils::ExtractType(textureHeight), ::il2cpp_utils::ExtractType(screenshots)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hmdCamera, camera, cameraCalibration, textureWidth, textureHeight, screenshots);
}
// Autogenerated method: PlaybackRenderer.CreateClipQuad
void GlobalNamespace::PlaybackRenderer::CreateClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::CreateClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.InitCamera
void GlobalNamespace::PlaybackRenderer::InitCamera(::UnityEngine::Camera* camera, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* cameraCalibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::InitCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(cameraCalibration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, camera, cameraCalibration);
}
// Autogenerated method: PlaybackRenderer.CreateTextures
void GlobalNamespace::PlaybackRenderer::CreateTextures(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::CreateTextures");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextures", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated method: PlaybackRenderer.GetDistanceToHMD
float GlobalNamespace::PlaybackRenderer::GetDistanceToHMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::GetDistanceToHMD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDistanceToHMD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.OrientClipQuad
void GlobalNamespace::PlaybackRenderer::OrientClipQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::OrientClipQuad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OrientClipQuad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer.RenderForeground
void GlobalNamespace::PlaybackRenderer::RenderForeground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot* screenshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::RenderForeground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderForeground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshot);
}
// Autogenerated method: PlaybackRenderer.RenderBackground
void GlobalNamespace::PlaybackRenderer::RenderBackground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot* screenshot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::RenderBackground");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBackground", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, screenshot);
}
// Autogenerated method: PlaybackRenderer.LateUpdate
void GlobalNamespace::PlaybackRenderer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LayerMask _layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer/PlaybackScreenshot/Type _type
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _texture
[[deprecated("Use field access instead!")]] ::UnityEngine::RenderTexture*& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texture"))->offset;
  return *reinterpret_cast<::UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _path
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _backgroundColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::dyn__backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_name
::StringW GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_texture
::UnityEngine::RenderTexture* GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_texture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_texture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::RenderTexture*, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_layerMask
::UnityEngine::LayerMask GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_layerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_type
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_path
::StringW GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.set_path
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::set_path(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::set_path");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_path", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.get_backgroundColor
::UnityEngine::Color GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::get_backgroundColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_backgroundColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackRenderer/PlaybackScreenshot.CreateTexture
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::CreateTexture(int width, int height) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::CreateTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width, height);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackRenderer/PlaybackScreenshot/Type
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlaybackRenderer/PlaybackScreenshot/Type Foreground
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Foreground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Foreground");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type>("", "PlaybackRenderer/PlaybackScreenshot/Type", "Foreground"));
}
// Autogenerated static field setter
// Set static field: static public PlaybackRenderer/PlaybackScreenshot/Type Foreground
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Foreground(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Foreground");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlaybackRenderer/PlaybackScreenshot/Type", "Foreground", value));
}
// Autogenerated static field getter
// Get static field: static public PlaybackRenderer/PlaybackScreenshot/Type Background
::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_get_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type>("", "PlaybackRenderer/PlaybackScreenshot/Type", "Background"));
}
// Autogenerated static field setter
// Set static field: static public PlaybackRenderer/PlaybackScreenshot/Type Background
void GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Background(::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::_set_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlaybackRenderer/PlaybackScreenshot/Type", "Background", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot::Type::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlaybackScreenshotRecorder
#include "GlobalNamespace/PlaybackScreenshotRecorder.hpp"
// Including type: PlaybackRenderer
#include "GlobalNamespace/PlaybackRenderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _directory
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PlaybackScreenshotRecorder::dyn__directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__directory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlaybackRenderer _playbackRenderer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlaybackRenderer*& GlobalNamespace::PlaybackScreenshotRecorder::dyn__playbackRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__playbackRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlaybackRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameNumber
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PlaybackScreenshotRecorder::dyn__frameNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::dyn__frameNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlaybackScreenshotRecorder.get_directory
::StringW GlobalNamespace::PlaybackScreenshotRecorder::get_directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::get_directory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_directory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.OnEnable
void GlobalNamespace::PlaybackScreenshotRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.OnDisable
void GlobalNamespace::PlaybackScreenshotRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.Init
void GlobalNamespace::PlaybackScreenshotRecorder::Init(::StringW directory, int framerate, ::GlobalNamespace::PlaybackRenderer* playbackRenderer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directory), ::il2cpp_utils::ExtractType(framerate), ::il2cpp_utils::ExtractType(playbackRenderer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, directory, framerate, playbackRenderer);
}
// Autogenerated method: PlaybackScreenshotRecorder.HandleTexturesReady
void GlobalNamespace::PlaybackScreenshotRecorder::HandleTexturesReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::HandleTexturesReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTexturesReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlaybackScreenshotRecorder.SaveScreenshot
void GlobalNamespace::PlaybackScreenshotRecorder::SaveScreenshot(::UnityEngine::RenderTexture* renderTexture, ::StringW directory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::SaveScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(directory)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, renderTexture, directory);
}
// Autogenerated method: PlaybackScreenshotRecorder.ConvertRenderTexture
::UnityEngine::Texture2D* GlobalNamespace::PlaybackScreenshotRecorder::ConvertRenderTexture(::UnityEngine::RenderTexture* renderTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlaybackScreenshotRecorder::ConvertRenderTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlaybackScreenshotRecorder", "ConvertRenderTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Texture2D*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, renderTexture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PoseObject::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PoseObjectIdSO _poseObjectId
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PoseObjectIdSO*& GlobalNamespace::PoseObject::dyn__poseObjectId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::dyn__poseObjectId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poseObjectId"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PoseObjectIdSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseObject.get_objectTransform
::UnityEngine::Transform* GlobalNamespace::PoseObject::get_objectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::get_objectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: PoseObject.get_id
::StringW GlobalNamespace::PoseObject::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObject::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PoseObjectIdSO
#include "GlobalNamespace/PoseObjectIdSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _serializedId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PoseObjectIdSO::dyn__serializedId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObjectIdSO::dyn__serializedId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PoseObjectIdSO.get_id
::StringW GlobalNamespace::PoseObjectIdSO::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PoseObjectIdSO::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesPlayback
#include "GlobalNamespace/PosesPlayback.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PosesPlayback::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::PosesPlayback::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::PosesPlayback::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesPlayback::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PosesPlayback::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesPlayback.Update
void GlobalNamespace::PosesPlayback::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesPlayback.Init
void GlobalNamespace::PosesPlayback::Init(::ArrayW<::GlobalNamespace::PoseObject*> poseObjects, ::GlobalNamespace::PosesRecordingData* data, ::GlobalNamespace::IBeatSaberLogger* logger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(logger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseObjects, data, logger);
}
// Autogenerated method: PosesPlayback.StartPlayback
void GlobalNamespace::PosesPlayback::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesPlayback.PlaybackTick
void GlobalNamespace::PosesPlayback::PlaybackTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PosesPlayback.StopPlayback
void GlobalNamespace::PosesPlayback::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesPlayback::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecorder
#include "GlobalNamespace/PosesRecorder.hpp"
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PosesRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::PosesRecorder::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData*& GlobalNamespace::PosesRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecorder.get_data
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesRecorder::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.LateUpdate
void GlobalNamespace::PosesRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.Init
void GlobalNamespace::PosesRecorder::Init(::ArrayW<::GlobalNamespace::PoseObject*> poseObjects, ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration* externalCameraCalibration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poseObjects), ::il2cpp_utils::ExtractType(externalCameraCalibration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poseObjects, externalCameraCalibration);
}
// Autogenerated method: PosesRecorder.StartRecording
void GlobalNamespace::PosesRecorder::StartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecorder.RecordTick
void GlobalNamespace::PosesRecorder::RecordTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PosesRecorder.StopRecording
void GlobalNamespace::PosesRecorder::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecorder/<>c
#include "GlobalNamespace/PosesRecorder_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: PoseObject
#include "GlobalNamespace/PoseObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PosesRecorder/<>c <>9
::GlobalNamespace::PosesRecorder::$$c* GlobalNamespace::PosesRecorder::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::PosesRecorder::$$c*>("", "PosesRecorder/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PosesRecorder/<>c <>9
void GlobalNamespace::PosesRecorder::$$c::_set_$$9(::GlobalNamespace::PosesRecorder::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__6_0
::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>*>("", "PosesRecorder/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,UnityEngine.Transform> <>9__6_0
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::PoseObject*, ::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__6_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PoseObject,System.String> <>9__6_1
::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>* GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_get_$$9__6_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>*>("", "PosesRecorder/<>c", "<>9__6_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PoseObject,System.String> <>9__6_1
void GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_1(::System::Func_2<::GlobalNamespace::PoseObject*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::_set_$$9__6_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PosesRecorder/<>c", "<>9__6_1", value)));
}
// Autogenerated method: PosesRecorder/<>c..cctor
void GlobalNamespace::PosesRecorder::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesRecorder/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PosesRecorder/<>c.<Init>b__6_0
::UnityEngine::Transform* GlobalNamespace::PosesRecorder::$$c::$Init$b__6_0(::GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::<Init>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, ro);
}
// Autogenerated method: PosesRecorder/<>c.<Init>b__6_1
::StringW GlobalNamespace::PosesRecorder::$$c::$Init$b__6_1(::GlobalNamespace::PoseObject* ro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecorder::$$c::<Init>b__6_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__6_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ro)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, ro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.List`1<PosesRecordingData/TransformsKeyframe> keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>*& GlobalNamespace::PosesRecordingData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingData/ExternalCameraCalibration externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration*& GlobalNamespace::PosesRecordingData::dyn_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::dyn_externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingData.AddKeyframe
void GlobalNamespace::PosesRecordingData::AddKeyframe(::GlobalNamespace::PosesRecordingData::TransformsKeyframe* keyframe) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::AddKeyframe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyframe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyframe)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, keyframe);
}
// Autogenerated method: PosesRecordingData.Contains
bool GlobalNamespace::PosesRecordingData::Contains(::StringW objectId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectId);
}
// Autogenerated method: PosesRecordingData.ObjectIndex
int GlobalNamespace::PosesRecordingData::ObjectIndex(::StringW objectId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ObjectIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObjectIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, objectId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Pose[] poses
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Pose>& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Pose>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::TransformsKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingData/ExternalCameraCalibration
#include "GlobalNamespace/PosesRecordingData_ExternalCameraCalibration.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingData::ExternalCameraCalibration::dyn_nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData
#include "GlobalNamespace/PosesRecordingSaveData.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
// Including type: PosesRecordingSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String[] objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingSaveData::dyn_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/TransformsSaveKeyframe[] keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>& GlobalNamespace::PosesRecordingSaveData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/ExternalCameraCalibrationSaveData externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData*& GlobalNamespace::PosesRecordingSaveData::dyn_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::dyn_externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single posZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single rotW
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::PoseSaveData::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/TransformsSaveKeyframe
#include "GlobalNamespace/PosesRecordingSaveData_TransformsSaveKeyframe.hpp"
// Including type: PosesRecordingSaveData/PoseSaveData
#include "GlobalNamespace/PosesRecordingSaveData_PoseSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly PosesRecordingSaveData/PoseSaveData[] poses
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "poses"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PosesRecordingSaveData::PoseSaveData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::TransformsSaveKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingSaveData::ExternalCameraCalibrationSaveData::dyn_nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingInfoSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData.hpp"
// Including type: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData_ExternalCameraCalibrationSaveData.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCurrentVersion
::StringW GlobalNamespace::PosesRecordingInfoSaveData::_get_kCurrentVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::_get_kCurrentVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesRecordingInfoSaveData", "kCurrentVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentVersion
void GlobalNamespace::PosesRecordingInfoSaveData::_set_kCurrentVersion(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::_set_kCurrentVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesRecordingInfoSaveData", "kCurrentVersion", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _version
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PosesRecordingInfoSaveData::dyn__version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _objectIds
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::PosesRecordingInfoSaveData::dyn__objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__objectIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectIds"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData _externalCameraCalibration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData*& GlobalNamespace::PosesRecordingInfoSaveData::dyn__externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__externalCameraCalibration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_externalCameraCalibration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dataFileName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PosesRecordingInfoSaveData::dyn__dataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::dyn__dataFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_version
::StringW GlobalNamespace::PosesRecordingInfoSaveData::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_objectIds
::ArrayW<::StringW> GlobalNamespace::PosesRecordingInfoSaveData::get_objectIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_objectIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_externalCameraCalibration
::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData* GlobalNamespace::PosesRecordingInfoSaveData::get_externalCameraCalibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_externalCameraCalibration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_externalCameraCalibration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData*, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData.get_dataFileName
::StringW GlobalNamespace::PosesRecordingInfoSaveData::get_dataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::get_dataFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dataFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData_ExternalCameraCalibrationSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fieldOfVision
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__fieldOfVision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fieldOfVision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nearClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nearClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _farClip
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__farClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_farClip"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hmdOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__hmdOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hmdOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nearOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::dyn__nearOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nearOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_fieldOfVision
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_fieldOfVision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_fieldOfVision");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fieldOfVision", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_nearClip
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_farClip
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_farClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_farClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_farClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_hmdOffset
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_hmdOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_hmdOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hmdOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PosesRecordingInfoSaveData/ExternalCameraCalibrationSaveData.get_nearOffset
float GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesRecordingInfoSaveData::ExternalCameraCalibrationSaveData::get_nearOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nearOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PosesSerializer
#include "GlobalNamespace/PosesSerializer.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: RecordingConverter
#include "GlobalNamespace/RecordingConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: PosesRecordingData/TransformsKeyframe
#include "GlobalNamespace/PosesRecordingData_TransformsKeyframe.hpp"
// Including type: PosesRecordingInfoSaveData
#include "GlobalNamespace/PosesRecordingInfoSaveData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kInfoFileName
::StringW GlobalNamespace::PosesSerializer::_get_kInfoFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_get_kInfoFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesSerializer", "kInfoFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInfoFileName
void GlobalNamespace::PosesSerializer::_set_kInfoFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_set_kInfoFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesSerializer", "kInfoFileName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDataFileName
::StringW GlobalNamespace::PosesSerializer::_get_kDataFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_get_kDataFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "PosesSerializer", "kDataFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDataFileName
void GlobalNamespace::PosesSerializer::_set_kDataFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::_set_kDataFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PosesSerializer", "kDataFileName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::PosesSerializer::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingConverter _recordingConverter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingConverter*& GlobalNamespace::PosesSerializer::dyn__recordingConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::dyn__recordingConverter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingConverter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingConverter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PosesSerializer.SaveInfoFile
void GlobalNamespace::PosesSerializer::SaveInfoFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveInfoFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "SaveInfoFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: PosesSerializer.SaveDataFile
void GlobalNamespace::PosesSerializer::SaveDataFile(::StringW filePath, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveDataFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PosesSerializer", "SaveDataFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: PosesSerializer.SaveRecordingIntoDirectory
void GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveRecordingIntoDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecordingIntoDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: PosesSerializer.LoadInfoFile
::GlobalNamespace::PosesRecordingInfoSaveData* GlobalNamespace::PosesSerializer::LoadInfoFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadInfoFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadInfoFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingInfoSaveData*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: PosesSerializer.LoadDataFile
::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>* GlobalNamespace::PosesSerializer::LoadDataFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadDataFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDataFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::PosesRecordingData::TransformsKeyframe*>*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: PosesSerializer.LoadRecordingFromDirectory
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadRecordingFromDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecordingFromDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.SaveToOldFormat
void GlobalNamespace::PosesSerializer::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveToOldFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated method: PosesSerializer.SaveRecording
void GlobalNamespace::PosesSerializer::SaveRecording(::StringW path, ::GlobalNamespace::PosesRecordingData* data, bool saveToOldFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::SaveRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(saveToOldFormat)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data, saveToOldFormat);
}
// Autogenerated method: PosesSerializer.LoadRecording
::GlobalNamespace::PosesRecordingData* GlobalNamespace::PosesSerializer::LoadRecording(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::LoadRecording");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PosesRecordingData*, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.RecordingExists
bool GlobalNamespace::PosesSerializer::RecordingExists(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::RecordingExists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingExists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated method: PosesSerializer.RecordingCanBeCreated
bool GlobalNamespace::PosesSerializer::RecordingCanBeCreated(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PosesSerializer::RecordingCanBeCreated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordingCanBeCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingConverter
#include "GlobalNamespace/RecordingConverter.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: PosesRecordingData
#include "GlobalNamespace/PosesRecordingData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingConverter::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingConverter::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingConverter.SaveToOldFormat
void GlobalNamespace::RecordingConverter::SaveToOldFormat(::StringW path, ::GlobalNamespace::PosesRecordingData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingConverter::SaveToOldFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveToOldFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, path, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomizableEnvironmentCommandLineArgsProviderSO
#include "GlobalNamespace/CustomizableEnvironmentCommandLineArgsProviderSO.hpp"
// Including type: EnvironmentCommandLineArgsProvider
#include "GlobalNamespace/EnvironmentCommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useCustomCommandLineArgs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useCustomCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useCustomCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useCustomCommandLineArgs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useEnvironmentCommandLineArgs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useEnvironmentCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__useEnvironmentCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEnvironmentCommandLineArgs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _customCommandLineArgs
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__customCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__customCommandLineArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customCommandLineArgs"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentCommandLineArgsProvider _environmentCommandLineArgsProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentCommandLineArgsProvider*& GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__environmentCommandLineArgsProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::dyn__environmentCommandLineArgsProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentCommandLineArgsProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentCommandLineArgsProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomizableEnvironmentCommandLineArgsProviderSO.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomizableEnvironmentCommandLineArgsProviderSO::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentCommandLineArgsProvider
#include "GlobalNamespace/EnvironmentCommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentCommandLineArgsProvider.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::EnvironmentCommandLineArgsProvider::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentCommandLineArgsProvider::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICommandLineArgsProvider
#include "GlobalNamespace/ICommandLineArgsProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICommandLineArgsProvider.GetCommandLineArgs
::ArrayW<::StringW> GlobalNamespace::ICommandLineArgsProvider::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICommandLineArgsProvider::GetCommandLineArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<System.String> _arguments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::StringW>*& GlobalNamespace::ProgramArguments::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ProgramArguments.get_arguments
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::ProgramArguments::get_arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::get_arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: ProgramArguments.Empty
::GlobalNamespace::ProgramArguments* GlobalNamespace::ProgramArguments::Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ProgramArguments::Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ProgramArguments", "Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ProgramArguments*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor
#include "GlobalNamespace/RecordingToolConfigurationProcessor.hpp"
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
// Including type: RecordingToolConfigurationProcessor/RecordingToolConfiguration
#include "GlobalNamespace/RecordingToolConfigurationProcessor_RecordingToolConfiguration.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kRecordingToolCommandLineArgument
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kRecordingToolCommandLineArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kRecordingToolCommandLineArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kRecordingToolCommandLineArgument"));
}
// Autogenerated static field setter
// Set static field: static public System.String kRecordingToolCommandLineArgument
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kRecordingToolCommandLineArgument(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kRecordingToolCommandLineArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kRecordingToolCommandLineArgument", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSoloMode
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kSoloMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kSoloMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kSoloMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSoloMode
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kSoloMode(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kSoloMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kSoloMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentType
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentType"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentType
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNormalEnvironmentNameSuffix
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNormalEnvironmentNameSuffix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentNameSuffix"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNormalEnvironmentNameSuffix
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNormalEnvironmentNameSuffix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNormalEnvironmentNameSuffix", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kEverythingLayerMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kEverythingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kEverythingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kEverythingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kEverythingLayerMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kEverythingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kEverythingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kEverythingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNothingLayerMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNothingLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kNothingLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kNothingLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNothingLayerMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNothingLayerMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kNothingLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kNothingLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDefaultMrcLayersMask
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::_get_kDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_get_kDefaultMrcLayersMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolConfigurationProcessor", "kDefaultMrcLayersMask"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDefaultMrcLayersMask
void GlobalNamespace::RecordingToolConfigurationProcessor::_set_kDefaultMrcLayersMask(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::_set_kDefaultMrcLayersMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolConfigurationProcessor", "kDefaultMrcLayersMask", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ProgramArguments _programArguments
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ProgramArguments*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__programArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__programArguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_programArguments"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ProgramArguments**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolResourceContainerSO _resourceContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolResourceContainerSO*& GlobalNamespace::RecordingToolConfigurationProcessor::dyn__resourceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::dyn__resourceContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resourceContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolResourceContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolConfigurationProcessor.IsRecordingToolEnabled
bool GlobalNamespace::RecordingToolConfigurationProcessor::IsRecordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::IsRecordingToolEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRecordingToolEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetConfigFilePath
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::GetConfigFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetConfigFilePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConfigFilePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.LoadConfigurationFile
::StringW GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfigurationFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfigurationFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadConfigurationFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, filePath);
}
// Autogenerated method: RecordingToolConfigurationProcessor.DeserializeConfigurationFile
::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* GlobalNamespace::RecordingToolConfigurationProcessor::DeserializeConfigurationFile(::StringW jsonData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::DeserializeConfigurationFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeConfigurationFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jsonData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration*, false>(this, ___internal__method, jsonData);
}
// Autogenerated method: RecordingToolConfigurationProcessor.LoadConfiguration
::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfiguration(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::LoadConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration*, false>(this, ___internal__method, filePath);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetDefaultMrcLayersMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetDefaultMrcLayersMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetDefaultMrcLayersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RecordingToolConfigurationProcessor", "GetDefaultMrcLayersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLayerMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetLayerMask(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLayerMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayerMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method, layerName);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLayersMask
::UnityEngine::LayerMask GlobalNamespace::RecordingToolConfigurationProcessor::GetLayersMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLayersMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLayersMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::LayerMask, false>(this, ___internal__method, layerNames);
}
// Autogenerated method: RecordingToolConfigurationProcessor.GetLevelPackAndLevelPreviewForLevelId
::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*> GlobalNamespace::RecordingToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId(::StringW packId, ::StringW levelId, ::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::IBeatmapLevelPack*>* beatmapLevelPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::GetLevelPackAndLevelPreviewForLevelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RecordingToolConfigurationProcessor", "GetLevelPackAndLevelPreviewForLevelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapLevelPacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::ValueTuple_2<::GlobalNamespace::IBeatmapLevelPack*, ::GlobalNamespace::IPreviewBeatmapLevel*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, packId, levelId, beatmapLevelPacks);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateRecordingToolSettingsFromConfiguration
::GlobalNamespace::RecordingToolSettings* GlobalNamespace::RecordingToolConfigurationProcessor::CreateRecordingToolSettingsFromConfiguration(::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration* recordingToolConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateRecordingToolSettingsFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRecordingToolSettingsFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolConfiguration)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolSettings*, false>(this, ___internal__method, recordingToolConfiguration);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateObjectsMovementRecorderInitDataFromConfiguration
::GlobalNamespace::ObjectsMovementRecorder::InitData* GlobalNamespace::RecordingToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration(::GlobalNamespace::RecordingToolSettings* recordingToolSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateObjectsMovementRecorderInitDataFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectsMovementRecorderInitDataFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectsMovementRecorder::InitData*, false>(this, ___internal__method, recordingToolSettings);
}
// Autogenerated method: RecordingToolConfigurationProcessor.CreateMenuDestinationFromConfiguration
::GlobalNamespace::MenuDestination* GlobalNamespace::RecordingToolConfigurationProcessor::CreateMenuDestinationFromConfiguration(::GlobalNamespace::RecordingToolSettings* recordingToolSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::CreateMenuDestinationFromConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMenuDestinationFromConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingToolSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method, recordingToolSettings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single r
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_r");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single g
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_g");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single b
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData::dyn_b");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
// Including type: RecordingToolConfigurationProcessor/ColorSaveData
#include "GlobalNamespace/RecordingToolConfigurationProcessor_ColorSaveData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String type
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] includedLayers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_includedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "includedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] excludedLayers
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_excludedLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "excludedLayers"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecordingToolConfigurationProcessor/ColorSaveData backgroundColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData*& GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_backgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot::dyn_backgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backgroundColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolConfigurationProcessor::ColorSaveData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolConfigurationProcessor/RecordingToolConfiguration
#include "GlobalNamespace/RecordingToolConfigurationProcessor_RecordingToolConfiguration.hpp"
// Including type: RecordingToolConfigurationProcessor/PlaybackScreenshot
#include "GlobalNamespace/RecordingToolConfigurationProcessor_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String mode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_packID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_packID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_levelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_levelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String characteristic
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characteristic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_runLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_runLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String cameraView
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public RecordingToolConfigurationProcessor/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot*>& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::RecordingToolConfigurationProcessor::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String environmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolConfigurationProcessor::RecordingToolConfiguration::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolInstallerSO
#include "GlobalNamespace/RecordingToolInstallerSO.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private RecordingToolResourceContainerSO _recordingToolResourceContainer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolResourceContainerSO*& GlobalNamespace::RecordingToolInstallerSO::dyn__recordingToolResourceContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolInstallerSO::dyn__recordingToolResourceContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolResourceContainer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolResourceContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolInstallerSO.InstallDependencies
void GlobalNamespace::RecordingToolInstallerSO::InstallDependencies(::Zenject::DiContainer* container, ::GlobalNamespace::ProgramArguments* programArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolInstallerSO::InstallDependencies");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallDependencies", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(programArguments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, programArguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolManager
#include "GlobalNamespace/RecordingToolManager.hpp"
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: ListLogger
#include "GlobalNamespace/ListLogger.hpp"
// Including type: IBeatSaberLogger
#include "GlobalNamespace/IBeatSaberLogger.hpp"
// Including type: IPosesSerializer
#include "GlobalNamespace/IPosesSerializer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ProgramArguments
#include "GlobalNamespace/ProgramArguments.hpp"
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: ObjectsMovementRecorder/InitData
#include "GlobalNamespace/ObjectsMovementRecorder_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kRecordingToolId
::StringW GlobalNamespace::RecordingToolManager::_get_kRecordingToolId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::_get_kRecordingToolId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "RecordingToolManager", "kRecordingToolId"));
}
// Autogenerated static field setter
// Set static field: static public System.String kRecordingToolId
void GlobalNamespace::RecordingToolManager::_set_kRecordingToolId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::_set_kRecordingToolId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RecordingToolManager", "kRecordingToolId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _recordingToolEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolManager::dyn__recordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__recordingToolEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _configJsonData
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolManager::dyn__configJsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__configJsonData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configJsonData"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RecordingToolSettings _recordingToolSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RecordingToolSettings*& GlobalNamespace::RecordingToolManager::dyn__recordingToolSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__recordingToolSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingToolSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RecordingToolSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ObjectsMovementRecorder/InitData _objectsMovementRecorderInitData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::InitData*& GlobalNamespace::RecordingToolManager::dyn__objectsMovementRecorderInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__objectsMovementRecorderInitData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_objectsMovementRecorderInitData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuDestination _menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::RecordingToolManager::dyn__menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ListLogger _listLogger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ListLogger*& GlobalNamespace::RecordingToolManager::dyn__listLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__listLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listLogger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ListLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatSaberLogger _logger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatSaberLogger*& GlobalNamespace::RecordingToolManager::dyn__logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_logger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatSaberLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IPosesSerializer _posesSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPosesSerializer*& GlobalNamespace::RecordingToolManager::dyn__posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::dyn__posesSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posesSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPosesSerializer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolManager.get_recordingToolEnabled
bool GlobalNamespace::RecordingToolManager::get_recordingToolEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_recordingToolEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingToolEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_showRecordingToolScene
bool GlobalNamespace::RecordingToolManager::get_showRecordingToolScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_showRecordingToolScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showRecordingToolScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_configJsonData
::StringW GlobalNamespace::RecordingToolManager::get_configJsonData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_configJsonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configJsonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_recordingToolSettings
::GlobalNamespace::RecordingToolSettings* GlobalNamespace::RecordingToolManager::get_recordingToolSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_recordingToolSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingToolSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::RecordingToolSettings*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_objectsMovementRecorderInitData
::GlobalNamespace::ObjectsMovementRecorder::InitData* GlobalNamespace::RecordingToolManager::get_objectsMovementRecorderInitData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_objectsMovementRecorderInitData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objectsMovementRecorderInitData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObjectsMovementRecorder::InitData*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_menuDestination
::GlobalNamespace::MenuDestination* GlobalNamespace::RecordingToolManager::get_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_menuDestination");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuDestination", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_listLogger
::GlobalNamespace::ListLogger* GlobalNamespace::RecordingToolManager::get_listLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_listLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_listLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ListLogger*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_logger
::GlobalNamespace::IBeatSaberLogger* GlobalNamespace::RecordingToolManager::get_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_logger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IBeatSaberLogger*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolManager.get_posesSerializer
::GlobalNamespace::IPosesSerializer* GlobalNamespace::RecordingToolManager::get_posesSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolManager::get_posesSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_posesSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IPosesSerializer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolResourceContainerSO
#include "GlobalNamespace/RecordingToolResourceContainerSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcLevelPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__dlcLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__dlcLevelPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcLevelPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasPackCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelPackCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__ostAndExtrasPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__ostAndExtrasPackCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ostAndExtrasPackCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelPackCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _environmentsList
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__environmentsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__environmentsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentsList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IBeatmapLevelPack> _beatmapLevelPacks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>*& GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::dyn__beatmapLevelPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelPacks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_beatmapLevelPacks
::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapLevelPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevelPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::IBeatmapLevelPack*>*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_beatmapCharacteristicCollection
::GlobalNamespace::BeatmapCharacteristicCollectionSO* GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_beatmapCharacteristicCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristicCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapCharacteristicCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.get_environmentsList
::GlobalNamespace::EnvironmentsListSO* GlobalNamespace::RecordingToolResourceContainerSO::get_environmentsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::get_environmentsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentsListSO*, false>(this, ___internal__method);
}
// Autogenerated method: RecordingToolResourceContainerSO.OnEnable
void GlobalNamespace::RecordingToolResourceContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolResourceContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RecordingToolSettings
#include "GlobalNamespace/RecordingToolSettings.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: PlaybackRenderer/PlaybackScreenshot
#include "GlobalNamespace/PlaybackRenderer_PlaybackScreenshot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String gameMode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolSettings::dyn_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_gameMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameMode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IBeatmapLevelPack pack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::RecordingToolSettings::dyn_pack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_pack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IPreviewBeatmapLevel level
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::RecordingToolSettings::dyn_level() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_level");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "level"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficulty difficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::RecordingToolSettings::dyn_difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapCharacteristicSO characteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::RecordingToolSettings::dyn_characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "characteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean runLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_runLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_runLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "runLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObjectsMovementRecorder/Mode recordingMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::Mode& GlobalNamespace::RecordingToolSettings::dyn_recordingMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_recordingMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String recordingPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RecordingToolSettings::dyn_recordingPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_recordingPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ObjectsMovementRecorder/CameraView cameraView
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ObjectsMovementRecorder::CameraView& GlobalNamespace::RecordingToolSettings::dyn_cameraView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_cameraView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObjectsMovementRecorder::CameraView*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean addDateTimeSuffixToRecordingName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_addDateTimeSuffixToRecordingName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_addDateTimeSuffixToRecordingName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "addDateTimeSuffixToRecordingName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean screenshotRecording
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_screenshotRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotWidth
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_screenshotWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 screenshotHeight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_screenshotHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_screenshotHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "screenshotHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 framerate
[[deprecated("Use field access instead!")]] int& GlobalNamespace::RecordingToolSettings::dyn_framerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_framerate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "framerate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlaybackRenderer/PlaybackScreenshot[] playbackScreenshots
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>& GlobalNamespace::RecordingToolSettings::dyn_playbackScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_playbackScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackScreenshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PlaybackRenderer::PlaybackScreenshot*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolSettings::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single songSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RecordingToolSettings::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentTypeSO environmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::RecordingToolSettings::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentInfoSO environmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::RecordingToolSettings::dyn_environmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_environmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean saveToOldFormat
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RecordingToolSettings::dyn_saveToOldFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::dyn_saveToOldFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saveToOldFormat"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RecordingToolSettings.ToString
::StringW GlobalNamespace::RecordingToolSettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RecordingToolSettings::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyValuesPerSecond
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _historyValuesCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValuesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValuesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<AveragingValueRecorder/AverageValueData> _averageWindowValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::GlobalNamespace::AveragingValueRecorder::AverageValueData>*& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::GlobalNamespace::AveragingValueRecorder::AverageValueData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Single> _historyValues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<float>*& GlobalNamespace::AveragingValueRecorder::dyn__historyValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyValues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _historyTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__historyTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__historyTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_historyTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowValuesDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__averageWindowValuesDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowValuesDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::dyn__lastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::dyn__lastValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder.Update
void GlobalNamespace::AveragingValueRecorder::Update(float value, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, deltaTime);
}
// Autogenerated method: AveragingValueRecorder.GetAverageValue
float GlobalNamespace::AveragingValueRecorder::GetAverageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetAverageValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetLastValue
float GlobalNamespace::AveragingValueRecorder::GetLastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetLastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetHistoryValues
::System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::GetHistoryValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::GetHistoryValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHistoryValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Queue_1<float>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder/AverageValueData
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <value>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$value$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::dyn_$time$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_value
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_value
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_time
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_time
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData..ctor
// ABORTED elsewhere.  GlobalNamespace::AveragingValueRecorder::AverageValueData::AverageValueData(float value, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFilePath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__recordingFilePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFilePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FullVRControllersRecorder::Mode& GlobalNamespace::FullVRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FullVRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__timeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _othersSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__othersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__handsSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _playbackFloorOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__playbackFloorOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackFloorOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController[] _controllers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRController*>& GlobalNamespace::FullVRControllersRecorder::dyn__controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<VRController> didSetControllerTransformEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::VRController*>*& GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn_didSetControllerTransformEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetControllerTransformEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::VRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorderData _data
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRControllersRecorderData*& GlobalNamespace::FullVRControllersRecorder::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRControllersRecorderData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FullVRControllersRecorder.add_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent(::System::Action_1<::GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.remove_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent(::System::Action_1<::GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.Start
void GlobalNamespace::FullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.OnDestroy
void GlobalNamespace::FullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.PlaybackTick
void GlobalNamespace::FullVRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.RecordTick
void GlobalNamespace::FullVRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.Update
void GlobalNamespace::FullVRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.LateUpdate
void GlobalNamespace::FullVRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder/Mode
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Record
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Record
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Playback
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Playback
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Off
::GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Off
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off(::GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FullVRControllersRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverridePlayerTransformsFromFullVRControllersRecorder
#include "GlobalNamespace/OverridePlayerTransformsFromFullVRControllersRecorder.hpp"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FullVRControllersRecorder _fullVRControllersRecorder
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FullVRControllersRecorder*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__fullVRControllersRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullVRControllersRecorder"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FullVRControllersRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerTransforms*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SaberManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerVRControllersManager _playerVRControllersManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerVRControllersManager*& GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::dyn__playerVRControllersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerVRControllersManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerVRControllersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.Start
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.OnDestroy
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.HandleFullVRControllersRecorderDidSetControllerTransform
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform(::GlobalNamespace::VRController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayableDirectorTimer
#include "GlobalNamespace/PlayableDirectorTimer.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _playableDirector
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableDirector*& GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::dyn__playableDirector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playableDirector"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayableDirectorTimer.Update
void GlobalNamespace::PlayableDirectorTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PlayableDirectorTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SimpleVRNodeRecorder/RecordMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SimpleVRNodeRecorder::RecordMode& GlobalNamespace::SimpleVRNodeRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode _node
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::SimpleVRNodeRecorder::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _playbackTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__playbackTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _forwardOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__forwardOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<SimpleVRNodeRecorder/SavedData/NodeKeyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _prevRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::dyn__prevRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder.Awake
void GlobalNamespace::SimpleVRNodeRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.OnDestroy
void GlobalNamespace::SimpleVRNodeRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.RecordNewKeyFrame
void GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordNewKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Update
void GlobalNamespace::SimpleVRNodeRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Save
void GlobalNamespace::SimpleVRNodeRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Load
void GlobalNamespace::SimpleVRNodeRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SimpleVRNodeRecorder/SavedData/NodeKeyframe[] keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>& GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_pos
::UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_rot
::UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/RecordMode
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Record
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Record
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Playback
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Playback
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Off
::GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Off
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off(::GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleVRNodeRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.TextAsset _recordingTextAsset
[[deprecated("Use field access instead!")]] ::UnityEngine::TextAsset*& GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recordingTextAsset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingTextAsset"))->offset;
  return *reinterpret_cast<::UnityEngine::TextAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _recordingFileName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRControllersRecorder::dyn__recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recordingFileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recordingFileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllersRecorder/Mode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRControllersRecorder::Mode& GlobalNamespace::VRControllersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRControllersRecorder::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontMoveHead
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__dontMoveHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontMoveHead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _changeToNonVRCamera
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__changeToNonVRCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeToNonVRCamera"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _adjustSabersPositionBasedOnHeadPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__adjustSabersPositionBasedOnHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_adjustSabersPositionBasedOnHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__headSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cameraFOV
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__cameraFOV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__cameraFOV");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cameraFOV"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersTimeOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controllersTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _controllersSmooth
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controllersSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controllersSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controller0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _controller1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRController*& GlobalNamespace::VRControllersRecorder::dyn__controller1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__controller1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controller1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _recorderCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::Camera*& GlobalNamespace::VRControllersRecorder::dyn__recorderCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__recorderCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_recorderCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _spawnRotationTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__spawnRotationTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRControllersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRControllersRecorder/Keyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorder::Keyframe*>*& GlobalNamespace::VRControllersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorder.get_mode
::GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorder::Mode, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(::GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
::UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(::UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::StringW GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(::UnityEngine::Transform* transf, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transf), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(targetRot), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
::UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::StringW recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingfilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AnimationClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
::System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::StringW assemblyName, ::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorder/SavedData/KeyframeSerializable[] _keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zPos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__xRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__yRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__zRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__wRot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::SavedData::KeyframeSerializable::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Mode
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Record
::GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Record
void GlobalNamespace::VRControllersRecorder::Mode::_set_Record(::GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Playback
::GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Playback
void GlobalNamespace::VRControllersRecorder::Mode::_set_Playback(::GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Off
::GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Off
void GlobalNamespace::VRControllersRecorder::Mode::_set_Off(::GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRControllersRecorder::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__pos3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot1
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot1"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot2
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot2"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot3
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__rot3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot3"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorder::Keyframe::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorder::Keyframe::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/NodeInfo[] nodesInfo
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorderData::NodeInfo*>& GlobalNamespace::VRControllersRecorderData::dyn_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::dyn_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderData::NodeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<VRControllersRecorderData/Keyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorderData::Keyframe*>*& GlobalNamespace::VRControllersRecorderData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRControllersRecorderData::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorderData.get_numberOfKeyframes
int GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorderData.AddKeyFrame
void GlobalNamespace::VRControllersRecorderData::AddKeyFrame(::ArrayW<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation> positionsAndRotations, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::AddKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionsAndRotations), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionsAndRotations, time);
}
// Autogenerated method: VRControllersRecorderData.GetPositionAndRotation
::GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation(int frameIdx, ::UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetLerpedPositionAndRotation
::GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation(int frameIdx, float t, ::UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLerpedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, t, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetFrameTime
float GlobalNamespace::VRControllersRecorderData::GetFrameTime(int frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::GetFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, frameIdx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Vector3 pos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_pos");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Quaternion rot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::PositionAndRotation::dyn_rot");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersRecorderData/PositionAndRotation..ctor
// ABORTED elsewhere.  GlobalNamespace::VRControllersRecorderData::PositionAndRotation::PositionAndRotation(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot)
// Autogenerated method: VRControllersRecorderData/PositionAndRotation.Lerp
::GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp(::GlobalNamespace::VRControllersRecorderData::PositionAndRotation a, ::GlobalNamespace::VRControllersRecorderData::PositionAndRotation b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderData/PositionAndRotation", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly VRControllersRecorderData/PositionAndRotation[] positionsAndRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation>& GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderData::PositionAndRotation>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::Keyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.XR.XRNode nodeType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 nodeIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderData::NodeInfo::dyn_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveAndLoad
#include "GlobalNamespace/VRControllersRecorderSaveAndLoad.hpp"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromFile
::GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile(::StringW filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromTextAsset
::GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset(::UnityEngine::TextAsset* textAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textAsset)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, textAsset);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadFromFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile(::StringW filePath, ::GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.SaveToFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile(::StringW filePath, ::GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/NodeInfo[] nodesInfo
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>& GlobalNamespace::VRControllersRecorderSaveData::dyn_nodesInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::dyn_nodesInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodesInfo"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/Keyframe[] keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>& GlobalNamespace::VRControllersRecorderSaveData::dyn_keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::dyn_keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::Keyframe*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single posX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single posZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotW
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation::dyn_rotW");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotW"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRControllersRecorderSaveData/PositionAndRotation[] positionsAndRotations
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_positionsAndRotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionsAndRotations"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRControllersRecorderSaveData::PositionAndRotation*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::Keyframe::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode nodeType
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeType"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 nodeIdx
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRControllersRecorderSaveData::NodeInfo::dyn_nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FloatSO _songTime
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::VRTrackersRecorder::dyn__songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__songTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTime"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _saveFilename
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRTrackersRecorder::dyn__saveFilename() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__saveFilename");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saveFilename"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRTrackersRecorder/RecordMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRTrackersRecorder::RecordMode& GlobalNamespace::VRTrackersRecorder::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRTrackersRecorder::RecordMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRTrackersRecorder::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _playbackTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__playbackTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playbackTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<VRTrackersRecorder/Keyframe> _keyframes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::VRTrackersRecorder::Keyframe*>*& GlobalNamespace::VRTrackersRecorder::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::VRTrackersRecorder::Keyframe*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _keyframeIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__keyframeIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframeIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SteamVR_Events/Action _newPosesAction
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamVR_Events::Action*& GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__newPosesAction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPosesAction"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamVR_Events::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _loadedOriginPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _loadedOriginRot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::dyn__loadedOriginRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loadedOriginRot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::ArrayW<::Valve::VR::TrackedDevicePose_t> poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable[] _keyframes
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::dyn__keyframes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyframes"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _xPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zPos
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _xRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__xRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _yRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__yRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _zRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__zRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _wRot
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__wRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_wRot"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::SavedData::KeyframeSerializable::TransformSerializable::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
::GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(::GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::RecordMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRTrackersRecorder/Keyframe/KeyframeTransform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _time
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _pos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion _rot
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__rot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rot"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _valid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRTrackersRecorder::Keyframe::KeyframeTransform::dyn__valid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResizableTextMeshPro
#include "GlobalNamespace/ResizableTextMeshPro.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TMP_Text _textMeshPro
[[deprecated("Use field access instead!")]] ::TMPro::TMP_Text*& GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__textMeshPro");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textMeshPro"))->offset;
  return *reinterpret_cast<::TMPro::TMP_Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _rectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::RectTransform*& GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__rectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _textExtraSpace
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::dyn__textExtraSpace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textExtraSpace"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResizableTextMeshPro.Start
void GlobalNamespace::ResizableTextMeshPro::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.Update
void GlobalNamespace::ResizableTextMeshPro::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.OnDestroy
void GlobalNamespace::ResizableTextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResizableTextMeshPro.HandleTextDidChange
void GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange(::UnityEngine::Object* textMeshPro) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ResizableTextMeshPro::HandleTextDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTextDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textMeshPro)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, textMeshPro);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kAutoControlLength
float GlobalNamespace::BezierPath::_get_kAutoControlLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::_get_kAutoControlLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BezierPath", "kAutoControlLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAutoControlLength
void GlobalNamespace::BezierPath::_set_kAutoControlLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::_set_kAutoControlLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath", "kAutoControlLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action bezierPathWasModifiedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::BezierPath::dyn_bezierPathWasModifiedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn_bezierPathWasModifiedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bezierPathWasModifiedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Vector3> _points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Vector3>*& GlobalNamespace::BezierPath::dyn__points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BezierPath/ControlMode _controlMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BezierPath::ControlMode& GlobalNamespace::BezierPath::dyn__controlMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__controlMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_controlMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierPath::ControlMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> _perAnchorNormalsAngle
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<float>*& GlobalNamespace::BezierPath::dyn__perAnchorNormalsAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__perAnchorNormalsAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perAnchorNormalsAngle"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _neighbourDistances
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::BezierPath::dyn__neighbourDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::dyn__neighbourDistances");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_neighbourDistances"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BezierPath.get_controlPointMode
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::get_controlPointMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_controlPointMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controlPointMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierPath::ControlMode, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.set_controlPointMode
void GlobalNamespace::BezierPath::set_controlPointMode(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::set_controlPointMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controlPointMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.get_pointsCount
int GlobalNamespace::BezierPath::get_pointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_pointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_anchorPointsCount
int GlobalNamespace::BezierPath::get_anchorPointsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_anchorPointsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorPointsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_segmentsCount
int GlobalNamespace::BezierPath::get_segmentsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_segmentsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_segmentsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.get_Item
::UnityEngine::Vector3 GlobalNamespace::BezierPath::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.add_bezierPathWasModifiedEvent
void GlobalNamespace::BezierPath::add_bezierPathWasModifiedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::add_bezierPathWasModifiedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_bezierPathWasModifiedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.remove_bezierPathWasModifiedEvent
void GlobalNamespace::BezierPath::remove_bezierPathWasModifiedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::remove_bezierPathWasModifiedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_bezierPathWasModifiedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BezierPath.UpdateByAnchorPoints
void GlobalNamespace::BezierPath::UpdateByAnchorPoints(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::UpdateByAnchorPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateByAnchorPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: BezierPath.UpdateControlPoints
void GlobalNamespace::BezierPath::UpdateControlPoints(::System::Collections::Generic::IReadOnlyList_1<::UnityEngine::Vector3>* points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::UpdateControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, points);
}
// Autogenerated method: BezierPath.GetPoint
::UnityEngine::Vector3 GlobalNamespace::BezierPath::GetPoint(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.SetPoint
void GlobalNamespace::BezierPath::SetPoint(int i, ::UnityEngine::Vector3 localPosition, bool suppressPathModified) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::SetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(localPosition), ::il2cpp_utils::ExtractType(suppressPathModified)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, i, localPosition, suppressPathModified);
}
// Autogenerated method: BezierPath.AddSegmentToEnd
void GlobalNamespace::BezierPath::AddSegmentToEnd(::UnityEngine::Vector3 anchorPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AddSegmentToEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddSegmentToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorPos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorPos);
}
// Autogenerated method: BezierPath.GetPointsInSegment
void GlobalNamespace::BezierPath::GetPointsInSegment(int segmentIndex, ByRef<::ArrayW<::UnityEngine::Vector3>> points) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetPointsInSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPointsInSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentIndex), ::il2cpp_utils::ExtractType(points)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, segmentIndex, byref(points));
}
// Autogenerated method: BezierPath.GetAnchorNormalAngle
float GlobalNamespace::BezierPath::GetAnchorNormalAngle(int anchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::GetAnchorNormalAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnchorNormalAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, anchorIndex);
}
// Autogenerated method: BezierPath.SetAnchorNormalAngle
void GlobalNamespace::BezierPath::SetAnchorNormalAngle(int anchorIndex, float angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::SetAnchorNormalAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAnchorNormalAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex), ::il2cpp_utils::ExtractType(angle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorIndex, angle);
}
// Autogenerated method: BezierPath.AutoSetAllAffectedControlPoints
void GlobalNamespace::BezierPath::AutoSetAllAffectedControlPoints(int updatedAnchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAllAffectedControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAllAffectedControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updatedAnchorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, updatedAnchorIndex);
}
// Autogenerated method: BezierPath.AutoSetAllControlPoints
void GlobalNamespace::BezierPath::AutoSetAllControlPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAllControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAllControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.AutoSetAnchorControlPoints
void GlobalNamespace::BezierPath::AutoSetAnchorControlPoints(int anchorIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetAnchorControlPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetAnchorControlPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchorIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, anchorIndex);
}
// Autogenerated method: BezierPath.AutoSetStartAndEndControls
void GlobalNamespace::BezierPath::AutoSetStartAndEndControls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::AutoSetStartAndEndControls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AutoSetStartAndEndControls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BezierPath.LoopIndex
int GlobalNamespace::BezierPath::LoopIndex(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::LoopIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoopIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, i);
}
// Autogenerated method: BezierPath.NotifyPathModified
void GlobalNamespace::BezierPath::NotifyPathModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::NotifyPathModified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyPathModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BezierPath/ControlMode
#include "GlobalNamespace/BezierPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Aligned
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Aligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Aligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Aligned"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Aligned
void GlobalNamespace::BezierPath::ControlMode::_set_Aligned(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Aligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Aligned", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Mirrored
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Mirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Mirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Mirrored"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Mirrored
void GlobalNamespace::BezierPath::ControlMode::_set_Mirrored(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Mirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Mirrored", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Free
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Free"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Free
void GlobalNamespace::BezierPath::ControlMode::_set_Free(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Free", value));
}
// Autogenerated static field getter
// Get static field: static public BezierPath/ControlMode Automatic
::GlobalNamespace::BezierPath::ControlMode GlobalNamespace::BezierPath::ControlMode::_get_Automatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_get_Automatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BezierPath::ControlMode>("", "BezierPath/ControlMode", "Automatic"));
}
// Autogenerated static field setter
// Set static field: static public BezierPath/ControlMode Automatic
void GlobalNamespace::BezierPath::ControlMode::_set_Automatic(::GlobalNamespace::BezierPath::ControlMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::_set_Automatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BezierPath/ControlMode", "Automatic", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BezierPath::ControlMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BezierPath::ControlMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PathsHolder
#include "GlobalNamespace/PathsHolder.hpp"
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
// Including type: VertexPath
#include "GlobalNamespace/VertexPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BezierPath _bezierPath
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BezierPath*& GlobalNamespace::PathsHolder::dyn__bezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::dyn__bezierPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bezierPath"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BezierPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VertexPath _vertexPath
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VertexPath*& GlobalNamespace::PathsHolder::dyn__vertexPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::dyn__vertexPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertexPath"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VertexPath**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PathsHolder.get_bezierPath
::GlobalNamespace::BezierPath* GlobalNamespace::PathsHolder::get_bezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::get_bezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BezierPath*, false>(this, ___internal__method);
}
// Autogenerated method: PathsHolder.get_vertexPath
::GlobalNamespace::VertexPath* GlobalNamespace::PathsHolder::get_vertexPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::get_vertexPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::VertexPath*, false>(this, ___internal__method);
}
// Autogenerated method: PathsHolder.UpdateVertexPathByBezierPath
void GlobalNamespace::PathsHolder::UpdateVertexPathByBezierPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PathsHolder::UpdateVertexPathByBezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexPathByBezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VertexPath
#include "GlobalNamespace/VertexPath.hpp"
// Including type: BezierPath
#include "GlobalNamespace/BezierPath.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EEC10
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 _back
::UnityEngine::Vector3 GlobalNamespace::VertexPath::_get__back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::_get__back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("", "VertexPath", "_back"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 _back
void GlobalNamespace::VertexPath::_set__back(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::_set__back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VertexPath", "_back", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localTangents
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localTangents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localTangents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localTangents"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector3[] localNormals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn_localNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn_localNormals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localNormals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _length
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VertexPath::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] _cumulativeLengthAtEachVertex
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::VertexPath::dyn__cumulativeLengthAtEachVertex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__cumulativeLengthAtEachVertex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cumulativeLengthAtEachVertex"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] _anchorVertexMap
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::VertexPath::dyn__anchorVertexMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__anchorVertexMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_anchorVertexMap"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _segmentPoints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::VertexPath::dyn__segmentPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::dyn__segmentPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentPoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VertexPath.get_length
float GlobalNamespace::VertexPath::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VertexPath.get_numPoints
int GlobalNamespace::VertexPath::get_numPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::get_numPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VertexPath..cctor
void GlobalNamespace::VertexPath::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VertexPath", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VertexPath.UpdateByBezierPath
void GlobalNamespace::VertexPath::UpdateByBezierPath(::GlobalNamespace::BezierPath* bezierPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::UpdateByBezierPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateByBezierPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bezierPath)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bezierPath);
}
// Autogenerated method: VertexPath.TimeAtPoint
float GlobalNamespace::VertexPath::TimeAtPoint(int pointIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::TimeAtPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TimeAtPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pointIndex);
}
// Autogenerated method: VertexPath.GetTangent
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetTangent(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetTangent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTangent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.GetNormal
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetNormal(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.GetPoint
::UnityEngine::Vector3 GlobalNamespace::VertexPath::GetPoint(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::GetPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, index);
}
// Autogenerated method: VertexPath.SplitBezierPathIntoFixNumberOfSegments
void GlobalNamespace::VertexPath::SplitBezierPathIntoFixNumberOfSegments(::GlobalNamespace::BezierPath* bezierPath, int numberOfVertexSegments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VertexPath::SplitBezierPathIntoFixNumberOfSegments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SplitBezierPathIntoFixNumberOfSegments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bezierPath), ::il2cpp_utils::ExtractType(numberOfVertexSegments)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bezierPath, numberOfVertexSegments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeSyncedVideoPlayer
#include "GlobalNamespace/SongTimeSyncedVideoPlayer.hpp"
// Including type: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17
#include "GlobalNamespace/SongTimeSyncedVideoPlayer_-WaitForDependenciesAndPlay-d__17.hpp"
// Including type: UnityEngine.Video.VideoPlayer
#include "UnityEngine/Video/VideoPlayer.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: UnityEngine.Video.VideoClip
#include "UnityEngine/Video/VideoClip.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EEC88
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorId
int GlobalNamespace::SongTimeSyncedVideoPlayer::_get__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_get__colorId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongTimeSyncedVideoPlayer", "_colorId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorId
void GlobalNamespace::SongTimeSyncedVideoPlayer::_set__colorId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_set__colorId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeSyncedVideoPlayer", "_colorId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EEC98
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _textureId
int GlobalNamespace::SongTimeSyncedVideoPlayer::_get__textureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_get__textureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongTimeSyncedVideoPlayer", "_textureId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _textureId
void GlobalNamespace::SongTimeSyncedVideoPlayer::_set__textureId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_set__textureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeSyncedVideoPlayer", "_textureId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EECA8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _textureStId
int GlobalNamespace::SongTimeSyncedVideoPlayer::_get__textureStId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_get__textureStId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongTimeSyncedVideoPlayer", "_textureStId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _textureStId
void GlobalNamespace::SongTimeSyncedVideoPlayer::_set__textureStId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::_set__textureStId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeSyncedVideoPlayer", "_textureStId", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Video.VideoPlayer _videoPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Video::VideoPlayer*& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__videoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__videoPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_videoPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Video::VideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentContext _environmentContext
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentContext& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__environmentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__environmentContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentContext"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentContext*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Coroutine _waitForDependenciesAndPlayCoroutine
[[deprecated("Use field access instead!")]] ::UnityEngine::Coroutine*& GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__waitForDependenciesAndPlayCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::dyn__waitForDependenciesAndPlayCoroutine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitForDependenciesAndPlayCoroutine"))->offset;
  return *reinterpret_cast<::UnityEngine::Coroutine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeSyncedVideoPlayer..cctor
void GlobalNamespace::SongTimeSyncedVideoPlayer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongTimeSyncedVideoPlayer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.OnDestroy
void GlobalNamespace::SongTimeSyncedVideoPlayer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.Update
void GlobalNamespace::SongTimeSyncedVideoPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.LateUpdate
void GlobalNamespace::SongTimeSyncedVideoPlayer::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.SetVideoClip
void GlobalNamespace::SongTimeSyncedVideoPlayer::SetVideoClip(::UnityEngine::Video::VideoClip* videoClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::SetVideoClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVideoClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(videoClip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, videoClip);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.SetSpriteAndStopVideo
void GlobalNamespace::SongTimeSyncedVideoPlayer::SetSpriteAndStopVideo(::UnityEngine::Sprite* sprite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::SetSpriteAndStopVideo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSpriteAndStopVideo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sprite)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sprite);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.StopVideoPlayer
void GlobalNamespace::SongTimeSyncedVideoPlayer::StopVideoPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::StopVideoPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopVideoPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.WaitForDependenciesAndPlay
::System::Collections::IEnumerator* GlobalNamespace::SongTimeSyncedVideoPlayer::WaitForDependenciesAndPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::WaitForDependenciesAndPlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitForDependenciesAndPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.<WaitForDependenciesAndPlay>b__17_0
bool GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$b__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::<WaitForDependenciesAndPlay>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WaitForDependenciesAndPlay>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.Start
void GlobalNamespace::SongTimeSyncedVideoPlayer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer.ColorWasSet
void GlobalNamespace::SongTimeSyncedVideoPlayer::ColorWasSet(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17
#include "GlobalNamespace/SongTimeSyncedVideoPlayer_-WaitForDependenciesAndPlay-d__17.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongTimeSyncedVideoPlayer <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongTimeSyncedVideoPlayer*& GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongTimeSyncedVideoPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17.System.IDisposable.Dispose
void GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17.MoveNext
bool GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SongTimeSyncedVideoPlayer/<WaitForDependenciesAndPlay>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeSyncedVideoPlayer::$WaitForDependenciesAndPlay$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeToShaderWriter
#include "GlobalNamespace/SongTimeToShaderWriter.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10EECC8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _songTimePropertyId
int GlobalNamespace::SongTimeToShaderWriter::_get__songTimePropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeToShaderWriter::_get__songTimePropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SongTimeToShaderWriter", "_songTimePropertyId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _songTimePropertyId
void GlobalNamespace::SongTimeToShaderWriter::_set__songTimePropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeToShaderWriter::_set__songTimePropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeToShaderWriter", "_songTimePropertyId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::SongTimeToShaderWriter::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeToShaderWriter::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeToShaderWriter..cctor
void GlobalNamespace::SongTimeToShaderWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeToShaderWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongTimeToShaderWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SongTimeToShaderWriter.Update
void GlobalNamespace::SongTimeToShaderWriter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeToShaderWriter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerTimelineMock
#include "GlobalNamespace/MultiplayerTimelineMock.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerIntroAnimators
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerIntroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerIntroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerScoreRingItems
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerScoreRingItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerScoreRingItems"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _connectedPlayerOutroAnimators
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedPlayerOutroAnimators");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayerOutroAnimators"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerIntroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerScoreRingItem
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerScoreRingItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerScoreRingItem"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localPlayerOutroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localPlayerOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelIntroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _connectedDuelOutroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__connectedDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedDuelOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelIntroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelIntroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelIntroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _localDuelOutroAnimator
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__localDuelOutroAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localDuelOutroAnimator"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _resultAvatars
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__resultAvatars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultAvatars"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _badgeTimelines
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__badgeTimelines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badgeTimelines"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _resultsMocks
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__resultsMocks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultsMocks"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _ringsGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__ringsGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringsGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _playersGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__playersGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playersGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _duelGroup
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::dyn__duelGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duelGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerIntroAnimators
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerIntroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerIntroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerScoreRings
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerScoreRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerScoreRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedPlayerOutroAnimators
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedPlayerOutroAnimators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerOutroAnimators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerScoreRingItem
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerScoreRingItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerScoreRingItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localPlayerOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localPlayerOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_connectedDuelOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_connectedDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelIntroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localDuelIntroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelIntroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_localDuelOutroAnimator
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_localDuelOutroAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localDuelOutroAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultAvatars
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_resultAvatars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultAvatars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_badgeTimelines
::ArrayW<::UnityEngine::GameObject*> GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_badgeTimelines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_badgeTimelines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.get_resultsMocks
::UnityEngine::GameObject* GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::get_resultsMocks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_resultsMocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerTimelineMock.HandleActivations
void GlobalNamespace::MultiplayerTimelineMock::HandleActivations(bool isDuel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerTimelineMock::HandleActivations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleActivations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isDuel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isDuel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Vector3SO _roomCenter
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Vector3SO*& GlobalNamespace::VRCenterAdjust::dyn__roomCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__roomCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomCenter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Vector3SO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FloatSO _roomRotation
[[deprecated("Use field access instead!")]] ::GlobalNamespace::FloatSO*& GlobalNamespace::VRCenterAdjust::dyn__roomRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__roomRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_roomRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FloatSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ArrayPositionTween
#include "GlobalNamespace/ArrayPositionTween.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
[[deprecated("Use field access instead!")]] ::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::ArrayPositionTween::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ArrayPositionTween::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::ArrayPositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ArrayPositionTween.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::ArrayPositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: ArrayPositionTween.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::ArrayPositionTween::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ArrayPositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorAsset
#include "GlobalNamespace/AvatarColorAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::AvatarColorAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::AvatarColorAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: AvatarColorAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::AvatarColorAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _startColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__startColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__startColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color _endColor
[[deprecated("Use field access instead!")]] ::UnityEngine::Color& GlobalNamespace::AvatarColorBehaviour::dyn__endColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__endColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType _easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::AvatarColorBehaviour::dyn__easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarVisualController*& GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::AvatarColorBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarColorBehaviour.OnGraphStart
void GlobalNamespace::AvatarColorBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: AvatarColorBehaviour.ProcessFrame
void GlobalNamespace::AvatarColorBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: AvatarColorBehaviour.OnPlayableDestroy
void GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AvatarColorBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorTrack
#include "GlobalNamespace/AvatarColorTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogParamsAsset
#include "GlobalNamespace/BloomFogParamsAsset.hpp"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomFogParamsBehaviour _template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomFogParamsBehaviour*& GlobalNamespace::BloomFogParamsAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogParamsBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::BloomFogParamsAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::BloomFogParamsAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _bloomFogParams
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BloomFogParamsBehaviour::dyn__blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__blend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsBehaviour.ProcessFrame
void GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: BloomFogParamsBehaviour.OnPlayableDestroy
void GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlPlayableAsset
#include "GlobalNamespace/CustomControlPlayableAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AvatarColorBehaviour _template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AvatarColorBehaviour*& GlobalNamespace::CustomControlPlayableAsset::dyn__template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomControlPlayableAsset::dyn__template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AvatarColorBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomControlPlayableAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::CustomControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlTrack
#include "GlobalNamespace/CustomControlTrack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTimelineTween
#include "GlobalNamespace/CustomTimelineTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::CustomTimelineTween::dyn_transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::dyn_transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] startPositions
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CustomTimelineTween::dyn_startPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::dyn_startPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTimelineTween.OnValidate
void GlobalNamespace::CustomTimelineTween::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTimelineTween::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transforms
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::CustomTweenBehaviour::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean startLocationCurrentPosition
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_startLocationCurrentPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocationCurrentPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startLocalPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_startLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startLocalPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 endLocalPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_endLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endLocalPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType easeType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::CustomTweenBehaviour::dyn_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_easeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "easeType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endXRelativeToSelfRotation
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_endXRelativeToSelfRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endXRelativeToSelfRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single elementDelay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn_elementDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockX
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockY
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _lockZ
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn__lockZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__lockZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lockZ"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeOrder
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizeOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeOrder"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _randomizedMinDurationMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedMinDurationMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedMinDurationMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomTweenBehaviour::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _perItemDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__perItemDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perItemDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _originalLocalPos
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__originalLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originalLocalPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomTweenBehaviour::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _randomizedOrder
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedOrder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedOrder"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _randomizedDuration
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::dyn__randomizedDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizedDuration"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomTweenBehaviour.OnGraphStart
void GlobalNamespace::CustomTweenBehaviour::OnGraphStart(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.ProcessFrame
void GlobalNamespace::CustomTweenBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: CustomTweenBehaviour.OnPlayableDestroy
void GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy(::UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.OnBehaviourPlay
void GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CustomTweenBehaviour/<>c <>9
::GlobalNamespace::CustomTweenBehaviour::$$c* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::CustomTweenBehaviour::$$c*>("", "CustomTweenBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CustomTweenBehaviour/<>c <>9
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9(::GlobalNamespace::CustomTweenBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
::System::Func_2<int, float>* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<int, float>*>("", "CustomTweenBehaviour/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0(::System::Func_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9__21_0", value)));
}
// Autogenerated method: CustomTweenBehaviour/<>c..cctor
void GlobalNamespace::CustomTweenBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CustomTweenBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: CustomTweenBehaviour/<>c.<OnBehaviourPlay>b__21_0
float GlobalNamespace::CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomTweenBehaviour::$$c::<OnBehaviourPlay>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, i);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectAsset
#include "GlobalNamespace/GhostEffectAsset.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<TimelineArrayReference> arrayReference
[[deprecated("Use field access instead!")]] ::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>& GlobalNamespace::GhostEffectAsset::dyn_arrayReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn_arrayReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::GlobalNamespace::TimelineArrayReference*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GhostEffectBehaviour*& GlobalNamespace::GhostEffectAsset::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectAsset.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::GhostEffectAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: GhostEffectAsset.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::GhostEffectAsset::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostEffectBehaviour
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve alphaCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_alphaCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve sizeCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_sizeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sizeCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AnimationCurve distanceCurve
[[deprecated("Use field access instead!")]] ::UnityEngine::AnimationCurve*& GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_distanceCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _distanceMultiplier
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__distanceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distanceMultiplier"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useStartTransform
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__useStartTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useStartTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useEndTransform
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__useEndTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useEndTransform"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _startLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__startLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _startTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__startTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__startTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 _endLocalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endLocalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _endTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__endTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EaseType _positionEasing
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EaseType& GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__positionEasing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionEasing"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/EndBehavior _endBehavior
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GhostEffectBehaviour::EndBehavior& GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__endBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endBehavior"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::EndBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single progress
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GhostEffectBehaviour::dyn_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] textMeshPros
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshPro*>& GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn_textMeshPros");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textMeshPros"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroups
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::CanvasGroup*>& GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__canvasGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroups"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostEffectBehaviour/GhostEffectType _ghostEffectType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GhostEffectBehaviour::GhostEffectType& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform _ghostEffectTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__ghostEffectTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ghostEffectTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GhostEffectBehaviour::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finished
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GhostEffectBehaviour::dyn__finished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::dyn__finished");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finished"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostEffectBehaviour.EnableObjects
void GlobalNamespace::GhostEffectBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: GhostEffectBehaviour.OnBehaviourPlay
void GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: GhostEffectBehaviour.ProcessFrame
void GlobalNamespace::GhostEffectBehaviour::ProcessFrame(::UnityEngine::Playables::Playable playable, ::UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/EndBehavior
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableAll
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableAll"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableAll
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableAll", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableCopies"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableCopies", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior Nothing
::GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior Nothing
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing(::GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "Nothing", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::EndBehavior::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/GhostEffectType
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro(::GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType Canvas
::GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType Canvas
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas(::GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "Canvas", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostEffectBehaviour::GhostEffectType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePositionTween
#include "GlobalNamespace/SinglePositionTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ExposedReference`1<UnityEngine.Transform> transformReference
[[deprecated("Use field access instead!")]] ::UnityEngine::ExposedReference_1<::UnityEngine::Transform*>& GlobalNamespace::SinglePositionTween::dyn_transformReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::dyn_transformReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformReference"))->offset;
  return *reinterpret_cast<::UnityEngine::ExposedReference_1<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CustomTweenBehaviour template
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CustomTweenBehaviour*& GlobalNamespace::SinglePositionTween::dyn_template() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::dyn_template");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "template"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CustomTweenBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SinglePositionTween.get_clipCaps
::UnityEngine::Timeline::ClipCaps GlobalNamespace::SinglePositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: SinglePositionTween.CreatePlayable
::UnityEngine::Playables::Playable GlobalNamespace::SinglePositionTween::CreatePlayable(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SinglePositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TimelineArrayReference/ArrayTypes arrayType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TimelineArrayReference::ArrayTypes& GlobalNamespace::TimelineArrayReference::dyn_arrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn_arrayType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "arrayType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TimelineArrayReference::ArrayTypes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TubeBloomPrePassLight[] _tubeLightArray
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__tubeLightArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLightArray"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CanvasGroup[] _canvasGroupArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::CanvasGroup*>& GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__canvasGroupArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroupArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TMPro.TextMeshPro[] _tmproArray
[[deprecated("Use field access instead!")]] ::ArrayW<::TMPro::TextMeshPro*>& GlobalNamespace::TimelineArrayReference::dyn__tmproArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__tmproArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tmproArray"))->offset;
  return *reinterpret_cast<::ArrayW<::TMPro::TextMeshPro*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] _transformArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::TimelineArrayReference::dyn__transformArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__transformArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DirectionalLight[] _directionalLights
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DirectionalLight*>& GlobalNamespace::TimelineArrayReference::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference/ArrayTypes
#include "GlobalNamespace/TimelineArrayReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TubeLight
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TubeLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TubeLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TubeLight", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Transform
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Transform"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Transform
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Transform", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Canvas
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Canvas
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Canvas", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
::GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "DirectionalLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight(::GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "DirectionalLight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TimelineArrayReference::ArrayTypes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
