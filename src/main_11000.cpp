// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single r
[[deprecated("Use field access instead!")]] float& UnityEngine::Color::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_r");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single g
[[deprecated("Use field access instead!")]] float& UnityEngine::Color::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single b
[[deprecated("Use field access instead!")]] float& UnityEngine::Color::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single a
[[deprecated("Use field access instead!")]] float& UnityEngine::Color::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::dyn_a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Color.get_red
::UnityEngine::Color UnityEngine::Color::get_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_red");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_red", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_green
::UnityEngine::Color UnityEngine::Color::get_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_green");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_green", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_blue
::UnityEngine::Color UnityEngine::Color::get_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_blue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_blue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_white
::UnityEngine::Color UnityEngine::Color::get_white() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_white");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_white", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_black
::UnityEngine::Color UnityEngine::Color::get_black() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_black");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_black", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_yellow
::UnityEngine::Color UnityEngine::Color::get_yellow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_yellow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_yellow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_cyan
::UnityEngine::Color UnityEngine::Color::get_cyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_cyan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_cyan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_magenta
::UnityEngine::Color UnityEngine::Color::get_magenta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_magenta");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_magenta", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_gray
::UnityEngine::Color UnityEngine::Color::get_gray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_gray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_gray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_clear
::UnityEngine::Color UnityEngine::Color::get_clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "get_clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_grayscale
float UnityEngine::Color::get_grayscale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_grayscale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_grayscale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_linear
::UnityEngine::Color UnityEngine::Color::get_linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_linear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_linear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_maxColorComponent
float UnityEngine::Color::get_maxColorComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_maxColorComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_maxColorComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.get_Item
float UnityEngine::Color::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Color.set_Item
void UnityEngine::Color::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Color..ctor
// ABORTED elsewhere.  UnityEngine::Color::Color(float r, float g, float b, float a)
// Autogenerated method: UnityEngine.Color..ctor
UnityEngine::Color::Color(float r, float g, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(g), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, r, g, b);
}
// Autogenerated method: UnityEngine.Color.ToString
::StringW UnityEngine::Color::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(::UnityEngine::Color other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.Lerp
::UnityEngine::Color UnityEngine::Color::Lerp(::UnityEngine::Color a, ::UnityEngine::Color b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color.LerpUnclamped
::UnityEngine::Color UnityEngine::Color::LerpUnclamped(::UnityEngine::Color a, ::UnityEngine::Color b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color.RGBMultiplied
::UnityEngine::Color UnityEngine::Color::RGBMultiplied(float multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBMultiplied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "RGBMultiplied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplier)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, multiplier);
}
// Autogenerated method: UnityEngine.Color.RGBToHSV
void UnityEngine::Color::RGBToHSV(::UnityEngine::Color rgbColor, ByRef<float> H, ByRef<float> S, ByRef<float> V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBToHSV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbColor), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rgbColor, byref(H), byref(S), byref(V));
}
// Autogenerated method: UnityEngine.Color.RGBToHSVHelper
void UnityEngine::Color::RGBToHSVHelper(float offset, float dominantcolor, float colorone, float colortwo, ByRef<float> H, ByRef<float> S, ByRef<float> V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::RGBToHSVHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "RGBToHSVHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(dominantcolor), ::il2cpp_utils::ExtractType(colorone), ::il2cpp_utils::ExtractType(colortwo), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset, dominantcolor, colorone, colortwo, byref(H), byref(S), byref(V));
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
::UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(H), ::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(V)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, H, S, V);
}
// Autogenerated method: UnityEngine.Color.HSVToRGB
::UnityEngine::Color UnityEngine::Color::HSVToRGB(float H, float S, float V, bool hdr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::HSVToRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "HSVToRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(H), ::il2cpp_utils::ExtractType(S), ::il2cpp_utils::ExtractType(V), ::il2cpp_utils::ExtractType(hdr)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, H, S, V, hdr);
}
// Autogenerated method: UnityEngine.Color.ToString
::StringW UnityEngine::Color::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.GetHashCode
int UnityEngine::Color::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Color.Equals
bool UnityEngine::Color::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Color.op_Addition
::UnityEngine::Color UnityEngine::operator+(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Subtraction
::UnityEngine::Color UnityEngine::operator-(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
::UnityEngine::Color UnityEngine::operator*(const ::UnityEngine::Color& a, const ::UnityEngine::Color& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
::UnityEngine::Color UnityEngine::operator*(const ::UnityEngine::Color& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Multiply
::UnityEngine::Color UnityEngine::operator*(const float& b, const ::UnityEngine::Color& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, b, a);
}
// Autogenerated method: UnityEngine.Color.op_Division
::UnityEngine::Color UnityEngine::operator/(const ::UnityEngine::Color& a, const float& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Color.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Color& lhs, const ::UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Color.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Color& lhs, const ::UnityEngine::Color& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 rgba
[[deprecated("Use field access instead!")]] int& UnityEngine::Color32::dyn_rgba() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_rgba");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rgba"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte r
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Color32::dyn_r() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_r");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "r"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte g
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Color32::dyn_g() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_g");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "g"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte b
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Color32::dyn_b() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_b");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "b"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte a
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Color32::dyn_a() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::dyn_a");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "a"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Color32..ctor
// ABORTED elsewhere.  UnityEngine::Color32::Color32(uint8_t r, uint8_t g, uint8_t b, uint8_t a)
// Autogenerated method: UnityEngine.Color32.Lerp
::UnityEngine::Color32 UnityEngine::Color32::Lerp(::UnityEngine::Color32 a, ::UnityEngine::Color32 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Color32", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color32, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Color32.ToString
::StringW UnityEngine::Color32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Color32::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GradientMode
#include "UnityEngine/GradientMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.GradientMode Blend
::UnityEngine::GradientMode UnityEngine::GradientMode::_get_Blend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientMode::_get_Blend");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GradientMode>("UnityEngine", "GradientMode", "Blend"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.GradientMode Blend
void UnityEngine::GradientMode::_set_Blend(::UnityEngine::GradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientMode::_set_Blend");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GradientMode", "Blend", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.GradientMode Fixed
::UnityEngine::GradientMode UnityEngine::GradientMode::_get_Fixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientMode::_get_Fixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::GradientMode>("UnityEngine", "GradientMode", "Fixed"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.GradientMode Fixed
void UnityEngine::GradientMode::_set_Fixed(::UnityEngine::GradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientMode::_set_Fixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "GradientMode", "Fixed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::GradientMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GradientMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.GradientMode
#include "UnityEngine/GradientMode.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Gradient::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Gradient.get_colorKeys
::ArrayW<::UnityEngine::GradientColorKey> UnityEngine::Gradient::get_colorKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::get_colorKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GradientColorKey>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.set_colorKeys
void UnityEngine::Gradient::set_colorKeys(::ArrayW<::UnityEngine::GradientColorKey> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::set_colorKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gradient.get_alphaKeys
::ArrayW<::UnityEngine::GradientAlphaKey> UnityEngine::Gradient::get_alphaKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::get_alphaKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alphaKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GradientAlphaKey>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.set_mode
void UnityEngine::Gradient::set_mode(::UnityEngine::GradientMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Gradient.Init
::System::IntPtr UnityEngine::Gradient::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Gradient", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Cleanup
void UnityEngine::Gradient::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Internal_Equals
bool UnityEngine::Gradient::Internal_Equals(::System::IntPtr other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Internal_Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Gradient.Evaluate
::UnityEngine::Color UnityEngine::Gradient::Evaluate(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Evaluate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Gradient.SetKeys
void UnityEngine::Gradient::SetKeys(::ArrayW<::UnityEngine::GradientColorKey> colorKeys, ::ArrayW<::UnityEngine::GradientAlphaKey> alphaKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::SetKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorKeys), ::il2cpp_utils::ExtractType(alphaKeys)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorKeys, alphaKeys);
}
// Autogenerated method: UnityEngine.Gradient.Equals
bool UnityEngine::Gradient::Equals(::UnityEngine::Gradient* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Gradient.Evaluate_Injected
void UnityEngine::Gradient::Evaluate_Injected(float time, ByRef<::UnityEngine::Color> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Evaluate_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Color&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time, byref(ret));
}
// Autogenerated method: UnityEngine.Gradient.Finalize
void UnityEngine::Gradient::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Gradient.Equals
bool UnityEngine::Gradient::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.Gradient.GetHashCode
int UnityEngine::Gradient::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Gradient::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Matrix4x4 zeroMatrix
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::_get_zeroMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_get_zeroMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Matrix4x4>("UnityEngine", "Matrix4x4", "zeroMatrix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Matrix4x4 zeroMatrix
void UnityEngine::Matrix4x4::_set_zeroMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_set_zeroMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Matrix4x4", "zeroMatrix", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Matrix4x4 identityMatrix
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::_get_identityMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_get_identityMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Matrix4x4>("UnityEngine", "Matrix4x4", "identityMatrix"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Matrix4x4 identityMatrix
void UnityEngine::Matrix4x4::_set_identityMatrix(::UnityEngine::Matrix4x4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::_set_identityMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Matrix4x4", "identityMatrix", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single m00
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m00() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m00");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m00"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m10
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m10");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m10"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m20
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m20");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m20"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m30
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m30() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m30");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m30"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m01
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m01() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m01");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m01"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m11
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m11");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m11"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m21
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m21() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m21");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m21"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m31
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m31() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m31");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m31"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m02
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m02() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m02");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m02"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m12
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m12");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m12"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m22
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m22() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m22");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m22"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m32
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m32");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m32"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m03
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m03() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m03");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m03"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m13
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m13() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m13");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m13"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m23
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m23() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m23");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m23"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single m33
[[deprecated("Use field access instead!")]] float& UnityEngine::Matrix4x4::dyn_m33() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::dyn_m33");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m33"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_rotation
::UnityEngine::Quaternion UnityEngine::Matrix4x4::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_lossyScale
::UnityEngine::Vector3 UnityEngine::Matrix4x4::get_lossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_lossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_lossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_inverse
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_transpose
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_transpose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_transpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_transpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_Item
float UnityEngine::Matrix4x4::get_Item(int row, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(column)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, row, column);
}
// Autogenerated method: UnityEngine.Matrix4x4.set_Item
void UnityEngine::Matrix4x4::set_Item(int row, int column, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(column), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, row, column, value);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_Item
float UnityEngine::Matrix4x4::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Matrix4x4.set_Item
void UnityEngine::Matrix4x4::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_zero
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.get_identity
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4..ctor
UnityEngine::Matrix4x4::Matrix4x4(::UnityEngine::Vector4 column0, ::UnityEngine::Vector4 column1, ::UnityEngine::Vector4 column2, ::UnityEngine::Vector4 column3) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(column0), ::il2cpp_utils::ExtractType(column1), ::il2cpp_utils::ExtractType(column2), ::il2cpp_utils::ExtractType(column3)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, column0, column1, column2, column3);
}
// Autogenerated method: UnityEngine.Matrix4x4..cctor
void UnityEngine::Matrix4x4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetRotation
::UnityEngine::Quaternion UnityEngine::Matrix4x4::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetLossyScale
::UnityEngine::Vector3 UnityEngine::Matrix4x4::GetLossyScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetLossyScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLossyScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.TRS
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::TRS(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion q, ::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::TRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "TRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pos, q, s);
}
// Autogenerated method: UnityEngine.Matrix4x4.SetTRS
void UnityEngine::Matrix4x4::SetTRS(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion q, ::UnityEngine::Vector3 s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::SetTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, q, s);
}
// Autogenerated method: UnityEngine.Matrix4x4.Inverse
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Inverse(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: UnityEngine.Matrix4x4.Transpose
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Transpose(::UnityEngine::Matrix4x4 m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Transpose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Transpose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m);
}
// Autogenerated method: UnityEngine.Matrix4x4.Ortho
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Ortho(float left, float right, float bottom, float top, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Ortho");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Ortho", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, bottom, top, zNear, zFar);
}
// Autogenerated method: UnityEngine.Matrix4x4.Perspective
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Perspective(float fov, float aspect, float zNear, float zFar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Perspective");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Perspective", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fov, aspect, zNear, zFar);
}
// Autogenerated method: UnityEngine.Matrix4x4.Equals
bool UnityEngine::Matrix4x4::Equals(::UnityEngine::Matrix4x4 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetColumn
::UnityEngine::Vector4 UnityEngine::Matrix4x4::GetColumn(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Matrix4x4.SetColumn
void UnityEngine::Matrix4x4::SetColumn(int index, ::UnityEngine::Vector4 column) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::SetColumn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetColumn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, column);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyPoint
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyPoint(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyPoint3x4
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyPoint3x4(::UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyPoint3x4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyPoint3x4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, point);
}
// Autogenerated method: UnityEngine.Matrix4x4.MultiplyVector
::UnityEngine::Vector3 UnityEngine::Matrix4x4::MultiplyVector(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::MultiplyVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MultiplyVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Matrix4x4.Rotate
::UnityEngine::Matrix4x4 UnityEngine::Matrix4x4::Rotate(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: UnityEngine.Matrix4x4.GetRotation_Injected
void UnityEngine::Matrix4x4::GetRotation_Injected(ByRef<::UnityEngine::Matrix4x4> _unity_self, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "GetRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.GetLossyScale_Injected
void UnityEngine::Matrix4x4::GetLossyScale_Injected(ByRef<::UnityEngine::Matrix4x4> _unity_self, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetLossyScale_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "GetLossyScale_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_unity_self), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(_unity_self), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.TRS_Injected
void UnityEngine::Matrix4x4::TRS_Injected(ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> q, ByRef<::UnityEngine::Vector3> s, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::TRS_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "TRS_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pos), byref(q), byref(s), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Inverse_Injected
void UnityEngine::Matrix4x4::Inverse_Injected(ByRef<::UnityEngine::Matrix4x4> m, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Inverse_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Inverse_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(m), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Transpose_Injected
void UnityEngine::Matrix4x4::Transpose_Injected(ByRef<::UnityEngine::Matrix4x4> m, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Transpose_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Transpose_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(m), byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Ortho_Injected
void UnityEngine::Matrix4x4::Ortho_Injected(float left, float right, float bottom, float top, float zNear, float zFar, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Ortho_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Ortho_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(bottom), ::il2cpp_utils::ExtractType(top), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, bottom, top, zNear, zFar, byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.Perspective_Injected
void UnityEngine::Matrix4x4::Perspective_Injected(float fov, float aspect, float zNear, float zFar, ByRef<::UnityEngine::Matrix4x4> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Perspective_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "Perspective_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fov), ::il2cpp_utils::ExtractType(aspect), ::il2cpp_utils::ExtractType(zNear), ::il2cpp_utils::ExtractType(zFar), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Matrix4x4&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fov, aspect, zNear, zFar, byref(ret));
}
// Autogenerated method: UnityEngine.Matrix4x4.GetHashCode
int UnityEngine::Matrix4x4::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.Equals
bool UnityEngine::Matrix4x4::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Matrix4x4.ToString
::StringW UnityEngine::Matrix4x4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Multiply
::UnityEngine::Matrix4x4 UnityEngine::operator*(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Matrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Matrix4x4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Multiply
::UnityEngine::Vector4 UnityEngine::operator*(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Vector4& vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, vector);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Matrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Matrix4x4.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Matrix4x4& lhs, const ::UnityEngine::Matrix4x4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Matrix4x4::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Matrix4x4", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector3::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector3", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector3::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilonNormalSqrt
float UnityEngine::Vector3::_get_kEpsilonNormalSqrt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_kEpsilonNormalSqrt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector3", "kEpsilonNormalSqrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilonNormalSqrt
void UnityEngine::Vector3::_set_kEpsilonNormalSqrt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_kEpsilonNormalSqrt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "kEpsilonNormalSqrt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 zeroVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 zeroVector
void UnityEngine::Vector3::_set_zeroVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 oneVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 oneVector
void UnityEngine::Vector3::_set_oneVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 upVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_upVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_upVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "upVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 upVector
void UnityEngine::Vector3::_set_upVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_upVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "upVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 downVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_downVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_downVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "downVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 downVector
void UnityEngine::Vector3::_set_downVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_downVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "downVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 leftVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_leftVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_leftVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "leftVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 leftVector
void UnityEngine::Vector3::_set_leftVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_leftVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "leftVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 rightVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_rightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_rightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "rightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 rightVector
void UnityEngine::Vector3::_set_rightVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_rightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "rightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 forwardVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_forwardVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_forwardVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "forwardVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 forwardVector
void UnityEngine::Vector3::_set_forwardVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_forwardVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "forwardVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 backVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_backVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_backVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "backVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 backVector
void UnityEngine::Vector3::_set_backVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_backVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "backVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 positiveInfinityVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 positiveInfinityVector
void UnityEngine::Vector3::_set_positiveInfinityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 negativeInfinityVector
::UnityEngine::Vector3 UnityEngine::Vector3::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3>("UnityEngine", "Vector3", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 negativeInfinityVector
void UnityEngine::Vector3::_set_negativeInfinityVector(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3", "negativeInfinityVector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector3::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector3::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector3::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector3.get_Item
float UnityEngine::Vector3::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector3.set_Item
void UnityEngine::Vector3::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector3.get_normalized
::UnityEngine::Vector3 UnityEngine::Vector3::get_normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_normalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_magnitude
float UnityEngine::Vector3::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_sqrMagnitude
float UnityEngine::Vector3::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_zero
::UnityEngine::Vector3 UnityEngine::Vector3::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_one
::UnityEngine::Vector3 UnityEngine::Vector3::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_forward
::UnityEngine::Vector3 UnityEngine::Vector3::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_back
::UnityEngine::Vector3 UnityEngine::Vector3::get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_up
::UnityEngine::Vector3 UnityEngine::Vector3::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_down
::UnityEngine::Vector3 UnityEngine::Vector3::get_down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_down");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_down", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_left
::UnityEngine::Vector3 UnityEngine::Vector3::get_left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_right
::UnityEngine::Vector3 UnityEngine::Vector3::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.get_positiveInfinity
::UnityEngine::Vector3 UnityEngine::Vector3::get_positiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::get_positiveInfinity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "get_positiveInfinity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3..ctor
// ABORTED elsewhere.  UnityEngine::Vector3::Vector3(float x, float y, float z)
// Autogenerated method: UnityEngine.Vector3..ctor
UnityEngine::Vector3::Vector3(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y);
}
// Autogenerated method: UnityEngine.Vector3..cctor
void UnityEngine::Vector3::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Slerp
::UnityEngine::Vector3 UnityEngine::Vector3::Slerp(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector3.OrthoNormalize2
void UnityEngine::Vector3::OrthoNormalize2(ByRef<::UnityEngine::Vector3> a, ByRef<::UnityEngine::Vector3> b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::OrthoNormalize2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "OrthoNormalize2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated method: UnityEngine.Vector3.OrthoNormalize
void UnityEngine::Vector3::OrthoNormalize(ByRef<::UnityEngine::Vector3> normal, ByRef<::UnityEngine::Vector3> tangent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::OrthoNormalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "OrthoNormalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractType(tangent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(normal), byref(tangent));
}
// Autogenerated method: UnityEngine.Vector3.RotateTowards
::UnityEngine::Vector3 UnityEngine::Vector3::RotateTowards(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, float maxRadiansDelta, float maxMagnitudeDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::RotateTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "RotateTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(maxRadiansDelta), ::il2cpp_utils::ExtractType(maxMagnitudeDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, maxRadiansDelta, maxMagnitudeDelta);
}
// Autogenerated method: UnityEngine.Vector3.Lerp
::UnityEngine::Vector3 UnityEngine::Vector3::Lerp(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector3.LerpUnclamped
::UnityEngine::Vector3 UnityEngine::Vector3::LerpUnclamped(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector3.SmoothDamp
::UnityEngine::Vector3 UnityEngine::Vector3::SmoothDamp(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, ByRef<::UnityEngine::Vector3> currentVelocity, float smoothTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime);
}
// Autogenerated method: UnityEngine.Vector3.SmoothDamp
::UnityEngine::Vector3 UnityEngine::Vector3::SmoothDamp(::UnityEngine::Vector3 current, ::UnityEngine::Vector3 target, ByRef<::UnityEngine::Vector3> currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime, maxSpeed, deltaTime);
}
// Autogenerated method: UnityEngine.Vector3.Scale
::UnityEngine::Vector3 UnityEngine::Vector3::Scale(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.Scale
void UnityEngine::Vector3::Scale(::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: UnityEngine.Vector3.Cross
::UnityEngine::Vector3 UnityEngine::Vector3::Cross(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Cross");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Cross", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Equals
bool UnityEngine::Vector3::Equals(::UnityEngine::Vector3 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3.Reflect
::UnityEngine::Vector3 UnityEngine::Vector3::Reflect(::UnityEngine::Vector3 inDirection, ::UnityEngine::Vector3 inNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Reflect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Reflect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inDirection), ::il2cpp_utils::ExtractType(inNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inDirection, inNormal);
}
// Autogenerated method: UnityEngine.Vector3.Normalize
::UnityEngine::Vector3 UnityEngine::Vector3::Normalize(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector3.Normalize
void UnityEngine::Vector3::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Dot
float UnityEngine::Vector3::Dot(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Project
::UnityEngine::Vector3 UnityEngine::Vector3::Project(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 onNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Project");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Project", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(onNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, onNormal);
}
// Autogenerated method: UnityEngine.Vector3.ProjectOnPlane
::UnityEngine::Vector3 UnityEngine::Vector3::ProjectOnPlane(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ProjectOnPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "ProjectOnPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, planeNormal);
}
// Autogenerated method: UnityEngine.Vector3.Angle
float UnityEngine::Vector3::Angle(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Vector3.Distance
float UnityEngine::Vector3::Distance(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.ClampMagnitude
::UnityEngine::Vector3 UnityEngine::Vector3::ClampMagnitude(::UnityEngine::Vector3 vector, float maxLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ClampMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "ClampMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(maxLength)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, maxLength);
}
// Autogenerated method: UnityEngine.Vector3.Magnitude
float UnityEngine::Vector3::Magnitude(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Vector3.SqrMagnitude
float UnityEngine::Vector3::SqrMagnitude(::UnityEngine::Vector3 vector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::SqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "SqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector);
}
// Autogenerated method: UnityEngine.Vector3.Min
::UnityEngine::Vector3 UnityEngine::Vector3::Min(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.Max
::UnityEngine::Vector3 UnityEngine::Vector3::Max(::UnityEngine::Vector3 lhs, ::UnityEngine::Vector3 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.ToString
::StringW UnityEngine::Vector3::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Vector3.Slerp_Injected
void UnityEngine::Vector3::Slerp_Injected(ByRef<::UnityEngine::Vector3> a, ByRef<::UnityEngine::Vector3> b, float t, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Slerp_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "Slerp_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Vector3.RotateTowards_Injected
void UnityEngine::Vector3::RotateTowards_Injected(ByRef<::UnityEngine::Vector3> current, ByRef<::UnityEngine::Vector3> target, float maxRadiansDelta, float maxMagnitudeDelta, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::RotateTowards_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "RotateTowards_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(maxRadiansDelta), ::il2cpp_utils::ExtractType(maxMagnitudeDelta), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(current), byref(target), maxRadiansDelta, maxMagnitudeDelta, byref(ret));
}
// Autogenerated method: UnityEngine.Vector3.GetHashCode
int UnityEngine::Vector3::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.Equals
bool UnityEngine::Vector3::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3.ToString
::StringW UnityEngine::Vector3::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3.op_Addition
::UnityEngine::Vector3 UnityEngine::operator+(const ::UnityEngine::Vector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.op_Subtraction
::UnityEngine::Vector3 UnityEngine::operator-(const ::UnityEngine::Vector3& a, const ::UnityEngine::Vector3& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3.op_UnaryNegation
::UnityEngine::Vector3 UnityEngine::operator-(const ::UnityEngine::Vector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: UnityEngine.Vector3.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const ::UnityEngine::Vector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector3.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const float& d, const ::UnityEngine::Vector3& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, a);
}
// Autogenerated method: UnityEngine.Vector3.op_Division
::UnityEngine::Vector3 UnityEngine::operator/(const ::UnityEngine::Vector3& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector3.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector3& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Quaternion identityQuaternion
::UnityEngine::Quaternion UnityEngine::Quaternion::_get_identityQuaternion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_get_identityQuaternion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("UnityEngine", "Quaternion", "identityQuaternion"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Quaternion identityQuaternion
void UnityEngine::Quaternion::_set_identityQuaternion(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_set_identityQuaternion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "identityQuaternion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Quaternion::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Quaternion", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Quaternion::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Quaternion", "kEpsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& UnityEngine::Quaternion::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& UnityEngine::Quaternion::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated("Use field access instead!")]] float& UnityEngine::Quaternion::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated("Use field access instead!")]] float& UnityEngine::Quaternion::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Quaternion.get_Item
float UnityEngine::Quaternion::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Quaternion.set_Item
void UnityEngine::Quaternion::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Quaternion.get_identity
::UnityEngine::Quaternion UnityEngine::Quaternion::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.get_eulerAngles
::UnityEngine::Vector3 UnityEngine::Quaternion::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.set_eulerAngles
void UnityEngine::Quaternion::set_eulerAngles(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Quaternion..ctor
// ABORTED elsewhere.  UnityEngine::Quaternion::Quaternion(float x, float y, float z, float w)
// Autogenerated method: UnityEngine.Quaternion..cctor
void UnityEngine::Quaternion::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::FromToRotation(::UnityEngine::Vector3 fromDirection, ::UnityEngine::Vector3 toDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::FromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, fromDirection, toDirection);
}
// Autogenerated method: UnityEngine.Quaternion.Inverse
::UnityEngine::Quaternion UnityEngine::Quaternion::Inverse(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.Slerp
::UnityEngine::Quaternion UnityEngine::Quaternion::Slerp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Slerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped
::UnityEngine::Quaternion UnityEngine::Quaternion::SlerpUnclamped(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SlerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Lerp
::UnityEngine::Quaternion UnityEngine::Quaternion::Lerp(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad
::UnityEngine::Quaternion UnityEngine::Quaternion::Internal_FromEulerRad(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_FromEulerRad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad
::UnityEngine::Vector3 UnityEngine::Quaternion::Internal_ToEulerRad(::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToEulerRad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToAxisAngleRad
void UnityEngine::Quaternion::Internal_ToAxisAngleRad(::UnityEngine::Quaternion q, ByRef<::UnityEngine::Vector3> axis, ByRef<float> angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToAxisAngleRad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToAxisAngleRad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, byref(axis), byref(angle));
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis
::UnityEngine::Quaternion UnityEngine::Quaternion::AngleAxis(float angle, ::UnityEngine::Vector3 axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::AngleAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, axis);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(::UnityEngine::Vector3 forward, ::UnityEngine::Vector3 upwards) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(upwards)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, forward, upwards);
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation
::UnityEngine::Quaternion UnityEngine::Quaternion::LookRotation(::UnityEngine::Vector3 forward) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, forward);
}
// Autogenerated method: UnityEngine.Quaternion.IsEqualUsingDot
bool UnityEngine::Quaternion::IsEqualUsingDot(float dot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::IsEqualUsingDot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "IsEqualUsingDot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dot)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dot);
}
// Autogenerated method: UnityEngine.Quaternion.Dot
float UnityEngine::Quaternion::Dot(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(::UnityEngine::Vector3 view) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view);
}
// Autogenerated method: UnityEngine.Quaternion.SetLookRotation
void UnityEngine::Quaternion::SetLookRotation(::UnityEngine::Vector3 view, ::UnityEngine::Vector3 up) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SetLookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(up)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, view, up);
}
// Autogenerated method: UnityEngine.Quaternion.Angle
float UnityEngine::Quaternion::Angle(::UnityEngine::Quaternion a, ::UnityEngine::Quaternion b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Quaternion.Internal_MakePositive
::UnityEngine::Vector3 UnityEngine::Quaternion::Internal_MakePositive(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_MakePositive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_MakePositive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
::UnityEngine::Quaternion UnityEngine::Quaternion::Euler(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Quaternion.Euler
::UnityEngine::Quaternion UnityEngine::Quaternion::Euler(::UnityEngine::Vector3 euler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Euler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Euler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, euler);
}
// Autogenerated method: UnityEngine.Quaternion.ToAngleAxis
void UnityEngine::Quaternion::ToAngleAxis(ByRef<float> angle, ByRef<::UnityEngine::Vector3> axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::ToAngleAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToAngleAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(angle), byref(axis));
}
// Autogenerated method: UnityEngine.Quaternion.RotateTowards
::UnityEngine::Quaternion UnityEngine::Quaternion::RotateTowards(::UnityEngine::Quaternion from, ::UnityEngine::Quaternion to, float maxDegreesDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::RotateTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "RotateTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(maxDegreesDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to, maxDegreesDelta);
}
// Autogenerated method: UnityEngine.Quaternion.Normalize
::UnityEngine::Quaternion UnityEngine::Quaternion::Normalize(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: UnityEngine.Quaternion.Normalize
void UnityEngine::Quaternion::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(::UnityEngine::Quaternion other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.FromToRotation_Injected
void UnityEngine::Quaternion::FromToRotation_Injected(ByRef<::UnityEngine::Vector3> fromDirection, ByRef<::UnityEngine::Vector3> toDirection, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::FromToRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "FromToRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromDirection), ::il2cpp_utils::ExtractType(toDirection), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(fromDirection), byref(toDirection), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Inverse_Injected
void UnityEngine::Quaternion::Inverse_Injected(ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Inverse_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Inverse_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rotation), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Slerp_Injected
void UnityEngine::Quaternion::Slerp_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Slerp_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Slerp_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.SlerpUnclamped_Injected
void UnityEngine::Quaternion::SlerpUnclamped_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::SlerpUnclamped_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "SlerpUnclamped_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Lerp_Injected
void UnityEngine::Quaternion::Lerp_Injected(ByRef<::UnityEngine::Quaternion> a, ByRef<::UnityEngine::Quaternion> b, float t, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Lerp_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Lerp_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b), t, byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Internal_FromEulerRad_Injected
void UnityEngine::Quaternion::Internal_FromEulerRad_Injected(ByRef<::UnityEngine::Vector3> euler, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_FromEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_FromEulerRad_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(euler), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(euler), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToEulerRad_Injected
void UnityEngine::Quaternion::Internal_ToEulerRad_Injected(ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToEulerRad_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToEulerRad_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(rotation), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.Internal_ToAxisAngleRad_Injected
void UnityEngine::Quaternion::Internal_ToAxisAngleRad_Injected(ByRef<::UnityEngine::Quaternion> q, ByRef<::UnityEngine::Vector3> axis, ByRef<float> angle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Internal_ToAxisAngleRad_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "Internal_ToAxisAngleRad_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(q), byref(axis), byref(angle));
}
// Autogenerated method: UnityEngine.Quaternion.AngleAxis_Injected
void UnityEngine::Quaternion::AngleAxis_Injected(float angle, ByRef<::UnityEngine::Vector3> axis, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::AngleAxis_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "AngleAxis_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, angle, byref(axis), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.LookRotation_Injected
void UnityEngine::Quaternion::LookRotation_Injected(ByRef<::UnityEngine::Vector3> forward, ByRef<::UnityEngine::Vector3> upwards, ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::LookRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "LookRotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forward), ::il2cpp_utils::ExtractType(upwards), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(forward), byref(upwards), byref(ret));
}
// Autogenerated method: UnityEngine.Quaternion.GetHashCode
int UnityEngine::Quaternion::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.Equals
bool UnityEngine::Quaternion::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Quaternion.ToString
::StringW UnityEngine::Quaternion::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
::UnityEngine::Quaternion UnityEngine::operator*(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Multiply
::UnityEngine::Vector3 UnityEngine::operator*(const ::UnityEngine::Quaternion& rotation, const ::UnityEngine::Vector3& point) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rotation, point);
}
// Autogenerated method: UnityEngine.Quaternion.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Quaternion.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Quaternion::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Quaternion", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Mathf
#include "UnityEngine/Mathf.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Single Epsilon
float UnityEngine::Mathf::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Mathf", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single Epsilon
void UnityEngine::Mathf::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Mathf", "Epsilon", value));
}
// Autogenerated method: UnityEngine.Mathf..cctor
void UnityEngine::Mathf::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Mathf.NextPowerOfTwo
int UnityEngine::Mathf::NextPowerOfTwo(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::NextPowerOfTwo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "NextPowerOfTwo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.GammaToLinearSpace
float UnityEngine::Mathf::GammaToLinearSpace(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::GammaToLinearSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "GammaToLinearSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.LinearToGammaSpace
float UnityEngine::Mathf::LinearToGammaSpace(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::LinearToGammaSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "LinearToGammaSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Sin
float UnityEngine::Mathf::Sin(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Cos
float UnityEngine::Mathf::Cos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Cos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Cos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Tan
float UnityEngine::Mathf::Tan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Tan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Tan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Asin
float UnityEngine::Mathf::Asin(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Asin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Asin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Acos
float UnityEngine::Mathf::Acos(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Acos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Acos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan
float UnityEngine::Mathf::Atan(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Atan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Atan2
float UnityEngine::Mathf::Atan2(float y, float x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Atan2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Atan2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, y, x);
}
// Autogenerated method: UnityEngine.Mathf.Sqrt
float UnityEngine::Mathf::Sqrt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sqrt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sqrt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
float UnityEngine::Mathf::Abs(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Abs
int UnityEngine::Mathf::Abs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Abs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Abs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Min
float UnityEngine::Mathf::Min(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Min
int UnityEngine::Mathf::Min(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Max
float UnityEngine::Mathf::Max(::ArrayW<float> values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: UnityEngine.Mathf.Max
int UnityEngine::Mathf::Max(int a, int b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.Pow
float UnityEngine::Mathf::Pow(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f, float p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f), ::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f, p);
}
// Autogenerated method: UnityEngine.Mathf.Log
float UnityEngine::Mathf::Log(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Ceil
float UnityEngine::Mathf::Ceil(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Ceil");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Ceil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Floor
float UnityEngine::Mathf::Floor(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Floor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Floor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Round
float UnityEngine::Mathf::Round(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Round");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Round", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.CeilToInt
int UnityEngine::Mathf::CeilToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::CeilToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "CeilToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.FloorToInt
int UnityEngine::Mathf::FloorToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::FloorToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "FloorToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.RoundToInt
int UnityEngine::Mathf::RoundToInt(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::RoundToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "RoundToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Sign
float UnityEngine::Mathf::Sign(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Sign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Sign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
float UnityEngine::Mathf::Clamp(float value, float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp
int UnityEngine::Mathf::Clamp(int value, int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, min, max);
}
// Autogenerated method: UnityEngine.Mathf.Clamp01
float UnityEngine::Mathf::Clamp01(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Clamp01");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Clamp01", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Mathf.Lerp
float UnityEngine::Mathf::Lerp(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.LerpUnclamped
float UnityEngine::Mathf::LerpUnclamped(float a, float b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::LerpUnclamped");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "LerpUnclamped", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Mathf.MoveTowards
float UnityEngine::Mathf::MoveTowards(float current, float target, float maxDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::MoveTowards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "MoveTowards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(maxDelta)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, maxDelta);
}
// Autogenerated method: UnityEngine.Mathf.Approximately
bool UnityEngine::Mathf::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, ByRef<float> currentVelocity, float smoothTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime);
}
// Autogenerated method: UnityEngine.Mathf.SmoothDamp
float UnityEngine::Mathf::SmoothDamp(float current, float target, ByRef<float> currentVelocity, float smoothTime, float maxSpeed, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::SmoothDamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "SmoothDamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(currentVelocity), ::il2cpp_utils::ExtractType(smoothTime), ::il2cpp_utils::ExtractType(maxSpeed), ::il2cpp_utils::ExtractType(deltaTime)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target, byref(currentVelocity), smoothTime, maxSpeed, deltaTime);
}
// Autogenerated method: UnityEngine.Mathf.Repeat
float UnityEngine::Mathf::Repeat(float t, float length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::Repeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "Repeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t, length);
}
// Autogenerated method: UnityEngine.Mathf.InverseLerp
float UnityEngine::Mathf::InverseLerp(float a, float b, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::InverseLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "InverseLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, value);
}
// Autogenerated method: UnityEngine.Mathf.DeltaAngle
float UnityEngine::Mathf::DeltaAngle(float current, float target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Mathf::DeltaAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Mathf", "DeltaAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, current, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 zeroVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 zeroVector
void UnityEngine::Vector2::_set_zeroVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 oneVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 oneVector
void UnityEngine::Vector2::_set_oneVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 upVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_upVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_upVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "upVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 upVector
void UnityEngine::Vector2::_set_upVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_upVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "upVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 downVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_downVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_downVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "downVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 downVector
void UnityEngine::Vector2::_set_downVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_downVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "downVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 leftVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_leftVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_leftVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "leftVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 leftVector
void UnityEngine::Vector2::_set_leftVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_leftVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "leftVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 rightVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_rightVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_rightVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "rightVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 rightVector
void UnityEngine::Vector2::_set_rightVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_rightVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "rightVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 positiveInfinityVector
void UnityEngine::Vector2::_set_positiveInfinityVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
::UnityEngine::Vector2 UnityEngine::Vector2::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2>("UnityEngine", "Vector2", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2 negativeInfinityVector
void UnityEngine::Vector2::_set_negativeInfinityVector(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "negativeInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector2::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector2::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilonNormalSqrt
float UnityEngine::Vector2::_get_kEpsilonNormalSqrt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_get_kEpsilonNormalSqrt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector2", "kEpsilonNormalSqrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilonNormalSqrt
void UnityEngine::Vector2::_set_kEpsilonNormalSqrt(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::_set_kEpsilonNormalSqrt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2", "kEpsilonNormalSqrt", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector2::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector2::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector2.get_Item
float UnityEngine::Vector2::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector2.set_Item
void UnityEngine::Vector2::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector2.get_normalized
::UnityEngine::Vector2 UnityEngine::Vector2::get_normalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_normalized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_normalized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_magnitude
float UnityEngine::Vector2::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_sqrMagnitude
float UnityEngine::Vector2::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_zero
::UnityEngine::Vector2 UnityEngine::Vector2::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_one
::UnityEngine::Vector2 UnityEngine::Vector2::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_up
::UnityEngine::Vector2 UnityEngine::Vector2::get_up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_up");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_up", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.get_right
::UnityEngine::Vector2 UnityEngine::Vector2::get_right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::get_right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "get_right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2..ctor
// ABORTED elsewhere.  UnityEngine::Vector2::Vector2(float x, float y)
// Autogenerated method: UnityEngine.Vector2..cctor
void UnityEngine::Vector2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.Lerp
::UnityEngine::Vector2 UnityEngine::Vector2::Lerp(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Vector2.Scale
::UnityEngine::Vector2 UnityEngine::Vector2::Scale(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.Scale
void UnityEngine::Vector2::Scale(::UnityEngine::Vector2 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scale);
}
// Autogenerated method: UnityEngine.Vector2.Normalize
void UnityEngine::Vector2::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.ToString
::StringW UnityEngine::Vector2::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(::UnityEngine::Vector2 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2.Perpendicular
::UnityEngine::Vector2 UnityEngine::Vector2::Perpendicular(::UnityEngine::Vector2 inDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Perpendicular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Perpendicular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inDirection)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inDirection);
}
// Autogenerated method: UnityEngine.Vector2.Dot
float UnityEngine::Vector2::Dot(::UnityEngine::Vector2 lhs, ::UnityEngine::Vector2 rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector2.Angle
float UnityEngine::Vector2::Angle(::UnityEngine::Vector2 from, ::UnityEngine::Vector2 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Angle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Angle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Vector2.SignedAngle
float UnityEngine::Vector2::SignedAngle(::UnityEngine::Vector2 from, ::UnityEngine::Vector2 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::SignedAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "SignedAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Vector2.Distance
float UnityEngine::Vector2::Distance(::UnityEngine::Vector2 a, ::UnityEngine::Vector2 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Distance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "Distance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.ToString
::StringW UnityEngine::Vector2::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.GetHashCode
int UnityEngine::Vector2::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2.Equals
bool UnityEngine::Vector2::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2.op_Addition
::UnityEngine::Vector2 UnityEngine::operator+(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Subtraction
::UnityEngine::Vector2 UnityEngine::operator-(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_Division
::UnityEngine::Vector2 UnityEngine::operator/(const ::UnityEngine::Vector2& a, const ::UnityEngine::Vector2& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector2.op_UnaryNegation
::UnityEngine::Vector2 UnityEngine::operator-(const ::UnityEngine::Vector2& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_UnaryNegation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_UnaryNegation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const ::UnityEngine::Vector2& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector2.op_Multiply
::UnityEngine::Vector2 UnityEngine::operator*(const float& d, const ::UnityEngine::Vector2& a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, d, a);
}
// Autogenerated method: UnityEngine.Vector2.op_Division
::UnityEngine::Vector2 UnityEngine::operator/(const ::UnityEngine::Vector2& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector2.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector2& lhs, const ::UnityEngine::Vector2& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector2.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector2& lhs, const ::UnityEngine::Vector2& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector2Int
#include "UnityEngine/Vector2Int.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Zero
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Zero
void UnityEngine::Vector2Int::_set_s_Zero(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Zero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_One
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_One"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_One
void UnityEngine::Vector2Int::_set_s_One(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_One", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Up
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Up"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Up
void UnityEngine::Vector2Int::_set_s_Up(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Up", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Down
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Down"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Down
void UnityEngine::Vector2Int::_set_s_Down(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Down", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Left
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Left"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Left
void UnityEngine::Vector2Int::_set_s_Left(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Left", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector2Int s_Right
::UnityEngine::Vector2Int UnityEngine::Vector2Int::_get_s_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_get_s_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector2Int>("UnityEngine", "Vector2Int", "s_Right"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector2Int s_Right
void UnityEngine::Vector2Int::_set_s_Right(::UnityEngine::Vector2Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::_set_s_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector2Int", "s_Right", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_X
[[deprecated("Use field access instead!")]] int& UnityEngine::Vector2Int::dyn_m_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::dyn_m_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_X"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Y
[[deprecated("Use field access instead!")]] int& UnityEngine::Vector2Int::dyn_m_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::dyn_m_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector2Int.get_x
int UnityEngine::Vector2Int::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.set_x
void UnityEngine::Vector2Int::set_x(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector2Int.get_y
int UnityEngine::Vector2Int::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.set_y
void UnityEngine::Vector2Int::set_y(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector2Int..ctor
// ABORTED elsewhere.  UnityEngine::Vector2Int::Vector2Int(int x, int y)
// Autogenerated method: UnityEngine.Vector2Int..cctor
void UnityEngine::Vector2Int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector2Int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.Equals
bool UnityEngine::Vector2Int::Equals(::UnityEngine::Vector2Int other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2Int.Equals
bool UnityEngine::Vector2Int::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector2Int.GetHashCode
int UnityEngine::Vector2Int::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector2Int.ToString
::StringW UnityEngine::Vector2Int::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector2Int::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector3Int
#include "UnityEngine/Vector3Int.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_Zero
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_Zero"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_Zero
void UnityEngine::Vector3Int::_set_s_Zero(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_Zero", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_One
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_One() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_One");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_One"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_One
void UnityEngine::Vector3Int::_set_s_One(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_One");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_One", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_Up
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_Up"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_Up
void UnityEngine::Vector3Int::_set_s_Up(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_Up", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_Down
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_Down"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_Down
void UnityEngine::Vector3Int::_set_s_Down(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_Down", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_Left
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_Left"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_Left
void UnityEngine::Vector3Int::_set_s_Left(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_Left", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3Int s_Right
::UnityEngine::Vector3Int UnityEngine::Vector3Int::_get_s_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_get_s_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector3Int>("UnityEngine", "Vector3Int", "s_Right"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3Int s_Right
void UnityEngine::Vector3Int::_set_s_Right(::UnityEngine::Vector3Int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::_set_s_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector3Int", "s_Right", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_X
[[deprecated("Use field access instead!")]] int& UnityEngine::Vector3Int::dyn_m_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::dyn_m_X");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_X"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Y
[[deprecated("Use field access instead!")]] int& UnityEngine::Vector3Int::dyn_m_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::dyn_m_Y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Y"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Z
[[deprecated("Use field access instead!")]] int& UnityEngine::Vector3Int::dyn_m_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::dyn_m_Z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Z"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector3Int.get_x
int UnityEngine::Vector3Int::get_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::get_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.set_x
void UnityEngine::Vector3Int::set_x(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::set_x");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_x", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector3Int.get_y
int UnityEngine::Vector3Int::get_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::get_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.set_y
void UnityEngine::Vector3Int::set_y(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::set_y");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_y", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector3Int.get_z
int UnityEngine::Vector3Int::get_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::get_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.set_z
void UnityEngine::Vector3Int::set_z(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::set_z");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_z", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Vector3Int.get_Item
int UnityEngine::Vector3Int::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector3Int.get_one
::UnityEngine::Vector3Int UnityEngine::Vector3Int::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int..ctor
// ABORTED elsewhere.  UnityEngine::Vector3Int::Vector3Int(int x, int y, int z)
// Autogenerated method: UnityEngine.Vector3Int..cctor
void UnityEngine::Vector3Int::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.Min
::UnityEngine::Vector3Int UnityEngine::Vector3Int::Min(::UnityEngine::Vector3Int lhs, ::UnityEngine::Vector3Int rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3Int.Max
::UnityEngine::Vector3Int UnityEngine::Vector3Int::Max(::UnityEngine::Vector3Int lhs, ::UnityEngine::Vector3Int rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector3Int.Equals
bool UnityEngine::Vector3Int::Equals(::UnityEngine::Vector3Int other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3Int.Equals
bool UnityEngine::Vector3Int::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector3Int.GetHashCode
int UnityEngine::Vector3Int::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.ToString
::StringW UnityEngine::Vector3Int::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector3Int.op_Addition
::UnityEngine::Vector3Int UnityEngine::operator+(const ::UnityEngine::Vector3Int& a, const ::UnityEngine::Vector3Int& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3Int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector3Int.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector3Int& lhs, const ::UnityEngine::Vector3Int& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector3Int::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector3Int", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kEpsilon
float UnityEngine::Vector4::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine", "Vector4", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kEpsilon
void UnityEngine::Vector4::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "kEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 zeroVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_zeroVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_zeroVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "zeroVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 zeroVector
void UnityEngine::Vector4::_set_zeroVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_zeroVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "zeroVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 oneVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_oneVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_oneVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "oneVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 oneVector
void UnityEngine::Vector4::_set_oneVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_oneVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "oneVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 positiveInfinityVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_positiveInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_positiveInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "positiveInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 positiveInfinityVector
void UnityEngine::Vector4::_set_positiveInfinityVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_positiveInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "positiveInfinityVector", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 negativeInfinityVector
::UnityEngine::Vector4 UnityEngine::Vector4::_get_negativeInfinityVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_get_negativeInfinityVector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Vector4>("UnityEngine", "Vector4", "negativeInfinityVector"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 negativeInfinityVector
void UnityEngine::Vector4::_set_negativeInfinityVector(::UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::_set_negativeInfinityVector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Vector4", "negativeInfinityVector", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single x
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector4::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single y
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector4::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single z
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector4::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single w
[[deprecated("Use field access instead!")]] float& UnityEngine::Vector4::dyn_w() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::dyn_w");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "w"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Vector4.get_Item
float UnityEngine::Vector4::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Vector4.set_Item
void UnityEngine::Vector4::set_Item(int index, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Vector4.get_magnitude
float UnityEngine::Vector4::get_magnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_sqrMagnitude
float UnityEngine::Vector4::get_sqrMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_sqrMagnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sqrMagnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_zero
::UnityEngine::Vector4 UnityEngine::Vector4::get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_zero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "get_zero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.get_one
::UnityEngine::Vector4 UnityEngine::Vector4::get_one() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::get_one");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "get_one", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4..ctor
// ABORTED elsewhere.  UnityEngine::Vector4::Vector4(float x, float y, float z, float w)
// Autogenerated method: UnityEngine.Vector4..ctor
UnityEngine::Vector4::Vector4(float x, float y, float z) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: UnityEngine.Vector4..cctor
void UnityEngine::Vector4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.Equals
bool UnityEngine::Vector4::Equals(::UnityEngine::Vector4 other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector4.Normalize
void UnityEngine::Vector4::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.Dot
float UnityEngine::Vector4::Dot(::UnityEngine::Vector4 a, ::UnityEngine::Vector4 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Dot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "Dot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.Magnitude
float UnityEngine::Vector4::Magnitude(::UnityEngine::Vector4 a) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Magnitude");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "Magnitude", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a);
}
// Autogenerated method: UnityEngine.Vector4.ToString
::StringW UnityEngine::Vector4::ToString(::StringW format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, format);
}
// Autogenerated method: UnityEngine.Vector4.GetHashCode
int UnityEngine::Vector4::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.Equals
bool UnityEngine::Vector4::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Vector4.ToString
::StringW UnityEngine::Vector4::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Vector4.op_Addition
::UnityEngine::Vector4 UnityEngine::operator+(const ::UnityEngine::Vector4& a, const ::UnityEngine::Vector4& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Addition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Addition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.op_Subtraction
::UnityEngine::Vector4 UnityEngine::operator-(const ::UnityEngine::Vector4& a, const ::UnityEngine::Vector4& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: UnityEngine.Vector4.op_Multiply
::UnityEngine::Vector4 UnityEngine::operator*(const ::UnityEngine::Vector4& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector4.op_Division
::UnityEngine::Vector4 UnityEngine::operator/(const ::UnityEngine::Vector4& a, const float& d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, d);
}
// Autogenerated method: UnityEngine.Vector4.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::Vector4& lhs, const ::UnityEngine::Vector4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Vector4.op_Inequality
bool UnityEngine::operator !=(const ::UnityEngine::Vector4& lhs, const ::UnityEngine::Vector4& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Vector4::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Vector4", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Ping
#include "UnityEngine/Ping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Ping::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Ping.get_isDone
bool UnityEngine::Ping::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ping.get_time
int UnityEngine::Ping::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ping.DestroyPing
void UnityEngine::Ping::DestroyPing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::DestroyPing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ping.Internal_Destroy
void UnityEngine::Ping::Internal_Destroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::Internal_Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Ping", "Internal_Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Ping.Internal_Create
::System::IntPtr UnityEngine::Ping::Internal_Create(::StringW address) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Ping", "Internal_Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, address);
}
// Autogenerated method: UnityEngine.Ping.Internal_IsDone
bool UnityEngine::Ping::Internal_IsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::Internal_IsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_IsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Ping.Finalize
void UnityEngine::Ping::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Ping::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.IPlayerEditorConnectionNative
#include "UnityEngine/IPlayerEditorConnectionNative.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.Initialize
void UnityEngine::IPlayerEditorConnectionNative::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.DisconnectAll
void UnityEngine::IPlayerEditorConnectionNative::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.SendMessage
void UnityEngine::IPlayerEditorConnectionNative::SendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::SendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.TrySendMessage
bool UnityEngine::IPlayerEditorConnectionNative::TrySendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::TrySendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.Poll
void UnityEngine::IPlayerEditorConnectionNative::Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::Poll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.RegisterInternal
void UnityEngine::IPlayerEditorConnectionNative::RegisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::RegisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal
void UnityEngine::IPlayerEditorConnectionNative::UnregisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::UnregisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.IPlayerEditorConnectionNative.IsConnected
bool UnityEngine::IPlayerEditorConnectionNative::IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::IPlayerEditorConnectionNative::IsConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerConnectionInternal
#include "UnityEngine/PlayerConnectionInternal.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.SendMessage
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_SendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.SendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.TrySendMessage
bool UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_TrySendMessage(::System::Guid messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.TrySendMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.Poll
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_Poll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.Poll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.RegisterInternal
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_RegisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.RegisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_UnregisterInternal(::System::Guid messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.Initialize
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.IsConnected
bool UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.IsConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnityEngine.IPlayerEditorConnectionNative.DisconnectAll
void UnityEngine::PlayerConnectionInternal::UnityEngine_IPlayerEditorConnectionNative_DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnityEngine.IPlayerEditorConnectionNative.DisconnectAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.IPlayerEditorConnectionNative.DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.IsConnected
bool UnityEngine::PlayerConnectionInternal::IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.Initialize
void UnityEngine::PlayerConnectionInternal::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.RegisterInternal
void UnityEngine::PlayerConnectionInternal::RegisterInternal(::StringW messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::RegisterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "RegisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.UnregisterInternal
void UnityEngine::PlayerConnectionInternal::UnregisterInternal(::StringW messageId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::UnregisterInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "UnregisterInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.SendMessage
void UnityEngine::PlayerConnectionInternal::SendMessage(::StringW messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.TrySendMessage
bool UnityEngine::PlayerConnectionInternal::TrySendMessage(::StringW messageId, ::ArrayW<uint8_t> data, int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::TrySendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "TrySendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageId), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(playerId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, messageId, data, playerId);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.PollInternal
void UnityEngine::PlayerConnectionInternal::PollInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::PollInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "PollInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.PlayerConnectionInternal.DisconnectAll
void UnityEngine::PlayerConnectionInternal::DisconnectAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerConnectionInternal::DisconnectAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerConnectionInternal", "DisconnectAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerPrefsException
#include "UnityEngine/PlayerPrefsException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PlayerPrefs
#include "UnityEngine/PlayerPrefs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PlayerPrefs.TrySetInt
bool UnityEngine::PlayerPrefs::TrySetInt(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::TrySetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "TrySetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.TrySetSetString
bool UnityEngine::PlayerPrefs::TrySetSetString(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::TrySetSetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "TrySetSetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.SetInt
void UnityEngine::PlayerPrefs::SetInt(::StringW key, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::SetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "SetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetInt
int UnityEngine::PlayerPrefs::GetInt(::StringW key, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetInt
int UnityEngine::PlayerPrefs::GetInt(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.SetString
void UnityEngine::PlayerPrefs::SetString(::StringW key, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetString
::StringW UnityEngine::PlayerPrefs::GetString(::StringW key, ::StringW defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, defaultValue);
}
// Autogenerated method: UnityEngine.PlayerPrefs.GetString
::StringW UnityEngine::PlayerPrefs::GetString(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: UnityEngine.PlayerPrefs.DeleteAll
void UnityEngine::PlayerPrefs::DeleteAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PlayerPrefs::DeleteAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PlayerPrefs", "DeleteAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PropertyAttribute
#include "UnityEngine/PropertyAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContextMenuItemAttribute
#include "UnityEngine/ContextMenuItemAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::ContextMenuItemAttribute::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenuItemAttribute::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String function
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::ContextMenuItemAttribute::dyn_function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenuItemAttribute::dyn_function");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "function"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TooltipAttribute
#include "UnityEngine/TooltipAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String tooltip
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::TooltipAttribute::dyn_tooltip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TooltipAttribute::dyn_tooltip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tooltip"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SpaceAttribute
#include "UnityEngine/SpaceAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single height
[[deprecated("Use field access instead!")]] float& UnityEngine::SpaceAttribute::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SpaceAttribute::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HeaderAttribute
#include "UnityEngine/HeaderAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String header
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::HeaderAttribute::dyn_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HeaderAttribute::dyn_header");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "header"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RangeAttribute
#include "UnityEngine/RangeAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single min
[[deprecated("Use field access instead!")]] float& UnityEngine::RangeAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single max
[[deprecated("Use field access instead!")]] float& UnityEngine::RangeAttribute::dyn_max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeAttribute::dyn_max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "max"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MinAttribute
#include "UnityEngine/MinAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single min
[[deprecated("Use field access instead!")]] float& UnityEngine::MinAttribute::dyn_min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MinAttribute::dyn_min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "min"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.MultilineAttribute
#include "UnityEngine/MultilineAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 lines
[[deprecated("Use field access instead!")]] int& UnityEngine::MultilineAttribute::dyn_lines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MultilineAttribute::dyn_lines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAreaAttribute
#include "UnityEngine/TextAreaAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 minLines
[[deprecated("Use field access instead!")]] int& UnityEngine::TextAreaAttribute::dyn_minLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAreaAttribute::dyn_minLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxLines
[[deprecated("Use field access instead!")]] int& UnityEngine::TextAreaAttribute::dyn_maxLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAreaAttribute::dyn_maxLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ColorUsageAttribute
#include "UnityEngine/ColorUsageAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean showAlpha
[[deprecated("Use field access instead!")]] bool& UnityEngine::ColorUsageAttribute::dyn_showAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_showAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean hdr
[[deprecated("Use field access instead!")]] bool& UnityEngine::ColorUsageAttribute::dyn_hdr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_hdr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hdr"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single minBrightness
[[deprecated("Use field access instead!")]] float& UnityEngine::ColorUsageAttribute::dyn_minBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_minBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxBrightness
[[deprecated("Use field access instead!")]] float& UnityEngine::ColorUsageAttribute::dyn_maxBrightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_maxBrightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxBrightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single minExposureValue
[[deprecated("Use field access instead!")]] float& UnityEngine::ColorUsageAttribute::dyn_minExposureValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_minExposureValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minExposureValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single maxExposureValue
[[deprecated("Use field access instead!")]] float& UnityEngine::ColorUsageAttribute::dyn_maxExposureValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ColorUsageAttribute::dyn_maxExposureValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxExposureValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PropertyNameUtils
#include "UnityEngine/PropertyNameUtils.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PropertyNameUtils.PropertyNameFromString
::UnityEngine::PropertyName UnityEngine::PropertyNameUtils::PropertyNameFromString(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyNameUtils::PropertyNameFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyNameUtils", "PropertyNameFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::PropertyName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.PropertyNameUtils.PropertyNameFromString_Injected
void UnityEngine::PropertyNameUtils::PropertyNameFromString_Injected(::StringW name, ByRef<::UnityEngine::PropertyName> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyNameUtils::PropertyNameFromString_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyNameUtils", "PropertyNameFromString_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::PropertyName&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int32 id
[[deprecated("Use field access instead!")]] int& UnityEngine::PropertyName::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::dyn_id");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.PropertyName..ctor
UnityEngine::PropertyName::PropertyName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.PropertyName..ctor
// ABORTED elsewhere.  UnityEngine::PropertyName::PropertyName(::UnityEngine::PropertyName other)
// Autogenerated method: UnityEngine.PropertyName.Equals
bool UnityEngine::PropertyName::Equals(::UnityEngine::PropertyName other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PropertyName.GetHashCode
int UnityEngine::PropertyName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PropertyName.Equals
bool UnityEngine::PropertyName::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.PropertyName.ToString
::StringW UnityEngine::PropertyName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.PropertyName.op_Equality
bool UnityEngine::operator ==(const ::UnityEngine::PropertyName& lhs, const ::UnityEngine::PropertyName& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PropertyName::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "PropertyName", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Random
#include "UnityEngine/Random.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Random.get_value
float UnityEngine::Random::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_insideUnitSphere
::UnityEngine::Vector3 UnityEngine::Random::get_insideUnitSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_insideUnitSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_insideUnitSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_onUnitSphere
::UnityEngine::Vector3 UnityEngine::Random::get_onUnitSphere() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_onUnitSphere");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_onUnitSphere", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.get_rotation
::UnityEngine::Quaternion UnityEngine::Random::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.InitState
void UnityEngine::Random::InitState(int seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::InitState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "InitState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, seed);
}
// Autogenerated method: UnityEngine.Random.Range
float UnityEngine::Random::Range(float min, float max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.Random.Range
int UnityEngine::Random::Range(int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.Random.RandomRangeInt
int UnityEngine::Random::RandomRangeInt(int min, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::RandomRangeInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "RandomRangeInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(min), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, min, max);
}
// Autogenerated method: UnityEngine.Random.ColorHSV
::UnityEngine::Color UnityEngine::Random::ColorHSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::ColorHSV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "ColorHSV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Random.ColorHSV
::UnityEngine::Color UnityEngine::Random::ColorHSV(float hueMin, float hueMax, float saturationMin, float saturationMax, float valueMin, float valueMax, float alphaMin, float alphaMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::ColorHSV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "ColorHSV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hueMin), ::il2cpp_utils::ExtractType(hueMax), ::il2cpp_utils::ExtractType(saturationMin), ::il2cpp_utils::ExtractType(saturationMax), ::il2cpp_utils::ExtractType(valueMin), ::il2cpp_utils::ExtractType(valueMax), ::il2cpp_utils::ExtractType(alphaMin), ::il2cpp_utils::ExtractType(alphaMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, hueMin, hueMax, saturationMin, saturationMax, valueMin, valueMax, alphaMin, alphaMax);
}
// Autogenerated method: UnityEngine.Random.get_insideUnitSphere_Injected
void UnityEngine::Random::get_insideUnitSphere_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_insideUnitSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_insideUnitSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Random.get_onUnitSphere_Injected
void UnityEngine::Random::get_onUnitSphere_Injected(ByRef<::UnityEngine::Vector3> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_onUnitSphere_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_onUnitSphere_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated method: UnityEngine.Random.get_rotation_Injected
void UnityEngine::Random::get_rotation_Injected(ByRef<::UnityEngine::Quaternion> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Random::get_rotation_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Random", "get_rotation_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ResourceRequest
#include "UnityEngine/ResourceRequest.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Path
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::ResourceRequest::dyn_m_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceRequest::dyn_m_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Type m_Type
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::ResourceRequest::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceRequest::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.ResourceRequest.get_asset
::UnityEngine::Object* UnityEngine::ResourceRequest::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ResourceRequest::get_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Resources
#include "UnityEngine/Resources.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.ResourceRequest
#include "UnityEngine/ResourceRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Resources.FindObjectsOfTypeAll
::ArrayW<::UnityEngine::Object*> UnityEngine::Resources::FindObjectsOfTypeAll(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::FindObjectsOfTypeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "FindObjectsOfTypeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Resources.Load
::UnityEngine::Object* UnityEngine::Resources::Load(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.Resources.Load
::UnityEngine::Object* UnityEngine::Resources::Load(::StringW path, ::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, systemTypeInstance);
}
// Autogenerated method: UnityEngine.Resources.LoadAsync
::UnityEngine::ResourceRequest* UnityEngine::Resources::LoadAsync(::StringW path, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::LoadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "LoadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, type);
}
// Autogenerated method: UnityEngine.Resources.LoadAsyncInternal
::UnityEngine::ResourceRequest* UnityEngine::Resources::LoadAsyncInternal(::StringW path, ::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::LoadAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "LoadAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ResourceRequest*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, type);
}
// Autogenerated method: UnityEngine.Resources.LoadAll
::ArrayW<::UnityEngine::Object*> UnityEngine::Resources::LoadAll(::StringW path, ::System::Type* systemTypeInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::LoadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "LoadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(systemTypeInstance)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path, systemTypeInstance);
}
// Autogenerated method: UnityEngine.Resources.LoadAll
::ArrayW<::UnityEngine::Object*> UnityEngine::Resources::LoadAll(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::LoadAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "LoadAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated method: UnityEngine.Resources.GetBuiltinResource
::UnityEngine::Object* UnityEngine::Resources::GetBuiltinResource(::System::Type* type, ::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::GetBuiltinResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "GetBuiltinResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, path);
}
// Autogenerated method: UnityEngine.Resources.UnloadAsset
void UnityEngine::Resources::UnloadAsset(::UnityEngine::Object* assetToUnload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::UnloadAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "UnloadAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assetToUnload)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assetToUnload);
}
// Autogenerated method: UnityEngine.Resources.UnloadUnusedAssets
::UnityEngine::AsyncOperation* UnityEngine::Resources::UnloadUnusedAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Resources::UnloadUnusedAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Resources", "UnloadUnusedAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AsyncOperation*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::AsyncOperation::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.AsyncOperation> m_completeCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::UnityEngine::AsyncOperation*>*& UnityEngine::AsyncOperation::dyn_m_completeCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::dyn_m_completeCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completeCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::AsyncOperation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.AsyncOperation.get_isDone
bool UnityEngine::AsyncOperation::get_isDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::get_isDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.get_progress
float UnityEngine::AsyncOperation::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.set_priority
void UnityEngine::AsyncOperation::set_priority(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::set_priority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_priority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.get_allowSceneActivation
bool UnityEngine::AsyncOperation::get_allowSceneActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::get_allowSceneActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowSceneActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.set_allowSceneActivation
void UnityEngine::AsyncOperation::set_allowSceneActivation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::set_allowSceneActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_allowSceneActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.add_completed
void UnityEngine::AsyncOperation::add_completed(::System::Action_1<::UnityEngine::AsyncOperation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::add_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.remove_completed
void UnityEngine::AsyncOperation::remove_completed(::System::Action_1<::UnityEngine::AsyncOperation*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::remove_completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AsyncOperation.InternalDestroy
void UnityEngine::AsyncOperation::InternalDestroy(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::InternalDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AsyncOperation", "InternalDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AsyncOperation.InvokeCompletionEvent
void UnityEngine::AsyncOperation::InvokeCompletionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::InvokeCompletionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCompletionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AsyncOperation.Finalize
void UnityEngine::AsyncOperation::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AsyncOperation::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AttributeHelperEngine
#include "UnityEngine/AttributeHelperEngine.hpp"
// Including type: UnityEngine.DisallowMultipleComponent
#include "UnityEngine/DisallowMultipleComponent.hpp"
// Including type: UnityEngine.ExecuteInEditMode
#include "UnityEngine/ExecuteInEditMode.hpp"
// Including type: UnityEngine.RequireComponent
#include "UnityEngine/RequireComponent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisallowMultipleComponent[] _disallowMultipleComponentArray
::ArrayW<::UnityEngine::DisallowMultipleComponent*> UnityEngine::AttributeHelperEngine::_get__disallowMultipleComponentArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__disallowMultipleComponentArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::DisallowMultipleComponent*>>("UnityEngine", "AttributeHelperEngine", "_disallowMultipleComponentArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisallowMultipleComponent[] _disallowMultipleComponentArray
void UnityEngine::AttributeHelperEngine::_set__disallowMultipleComponentArray(::ArrayW<::UnityEngine::DisallowMultipleComponent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__disallowMultipleComponentArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_disallowMultipleComponentArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.ExecuteInEditMode[] _executeInEditModeArray
::ArrayW<::UnityEngine::ExecuteInEditMode*> UnityEngine::AttributeHelperEngine::_get__executeInEditModeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__executeInEditModeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::ExecuteInEditMode*>>("UnityEngine", "AttributeHelperEngine", "_executeInEditModeArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.ExecuteInEditMode[] _executeInEditModeArray
void UnityEngine::AttributeHelperEngine::_set__executeInEditModeArray(::ArrayW<::UnityEngine::ExecuteInEditMode*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__executeInEditModeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_executeInEditModeArray", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RequireComponent[] _requireComponentArray
::ArrayW<::UnityEngine::RequireComponent*> UnityEngine::AttributeHelperEngine::_get__requireComponentArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_get__requireComponentArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::RequireComponent*>>("UnityEngine", "AttributeHelperEngine", "_requireComponentArray"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RequireComponent[] _requireComponentArray
void UnityEngine::AttributeHelperEngine::_set__requireComponentArray(::ArrayW<::UnityEngine::RequireComponent*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::_set__requireComponentArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AttributeHelperEngine", "_requireComponentArray", value));
}
// Autogenerated method: UnityEngine.AttributeHelperEngine..cctor
void UnityEngine::AttributeHelperEngine::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetParentTypeDisallowingMultipleInclusion
::System::Type* UnityEngine::AttributeHelperEngine::GetParentTypeDisallowingMultipleInclusion(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetParentTypeDisallowingMultipleInclusion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetParentTypeDisallowingMultipleInclusion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetRequiredComponents
::ArrayW<::System::Type*> UnityEngine::AttributeHelperEngine::GetRequiredComponents(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetRequiredComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetRequiredComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetExecuteMode
int UnityEngine::AttributeHelperEngine::GetExecuteMode(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetExecuteMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetExecuteMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.CheckIsEditorScript
int UnityEngine::AttributeHelperEngine::CheckIsEditorScript(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::CheckIsEditorScript");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "CheckIsEditorScript", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: UnityEngine.AttributeHelperEngine.GetDefaultExecutionOrderFor
int UnityEngine::AttributeHelperEngine::GetDefaultExecutionOrderFor(::System::Type* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AttributeHelperEngine::GetDefaultExecutionOrderFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "AttributeHelperEngine", "GetDefaultExecutionOrderFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, klass);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DisallowMultipleComponent
#include "UnityEngine/DisallowMultipleComponent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RequireComponent
#include "UnityEngine/RequireComponent.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type0
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::RequireComponent::dyn_m_Type0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type0"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type1
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::RequireComponent::dyn_m_Type1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type1"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Type m_Type2
[[deprecated("Use field access instead!")]] ::System::Type*& UnityEngine::RequireComponent::dyn_m_Type2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RequireComponent::dyn_m_Type2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type2"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AddComponentMenu
#include "UnityEngine/AddComponentMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_AddComponentMenu
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::AddComponentMenu::dyn_m_AddComponentMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddComponentMenu::dyn_m_AddComponentMenu");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AddComponentMenu"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Ordering
[[deprecated("Use field access instead!")]] int& UnityEngine::AddComponentMenu::dyn_m_Ordering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::AddComponentMenu::dyn_m_Ordering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ordering"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.CreateAssetMenuAttribute
#include "UnityEngine/CreateAssetMenuAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <menuName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::CreateAssetMenuAttribute::dyn_$menuName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::dyn_$menuName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menuName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <fileName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::CreateAssetMenuAttribute::dyn_$fileName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::dyn_$fileName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<fileName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.CreateAssetMenuAttribute.set_menuName
void UnityEngine::CreateAssetMenuAttribute::set_menuName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::set_menuName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menuName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.CreateAssetMenuAttribute.set_fileName
void UnityEngine::CreateAssetMenuAttribute::set_fileName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CreateAssetMenuAttribute::set_fileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ContextMenu
#include "UnityEngine/ContextMenu.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String menuItem
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::ContextMenu::dyn_menuItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_menuItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuItem"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean validate
[[deprecated("Use field access instead!")]] bool& UnityEngine::ContextMenu::dyn_validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_validate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 priority
[[deprecated("Use field access instead!")]] int& UnityEngine::ContextMenu::dyn_priority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ContextMenu::dyn_priority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "priority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExecuteInEditMode
#include "UnityEngine/ExecuteInEditMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExecuteAlways
#include "UnityEngine/ExecuteAlways.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HideInInspector
#include "UnityEngine/HideInInspector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HelpURLAttribute
#include "UnityEngine/HelpURLAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.String m_Url
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::HelpURLAttribute::dyn_m_Url() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HelpURLAttribute::dyn_m_Url");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Url"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DefaultExecutionOrder
#include "UnityEngine/DefaultExecutionOrder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Order
[[deprecated("Use field access instead!")]] int& UnityEngine::DefaultExecutionOrder::dyn_m_Order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DefaultExecutionOrder::dyn_m_Order");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Order"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.DefaultExecutionOrder.get_order
int UnityEngine::DefaultExecutionOrder::get_order() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DefaultExecutionOrder::get_order");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExcludeFromPresetAttribute
#include "UnityEngine/ExcludeFromPresetAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Behaviour
#include "UnityEngine/Behaviour.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Behaviour.get_enabled
bool UnityEngine::Behaviour::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Behaviour.set_enabled
void UnityEngine::Behaviour::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Behaviour.get_isActiveAndEnabled
bool UnityEngine::Behaviour::get_isActiveAndEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Behaviour::get_isActiveAndEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActiveAndEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ClassLibraryInitializer
#include "UnityEngine/ClassLibraryInitializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ClassLibraryInitializer.Init
void UnityEngine::ClassLibraryInitializer::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ClassLibraryInitializer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ClassLibraryInitializer", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.SendMessageOptions
#include "UnityEngine/SendMessageOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Component.get_transform
::UnityEngine::Transform* UnityEngine::Component::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.get_gameObject
::UnityEngine::GameObject* UnityEngine::Component::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.get_tag
::StringW UnityEngine::Component::get_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::get_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Component.set_tag
void UnityEngine::Component::set_tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::set_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Component.GetComponent
::UnityEngine::Component* UnityEngine::Component::GetComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Component.GetComponentFastPath
void UnityEngine::Component::GetComponentFastPath(::System::Type* type, ::System::IntPtr oneFurtherThanResultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentFastPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentFastPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(oneFurtherThanResultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, oneFurtherThanResultValue);
}
// Autogenerated method: UnityEngine.Component.GetComponent
::UnityEngine::Component* UnityEngine::Component::GetComponent(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Component.GetComponentInChildren
::UnityEngine::Component* UnityEngine::Component::GetComponentInChildren(::System::Type* t, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, t, includeInactive);
}
// Autogenerated method: UnityEngine.Component.GetComponentsInChildren
::ArrayW<::UnityEngine::Component*> UnityEngine::Component::GetComponentsInChildren(::System::Type* t, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, t, includeInactive);
}
// Autogenerated method: UnityEngine.Component.GetComponentInParent
::UnityEngine::Component* UnityEngine::Component::GetComponentInParent(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, t);
}
// Autogenerated method: UnityEngine.Component.GetComponentsInParent
::ArrayW<::UnityEngine::Component*> UnityEngine::Component::GetComponentsInParent(::System::Type* t, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentsInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, t, includeInactive);
}
// Autogenerated method: UnityEngine.Component.GetComponents
::ArrayW<::UnityEngine::Component*> UnityEngine::Component::GetComponents(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Component.GetComponentsForListInternal
void UnityEngine::Component::GetComponentsForListInternal(::System::Type* searchType, ::Il2CppObject* resultList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponentsForListInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsForListInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchType), ::il2cpp_utils::ExtractType(resultList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, searchType, resultList);
}
// Autogenerated method: UnityEngine.Component.GetComponents
void UnityEngine::Component::GetComponents(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::Component*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, results);
}
// Autogenerated method: UnityEngine.Component.CompareTag
bool UnityEngine::Component::CompareTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::CompareTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag);
}
// Autogenerated method: UnityEngine.Component.SendMessage
void UnityEngine::Component::SendMessage(::StringW methodName, ::Il2CppObject* value, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value, options);
}
// Autogenerated method: UnityEngine.Component.SendMessage
void UnityEngine::Component::SendMessage(::StringW methodName, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Component::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Coroutine::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Coroutine.ReleaseCoroutine
void UnityEngine::Coroutine::ReleaseCoroutine(::System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::ReleaseCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Coroutine", "ReleaseCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.Coroutine.Finalize
void UnityEngine::Coroutine::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Coroutine::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.SetupCoroutine
#include "UnityEngine/SetupCoroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SetupCoroutine.InvokeMoveNext
void UnityEngine::SetupCoroutine::InvokeMoveNext(::System::Collections::IEnumerator* enumerator, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SetupCoroutine::InvokeMoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SetupCoroutine", "InvokeMoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, enumerator, returnValueAddress);
}
// Autogenerated method: UnityEngine.SetupCoroutine.InvokeMember
::Il2CppObject* UnityEngine::SetupCoroutine::InvokeMember(::Il2CppObject* behaviour, ::StringW name, ::Il2CppObject* variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SetupCoroutine::InvokeMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SetupCoroutine", "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(behaviour), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(variable)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, behaviour, name, variable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.CustomYieldInstruction
#include "UnityEngine/CustomYieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.CustomYieldInstruction.get_keepWaiting
bool UnityEngine::CustomYieldInstruction::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.get_Current
::Il2CppObject* UnityEngine::CustomYieldInstruction::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.MoveNext
bool UnityEngine::CustomYieldInstruction::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.CustomYieldInstruction.Reset
void UnityEngine::CustomYieldInstruction::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::CustomYieldInstruction::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExcludeFromObjectFactoryAttribute
#include "UnityEngine/ExcludeFromObjectFactoryAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ExtensionOfNativeClassAttribute
#include "UnityEngine/ExtensionOfNativeClassAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SceneManagement.Scene
#include "UnityEngine/SceneManagement/Scene.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.PrimitiveType
#include "UnityEngine/PrimitiveType.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.SendMessageOptions
#include "UnityEngine/SendMessageOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GameObject.get_transform
::UnityEngine::Transform* UnityEngine::GameObject::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_layer
int UnityEngine::GameObject::get_layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_layer
void UnityEngine::GameObject::set_layer(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_layer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_active
bool UnityEngine::GameObject::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_active
void UnityEngine::GameObject::set_active(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_activeSelf
bool UnityEngine::GameObject::get_activeSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_activeSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_activeInHierarchy
bool UnityEngine::GameObject::get_activeInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_activeInHierarchy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeInHierarchy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_isStatic
bool UnityEngine::GameObject::get_isStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_isStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_isStatic
void UnityEngine::GameObject::set_isStatic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_isStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_isStaticBatchable
bool UnityEngine::GameObject::get_isStaticBatchable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_isStaticBatchable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isStaticBatchable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_tag
::StringW UnityEngine::GameObject::get_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.set_tag
void UnityEngine::GameObject::set_tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::set_tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.get_scene
::UnityEngine::SceneManagement::Scene UnityEngine::GameObject::get_scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_scene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::SceneManagement::Scene, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_sceneCullingMask
uint64_t UnityEngine::GameObject::get_sceneCullingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_sceneCullingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneCullingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.get_gameObject
::UnityEngine::GameObject* UnityEngine::GameObject::get_gameObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_gameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GameObject.CreatePrimitive
::UnityEngine::GameObject* UnityEngine::GameObject::CreatePrimitive(::UnityEngine::PrimitiveType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::CreatePrimitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "CreatePrimitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponent
::UnityEngine::Component* UnityEngine::GameObject::GetComponent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentFastPath
void UnityEngine::GameObject::GetComponentFastPath(::System::Type* type, ::System::IntPtr oneFurtherThanResultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentFastPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentFastPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(oneFurtherThanResultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, oneFurtherThanResultValue);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentByName
::UnityEngine::Component* UnityEngine::GameObject::GetComponentByName(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentByName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentByName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponent
::UnityEngine::Component* UnityEngine::GameObject::GetComponent(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInChildren
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInChildren(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInChildren
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInChildren(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentInParent
::UnityEngine::Component* UnityEngine::GameObject::GetComponentInParent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInternal
::System::Array* UnityEngine::GameObject::GetComponentsInternal(::System::Type* type, bool useSearchTypeAsArrayReturnType, bool recursive, bool includeInactive, bool reverse, ::Il2CppObject* resultList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(useSearchTypeAsArrayReturnType), ::il2cpp_utils::ExtractType(recursive), ::il2cpp_utils::ExtractType(includeInactive), ::il2cpp_utils::ExtractType(reverse), ::il2cpp_utils::ExtractType(resultList)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(this, ___internal__method, type, useSearchTypeAsArrayReturnType, recursive, includeInactive, reverse, resultList);
}
// Autogenerated method: UnityEngine.GameObject.GetComponents
::ArrayW<::UnityEngine::Component*> UnityEngine::GameObject::GetComponents(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponents
void UnityEngine::GameObject::GetComponents(::System::Type* type, ::System::Collections::Generic::List_1<::UnityEngine::Component*>* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, results);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInChildren
::ArrayW<::UnityEngine::Component*> UnityEngine::GameObject::GetComponentsInChildren(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInChildren
::ArrayW<::UnityEngine::Component*> UnityEngine::GameObject::GetComponentsInChildren(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInChildren");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInParent
::ArrayW<::UnityEngine::Component*> UnityEngine::GameObject::GetComponentsInParent(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.GetComponentsInParent
::ArrayW<::UnityEngine::Component*> UnityEngine::GameObject::GetComponentsInParent(::System::Type* type, bool includeInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::GetComponentsInParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentsInParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(includeInactive)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Component*>, false>(this, ___internal__method, type, includeInactive);
}
// Autogenerated method: UnityEngine.GameObject.TryGetComponent
bool UnityEngine::GameObject::TryGetComponent(::System::Type* type, ByRef<::UnityEngine::Component*> component) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::TryGetComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Component*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, type, byref(component));
}
// Autogenerated method: UnityEngine.GameObject.TryGetComponentInternal
::UnityEngine::Component* UnityEngine::GameObject::TryGetComponentInternal(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::TryGetComponentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetComponentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.GameObject.TryGetComponentFastPath
void UnityEngine::GameObject::TryGetComponentFastPath(::System::Type* type, ::System::IntPtr oneFurtherThanResultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::TryGetComponentFastPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetComponentFastPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(oneFurtherThanResultValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type, oneFurtherThanResultValue);
}
// Autogenerated method: UnityEngine.GameObject.FindWithTag
::UnityEngine::GameObject* UnityEngine::GameObject::FindWithTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::FindWithTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "FindWithTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.SendMessageUpwards
void UnityEngine::GameObject::SendMessageUpwards(::StringW methodName, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessageUpwards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageUpwards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, options);
}
// Autogenerated method: UnityEngine.GameObject.SendMessage
void UnityEngine::GameObject::SendMessage(::StringW methodName, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, options);
}
// Autogenerated method: UnityEngine.GameObject.BroadcastMessage
void UnityEngine::GameObject::BroadcastMessage(::StringW methodName, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::BroadcastMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BroadcastMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, options);
}
// Autogenerated method: UnityEngine.GameObject.AddComponentInternal
::UnityEngine::Component* UnityEngine::GameObject::AddComponentInternal(::StringW className) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::AddComponentInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddComponentInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, className);
}
// Autogenerated method: UnityEngine.GameObject.Internal_AddComponentWithType
::UnityEngine::Component* UnityEngine::GameObject::Internal_AddComponentWithType(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Internal_AddComponentWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Internal_AddComponentWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, componentType);
}
// Autogenerated method: UnityEngine.GameObject.AddComponent
::UnityEngine::Component* UnityEngine::GameObject::AddComponent(::System::Type* componentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::AddComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(componentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Component*, false>(this, ___internal__method, componentType);
}
// Autogenerated method: UnityEngine.GameObject.SetActive
void UnityEngine::GameObject::SetActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SetActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.GameObject.SetActiveRecursively
void UnityEngine::GameObject::SetActiveRecursively(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SetActiveRecursively");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveRecursively", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: UnityEngine.GameObject.CompareTag
bool UnityEngine::GameObject::CompareTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::CompareTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.FindGameObjectWithTag
::UnityEngine::GameObject* UnityEngine::GameObject::FindGameObjectWithTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::FindGameObjectWithTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "FindGameObjectWithTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.FindGameObjectsWithTag
::ArrayW<::UnityEngine::GameObject*> UnityEngine::GameObject::FindGameObjectsWithTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::FindGameObjectsWithTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "FindGameObjectsWithTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::GameObject*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: UnityEngine.GameObject.SendMessageUpwards
void UnityEngine::GameObject::SendMessageUpwards(::StringW methodName, ::Il2CppObject* value, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessageUpwards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageUpwards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value, options);
}
// Autogenerated method: UnityEngine.GameObject.SendMessageUpwards
void UnityEngine::GameObject::SendMessageUpwards(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessageUpwards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageUpwards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.GameObject.SendMessageUpwards
void UnityEngine::GameObject::SendMessageUpwards(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessageUpwards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessageUpwards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.GameObject.SendMessage
void UnityEngine::GameObject::SendMessage(::StringW methodName, ::Il2CppObject* value, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value, options);
}
// Autogenerated method: UnityEngine.GameObject.SendMessage
void UnityEngine::GameObject::SendMessage(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.GameObject.SendMessage
void UnityEngine::GameObject::SendMessage(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::SendMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.GameObject.BroadcastMessage
void UnityEngine::GameObject::BroadcastMessage(::StringW methodName, ::Il2CppObject* parameter, ::UnityEngine::SendMessageOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::BroadcastMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BroadcastMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(parameter), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, parameter, options);
}
// Autogenerated method: UnityEngine.GameObject.BroadcastMessage
void UnityEngine::GameObject::BroadcastMessage(::StringW methodName, ::Il2CppObject* parameter) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::BroadcastMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BroadcastMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(parameter)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, parameter);
}
// Autogenerated method: UnityEngine.GameObject.BroadcastMessage
void UnityEngine::GameObject::BroadcastMessage(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::BroadcastMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BroadcastMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.GameObject.Internal_CreateGameObject
void UnityEngine::GameObject::Internal_CreateGameObject(::UnityEngine::GameObject* self, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Internal_CreateGameObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "Internal_CreateGameObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, name);
}
// Autogenerated method: UnityEngine.GameObject.Find
::UnityEngine::GameObject* UnityEngine::GameObject::Find(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::Find");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "GameObject", "Find", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.GameObject.get_scene_Injected
void UnityEngine::GameObject::get_scene_Injected(ByRef<::UnityEngine::SceneManagement::Scene> ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::GameObject::get_scene_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scene_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::UnityEngine::SceneManagement::Scene&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(ret));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Mask
[[deprecated("Use field access instead!")]] int& UnityEngine::LayerMask::dyn_m_Mask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::dyn_m_Mask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mask"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.LayerMask.get_value
int UnityEngine::LayerMask::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.LayerMask.set_value
void UnityEngine::LayerMask::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.LayerMask.LayerToName
::StringW UnityEngine::LayerMask::LayerToName(int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::LayerToName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "LayerMask", "LayerToName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layer)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layer);
}
// Autogenerated method: UnityEngine.LayerMask.NameToLayer
int UnityEngine::LayerMask::NameToLayer(::StringW layerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::NameToLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "LayerMask", "NameToLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerName);
}
// Autogenerated method: UnityEngine.LayerMask.GetMask
int UnityEngine::LayerMask::GetMask(::ArrayW<::StringW> layerNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LayerMask::GetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "LayerMask", "GetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layerNames)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, layerNames);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ManagedStreamHelpers
#include "UnityEngine/ManagedStreamHelpers.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ValidateLoadFromStream
void UnityEngine::ManagedStreamHelpers::ValidateLoadFromStream(::System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ValidateLoadFromStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ValidateLoadFromStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamRead
void UnityEngine::ManagedStreamHelpers::ManagedStreamRead(::ArrayW<uint8_t> buffer, int offset, int count, ::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, offset, count, stream, returnValueAddress);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamSeek
void UnityEngine::ManagedStreamHelpers::ManagedStreamSeek(int64_t offset, uint origin, ::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamSeek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, offset, origin, stream, returnValueAddress);
}
// Autogenerated method: UnityEngine.ManagedStreamHelpers.ManagedStreamLength
void UnityEngine::ManagedStreamHelpers::ManagedStreamLength(::System::IO::Stream* stream, ::System::IntPtr returnValueAddress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ManagedStreamHelpers::ManagedStreamLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ManagedStreamHelpers", "ManagedStreamLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(returnValueAddress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, returnValueAddress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.MonoBehaviour.get_useGUILayout
bool UnityEngine::MonoBehaviour::get_useGUILayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::get_useGUILayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useGUILayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.set_useGUILayout
void UnityEngine::MonoBehaviour::set_useGUILayout(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::set_useGUILayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useGUILayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Invoke
void UnityEngine::MonoBehaviour::Invoke(::StringW methodName, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, time);
}
// Autogenerated method: UnityEngine.MonoBehaviour.InvokeRepeating
void UnityEngine::MonoBehaviour::InvokeRepeating(::StringW methodName, float time, float repeatRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::InvokeRepeating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRepeating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(repeatRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName, time, repeatRate);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutine_Auto
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutine_Auto(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutine_Auto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutine_Auto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::UnityEngine::Coroutine* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutine
void UnityEngine::MonoBehaviour::StopCoroutine(::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopAllCoroutines
void UnityEngine::MonoBehaviour::StopAllCoroutines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopAllCoroutines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllCoroutines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.MonoBehaviour.print
void UnityEngine::MonoBehaviour::print(::Il2CppObject* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::print");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "print", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Internal_CancelInvokeAll
void UnityEngine::MonoBehaviour::Internal_CancelInvokeAll(::UnityEngine::MonoBehaviour* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Internal_CancelInvokeAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "Internal_CancelInvokeAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.MonoBehaviour.Internal_IsInvokingAll
bool UnityEngine::MonoBehaviour::Internal_IsInvokingAll(::UnityEngine::MonoBehaviour* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::Internal_IsInvokingAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "Internal_IsInvokingAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.MonoBehaviour.InvokeDelayed
void UnityEngine::MonoBehaviour::InvokeDelayed(::UnityEngine::MonoBehaviour* self, ::StringW methodName, float time, float repeatRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::InvokeDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "InvokeDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(repeatRate)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName, time, repeatRate);
}
// Autogenerated method: UnityEngine.MonoBehaviour.CancelInvoke
void UnityEngine::MonoBehaviour::CancelInvoke(::UnityEngine::MonoBehaviour* self, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::CancelInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "CancelInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsInvoking
bool UnityEngine::MonoBehaviour::IsInvoking(::UnityEngine::MonoBehaviour* self, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsInvoking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "IsInvoking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self), ::il2cpp_utils::ExtractType(methodName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self, methodName);
}
// Autogenerated method: UnityEngine.MonoBehaviour.IsObjectMonoBehaviour
bool UnityEngine::MonoBehaviour::IsObjectMonoBehaviour(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::IsObjectMonoBehaviour");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "MonoBehaviour", "IsObjectMonoBehaviour", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutineManaged
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutineManaged(::StringW methodName, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutineManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutineManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, methodName, value);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StartCoroutineManaged2
::UnityEngine::Coroutine* UnityEngine::MonoBehaviour::StartCoroutineManaged2(::System::Collections::IEnumerator* enumerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StartCoroutineManaged2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCoroutineManaged2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enumerator)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Coroutine*, false>(this, ___internal__method, enumerator);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutineManaged
void UnityEngine::MonoBehaviour::StopCoroutineManaged(::UnityEngine::Coroutine* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutineManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutineManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.StopCoroutineFromEnumeratorManaged
void UnityEngine::MonoBehaviour::StopCoroutineFromEnumeratorManaged(::System::Collections::IEnumerator* routine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::StopCoroutineFromEnumeratorManaged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopCoroutineFromEnumeratorManaged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(routine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, routine);
}
// Autogenerated method: UnityEngine.MonoBehaviour.GetScriptClassName
::StringW UnityEngine::MonoBehaviour::GetScriptClassName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::MonoBehaviour::GetScriptClassName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScriptClassName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.NoAllocHelpers
#include "UnityEngine/NoAllocHelpers.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.NoAllocHelpers.SafeLength
int UnityEngine::NoAllocHelpers::SafeLength(::System::Array* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::SafeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "SafeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, values);
}
// Autogenerated method: UnityEngine.NoAllocHelpers.Internal_ResizeList
void UnityEngine::NoAllocHelpers::Internal_ResizeList(::Il2CppObject* list, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::Internal_ResizeList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "Internal_ResizeList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list, size);
}
// Autogenerated method: UnityEngine.NoAllocHelpers.ExtractArrayFromList
::System::Array* UnityEngine::NoAllocHelpers::ExtractArrayFromList(::Il2CppObject* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::NoAllocHelpers::ExtractArrayFromList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "NoAllocHelpers", "ExtractArrayFromList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Array*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, list);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RangeInt
#include "UnityEngine/RangeInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 start
[[deprecated("Use field access instead!")]] int& UnityEngine::RangeInt::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::dyn_start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 length
[[deprecated("Use field access instead!")]] int& UnityEngine::RangeInt::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::dyn_length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RangeInt.get_end
int UnityEngine::RangeInt::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RangeInt::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.RangeInt..ctor
// ABORTED elsewhere.  UnityEngine::RangeInt::RangeInt(int start, int length)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeInitializeLoadType
#include "UnityEngine/RuntimeInitializeLoadType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType AfterSceneLoad
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_AfterSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_AfterSceneLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "AfterSceneLoad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType AfterSceneLoad
void UnityEngine::RuntimeInitializeLoadType::_set_AfterSceneLoad(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_AfterSceneLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "AfterSceneLoad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSceneLoad
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_BeforeSceneLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_BeforeSceneLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "BeforeSceneLoad"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSceneLoad
void UnityEngine::RuntimeInitializeLoadType::_set_BeforeSceneLoad(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_BeforeSceneLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "BeforeSceneLoad", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType AfterAssembliesLoaded
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_AfterAssembliesLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_AfterAssembliesLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "AfterAssembliesLoaded"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType AfterAssembliesLoaded
void UnityEngine::RuntimeInitializeLoadType::_set_AfterAssembliesLoaded(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_AfterAssembliesLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "AfterAssembliesLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSplashScreen
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_BeforeSplashScreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_BeforeSplashScreen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "BeforeSplashScreen"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType BeforeSplashScreen
void UnityEngine::RuntimeInitializeLoadType::_set_BeforeSplashScreen(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_BeforeSplashScreen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "BeforeSplashScreen", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.RuntimeInitializeLoadType SubsystemRegistration
::UnityEngine::RuntimeInitializeLoadType UnityEngine::RuntimeInitializeLoadType::_get_SubsystemRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_get_SubsystemRegistration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::RuntimeInitializeLoadType>("UnityEngine", "RuntimeInitializeLoadType", "SubsystemRegistration"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.RuntimeInitializeLoadType SubsystemRegistration
void UnityEngine::RuntimeInitializeLoadType::_set_SubsystemRegistration(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::_set_SubsystemRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "RuntimeInitializeLoadType", "SubsystemRegistration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::RuntimeInitializeLoadType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeLoadType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.RuntimeInitializeOnLoadMethodAttribute
#include "UnityEngine/RuntimeInitializeOnLoadMethodAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RuntimeInitializeLoadType m_LoadType
[[deprecated("Use field access instead!")]] ::UnityEngine::RuntimeInitializeLoadType& UnityEngine::RuntimeInitializeOnLoadMethodAttribute::dyn_m_LoadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeOnLoadMethodAttribute::dyn_m_LoadType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_LoadType"))->offset;
  return *reinterpret_cast<::UnityEngine::RuntimeInitializeLoadType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.RuntimeInitializeOnLoadMethodAttribute.set_loadType
void UnityEngine::RuntimeInitializeOnLoadMethodAttribute::set_loadType(::UnityEngine::RuntimeInitializeLoadType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::RuntimeInitializeOnLoadMethodAttribute::set_loadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptableObject.CreateInstance
::UnityEngine::ScriptableObject* UnityEngine::ScriptableObject::CreateInstance(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ScriptableObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.ScriptableObject.CreateScriptableObject
void UnityEngine::ScriptableObject::CreateScriptableObject(::UnityEngine::ScriptableObject* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateScriptableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateScriptableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(self)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.ScriptableObject.CreateScriptableObjectInstanceFromType
::UnityEngine::ScriptableObject* UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType(::System::Type* type, bool applyDefaultsAndReset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptableObject::CreateScriptableObjectInstanceFromType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptableObject", "CreateScriptableObjectInstanceFromType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(applyDefaultsAndReset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::ScriptableObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, applyDefaultsAndReset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ScriptingUtility
#include "UnityEngine/ScriptingUtility.hpp"
// Including type: UnityEngine.ScriptingUtility/UnityEngine.TestClass
#include "UnityEngine/ScriptingUtility_TestClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ScriptingUtility.IsManagedCodeWorking
bool UnityEngine::ScriptingUtility::IsManagedCodeWorking() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ScriptingUtility::IsManagedCodeWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "ScriptingUtility", "IsManagedCodeWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SelectionBaseAttribute
#include "UnityEngine/SelectionBaseAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.StackTraceUtility
#include "UnityEngine/StackTraceUtility.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String projectFolder
::StringW UnityEngine::StackTraceUtility::_get_projectFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_get_projectFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "StackTraceUtility", "projectFolder"));
}
// Autogenerated static field setter
// Set static field: static private System.String projectFolder
void UnityEngine::StackTraceUtility::_set_projectFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::_set_projectFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StackTraceUtility", "projectFolder", value));
}
// Autogenerated method: UnityEngine.StackTraceUtility..cctor
void UnityEngine::StackTraceUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StackTraceUtility.SetProjectFolder
void UnityEngine::StackTraceUtility::SetProjectFolder(::StringW folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::SetProjectFolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "SetProjectFolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folder)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractStackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractStringFromExceptionInternal
void UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal(::Il2CppObject* exceptiono, ByRef<::StringW> message, ByRef<::StringW> stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractStringFromExceptionInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractStringFromExceptionInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptiono), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exceptiono, byref(message), byref(stackTrace));
}
// Autogenerated method: UnityEngine.StackTraceUtility.ExtractFormattedStackTrace
::StringW UnityEngine::StackTraceUtility::ExtractFormattedStackTrace(::System::Diagnostics::StackTrace* stackTrace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::StackTraceUtility::ExtractFormattedStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "StackTraceUtility", "ExtractFormattedStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stackTrace)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stackTrace);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnityException
#include "UnityEngine/UnityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.TextAsset.get_text
::StringW UnityEngine::TextAsset::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.get_bytes
::ArrayW<uint8_t> UnityEngine::TextAsset::get_bytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::get_bytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TextAsset.ToString
::StringW UnityEngine::TextAsset::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TextAsset::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.TrackedReference
#include "UnityEngine/TrackedReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IntPtr m_Ptr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::TrackedReference::dyn_m_Ptr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::dyn_m_Ptr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Ptr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.TrackedReference.Equals
bool UnityEngine::TrackedReference::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: UnityEngine.TrackedReference.GetHashCode
int UnityEngine::TrackedReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.TrackedReference.op_Equality
bool UnityEngine::operator ==(::UnityEngine::TrackedReference* x, ::UnityEngine::TrackedReference& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::TrackedReference::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "TrackedReference", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.UnhandledExceptionHandler
#include "UnityEngine/UnhandledExceptionHandler.hpp"
// Including type: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.UnhandledExceptionHandler.RegisterUECatcher
void UnityEngine::UnhandledExceptionHandler::RegisterUECatcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::RegisterUECatcher");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler", "RegisterUECatcher", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c
#include "UnityEngine/UnhandledExceptionHandler_--c.hpp"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c <>9
::UnityEngine::UnhandledExceptionHandler::$$c* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::UnhandledExceptionHandler::$$c*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c <>9
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9(::UnityEngine::UnhandledExceptionHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.UnhandledExceptionEventHandler <>9__0_0
::System::UnhandledExceptionEventHandler* UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_get_$$9__0_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::UnhandledExceptionEventHandler*>("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0")));
}
// Autogenerated static field setter
// Set static field: static public System.UnhandledExceptionEventHandler <>9__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0(::System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::_set_$$9__0_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine", "UnhandledExceptionHandler/<>c", "<>9__0_0", value)));
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c..cctor
void UnityEngine::UnhandledExceptionHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnhandledExceptionHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnhandledExceptionHandler/UnityEngine.<>c.<RegisterUECatcher>b__0_0
void UnityEngine::UnhandledExceptionHandler::$$c::$RegisterUECatcher$b__0_0(::Il2CppObject* sender, ::System::UnhandledExceptionEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnhandledExceptionHandler::$$c::<RegisterUECatcher>b__0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterUECatcher>b__0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags None
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags None
void UnityEngine::HideFlags::_set_None(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInHierarchy
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInHierarchy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInHierarchy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInHierarchy
void UnityEngine::HideFlags::_set_HideInHierarchy(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInHierarchy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInHierarchy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideInInspector
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideInInspector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideInInspector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideInInspector"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideInInspector
void UnityEngine::HideFlags::_set_HideInInspector(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideInInspector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideInInspector", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInEditor
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInEditor
void UnityEngine::HideFlags::_set_DontSaveInEditor(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags NotEditable
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_NotEditable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_NotEditable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "NotEditable"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags NotEditable
void UnityEngine::HideFlags::_set_NotEditable(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_NotEditable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "NotEditable", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSaveInBuild
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSaveInBuild() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSaveInBuild");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSaveInBuild"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSaveInBuild
void UnityEngine::HideFlags::_set_DontSaveInBuild(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSaveInBuild");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSaveInBuild", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontUnloadUnusedAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontUnloadUnusedAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontUnloadUnusedAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontUnloadUnusedAsset
void UnityEngine::HideFlags::_set_DontUnloadUnusedAsset(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontUnloadUnusedAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontUnloadUnusedAsset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags DontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_DontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_DontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "DontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags DontSave
void UnityEngine::HideFlags::_set_DontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_DontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "DontSave", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HideFlags HideAndDontSave
::UnityEngine::HideFlags UnityEngine::HideFlags::_get_HideAndDontSave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_get_HideAndDontSave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::HideFlags>("UnityEngine", "HideFlags", "HideAndDontSave"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HideFlags HideAndDontSave
void UnityEngine::HideFlags::_set_HideAndDontSave(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::_set_HideAndDontSave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HideFlags", "HideAndDontSave", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::HideFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::HideFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.HideFlags
#include "UnityEngine/HideFlags.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_OffsetOfInstanceIDInCPlusPlusObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 OffsetOfInstanceIDInCPlusPlusObject
void UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_OffsetOfInstanceIDInCPlusPlusObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "OffsetOfInstanceIDInCPlusPlusObject", value));
}
// Autogenerated static field getter
// Get static field: static private System.String objectIsNullMessage
::StringW UnityEngine::Object::_get_objectIsNullMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_objectIsNullMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "objectIsNullMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String objectIsNullMessage
void UnityEngine::Object::_set_objectIsNullMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_objectIsNullMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "objectIsNullMessage", value));
}
// Autogenerated static field getter
// Get static field: static private System.String cloneDestroyedMessage
::StringW UnityEngine::Object::_get_cloneDestroyedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_get_cloneDestroyedMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine", "Object", "cloneDestroyedMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String cloneDestroyedMessage
void UnityEngine::Object::_set_cloneDestroyedMessage(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::_set_cloneDestroyedMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "Object", "cloneDestroyedMessage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr m_CachedPtr
[[deprecated("Use field access instead!")]] ::System::IntPtr& UnityEngine::Object::dyn_m_CachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::dyn_m_CachedPtr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CachedPtr"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Object.get_name
::StringW UnityEngine::Object::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_name
void UnityEngine::Object::set_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object.get_hideFlags
::UnityEngine::HideFlags UnityEngine::Object::get_hideFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::get_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::HideFlags, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.set_hideFlags
void UnityEngine::Object::set_hideFlags(::UnityEngine::HideFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::set_hideFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Object..cctor
void UnityEngine::Object::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.GetInstanceID
int UnityEngine::Object::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.CompareBaseObjects
bool UnityEngine::Object::CompareBaseObjects(::UnityEngine::Object* lhs, ::UnityEngine::Object* rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CompareBaseObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CompareBaseObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Object.IsNativeObjectAlive
bool UnityEngine::Object::IsNativeObjectAlive(::UnityEngine::Object* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::IsNativeObjectAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "IsNativeObjectAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, o);
}
// Autogenerated method: UnityEngine.Object.GetCachedPtr
::System::IntPtr UnityEngine::Object::GetCachedPtr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetCachedPtr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCachedPtr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Transform* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, position, rotation, parent);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original);
}
// Autogenerated method: UnityEngine.Object.Instantiate
::UnityEngine::Object* UnityEngine::Object::Instantiate(::UnityEngine::Object* original, ::UnityEngine::Transform* parent, bool instantiateInWorldSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Instantiate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Instantiate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(original), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(instantiateInWorldSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, original, parent, instantiateInWorldSpace);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, t);
}
// Autogenerated method: UnityEngine.Object.Destroy
void UnityEngine::Object::Destroy(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj, bool allowDestroyingAssets) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(allowDestroyingAssets)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, allowDestroyingAssets);
}
// Autogenerated method: UnityEngine.Object.DestroyImmediate
void UnityEngine::Object::DestroyImmediate(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DestroyImmediate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DestroyImmediate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.FindObjectsOfType
::ArrayW<::UnityEngine::Object*> UnityEngine::Object::FindObjectsOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectsOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectsOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Object*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.DontDestroyOnLoad
void UnityEngine::Object::DontDestroyOnLoad(::UnityEngine::Object* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::DontDestroyOnLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "DontDestroyOnLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: UnityEngine.Object.CheckNullArgument
void UnityEngine::Object::CheckNullArgument(::Il2CppObject* arg, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::CheckNullArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "CheckNullArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, message);
}
// Autogenerated method: UnityEngine.Object.FindObjectOfType
::UnityEngine::Object* UnityEngine::Object::FindObjectOfType(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectOfType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectOfType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: UnityEngine.Object.GetOffsetOfInstanceIDInCPlusPlusObject
int UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetOffsetOfInstanceIDInCPlusPlusObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetOffsetOfInstanceIDInCPlusPlusObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingle
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingle(::UnityEngine::Object* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data);
}
// Autogenerated method: UnityEngine.Object.Internal_CloneSingleWithParent
::UnityEngine::Object* UnityEngine::Object::Internal_CloneSingleWithParent(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, bool worldPositionStays) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_CloneSingleWithParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_CloneSingleWithParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(worldPositionStays)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, worldPositionStays);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle(::UnityEngine::Object* data, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, pos, rot);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingleWithParent
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingleWithParent(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, ::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingleWithParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingleWithParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, pos, rot);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.GetName
::StringW UnityEngine::Object::GetName(::UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "GetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Object.SetName
void UnityEngine::Object::SetName(::UnityEngine::Object* obj, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::SetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "SetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Object.FindObjectFromInstanceID
::UnityEngine::Object* UnityEngine::Object::FindObjectFromInstanceID(int instanceID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::FindObjectFromInstanceID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "FindObjectFromInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceID)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceID);
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingle_Injected
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingle_Injected(::UnityEngine::Object* data, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingle_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingle_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, byref(pos), byref(rot));
}
// Autogenerated method: UnityEngine.Object.Internal_InstantiateSingleWithParent_Injected
::UnityEngine::Object* UnityEngine::Object::Internal_InstantiateSingleWithParent_Injected(::UnityEngine::Object* data, ::UnityEngine::Transform* parent, ByRef<::UnityEngine::Vector3> pos, ByRef<::UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Internal_InstantiateSingleWithParent_Injected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "Internal_InstantiateSingleWithParent_Injected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Object*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, data, parent, byref(pos), byref(rot));
}
// Autogenerated method: UnityEngine.Object.GetHashCode
int UnityEngine::Object::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.Equals
bool UnityEngine::Object::Equals(::Il2CppObject* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Object.ToString
::StringW UnityEngine::Object::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Object.op_Equality
bool UnityEngine::operator ==(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated method: UnityEngine.Object.op_Inequality
bool UnityEngine::operator !=(::UnityEngine::Object* x, ::UnityEngine::Object& y) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Object::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "Object", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(&y)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, x, &y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest> m_AsyncWorkQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_AsyncWorkQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AsyncWorkQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest> m_CurrentFrameWork
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>*& UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_CurrentFrameWork");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentFrameWork"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::UnitySynchronizationContext::WorkRequest>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 m_MainThreadID
[[deprecated("Use field access instead!")]] int& UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_MainThreadID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MainThreadID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_TrackedCount
[[deprecated("Use field access instead!")]] int& UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::dyn_m_TrackedCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TrackedCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Exec
void UnityEngine::UnitySynchronizationContext::Exec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Exec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Exec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.HasPendingTasks
bool UnityEngine::UnitySynchronizationContext::HasPendingTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::HasPendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.InitializeSynchronizationContext
void UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::InitializeSynchronizationContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "InitializeSynchronizationContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecuteTasks
void UnityEngine::UnitySynchronizationContext::ExecuteTasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecuteTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecuteTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.ExecutePendingTasks
bool UnityEngine::UnitySynchronizationContext::ExecutePendingTasks(int64_t millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::ExecutePendingTasks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "UnitySynchronizationContext", "ExecutePendingTasks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, millisecondsTimeout);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Send
void UnityEngine::UnitySynchronizationContext::Send(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationStarted
void UnityEngine::UnitySynchronizationContext::OperationStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.OperationCompleted
void UnityEngine::UnitySynchronizationContext::OperationCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::OperationCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OperationCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.Post
void UnityEngine::UnitySynchronizationContext::Post(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::Post");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Post", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext.CreateCopy
::System::Threading::SynchronizationContext* UnityEngine::UnitySynchronizationContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::CreateCopy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::SynchronizationContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest
#include "UnityEngine/UnitySynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SendOrPostCallback m_DelagateCallback
[[deprecated("Use field access instead!")]] ::System::Threading::SendOrPostCallback*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateCallback");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateCallback"))->offset;
  return *reinterpret_cast<::System::Threading::SendOrPostCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object m_DelagateState
[[deprecated("Use field access instead!")]] ::Il2CppObject*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_DelagateState");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DelagateState"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ManualResetEvent m_WaitHandle
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::dyn_m_WaitHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitHandle"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest..ctor
// ABORTED elsewhere.  UnityEngine::UnitySynchronizationContext::WorkRequest::WorkRequest(::System::Threading::SendOrPostCallback* callback, ::Il2CppObject* state, ::System::Threading::ManualResetEvent* waitHandle)
// Autogenerated method: UnityEngine.UnitySynchronizationContext/UnityEngine.WorkRequest.Invoke
void UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::UnitySynchronizationContext::WorkRequest::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForEndOfFrame
#include "UnityEngine/WaitForEndOfFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Single m_Seconds
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSeconds::dyn_m_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSeconds::dyn_m_Seconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Seconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitForSecondsRealtime
#include "UnityEngine/WaitForSecondsRealtime.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <waitTime>k__BackingField
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_$waitTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_WaitUntilTime
[[deprecated("Use field access instead!")]] float& UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::dyn_m_WaitUntilTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_WaitUntilTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_waitTime
float UnityEngine::WaitForSecondsRealtime::get_waitTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.set_waitTime
void UnityEngine::WaitForSecondsRealtime::set_waitTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::set_waitTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_waitTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.WaitForSecondsRealtime.get_keepWaiting
bool UnityEngine::WaitForSecondsRealtime::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitForSecondsRealtime::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Boolean> m_Predicate
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& UnityEngine::WaitUntil::dyn_m_Predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitUntil::dyn_m_Predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Predicate"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitUntil.get_keepWaiting
bool UnityEngine::WaitUntil::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitUntil::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.WaitWhile
#include "UnityEngine/WaitWhile.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Func`1<System.Boolean> m_Predicate
[[deprecated("Use field access instead!")]] ::System::Func_1<bool>*& UnityEngine::WaitWhile::dyn_m_Predicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitWhile::dyn_m_Predicate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Predicate"))->offset;
  return *reinterpret_cast<::System::Func_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.WaitWhile.get_keepWaiting
bool UnityEngine::WaitWhile::get_keepWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::WaitWhile::get_keepWaiting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keepWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.YieldInstruction
#include "UnityEngine/YieldInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SerializeField
#include "UnityEngine/SerializeField.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ISerializationCallbackReceiver
#include "UnityEngine/ISerializationCallbackReceiver.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DisableBatchingType
#include "UnityEngine/DisableBatchingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType False
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "False"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType False
void UnityEngine::DisableBatchingType::_set_False(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "False", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType True
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "True"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType True
void UnityEngine::DisableBatchingType::_set_True(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "True", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DisableBatchingType WhenLODFading
::UnityEngine::DisableBatchingType UnityEngine::DisableBatchingType::_get_WhenLODFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_get_WhenLODFading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DisableBatchingType>("UnityEngine", "DisableBatchingType", "WhenLODFading"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DisableBatchingType WhenLODFading
void UnityEngine::DisableBatchingType::_set_WhenLODFading(::UnityEngine::DisableBatchingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::_set_WhenLODFading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DisableBatchingType", "WhenLODFading", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DisableBatchingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DisableBatchingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.ComputeShader
#include "UnityEngine/ComputeShader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.ComputeShader.FindKernel
int UnityEngine::ComputeShader::FindKernel(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::ComputeShader::FindKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.LowerResBlitTexture
#include "UnityEngine/LowerResBlitTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.LowerResBlitTexture.LowerResBlitTextureDontStripMe
void UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::LowerResBlitTexture::LowerResBlitTextureDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowerResBlitTextureDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.PreloadData
#include "UnityEngine/PreloadData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.PreloadData.PreloadDataDontStripMe
void UnityEngine::PreloadData::PreloadDataDontStripMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::PreloadData::PreloadDataDontStripMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PreloadDataDontStripMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Other
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Other"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Other
void UnityEngine::OperatingSystemFamily::_set_Other(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily MacOSX
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_MacOSX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_MacOSX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "MacOSX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily MacOSX
void UnityEngine::OperatingSystemFamily::_set_MacOSX(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_MacOSX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "MacOSX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Windows
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Windows
void UnityEngine::OperatingSystemFamily::_set_Windows(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.OperatingSystemFamily Linux
::UnityEngine::OperatingSystemFamily UnityEngine::OperatingSystemFamily::_get_Linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_get_Linux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::OperatingSystemFamily>("UnityEngine", "OperatingSystemFamily", "Linux"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.OperatingSystemFamily Linux
void UnityEngine::OperatingSystemFamily::_set_Linux(::UnityEngine::OperatingSystemFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::_set_Linux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "OperatingSystemFamily", "Linux", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::OperatingSystemFamily::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::OperatingSystemFamily::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Unknown
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Unknown
void UnityEngine::DeviceType::_set_Unknown(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Handheld
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Handheld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Handheld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Handheld"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Handheld
void UnityEngine::DeviceType::_set_Handheld(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Handheld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Handheld", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Console
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Console() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Console"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Console
void UnityEngine::DeviceType::_set_Console(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Console", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.DeviceType Desktop
::UnityEngine::DeviceType UnityEngine::DeviceType::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::DeviceType>("UnityEngine", "DeviceType", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.DeviceType Desktop
void UnityEngine::DeviceType::_set_Desktop(::UnityEngine::DeviceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "DeviceType", "Desktop", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::DeviceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::DeviceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.SystemInfo
#include "UnityEngine/SystemInfo.hpp"
// Including type: UnityEngine.OperatingSystemFamily
#include "UnityEngine/OperatingSystemFamily.hpp"
// Including type: UnityEngine.DeviceType
#include "UnityEngine/DeviceType.hpp"
// Including type: UnityEngine.Rendering.GraphicsDeviceType
#include "UnityEngine/Rendering/GraphicsDeviceType.hpp"
// Including type: System.Enum
#include "System/Enum.hpp"
// Including type: UnityEngine.RenderTextureFormat
#include "UnityEngine/RenderTextureFormat.hpp"
// Including type: UnityEngine.TextureFormat
#include "UnityEngine/TextureFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.GraphicsFormat
#include "UnityEngine/Experimental/Rendering/GraphicsFormat.hpp"
// Including type: UnityEngine.Experimental.Rendering.FormatUsage
#include "UnityEngine/Experimental/Rendering/FormatUsage.hpp"
// Including type: UnityEngine.Experimental.Rendering.DefaultFormat
#include "UnityEngine/Experimental/Rendering/DefaultFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.SystemInfo.get_operatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::get_operatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_operatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_operatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_deviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::get_deviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_deviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_deviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::get_graphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_graphicsDeviceVersion
::StringW UnityEngine::SystemInfo::get_graphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_graphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_graphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_supportsInstancing
bool UnityEngine::SystemInfo::get_supportsInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_supportsInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_supportsInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.get_usesReversedZBuffer
bool UnityEngine::SystemInfo::get_usesReversedZBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::get_usesReversedZBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "get_usesReversedZBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.IsValidEnumValue
bool UnityEngine::SystemInfo::IsValidEnumValue(::System::Enum* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsValidEnumValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsValidEnumValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsRenderTextureFormat
bool UnityEngine::SystemInfo::SupportsRenderTextureFormat(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsRenderTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsRenderTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormat
bool UnityEngine::SystemInfo::SupportsTextureFormat(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.GetOperatingSystemFamily
::UnityEngine::OperatingSystemFamily UnityEngine::SystemInfo::GetOperatingSystemFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetOperatingSystemFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetOperatingSystemFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::OperatingSystemFamily, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetDeviceType
::UnityEngine::DeviceType UnityEngine::SystemInfo::GetDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::DeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceType
::UnityEngine::Rendering::GraphicsDeviceType UnityEngine::SystemInfo::GetGraphicsDeviceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Rendering::GraphicsDeviceType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsDeviceVersion
::StringW UnityEngine::SystemInfo::GetGraphicsDeviceVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsDeviceVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsDeviceVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsInstancing
bool UnityEngine::SystemInfo::SupportsInstancing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsInstancing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsInstancing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.UsesReversedZBuffer
bool UnityEngine::SystemInfo::UsesReversedZBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::UsesReversedZBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "UsesReversedZBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.SystemInfo.HasRenderTextureNative
bool UnityEngine::SystemInfo::HasRenderTextureNative(::UnityEngine::RenderTextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::HasRenderTextureNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "HasRenderTextureNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.SupportsTextureFormatNative
bool UnityEngine::SystemInfo::SupportsTextureFormatNative(::UnityEngine::TextureFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::SupportsTextureFormatNative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "SupportsTextureFormatNative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
// Autogenerated method: UnityEngine.SystemInfo.IsFormatSupported
bool UnityEngine::SystemInfo::IsFormatSupported(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::IsFormatSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "IsFormatSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetCompatibleFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetCompatibleFormat(::UnityEngine::Experimental::Rendering::GraphicsFormat format, ::UnityEngine::Experimental::Rendering::FormatUsage usage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetCompatibleFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetCompatibleFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(usage)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format, usage);
}
// Autogenerated method: UnityEngine.SystemInfo.GetGraphicsFormat
::UnityEngine::Experimental::Rendering::GraphicsFormat UnityEngine::SystemInfo::GetGraphicsFormat(::UnityEngine::Experimental::Rendering::DefaultFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::SystemInfo::GetGraphicsFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine", "SystemInfo", "GetGraphicsFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Experimental::Rendering::GraphicsFormat, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, format);
}
