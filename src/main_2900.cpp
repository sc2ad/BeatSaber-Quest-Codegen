// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/OpenProductStoreResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult OK
::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult OK
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK(::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult Failed
::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult Failed
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/UpdateEntitlementsResult
#include "GlobalNamespace/AdditionalContentModel_UpdateEntitlementsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK(::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/IsPackBetterBuyThanLevelResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed(::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10
#include "GlobalNamespace/AdditionalContentModel_-GetLevelEntitlementStatusAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11
#include "GlobalNamespace/AdditionalContentModel_-GetPackEntitlementStatusAsync-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentSO _alwaysOwnedContent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AlwaysOwnedContentSO*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AlwaysOwnedContentSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedBeatmapLevelIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevelIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedPacksIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacksIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedBeatmapLevelIds
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedPacksIds
::System::Collections::Generic::HashSet_1<::StringW>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacksIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::HashSet_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.InitAlwaysOwnedItems
void GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAlwaysOwnedItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.OnEnable
void GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackSO[] _alwaysOwnedPacks
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacks"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO[] _alwaysOwnedBeatmapLevels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::BeatmapLevelSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::BeatmapLevelSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedPacks
::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelPackSO*>, false>(this, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedBeatmapLevels
::ArrayW<::GlobalNamespace::BeatmapLevelSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::BeatmapLevelSO*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusLevelProductsModelSO _oculusLevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusLevelProductsModelSO*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusLevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _entitlementsSKU
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsSKU"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.DataIsValidAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.LaunchCheckoutFlow
::System::Threading::Tasks::Task_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>* GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow(::StringW sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*, false>(this, ___internal__method, sku);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement(::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW packId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> launchCheckoutFlowTaskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "launchCheckoutFlowTaskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0.<LaunchCheckoutFlow>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::$LaunchCheckoutFlow$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::<LaunchCheckoutFlow>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchCheckoutFlow>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sku
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sku"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Message`1/Oculus.Platform.Callback
#include "Oculus/Platform/Message_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<AdditionalContentModel/UpdateEntitlementsResult> getViewerPurchasesTaskSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getViewerPurchasesTaskSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.PurchaseList> <>9__1
[[deprecated("Use field access instead!")]] typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>::Callback*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<typename ::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__0(::Oculus::Platform::Message_1<::Oculus::Platform::Models::AssetDetailsList*>* getListMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getListMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getListMsg);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__1
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__1(::Oculus::Platform::Message_1<::Oculus::Platform::Models::PurchaseList*>* getPurchasesMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getPurchasesMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getPurchasesMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SteamLevelProductsModelSO _steamLevelProductsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamLevelProductsModelSO*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamLevelProductsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt32> _entitlementsAppIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<uint>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsAppIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _dataIsValidTaskCompletionSource
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataIsValidTaskCompletionSource"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
[[deprecated("Use field access instead!")]] ::System::Threading::SemaphoreSlim*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<::System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.DataIsValidAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenProductStore
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore(uint appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProductStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, appId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenBundleUrl
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl(uint bundleId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenBundleUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundleId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bundleId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement(::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW packId, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelsEntitlements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelsEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelPacksEntitlements
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPacksEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _packBetterBuyThanLevel
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packBetterBuyThanLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel.BuyLevel
void GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: TestPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::StringW levelId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::StringW levelPackId, ::System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(this, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel/EntitlementStatus status
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel::EntitlementStatus& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel::EntitlementStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<::GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean requirePrivacyPolicy
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_requirePrivacyPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_requirePrivacyPolicy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requirePrivacyPolicy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enable360DegreeLevels
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_enable360DegreeLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_enable360DegreeLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enable360DegreeLevels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableCustomLevels
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_enableCustomLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_enableCustomLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableCustomLevels"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableMultiplayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AppStaticSettingsSO::dyn_disableMultiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AppStaticSettingsSO::dyn_disableMultiplayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableMultiplayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataAddTestSlidersTransform
#include "GlobalNamespace/BeatmapDataAddTestSlidersTransform.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxTimeDiff
float GlobalNamespace::BeatmapDataAddTestSlidersTransform::_get_kMaxTimeDiff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::_get_kMaxTimeDiff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapDataAddTestSlidersTransform", "kMaxTimeDiff"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxTimeDiff
void GlobalNamespace::BeatmapDataAddTestSlidersTransform::_set_kMaxTimeDiff(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::_set_kMaxTimeDiff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataAddTestSlidersTransform", "kMaxTimeDiff", value));
}
// Autogenerated method: BeatmapDataAddTestSlidersTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataAddTestSlidersTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAddTestSlidersTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapDataAddTestSlidersTransform.FindNextSameColorTypeNote
::GlobalNamespace::NoteData* GlobalNamespace::BeatmapDataAddTestSlidersTransform::FindNextSameColorTypeNote(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::BeatmapDataItem*>* beatmapDataItems, int startIndex, ::GlobalNamespace::ColorType colorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataAddTestSlidersTransform::FindNextSameColorTypeNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataAddTestSlidersTransform", "FindNextSameColorTypeNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItems), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(colorType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapDataItems, startIndex, colorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataMirrorTransform
#include "GlobalNamespace/BeatmapDataMirrorTransform.hpp"
// Including type: BeatmapDataMirrorTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataMirrorTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataMirrorTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataMirrorTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataMirrorTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataMirrorTransform_--c__DisplayClass0_0.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 numberOfLines
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::dyn_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::dyn_numberOfLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numberOfLines"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataMirrorTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataMirrorTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoArrowsTransform
#include "GlobalNamespace/BeatmapDataNoArrowsTransform.hpp"
// Including type: BeatmapDataNoArrowsTransform/<>c
#include "GlobalNamespace/BeatmapDataNoArrowsTransform_--c.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataNoArrowsTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoArrowsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataNoArrowsTransform/<>c
#include "GlobalNamespace/BeatmapDataNoArrowsTransform_--c.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDataNoArrowsTransform/<>c <>9
::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c* GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c*>("", "BeatmapDataNoArrowsTransform/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDataNoArrowsTransform/<>c <>9
void GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_set_$$9(::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDataNoArrowsTransform/<>c", "<>9", value)));
}
// Autogenerated method: BeatmapDataNoArrowsTransform/<>c..cctor
void GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataNoArrowsTransform/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDataNoArrowsTransform/<>c.<CreateTransformedData>g__ProcessData|0_0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::$CreateTransformedData$g__ProcessData_0_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataNoArrowsTransform::$$c::<CreateTransformedData>g__ProcessData|0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform.hpp"
// Including type: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, enabledObstaclesType, noBombs);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform.ShouldUseBeatmapDataItem
bool GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapDataItem(::GlobalNamespace::BeatmapDataItem* beatmapDataItem, ::GlobalNamespace::GameplayModifiers::EnabledObstacleType enabledObstaclesType, bool noBombs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::ShouldUseBeatmapDataItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesAndBombsTransform", "ShouldUseBeatmapDataItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem), ::il2cpp_utils::ExtractType(enabledObstaclesType), ::il2cpp_utils::ExtractType(noBombs)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapDataItem, enabledObstaclesType, noBombs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesAndBombsTransform_--c__DisplayClass0_0.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GameplayModifiers/EnabledObstacleType enabledObstaclesType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifiers::EnabledObstacleType& GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_enabledObstaclesType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_enabledObstaclesType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabledObstaclesType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiers::EnabledObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean noBombs
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_noBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::dyn_noBombs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noBombs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataObstaclesAndBombsTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesAndBombsTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesMergingTransform
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform.hpp"
// Including type: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform_--c__DisplayClass0_0.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataObstaclesMergingTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataObstaclesMergingTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesMergingTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated method: BeatmapDataObstaclesMergingTransform.CanBeMerged
bool GlobalNamespace::BeatmapDataObstaclesMergingTransform::CanBeMerged(::GlobalNamespace::ObstacleData* firstObstacle, ::GlobalNamespace::ObstacleData* secondObstacle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::CanBeMerged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataObstaclesMergingTransform", "CanBeMerged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstObstacle), ::il2cpp_utils::ExtractType(secondObstacle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, firstObstacle, secondObstacle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0
#include "GlobalNamespace/BeatmapDataObstaclesMergingTransform_--c__DisplayClass0_0.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ObstacleData[] prevObstacleDataInLines
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ObstacleData*>& GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::dyn_prevObstacleDataInLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::dyn_prevObstacleDataInLines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "prevObstacleDataInLines"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ObstacleData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataObstaclesMergingTransform/<>c__DisplayClass0_0.<CreateTransformedData>g__ProcessData|0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::$CreateTransformedData$g__ProcessData_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataObstaclesMergingTransform::$$c__DisplayClass0_0::<CreateTransformedData>g__ProcessData|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform.hpp"
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxSecondsToConsiderStrobe
float GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::_get_kMaxSecondsToConsiderStrobe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxSecondsToConsiderStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::_set_kMaxSecondsToConsiderStrobe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BeatmapDataStrobeFilterTransform", "kMaxSecondsToConsiderStrobe", value));
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, environmentIntensityReductionOptions);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.GetOnEventDataValue
int GlobalNamespace::BeatmapDataStrobeFilterTransform::GetOnEventDataValue(::GlobalNamespace::EnvironmentColorType lightColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::GetOnEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "GetOnEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightColorType);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform.GetFlashAndFadeToBlackEventDataValue
int GlobalNamespace::BeatmapDataStrobeFilterTransform::GetFlashAndFadeToBlackEventDataValue(::GlobalNamespace::EnvironmentColorType lightColorType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::GetFlashAndFadeToBlackEventDataValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataStrobeFilterTransform", "GetFlashAndFadeToBlackEventDataValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightColorType)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lightColorType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataStrobeFilterTransform/StrobeStreakData
#include "GlobalNamespace/BeatmapDataStrobeFilterTransform_StrobeStreakData.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single strobeStartTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_strobeStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_strobeStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strobeStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentColorType startColorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_startColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_startColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startColorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastSwitchTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastSwitchTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastSwitchTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastSwitchTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EnvironmentColorType lastColorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastColorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lastIsOn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_lastIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastIsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BasicBeatmapEventData originalBasicBeatmapEventData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicBeatmapEventData*& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_originalBasicBeatmapEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn_originalBasicBeatmapEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalBasicBeatmapEventData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _foundFirstColoredEventData
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn__foundFirstColoredEventData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::dyn__foundFirstColoredEventData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_foundFirstColoredEventData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.StartPotentialStrobe
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe(::GlobalNamespace::BasicBeatmapEventData* startBasicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::StartPotentialStrobe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPotentialStrobe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startBasicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startBasicBeatmapEventData);
}
// Autogenerated method: BeatmapDataStrobeFilterTransform/StrobeStreakData.AddStrobeData
void GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataStrobeFilterTransform::StrobeStreakData::AddStrobeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddStrobeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataTransformHelper
#include "GlobalNamespace/BeatmapDataTransformHelper.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: EnvironmentEffectsFilterPreset
#include "GlobalNamespace/EnvironmentEffectsFilterPreset.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: NoteLineLayer
#include "GlobalNamespace/NoteLineLayer.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataTransformHelper.CreateTransformedBeatmapData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData, ::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, bool leftHanded, ::GlobalNamespace::EnvironmentEffectsFilterPreset environmentEffectsFilterPreset, ::GlobalNamespace::EnvironmentIntensityReductionOptions* environmentIntensityReductionOptions, ::GlobalNamespace::MainSettingsModelSO* mainSettingsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::CreateTransformedBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "CreateTransformedBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(leftHanded), ::il2cpp_utils::ExtractType(environmentEffectsFilterPreset), ::il2cpp_utils::ExtractType(environmentIntensityReductionOptions), ::il2cpp_utils::ExtractType(mainSettingsModel)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData, beatmapLevel, gameplayModifiers, leftHanded, environmentEffectsFilterPreset, environmentIntensityReductionOptions, mainSettingsModel);
}
// Autogenerated method: BeatmapDataTransformHelper.AddTestBurstSlider
void GlobalNamespace::BeatmapDataTransformHelper::AddTestBurstSlider(float time, float duration, int headLineIndex, ::GlobalNamespace::NoteLineLayer headNoteLineLayer, ::GlobalNamespace::NoteCutDirection headCutDirection, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailNoteLineLayer, ::GlobalNamespace::NoteCutDirection tailCutDirection, int sliceCount, float squishAmount, ::GlobalNamespace::BeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::AddTestBurstSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "AddTestBurstSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headNoteLineLayer), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailNoteLineLayer), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(sliceCount), ::il2cpp_utils::ExtractType(squishAmount), ::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration, headLineIndex, headNoteLineLayer, headCutDirection, tailLineIndex, tailNoteLineLayer, tailCutDirection, sliceCount, squishAmount, beatmapData);
}
// Autogenerated method: BeatmapDataTransformHelper.AddTestSlider
void GlobalNamespace::BeatmapDataTransformHelper::AddTestSlider(float time, float duration, int headLineIndex, ::GlobalNamespace::NoteLineLayer headNoteLineLayer, ::GlobalNamespace::NoteCutDirection headCutDirection, float headControlPointLength, int tailLineIndex, ::GlobalNamespace::NoteLineLayer tailNoteLineLayer, ::GlobalNamespace::NoteCutDirection tailCutDirection, float tailControlPointLength, bool hasHeadNote, bool hasTailNote, ::GlobalNamespace::BeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::AddTestSlider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "AddTestSlider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(headLineIndex), ::il2cpp_utils::ExtractType(headNoteLineLayer), ::il2cpp_utils::ExtractType(headCutDirection), ::il2cpp_utils::ExtractType(headControlPointLength), ::il2cpp_utils::ExtractType(tailLineIndex), ::il2cpp_utils::ExtractType(tailNoteLineLayer), ::il2cpp_utils::ExtractType(tailCutDirection), ::il2cpp_utils::ExtractType(tailControlPointLength), ::il2cpp_utils::ExtractType(hasHeadNote), ::il2cpp_utils::ExtractType(hasTailNote), ::il2cpp_utils::ExtractType(beatmapData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, time, duration, headLineIndex, headNoteLineLayer, headCutDirection, headControlPointLength, tailLineIndex, tailNoteLineLayer, tailCutDirection, tailControlPointLength, hasHeadNote, hasTailNote, beatmapData);
}
// Autogenerated method: BeatmapDataTransformHelper.IsObstaclesMergingNeeded
bool GlobalNamespace::BeatmapDataTransformHelper::IsObstaclesMergingNeeded(::GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, bool screenDisplacementEffectsEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataTransformHelper::IsObstaclesMergingNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataTransformHelper", "IsObstaclesMergingNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(screenDisplacementEffectsEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapLevel, screenDisplacementEffectsEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataZenModeTransform
#include "GlobalNamespace/BeatmapDataZenModeTransform.hpp"
// Including type: BeatmapDataZenModeTransform/<>c
#include "GlobalNamespace/BeatmapDataZenModeTransform_--c.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapDataZenModeTransform.CreateTransformedData
::GlobalNamespace::IReadonlyBeatmapData* GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData(::GlobalNamespace::IReadonlyBeatmapData* beatmapData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::CreateTransformedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataZenModeTransform", "CreateTransformedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IReadonlyBeatmapData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, beatmapData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapDataZenModeTransform/<>c
#include "GlobalNamespace/BeatmapDataZenModeTransform_--c.hpp"
// Including type: BeatmapDataItem
#include "GlobalNamespace/BeatmapDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BeatmapDataZenModeTransform/<>c <>9
::GlobalNamespace::BeatmapDataZenModeTransform::$$c* GlobalNamespace::BeatmapDataZenModeTransform::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BeatmapDataZenModeTransform::$$c*>("", "BeatmapDataZenModeTransform/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BeatmapDataZenModeTransform/<>c <>9
void GlobalNamespace::BeatmapDataZenModeTransform::$$c::_set_$$9(::GlobalNamespace::BeatmapDataZenModeTransform::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BeatmapDataZenModeTransform/<>c", "<>9", value)));
}
// Autogenerated method: BeatmapDataZenModeTransform/<>c..cctor
void GlobalNamespace::BeatmapDataZenModeTransform::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapDataZenModeTransform/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BeatmapDataZenModeTransform/<>c.<CreateTransformedData>g__ProcessData|0_0
::GlobalNamespace::BeatmapDataItem* GlobalNamespace::BeatmapDataZenModeTransform::$$c::$CreateTransformedData$g__ProcessData_0_0(::GlobalNamespace::BeatmapDataItem* beatmapDataItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapDataZenModeTransform::$$c::<CreateTransformedData>g__ProcessData|0_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateTransformedData>g__ProcessData|0_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDataItem)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapDataItem*, false>(this, ___internal__method, beatmapDataItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectExecutionRating
#include "GlobalNamespace/BeatmapObjectExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Single <time>k__BackingField
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BeatmapObjectExecutionRating::dyn_$time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRating::dyn_$time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectExecutionRating.get_time
float GlobalNamespace::BeatmapObjectExecutionRating::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectExecutionRating::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BombExecutionRating/Rating <rating>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BombExecutionRating::Rating& GlobalNamespace::BombExecutionRating::dyn_$rating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::dyn_$rating$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rating>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombExecutionRating::Rating*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombExecutionRating.get_rating
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::get_rating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::get_rating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BombExecutionRating::Rating, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExecutionRating/Rating
#include "GlobalNamespace/BombExecutionRating.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating OK
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "OK"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating OK
void GlobalNamespace::BombExecutionRating::Rating::_set_OK(::GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public BombExecutionRating/Rating NotGood
::GlobalNamespace::BombExecutionRating::Rating GlobalNamespace::BombExecutionRating::Rating::_get_NotGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_get_NotGood");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::BombExecutionRating::Rating>("", "BombExecutionRating/Rating", "NotGood"));
}
// Autogenerated static field setter
// Set static field: static public BombExecutionRating/Rating NotGood
void GlobalNamespace::BombExecutionRating::Rating::_set_NotGood(::GlobalNamespace::BombExecutionRating::Rating value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::_set_NotGood");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BombExecutionRating/Rating", "NotGood", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BombExecutionRating::Rating::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExecutionRating::Rating::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BookmarksFoldersModel
#include "GlobalNamespace/BookmarksFoldersModel.hpp"
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] myFolders
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::BookmarksFoldersModel::dyn_myFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::dyn_myFolders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myFolders"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FileBrowserItem[] _bookmarksFolders
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FileBrowserItem*>& GlobalNamespace::BookmarksFoldersModel::dyn__bookmarksFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::dyn__bookmarksFolders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bookmarksFolders"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BookmarksFoldersModel.get_bookmarksFolders
::ArrayW<::GlobalNamespace::FileBrowserItem*> GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::get_bookmarksFolders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bookmarksFolders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::FileBrowserItem*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BookmarksFoldersModel/<>c
#include "GlobalNamespace/BookmarksFoldersModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly BookmarksFoldersModel/<>c <>9
::GlobalNamespace::BookmarksFoldersModel::$$c* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::BookmarksFoldersModel::$$c*>("", "BookmarksFoldersModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly BookmarksFoldersModel/<>c <>9
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9(::GlobalNamespace::BookmarksFoldersModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Environment/System.SpecialFolder,System.String> <>9__3_0
::System::Func_2<::System::Environment::SpecialFolder, ::StringW>* GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Environment::SpecialFolder, ::StringW>*>("", "BookmarksFoldersModel/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Environment/System.SpecialFolder,System.String> <>9__3_0
void GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0(::System::Func_2<::System::Environment::SpecialFolder, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "BookmarksFoldersModel/<>c", "<>9__3_0", value)));
}
// Autogenerated method: BookmarksFoldersModel/<>c..cctor
void GlobalNamespace::BookmarksFoldersModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BookmarksFoldersModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BookmarksFoldersModel/<>c.<get_bookmarksFolders>b__3_0
::StringW GlobalNamespace::BookmarksFoldersModel::$$c::$get_bookmarksFolders$b__3_0(::System::Environment::SpecialFolder specialFolder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BookmarksFoldersModel::$$c::<get_bookmarksFolders>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_bookmarksFolders>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(specialFolder)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, specialFolder);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomLevelLoader
#include "GlobalNamespace/CustomLevelLoader.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::CustomLevelLoader::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _defaultEnvironmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomLevelLoader::dyn__defaultEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO _defaultAllDirectionsEnvironmentInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentInfoSO*& GlobalNamespace::CustomLevelLoader::dyn__defaultAllDirectionsEnvironmentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultAllDirectionsEnvironmentInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAllDirectionsEnvironmentInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentInfoSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentsListSO _environmentSceneInfoCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentsListSO*& GlobalNamespace::CustomLevelLoader::dyn__environmentSceneInfoCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__environmentSceneInfoCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSceneInfoCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentsListSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _defaultPackCover
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomLevelLoader::dyn__defaultPackCover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__defaultPackCover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultPackCover"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _smallDefaultPackCover
[[deprecated("Use field access instead!")]] ::UnityEngine::Sprite*& GlobalNamespace::CustomLevelLoader::dyn__smallDefaultPackCover() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomLevelLoader::dyn__smallDefaultPackCover");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smallDefaultPackCover"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeeplinkManagerToDestinationRequestManagerAdapter
#include "GlobalNamespace/DeeplinkManagerToDestinationRequestManagerAdapter.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelsModel _beatmapLevelsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelsModel*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapLevelsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapLevelsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicCollectionSO*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__beatmapCharacteristicCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCharacteristicCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicCollectionSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MenuDestination> didSendMenuDestinationRequestEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::MenuDestination*>*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn_didSendMenuDestinationRequestEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn_didSendMenuDestinationRequestEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSendMenuDestinationRequestEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::MenuDestination*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuDestination _currentMenuDestinationRequest
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::dyn__currentMenuDestinationRequest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMenuDestinationRequest"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.get_currentMenuDestinationRequest
::GlobalNamespace::MenuDestination* GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.set_currentMenuDestinationRequest
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest(::GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Init
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init(::GlobalNamespace::IDeeplinkManager* deeplinkManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplinkManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deeplinkManager);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.Clear
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeeplinkManagerToDestinationRequestManagerAdapter.HandleDeeplinkManagerDidReceiveDeeplink
void GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink(::GlobalNamespace::Deeplink* deeplink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeeplinkManagerToDestinationRequestManagerAdapter::HandleDeeplinkManagerDidReceiveDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeeplinkManagerDidReceiveDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deeplink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDeeplinkManager
#include "GlobalNamespace/IDeeplinkManager.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDeeplinkManager.get_currentDeeplink
::GlobalNamespace::Deeplink* GlobalNamespace::IDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated method: IDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Destination
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Destination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Destination"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String LevelID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_LevelID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_LevelID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LevelID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String PackID
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_PackID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_PackID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PackID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Difficulty
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Difficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Difficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Difficulty"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Characteristic
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_Characteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_Characteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Characteristic"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MultiplayerLobbyCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_MultiplayerLobbyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerLobbyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerLobbyCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MultiplayerSecret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Deeplink::dyn_MultiplayerSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerSecret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 MultiplayerRoomId
[[deprecated("Use field access instead!")]] uint64_t& GlobalNamespace::Deeplink::dyn_MultiplayerRoomId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Deeplink::dyn_MultiplayerRoomId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerRoomId"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDestinationRequestManager.get_currentMenuDestinationRequest
::GlobalNamespace::MenuDestination* GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::get_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuDestination*, false>(this, ___internal__method);
}
// Autogenerated method: IDestinationRequestManager.set_currentMenuDestinationRequest
void GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest(::GlobalNamespace::MenuDestination* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::set_currentMenuDestinationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.add_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::add_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.remove_didSendMenuDestinationRequestEvent
void GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent(::System::Action_1<::GlobalNamespace::MenuDestination*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::remove_didSendMenuDestinationRequestEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSendMenuDestinationRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IDestinationRequestManager.Clear
void GlobalNamespace::IDestinationRequestManager::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDestinationRequestManager::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController
#include "GlobalNamespace/MainMenuDestinationRequestController.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: IDestinationRequestManager
#include "GlobalNamespace/IDestinationRequestManager.hpp"
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IDestinationRequestManager _destinationRequestManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDestinationRequestManager*& GlobalNamespace::MainMenuDestinationRequestController::dyn__destinationRequestManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__destinationRequestManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destinationRequestManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDestinationRequestManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuScenesTransitionSetupDataSO _menuScenesTransitionSetupData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuScenesTransitionSetupDataSO*& GlobalNamespace::MainMenuDestinationRequestController::dyn__menuScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__menuScenesTransitionSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuScenesTransitionSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameScenesManager*& GlobalNamespace::MainMenuDestinationRequestController::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::MainMenuDestinationRequestController::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController.Initialize
void GlobalNamespace::MainMenuDestinationRequestController::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.Dispose
void GlobalNamespace::MainMenuDestinationRequestController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleGameScenesManagerInstallEarlyBindings
void GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings(::GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, ::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::HandleGameScenesManagerInstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameScenesManagerInstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: MainMenuDestinationRequestController.HandleDestinationRequestManagerDidSendMenuDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest(::GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::HandleDestinationRequestManagerDidSendMenuDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDestinationRequestManagerDidSendMenuDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated method: MainMenuDestinationRequestController.ProcessDestinationRequest
void GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest(::GlobalNamespace::MenuDestination* menuDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::ProcessDestinationRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessDestinationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuDestination)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, menuDestination);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MenuDestination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::dyn_menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController/<>c__DisplayClass8_0.<ProcessDestinationRequest>b__0
void GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::$ProcessDestinationRequest$b__0(::Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0::<ProcessDestinationRequest>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessDestinationRequest>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8
#include "GlobalNamespace/MainMenuDestinationRequestController_-ProcessDestinationRequest-d__8.hpp"
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
// Including type: MainMenuDestinationRequestController/<>c__DisplayClass8_0
#include "GlobalNamespace/MainMenuDestinationRequestController_--c__DisplayClass8_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuDestination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuDestination*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_menuDestination");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuDestination**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MainMenuDestinationRequestController <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainMenuDestinationRequestController*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuDestinationRequestController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainMenuDestinationRequestController/<>c__DisplayClass8_0 <>8__1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0*& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$8__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainMenuDestinationRequestController::$$c__DisplayClass8_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.MoveNext
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuDestinationRequestController/<ProcessDestinationRequest>d__8.SetStateMachine
void GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainMenuDestinationRequestController::$ProcessDestinationRequest$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuDestination
#include "GlobalNamespace/MenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectSubMenuDestination
#include "GlobalNamespace/SelectSubMenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly SelectSubMenuDestination/Destination menuDestination
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SelectSubMenuDestination::Destination& GlobalNamespace::SelectSubMenuDestination::dyn_menuDestination() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::dyn_menuDestination");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "menuDestination"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SelectSubMenuDestination::Destination*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectSubMenuDestination/Destination
#include "GlobalNamespace/SelectSubMenuDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination MainMenu
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_MainMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_MainMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "MainMenu"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination MainMenu
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_MainMenu(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_MainMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "MainMenu", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Campaign
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Campaign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_Campaign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Campaign"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Campaign
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Campaign(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_Campaign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Campaign", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination SoloFreePlay
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_SoloFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_SoloFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "SoloFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination SoloFreePlay
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_SoloFreePlay(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_SoloFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "SoloFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination PartyFreePlay
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_PartyFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_PartyFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "PartyFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination PartyFreePlay
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_PartyFreePlay(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_PartyFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "PartyFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Settings
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_Settings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Settings"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Settings
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Settings(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_Settings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Settings", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Tutorial
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Tutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_Tutorial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Tutorial"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Tutorial
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Tutorial(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_Tutorial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Tutorial", value));
}
// Autogenerated static field getter
// Get static field: static public SelectSubMenuDestination/Destination Multiplayer
::GlobalNamespace::SelectSubMenuDestination::Destination GlobalNamespace::SelectSubMenuDestination::Destination::_get_Multiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_get_Multiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::SelectSubMenuDestination::Destination>("", "SelectSubMenuDestination/Destination", "Multiplayer"));
}
// Autogenerated static field setter
// Set static field: static public SelectSubMenuDestination/Destination Multiplayer
void GlobalNamespace::SelectSubMenuDestination::Destination::_set_Multiplayer(::GlobalNamespace::SelectSubMenuDestination::Destination value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::_set_Multiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectSubMenuDestination/Destination", "Multiplayer", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SelectSubMenuDestination::Destination::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectSubMenuDestination::Destination::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelPackDestination
#include "GlobalNamespace/SelectLevelPackDestination.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelPack beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::SelectLevelPackDestination::dyn_beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLevelPackDestination::dyn_beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelDestination
#include "GlobalNamespace/SelectLevelDestination.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelPack beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::SelectLevelDestination::dyn_beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLevelDestination::dyn_beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::SelectLevelDestination::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLevelDestination::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::SelectLevelDestination::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLevelDestination::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::SelectLevelDestination::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectLevelDestination::dyn_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String lobbySecret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SelectMultiplayerLobbyDestination::dyn_lobbySecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectMultiplayerLobbyDestination::dyn_lobbySecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbySecret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String lobbyCode
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::SelectMultiplayerLobbyDestination::dyn_lobbyCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SelectMultiplayerLobbyDestination::dyn_lobbyCode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lobbyCode"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RunLevelMenuDestination
#include "GlobalNamespace/RunLevelMenuDestination.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly IBeatmapLevelPack beatmapLevelPack
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IBeatmapLevelPack*& GlobalNamespace::RunLevelMenuDestination::dyn_beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_beatmapLevelPack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapLevelPack"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBeatmapLevelPack**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IPreviewBeatmapLevel previewBeatmapLevel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IPreviewBeatmapLevel*& GlobalNamespace::RunLevelMenuDestination::dyn_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_previewBeatmapLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "previewBeatmapLevel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IPreviewBeatmapLevel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficulty beatmapDifficulty
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficulty& GlobalNamespace::RunLevelMenuDestination::dyn_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_beatmapDifficulty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapDifficulty"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficulty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapCharacteristicSO beatmapCharacteristic
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapCharacteristicSO*& GlobalNamespace::RunLevelMenuDestination::dyn_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_beatmapCharacteristic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapCharacteristic"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCharacteristicSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean practice
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RunLevelMenuDestination::dyn_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_practice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "practice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single startSongTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RunLevelMenuDestination::dyn_startSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_startSongTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startSongTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single songSpeedMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::RunLevelMenuDestination::dyn_songSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_songSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean overrideEnvironments
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::RunLevelMenuDestination::dyn_overrideEnvironments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_overrideEnvironments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideEnvironments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String environmentType
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RunLevelMenuDestination::dyn_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String environmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::RunLevelMenuDestination::dyn_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RunLevelMenuDestination::dyn_environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeeplinkManager
#include "GlobalNamespace/OculusDeeplinkManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Deeplink
#include "GlobalNamespace/Deeplink.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.GroupPresenceJoinIntent
#include "Oculus/Platform/Models/GroupPresenceJoinIntent.hpp"
// Including type: Oculus.Platform.Models.LaunchDetails
#include "Oculus/Platform/Models/LaunchDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Deeplink> didReceiveDeeplinkEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::Deeplink*>*& GlobalNamespace::OculusDeeplinkManager::dyn_didReceiveDeeplinkEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::dyn_didReceiveDeeplinkEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didReceiveDeeplinkEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::Deeplink*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Deeplink _currentDeeplink
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Deeplink*& GlobalNamespace::OculusDeeplinkManager::dyn__currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::dyn__currentDeeplink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentDeeplink"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Deeplink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _oculusPlatformWasInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusDeeplinkManager::dyn__oculusPlatformWasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::dyn__oculusPlatformWasInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusPlatformWasInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeeplinkManager.get_currentDeeplink
::GlobalNamespace::Deeplink* GlobalNamespace::OculusDeeplinkManager::get_currentDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::get_currentDeeplink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::Deeplink*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.add_didReceiveDeeplinkEvent
void GlobalNamespace::OculusDeeplinkManager::add_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::add_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusDeeplinkManager.remove_didReceiveDeeplinkEvent
void GlobalNamespace::OculusDeeplinkManager::remove_didReceiveDeeplinkEvent(::System::Action_1<::GlobalNamespace::Deeplink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::remove_didReceiveDeeplinkEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didReceiveDeeplinkEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusDeeplinkManager.Init
void GlobalNamespace::OculusDeeplinkManager::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.OculusPlatformWasInitialized
void GlobalNamespace::OculusDeeplinkManager::OculusPlatformWasInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::OculusPlatformWasInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OculusPlatformWasInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeeplinkManager.SetJoinIntentReceivedNotificationCallback
void GlobalNamespace::OculusDeeplinkManager::SetJoinIntentReceivedNotificationCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::GroupPresenceJoinIntent*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::SetJoinIntentReceivedNotificationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinIntentReceivedNotificationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusDeeplinkManager.UpdateDeeplinkMessage
void GlobalNamespace::OculusDeeplinkManager::UpdateDeeplinkMessage(::Oculus::Platform::Models::GroupPresenceJoinIntent* joinIntent, ::Oculus::Platform::Models::LaunchDetails* launchDetails) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::UpdateDeeplinkMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDeeplinkMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(joinIntent), ::il2cpp_utils::ExtractType(launchDetails)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, joinIntent, launchDetails);
}
// Autogenerated method: OculusDeeplinkManager.IsAtLeastOneFieldPopulated
bool GlobalNamespace::OculusDeeplinkManager::IsAtLeastOneFieldPopulated(::GlobalNamespace::Deeplink* deeplink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::IsAtLeastOneFieldPopulated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsAtLeastOneFieldPopulated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deeplink)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, deeplink);
}
// Autogenerated method: OculusDeeplinkManager.Log
void GlobalNamespace::OculusDeeplinkManager::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeeplinkManager::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusDeeplinkManager", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelModel
#include "GlobalNamespace/DlcPromoPanelModel.hpp"
// Including type: DlcPromoPanelModel/<UpdateNotOwnedPacksAsync>d__17
#include "GlobalNamespace/DlcPromoPanelModel_-UpdateNotOwnedPacksAsync-d__17.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::DlcPromoPanelModel::dyn__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__additionalContentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additionalContentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::DlcPromoPanelModel::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DlcPromoPanelDataSO _dlcPromoPanelData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelDataSO*& GlobalNamespace::DlcPromoPanelModel::dyn__dlcPromoPanelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__dlcPromoPanelData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dlcPromoPanelData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerDataModel*& GlobalNamespace::DlcPromoPanelModel::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO/MusicPackPromoInfo[] _notOwnedMusicPackPromoInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>& GlobalNamespace::DlcPromoPanelModel::dyn__notOwnedMusicPackPromoInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__notOwnedMusicPackPromoInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_notOwnedMusicPackPromoInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updatingNotOwnedPacks
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DlcPromoPanelModel::dyn__updatingNotOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__updatingNotOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updatingNotOwnedPacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DlcPromoPanelModel::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Random _random
[[deprecated("Use field access instead!")]] ::System::Random*& GlobalNamespace::DlcPromoPanelModel::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<::System::Random**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelModel.InitAfterPlatformWasInitialized
void GlobalNamespace::DlcPromoPanelModel::InitAfterPlatformWasInitialized(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::InitAfterPlatformWasInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAfterPlatformWasInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: DlcPromoPanelModel.GetPackDataForMainMenuPromoBanner
::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo* GlobalNamespace::DlcPromoPanelModel::GetPackDataForMainMenuPromoBanner(ByRef<bool> owned) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::GetPackDataForMainMenuPromoBanner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackDataForMainMenuPromoBanner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*, false>(this, ___internal__method, byref(owned));
}
// Autogenerated method: DlcPromoPanelModel.MainMenuDlcPromoBannerWasShown
void GlobalNamespace::DlcPromoPanelModel::MainMenuDlcPromoBannerWasShown(::GlobalNamespace::IBeatmapLevelPack* promoPack, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::MainMenuDlcPromoBannerWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainMenuDlcPromoBannerWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promoPack), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, promoPack, customText);
}
// Autogenerated method: DlcPromoPanelModel.MainMenuDlcPromoBannerWasPressed
void GlobalNamespace::DlcPromoPanelModel::MainMenuDlcPromoBannerWasPressed(::GlobalNamespace::IBeatmapLevelPack* promoPack, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::MainMenuDlcPromoBannerWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MainMenuDlcPromoBannerWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(promoPack), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, promoPack, customText);
}
// Autogenerated method: DlcPromoPanelModel.BuyLevelButtonWasPressed
void GlobalNamespace::DlcPromoPanelModel::BuyLevelButtonWasPressed(::GlobalNamespace::IPreviewBeatmapLevel* level, ::StringW page, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::BuyLevelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, page, customText);
}
// Autogenerated method: DlcPromoPanelModel.BuyLevelButtonWasShown
void GlobalNamespace::DlcPromoPanelModel::BuyLevelButtonWasShown(::GlobalNamespace::IPreviewBeatmapLevel* level, ::StringW page, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::BuyLevelButtonWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevelButtonWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, page, customText);
}
// Autogenerated method: DlcPromoPanelModel.BuyPackButtonWasPressed
void GlobalNamespace::DlcPromoPanelModel::BuyPackButtonWasPressed(::GlobalNamespace::IBeatmapLevelPack* pack, ::StringW page, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::BuyPackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pack, page, customText);
}
// Autogenerated method: DlcPromoPanelModel.BuyPackButtonWasShown
void GlobalNamespace::DlcPromoPanelModel::BuyPackButtonWasShown(::GlobalNamespace::IBeatmapLevelPack* pack, ::StringW page, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::BuyPackButtonWasShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pack, page, customText);
}
// Autogenerated method: DlcPromoPanelModel.GetExperimentEventData
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* GlobalNamespace::DlcPromoPanelModel::GetExperimentEventData(::StringW itemId, ::StringW page, ::StringW customText) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::GetExperimentEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExperimentEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemId), ::il2cpp_utils::ExtractType(page), ::il2cpp_utils::ExtractType(customText)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, itemId, page, customText);
}
// Autogenerated method: DlcPromoPanelModel.UpdateNotOwnedPacksAsync
void GlobalNamespace::DlcPromoPanelModel::UpdateNotOwnedPacksAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::UpdateNotOwnedPacksAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNotOwnedPacksAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelModel.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::DlcPromoPanelModel::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DlcPromoPanelModel/<UpdateNotOwnedPacksAsync>d__17
#include "GlobalNamespace/DlcPromoPanelModel_-UpdateNotOwnedPacksAsync-d__17.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: DlcPromoPanelDataSO/MusicPackPromoInfo
#include "GlobalNamespace/DlcPromoPanelDataSO_MusicPackPromoInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DlcPromoPanelModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelModel*& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<DlcPromoPanelDataSO/MusicPackPromoInfo> <newNotOwnedMusicPackPromoInfos>5__2
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>*& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$newNotOwnedMusicPackPromoInfos$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$newNotOwnedMusicPackPromoInfos$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<newNotOwnedMusicPackPromoInfos>5__2"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO/MusicPackPromoInfo[] <>7__wrap2
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$7__wrap2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap2"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$7__wrap3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DlcPromoPanelDataSO/MusicPackPromoInfo <packData>5__5
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo*& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$packData$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$packData$5__5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<packData>5__5"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DlcPromoPanelDataSO::MusicPackPromoInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DlcPromoPanelModel/<UpdateNotOwnedPacksAsync>d__17.MoveNext
void GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DlcPromoPanelModel/<UpdateNotOwnedPacksAsync>d__17.SetStateMachine
void GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DlcPromoPanelModel::$UpdateNotOwnedPacksAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: DefaultEnvironmentEvents/BasicBeatmapEvent
#include "GlobalNamespace/DefaultEnvironmentEvents_BasicBeatmapEvent.hpp"
// Including type: DefaultEnvironmentEvents/LightGroupDistribution
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupDistribution.hpp"
// Including type: DefaultEnvironmentEvents/LightGroupFiltering
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupFiltering.hpp"
// Including type: DefaultEnvironmentEvents/LightGroupEvent
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/BasicBeatmapEvent[] _basicBeatmapEvents
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent*>& GlobalNamespace::DefaultEnvironmentEvents::dyn__basicBeatmapEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::dyn__basicBeatmapEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_basicBeatmapEvents"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupEvent[] _lightGroupEvents
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent*>& GlobalNamespace::DefaultEnvironmentEvents::dyn__lightGroupEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::dyn__lightGroupEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroupEvents"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultEnvironmentEvents.get_basicBeatmapEvents
::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent*> GlobalNamespace::DefaultEnvironmentEvents::get_basicBeatmapEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::get_basicBeatmapEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_basicBeatmapEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent*>, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents.get_lightGroupEvents
::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent*> GlobalNamespace::DefaultEnvironmentEvents::get_lightGroupEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::get_lightGroupEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroupEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent*>, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents.get_isEmpty
bool GlobalNamespace::DefaultEnvironmentEvents::get_isEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::get_isEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEvents/BasicBeatmapEvent
#include "GlobalNamespace/DefaultEnvironmentEvents_BasicBeatmapEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _eventType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__eventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _value
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _floatValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::dyn__floatValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultEnvironmentEvents/BasicBeatmapEvent.get_eventType
::GlobalNamespace::BasicBeatmapEventType GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_eventType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BasicBeatmapEventType, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/BasicBeatmapEvent.get_value
int GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/BasicBeatmapEvent.get_floatValue
float GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_floatValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::BasicBeatmapEvent::get_floatValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floatValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEvents/LightGroupDistribution
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupDistribution.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useDistribution
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__useDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__useDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useDistribution"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _distributionParam
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__distributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__distributionParam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distributionParam"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapEventDataBox/DistributionParamType _distributionParamType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapEventDataBox::DistributionParamType& GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__distributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::dyn__distributionParamType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_distributionParamType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupDistribution.get_useDistribution
bool GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_useDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_useDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupDistribution.get_distributionParam
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distributionParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupDistribution.get_distributionParamType
::GlobalNamespace::BeatmapEventDataBox::DistributionParamType GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParamType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution::get_distributionParamType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_distributionParamType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapEventDataBox::DistributionParamType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEvents/LightGroupFiltering
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupFiltering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useFiltering
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__useFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__useFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useFiltering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IndexFilter/IndexFilterRandomType _randomType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IndexFilter::IndexFilterRandomType& GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__randomType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__randomType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IndexFilter::IndexFilterRandomType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _limit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IndexFilter/IndexFilterLimitAlsoAffectType _alsoAffectType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IndexFilter::IndexFilterLimitAlsoAffectType& GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__alsoAffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__alsoAffectType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alsoAffectType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IndexFilter::IndexFilterLimitAlsoAffectType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _seed
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::dyn__seed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_seed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupFiltering.get_useFiltering
bool GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_useFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_useFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupFiltering.get_randomType
::GlobalNamespace::IndexFilter::IndexFilterRandomType GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_randomType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_randomType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_randomType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IndexFilter::IndexFilterRandomType, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupFiltering.get_limit
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_limit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_limit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupFiltering.get_alsoAffectType
::GlobalNamespace::IndexFilter::IndexFilterLimitAlsoAffectType GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_alsoAffectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_alsoAffectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alsoAffectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IndexFilter::IndexFilterLimitAlsoAffectType, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupFiltering.get_seed
int GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_seed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering::get_seed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_seed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DefaultEnvironmentEvents/LightGroupEvent
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupEvent.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: DefaultEnvironmentEvents/LightGroupDistribution
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupDistribution.hpp"
// Including type: DefaultEnvironmentEvents/LightGroupFiltering
#include "GlobalNamespace/DefaultEnvironmentEvents_LightGroupFiltering.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LightGroupSO _lightGroup
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LightGroupSO*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__lightGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__lightGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightGroupSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentColorType _environmentColorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentColorType& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__environmentColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__environmentColorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _brightness
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightness");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightness"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _brightnessDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightnessDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightnessDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightnessDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupFiltering _brightnessFiltering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightnessFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__brightnessFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_brightnessFiltering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _rotationXDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationXDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationXDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationXDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _rotationYDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationYDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationYDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationYDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _rotationZDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationZDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationZDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationZDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupFiltering _rotationFiltering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__rotationFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFiltering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _translationX
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationX"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _translationY
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _translationZ
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _translationXDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationXDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationXDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationXDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _translationYDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationYDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationYDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationYDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupDistribution _translationZDistribution
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationZDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationZDistribution");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationZDistribution"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents/LightGroupFiltering _translationFiltering
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*& GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::dyn__translationFiltering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_translationFiltering"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_lightGroup
::GlobalNamespace::LightGroupSO* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_lightGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_lightGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightGroupSO*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_environmentColorType
::GlobalNamespace::EnvironmentColorType GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_environmentColorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_environmentColorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentColorType, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_brightness
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_brightnessDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightnessDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightnessDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightnessDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_brightnessFiltering
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightnessFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_brightnessFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_brightnessFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationX
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationY
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationZ
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationXDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationXDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationXDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationXDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationYDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationYDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationYDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationYDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationZDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationZDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationZDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationZDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_rotationFiltering
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_rotationFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationX
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationY
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationZ
float GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationXDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationXDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationXDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationXDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationYDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationYDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationYDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationYDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationZDistribution
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationZDistribution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationZDistribution");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationZDistribution", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupDistribution*, false>(this, ___internal__method);
}
// Autogenerated method: DefaultEnvironmentEvents/LightGroupEvent.get_translationFiltering
::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering* GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationFiltering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DefaultEnvironmentEvents::LightGroupEvent::get_translationFiltering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_translationFiltering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents::LightGroupFiltering*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: EnvironmentSizeData
#include "GlobalNamespace/EnvironmentSizeData.hpp"
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
// Including type: DefaultEnvironmentEvents
#include "GlobalNamespace/DefaultEnvironmentEvents.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String kLightGroupSubDir
::StringW GlobalNamespace::EnvironmentInfoSO::_get_kLightGroupSubDir() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::_get_kLightGroupSubDir");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "EnvironmentInfoSO", "kLightGroupSubDir"));
}
// Autogenerated static field setter
// Set static field: static public System.String kLightGroupSubDir
void GlobalNamespace::EnvironmentInfoSO::_set_kLightGroupSubDir(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::_set_kLightGroupSubDir");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentInfoSO", "kLightGroupSubDir", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnvironmentInfoSO::dyn__environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _colorScheme
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::EnvironmentInfoSO::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SceneInfo _sceneInfo
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SceneInfo*& GlobalNamespace::EnvironmentInfoSO::dyn__sceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__sceneInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneInfo"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SceneInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _serializedName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnvironmentInfoSO::dyn__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__serializedName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serializedName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _environmentAssetDirectory
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnvironmentInfoSO::dyn__environmentAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentAssetDirectory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentAssetDirectory"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentTypeSO _environmentType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentTypeSO*& GlobalNamespace::EnvironmentInfoSO::dyn__environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData _environmentSizeData
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData*& GlobalNamespace::EnvironmentInfoSO::dyn__environmentSizeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentSizeData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSizeData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentIntensityReductionOptions _environmentIntensityReductionOptions
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentIntensityReductionOptions*& GlobalNamespace::EnvironmentInfoSO::dyn__environmentIntensityReductionOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentIntensityReductionOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentIntensityReductionOptions"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentIntensityReductionOptions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _environmentKeywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::EnvironmentInfoSO::dyn__environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__environmentKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentKeywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentLightGroups _lightGroups
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentLightGroups*& GlobalNamespace::EnvironmentInfoSO::dyn__lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__lightGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroups"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentLightGroups**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DefaultEnvironmentEvents _defaultEnvironmentEvents
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DefaultEnvironmentEvents*& GlobalNamespace::EnvironmentInfoSO::dyn__defaultEnvironmentEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::dyn__defaultEnvironmentEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultEnvironmentEvents"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DefaultEnvironmentEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentInfoSO.get_sceneInfo
::GlobalNamespace::SceneInfo* GlobalNamespace::EnvironmentInfoSO::get_sceneInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_sceneInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sceneInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SceneInfo*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentName
::StringW GlobalNamespace::EnvironmentInfoSO::get_environmentName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_colorScheme
::GlobalNamespace::ColorSchemeSO* GlobalNamespace::EnvironmentInfoSO::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_serializedName
::StringW GlobalNamespace::EnvironmentInfoSO::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentAssetDirectory
::StringW GlobalNamespace::EnvironmentInfoSO::get_environmentAssetDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentAssetDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentAssetDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentType
::GlobalNamespace::EnvironmentTypeSO* GlobalNamespace::EnvironmentInfoSO::get_environmentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentTypeSO*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentSizeData
::GlobalNamespace::EnvironmentSizeData* GlobalNamespace::EnvironmentInfoSO::get_environmentSizeData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentSizeData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentSizeData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentIntensityReductionOptions
::GlobalNamespace::EnvironmentIntensityReductionOptions* GlobalNamespace::EnvironmentInfoSO::get_environmentIntensityReductionOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentIntensityReductionOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentIntensityReductionOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentIntensityReductionOptions*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_environmentKeywords
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::EnvironmentInfoSO::get_environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_environmentKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_lightGroups
::GlobalNamespace::EnvironmentLightGroups* GlobalNamespace::EnvironmentInfoSO::get_lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_lightGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentLightGroups*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentInfoSO.get_defaultEnvironmentEvents
::GlobalNamespace::DefaultEnvironmentEvents* GlobalNamespace::EnvironmentInfoSO::get_defaultEnvironmentEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentInfoSO::get_defaultEnvironmentEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultEnvironmentEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DefaultEnvironmentEvents*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentIntensityReductionOptions/CompressExpandReductionType _compressExpand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType& GlobalNamespace::EnvironmentIntensityReductionOptions::dyn__compressExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::dyn__compressExpand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_compressExpand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentIntensityReductionOptions/RotateRingsReductionType _rotateRings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType& GlobalNamespace::EnvironmentIntensityReductionOptions::dyn__rotateRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::dyn__rotateRings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotateRings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentIntensityReductionOptions.get_compressExpand
::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::get_compressExpand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::get_compressExpand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_compressExpand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentIntensityReductionOptions.get_rotateRings
::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::get_rotateRings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::get_rotateRings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotateRings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions/CompressExpandReductionType
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType Keep
::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_Keep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_Keep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType>("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "Keep"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType Keep
void GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_Keep(::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_Keep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "Keep", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType RemoveWithStrobeFilter
::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_RemoveWithStrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_get_RemoveWithStrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType>("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "RemoveWithStrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/CompressExpandReductionType RemoveWithStrobeFilter
void GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_RemoveWithStrobeFilter(::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::_set_RemoveWithStrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/CompressExpandReductionType", "RemoveWithStrobeFilter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::CompressExpandReductionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentIntensityReductionOptions/RotateRingsReductionType
#include "GlobalNamespace/EnvironmentIntensityReductionOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType Keep
::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_Keep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_Keep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType>("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "Keep"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType Keep
void GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_Keep(::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_Keep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "Keep", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType RemoveWithStrobeFilter
::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_RemoveWithStrobeFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_get_RemoveWithStrobeFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType>("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "RemoveWithStrobeFilter"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentIntensityReductionOptions/RotateRingsReductionType RemoveWithStrobeFilter
void GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_RemoveWithStrobeFilter(::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::_set_RemoveWithStrobeFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentIntensityReductionOptions/RotateRingsReductionType", "RemoveWithStrobeFilter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentIntensityReductionOptions::RotateRingsReductionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentKeywords
#include "GlobalNamespace/EnvironmentKeywords.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.IReadOnlyList`1<System.String> _environmentKeywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IReadOnlyList_1<::StringW>*& GlobalNamespace::EnvironmentKeywords::dyn__environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentKeywords::dyn__environmentKeywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentKeywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _environmentKeywordsSet
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::EnvironmentKeywords::dyn__environmentKeywordsSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentKeywords::dyn__environmentKeywordsSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentKeywordsSet"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentKeywords.get_environmentKeywords
::System::Collections::Generic::IReadOnlyList_1<::StringW>* GlobalNamespace::EnvironmentKeywords::get_environmentKeywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentKeywords::get_environmentKeywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentKeywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentKeywords.HasKeyword
bool GlobalNamespace::EnvironmentKeywords::HasKeyword(::StringW keyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentKeywords::HasKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyword)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keyword);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentLightGroups
#include "GlobalNamespace/EnvironmentLightGroups.hpp"
// Including type: EnvironmentLightGroups/<>c
#include "GlobalNamespace/EnvironmentLightGroups_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LightGroupSO> _lightGroupSOList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>*& GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSOList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSOList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroupSOList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,LightGroupSO> _lightGroupSODict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightGroupSO*>*& GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSODict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSODict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroupSODict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::LightGroupSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<LightGroupSO> _lightGroupSOListForLightGroupDataDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>*& GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSOListForLightGroupDataDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::dyn__lightGroupSOListForLightGroupDataDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroupSOListForLightGroupDataDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentLightGroups.get_lightGroupSOList
::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>* GlobalNamespace::EnvironmentLightGroups::get_lightGroupSOList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::get_lightGroupSOList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroupSOList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::LightGroupSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentLightGroups.GetDataForGroup
::GlobalNamespace::LightGroupSO* GlobalNamespace::EnvironmentLightGroups::GetDataForGroup(int groupId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::GetDataForGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDataForGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(groupId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightGroupSO*, false>(this, ___internal__method, groupId);
}
// Autogenerated method: EnvironmentLightGroups.Sort
void GlobalNamespace::EnvironmentLightGroups::Sort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::Sort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentLightGroups/<>c
#include "GlobalNamespace/EnvironmentLightGroups_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: LightGroupSO
#include "GlobalNamespace/LightGroupSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly EnvironmentLightGroups/<>c <>9
::GlobalNamespace::EnvironmentLightGroups::$$c* GlobalNamespace::EnvironmentLightGroups::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentLightGroups::$$c*>("", "EnvironmentLightGroups/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly EnvironmentLightGroups/<>c <>9
void GlobalNamespace::EnvironmentLightGroups::$$c::_set_$$9(::GlobalNamespace::EnvironmentLightGroups::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentLightGroups/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<LightGroupSO,System.Int32> <>9__6_0
::System::Func_2<::GlobalNamespace::LightGroupSO*, int>* GlobalNamespace::EnvironmentLightGroups::$$c::_get_$$9__6_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::_get_$$9__6_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::LightGroupSO*, int>*>("", "EnvironmentLightGroups/<>c", "<>9__6_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<LightGroupSO,System.Int32> <>9__6_0
void GlobalNamespace::EnvironmentLightGroups::$$c::_set_$$9__6_0(::System::Func_2<::GlobalNamespace::LightGroupSO*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::_set_$$9__6_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentLightGroups/<>c", "<>9__6_0", value)));
}
// Autogenerated method: EnvironmentLightGroups/<>c..cctor
void GlobalNamespace::EnvironmentLightGroups::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentLightGroups/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentLightGroups/<>c.<Sort>b__6_0
int GlobalNamespace::EnvironmentLightGroups::$$c::$Sort$b__6_0(::GlobalNamespace::LightGroupSO* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightGroups::$$c::<Sort>b__6_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Sort>b__6_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/FloorType _floorType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::FloorType& GlobalNamespace::EnvironmentSizeData::dyn__floorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__floorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::FloorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/CeilingType _ceilingType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::CeilingType& GlobalNamespace::EnvironmentSizeData::dyn__ceilingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__ceilingType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ceilingType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::CeilingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EnvironmentSizeData/TrackLaneType _trackLaneType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EnvironmentSizeData::TrackLaneType& GlobalNamespace::EnvironmentSizeData::dyn__trackLaneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::dyn__trackLaneType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSizeData::TrackLaneType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentSizeData.get_floorType
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::get_floorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_floorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_floorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::FloorType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSizeData.get_ceilingType
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::get_ceilingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_ceilingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ceilingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::CeilingType, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSizeData.get_trackLaneType
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::get_trackLaneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::get_trackLaneType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackLaneType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentSizeData::TrackLaneType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/FloorType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType NoFloor
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_get_NoFloor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "NoFloor"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType NoFloor
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor(::GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_set_NoFloor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "NoFloor", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/FloorType CloseTo0
::GlobalNamespace::EnvironmentSizeData::FloorType GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_get_CloseTo0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::FloorType>("", "EnvironmentSizeData/FloorType", "CloseTo0"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/FloorType CloseTo0
void GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0(::GlobalNamespace::EnvironmentSizeData::FloorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::_set_CloseTo0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/FloorType", "CloseTo0", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::FloorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::FloorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/CeilingType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType NoCeiling
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_get_NoCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "NoCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType NoCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling(::GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_set_NoCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "NoCeiling", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/CeilingType LowCeiling
::GlobalNamespace::EnvironmentSizeData::CeilingType GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_get_LowCeiling");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::CeilingType>("", "EnvironmentSizeData/CeilingType", "LowCeiling"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/CeilingType LowCeiling
void GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling(::GlobalNamespace::EnvironmentSizeData::CeilingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::_set_LowCeiling");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/CeilingType", "LowCeiling", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::CeilingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::CeilingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSizeData/TrackLaneType
#include "GlobalNamespace/EnvironmentSizeData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/TrackLaneType None
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::TrackLaneType>("", "EnvironmentSizeData/TrackLaneType", "None"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/TrackLaneType None
void GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_None(::GlobalNamespace::EnvironmentSizeData::TrackLaneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/TrackLaneType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public EnvironmentSizeData/TrackLaneType Normal
::GlobalNamespace::EnvironmentSizeData::TrackLaneType GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EnvironmentSizeData::TrackLaneType>("", "EnvironmentSizeData/TrackLaneType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public EnvironmentSizeData/TrackLaneType Normal
void GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_Normal(::GlobalNamespace::EnvironmentSizeData::TrackLaneType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSizeData/TrackLaneType", "Normal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EnvironmentSizeData::TrackLaneType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSizeData::TrackLaneType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _typeNameLocalizationKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::EnvironmentTypeSO::dyn__typeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentTypeSO::dyn__typeNameLocalizationKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_typeNameLocalizationKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentTypeSO.get_typeNameLocalizationKey
::StringW GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentTypeSO::get_typeNameLocalizationKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_typeNameLocalizationKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private EnvironmentInfoSO[] _environmentInfos
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>& GlobalNamespace::EnvironmentsListSO::dyn__environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::dyn__environmentInfos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentInfos"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentsListSO.get_environmentInfos
::ArrayW<::GlobalNamespace::EnvironmentInfoSO*> GlobalNamespace::EnvironmentsListSO::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::EnvironmentInfoSO*>, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentsListSO.GetEnvironmentInfoBySerializedName
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetEnvironmentInfoBySerializedName(::StringW environmentSerializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetEnvironmentInfoBySerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvironmentInfoBySerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentSerializedName)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentSerializedName);
}
// Autogenerated method: EnvironmentsListSO.GetAllEnvironmentInfosWithType
::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetAllEnvironmentInfosWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllEnvironmentInfosWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method, environmentType);
}
// Autogenerated method: EnvironmentsListSO.GetFirstEnvironmentInfoWithType
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetFirstEnvironmentInfoWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstEnvironmentInfoWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated method: EnvironmentsListSO.GetLastEnvironmentInfoWithType
::GlobalNamespace::EnvironmentInfoSO* GlobalNamespace::EnvironmentsListSO::GetLastEnvironmentInfoWithType(::GlobalNamespace::EnvironmentTypeSO* environmentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentsListSO::GetLastEnvironmentInfoWithType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastEnvironmentInfoWithType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(environmentType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EnvironmentInfoSO*, false>(this, ___internal__method, environmentType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongSpeedData
#include "GlobalNamespace/SongSpeedData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single speedMul
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SongSpeedData::dyn_speedMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongSpeedData::dyn_speedMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IExperimentModel
#include "GlobalNamespace/IExperimentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: IExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::IExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IExperimentData.get_experimentPlatformKey
::StringW GlobalNamespace::IExperimentData::get_experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IExperimentData::get_experimentPlatformKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentPlatformKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoExperimentModel
#include "GlobalNamespace/NoExperimentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::NoExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: NoExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::NoExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel
#include "GlobalNamespace/OculusDeviceConfigExperimentModel.hpp"
// Including type: OculusDeviceConfigExperimentModel/<Initialize>d__6
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-Initialize-d__6.hpp"
// Including type: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-GetBooleanAsync-d__7.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IExperimentData
#include "GlobalNamespace/IExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kInitTimeoutMs
int GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kInitTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kInitTimeoutMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusDeviceConfigExperimentModel", "kInitTimeoutMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kInitTimeoutMs
void GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kInitTimeoutMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kInitTimeoutMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfigExperimentModel", "kInitTimeoutMs", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kIsEmployeeKey
::StringW GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kIsEmployeeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_get_kIsEmployeeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusDeviceConfigExperimentModel", "kIsEmployeeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kIsEmployeeKey
void GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kIsEmployeeKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::_set_kIsEmployeeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusDeviceConfigExperimentModel", "kIsEmployeeKey", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task _initializationTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& GlobalNamespace::OculusDeviceConfigExperimentModel::dyn__initializationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::dyn__initializationTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializationTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.IsEmployee
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::IsEmployee() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::IsEmployee");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmployee", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.IsInTest
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::IsInTest(::GlobalNamespace::IExperimentData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::IsInTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, data);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.Initialize
::System::Threading::Tasks::Task* GlobalNamespace::OculusDeviceConfigExperimentModel::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel.GetBooleanAsync
::System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusDeviceConfigExperimentModel::GetBooleanAsync(::StringW key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::GetBooleanAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBooleanAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel/<Initialize>d__6
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-Initialize-d__6.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Diagnostics.Stopwatch <stopwatch>5__2
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$stopwatch$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$stopwatch$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<stopwatch>5__2"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<Initialize>d__6.MoveNext
void GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<Initialize>d__6.SetStateMachine
void GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$Initialize$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7
#include "GlobalNamespace/OculusDeviceConfigExperimentModel_-GetBooleanAsync-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusDeviceConfigExperimentModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusDeviceConfigExperimentModel*& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusDeviceConfigExperimentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String key
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_key");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "key"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7.MoveNext
void GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusDeviceConfigExperimentModel/<GetBooleanAsync>d__7.SetStateMachine
void GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusDeviceConfigExperimentModel::$GetBooleanAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment
#include "GlobalNamespace/OculusTestExperiment.hpp"
// Including type: OculusTestExperiment/ExperimentData
#include "GlobalNamespace/OculusTestExperiment_ExperimentData.hpp"
// Including type: OculusTestExperiment/<Init>d__3
#include "GlobalNamespace/OculusTestExperiment_-Init-d__3.hpp"
// Including type: IExperimentModel
#include "GlobalNamespace/IExperimentModel.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kIsInTest1Key
::StringW GlobalNamespace::OculusTestExperiment::_get_kIsInTest1Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::_get_kIsInTest1Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusTestExperiment", "kIsInTest1Key"));
}
// Autogenerated static field setter
// Set static field: static private System.String kIsInTest1Key
void GlobalNamespace::OculusTestExperiment::_set_kIsInTest1Key(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::_set_kIsInTest1Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusTestExperiment", "kIsInTest1Key", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IExperimentModel _experimentModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IExperimentModel*& GlobalNamespace::OculusTestExperiment::dyn__experimentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::dyn__experimentModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IExperimentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment.Init
void GlobalNamespace::OculusTestExperiment::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment/ExperimentData
#include "GlobalNamespace/OculusTestExperiment_ExperimentData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _experimentPlatformKey
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::OculusTestExperiment::ExperimentData::dyn__experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::ExperimentData::dyn__experimentPlatformKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_experimentPlatformKey"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment/ExperimentData.get_experimentPlatformKey
::StringW GlobalNamespace::OculusTestExperiment::ExperimentData::get_experimentPlatformKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::ExperimentData::get_experimentPlatformKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_experimentPlatformKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusTestExperiment/<Init>d__3
#include "GlobalNamespace/OculusTestExperiment_-Init-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusTestExperiment <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OculusTestExperiment*& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OculusTestExperiment**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusTestExperiment/<Init>d__3.MoveNext
void GlobalNamespace::OculusTestExperiment::$Init$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusTestExperiment/<Init>d__3.SetStateMachine
void GlobalNamespace::OculusTestExperiment::$Init$d__3::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusTestExperiment::$Init$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserModel
#include "GlobalNamespace/FileBrowserModel.hpp"
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
void GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::StringW direcotryPath, ::ArrayW<::StringW> extensions, ::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(direcotryPath), ::il2cpp_utils::ExtractType(extensions), ::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, direcotryPath, extensions, callback);
}
// Autogenerated method: FileBrowserModel.GetContentOfDirectory
::ArrayW<::GlobalNamespace::FileBrowserItem*> GlobalNamespace::FileBrowserModel::GetContentOfDirectory(::StringW directoryPath, ::ArrayW<::StringW> extensions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::GetContentOfDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "GetContentOfDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(directoryPath), ::il2cpp_utils::ExtractType(extensions)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::FileBrowserItem*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, directoryPath, extensions);
}
// Autogenerated method: FileBrowserModel.CanOpenDirectory
bool GlobalNamespace::FileBrowserModel::CanOpenDirectory(::StringW path) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::CanOpenDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FileBrowserModel", "CanOpenDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, path);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FileBrowserModel/<>c__DisplayClass0_0
#include "GlobalNamespace/FileBrowserModel_--c__DisplayClass0_0.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public FileBrowserItem[] items
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FileBrowserItem*>& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_items() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_items");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "items"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FileBrowserItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String direcotryPath
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_direcotryPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_direcotryPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direcotryPath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] extensions
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_extensions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "extensions"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<FileBrowserItem[]> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>*& GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<::GlobalNamespace::FileBrowserItem*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__0
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserModel/<>c__DisplayClass0_0.<GetContentOfDirectory>b__1
void GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::$GetContentOfDirectory$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FileBrowserModel::$$c__DisplayClass0_0::<GetContentOfDirectory>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetContentOfDirectory>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
