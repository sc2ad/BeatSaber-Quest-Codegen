// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownGameplayServerFiniteStateMachine
#include "GlobalNamespace/CountdownGameplayServerFiniteStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameState
#include "GlobalNamespace/GameState.hpp"
// Including type: GameplayServerFiniteStateMachine
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly GameplayServerFiniteStateMachine fsm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerFiniteStateMachine*& GlobalNamespace::GameState::dyn_fsm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::dyn_fsm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fsm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerFiniteStateMachine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameState.Dispose
void GlobalNamespace::GameState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameState.Init
void GlobalNamespace::GameState::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameStateType
#include "GlobalNamespace/GameStateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameStateType EmptyServer
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_EmptyServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_EmptyServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "EmptyServer"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType EmptyServer
void GlobalNamespace::GameStateType::_set_EmptyServer(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_EmptyServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "EmptyServer", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType SelectingLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_SelectingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_SelectingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "SelectingLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType SelectingLevel
void GlobalNamespace::GameStateType::_set_SelectingLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_SelectingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "SelectingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType StartingLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_StartingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_StartingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "StartingLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType StartingLevel
void GlobalNamespace::GameStateType::_set_StartingLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_StartingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "StartingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType RunningLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_RunningLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_RunningLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "RunningLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType RunningLevel
void GlobalNamespace::GameStateType::_set_RunningLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_RunningLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "RunningLevel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameStateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerFiniteStateMachine
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITaskUtility
#include "BGNet/Core/ITaskUtility.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: MenuRpcManager
#include "GlobalNamespace/MenuRpcManager.hpp"
// Including type: GameplayRpcManager
#include "GlobalNamespace/GameplayRpcManager.hpp"
// Including type: GameState
#include "GlobalNamespace/GameState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.ITaskUtility <taskUtility>k__BackingField
[[deprecated("Use field access instead!")]] ::BGNet::Core::ITaskUtility*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$taskUtility$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$taskUtility$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<taskUtility>k__BackingField"))->offset;
  return *reinterpret_cast<::BGNet::Core::ITaskUtility**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IMultiplayerSessionManager <multiplayerSessionManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$multiplayerSessionManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$multiplayerSessionManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerSessionManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ownerUserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$ownerUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$ownerUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ownerUserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask <selectionMask>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$selectionMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$selectionMask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectionMask>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration <configuration>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$configuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$configuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<configuration>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IServerBeatmapProvider <beatmapProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IServerBeatmapProvider*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$beatmapProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$beatmapProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IServerBeatmapProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuRpcManager <menuRpcManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuRpcManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$menuRpcManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$menuRpcManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menuRpcManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayRpcManager <gameplayRpcManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayRpcManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$gameplayRpcManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$gameplayRpcManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayRpcManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected GameState state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameState*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean enteringState
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_enteringState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_enteringState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enteringState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_taskUtility
::BGNet::Core::ITaskUtility* GlobalNamespace::GameplayServerFiniteStateMachine::get_taskUtility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_taskUtility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_taskUtility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::ITaskUtility*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_taskUtility
void GlobalNamespace::GameplayServerFiniteStateMachine::set_taskUtility(::BGNet::Core::ITaskUtility* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_taskUtility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_taskUtility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IMultiplayerSessionManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_multiplayerSessionManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_multiplayerSessionManager(::GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_ownerUserId
::StringW GlobalNamespace::GameplayServerFiniteStateMachine::get_ownerUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_ownerUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_ownerUserId
void GlobalNamespace::GameplayServerFiniteStateMachine::set_ownerUserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_ownerUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ownerUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::GameplayServerFiniteStateMachine::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_selectionMask
void GlobalNamespace::GameplayServerFiniteStateMachine::set_selectionMask(::GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerFiniteStateMachine::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_configuration
void GlobalNamespace::GameplayServerFiniteStateMachine::set_configuration(::GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_beatmapProvider
::GlobalNamespace::IServerBeatmapProvider* GlobalNamespace::GameplayServerFiniteStateMachine::get_beatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_beatmapProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IServerBeatmapProvider*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_beatmapProvider
void GlobalNamespace::GameplayServerFiniteStateMachine::set_beatmapProvider(::GlobalNamespace::IServerBeatmapProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_beatmapProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_menuRpcManager
::GlobalNamespace::MenuRpcManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_menuRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuRpcManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_menuRpcManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_menuRpcManager(::GlobalNamespace::MenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_menuRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menuRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_gameplayRpcManager
::GlobalNamespace::GameplayRpcManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_gameplayRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayRpcManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_gameplayRpcManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_gameplayRpcManager(::GlobalNamespace::GameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_gameplayRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerFiniteStateMachine/InitParams
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITaskUtility
#include "BGNet/Core/ITaskUtility.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BGNet.Core.ITaskUtility taskUtility
[[deprecated("Use field access instead!")]] ::BGNet::Core::ITaskUtility*& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_taskUtility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_taskUtility");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taskUtility"))->offset;
  return *reinterpret_cast<::BGNet::Core::ITaskUtility**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IMultiplayerSessionManager multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_multiplayerSessionManager");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String creatorId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_creatorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_creatorId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creatorId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_selectionMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_configuration");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly IServerBeatmapProvider beatmapProvider
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IServerBeatmapProvider*& GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_beatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::dyn_beatmapProvider");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapProvider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IServerBeatmapProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayServerFiniteStateMachine/InitParams..ctor
// ABORTED elsewhere.  GlobalNamespace::GameplayServerFiniteStateMachine::InitParams::InitParams(::BGNet::Core::ITaskUtility* taskUtility, ::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager, ::StringW creatorId, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::GlobalNamespace::IServerBeatmapProvider* beatmapProvider)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerFiniteStateMachineFactory
#include "GlobalNamespace/GameplayServerFiniteStateMachineFactory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayServerFiniteStateMachineFactory.Create
::GlobalNamespace::GameplayServerFiniteStateMachine* GlobalNamespace::GameplayServerFiniteStateMachineFactory::Create(::GlobalNamespace::GameplayServerFiniteStateMachine::InitParams initParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachineFactory::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayServerFiniteStateMachineFactory", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initParams)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerFiniteStateMachine*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, initParams);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManagedGameplayServerFiniteStateMachine
#include "GlobalNamespace/ManagedGameplayServerFiniteStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickStartOneSongGameplayServerFiniteStateMachine
#include "GlobalNamespace/QuickStartOneSongGameplayServerFiniteStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerMode
#include "GlobalNamespace/GameplayServerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Countdown
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_Countdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Countdown"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Countdown
void GlobalNamespace::GameplayServerMode::_set_Countdown(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_Countdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Countdown", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Managed
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Managed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_Managed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Managed"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Managed
void GlobalNamespace::GameplayServerMode::_set_Managed(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_Managed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Managed", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode QuickStartOneSong
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "QuickStartOneSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode QuickStartOneSong
void GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "QuickStartOneSong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayServerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthCheckService
#include "GlobalNamespace/HealthCheckService.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kTimeoutLengthMs
int GlobalNamespace::HealthCheckService::_get_kTimeoutLengthMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::_get_kTimeoutLengthMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "HealthCheckService", "kTimeoutLengthMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTimeoutLengthMs
void GlobalNamespace::HealthCheckService::_set_kTimeoutLengthMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::_set_kTimeoutLengthMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HealthCheckService", "kTimeoutLengthMs", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HealthCheckService::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Thread _runThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::HealthCheckService::dyn__runThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__runThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HealthCheckService::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _manualResetEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& GlobalNamespace::HealthCheckService::dyn__manualResetEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__manualResetEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_manualResetEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener _listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& GlobalNamespace::HealthCheckService::dyn__listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthCheckService.Dispose
void GlobalNamespace::HealthCheckService::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthCheckService.PollUpdate
void GlobalNamespace::HealthCheckService::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthCheckService.Run
void GlobalNamespace::HealthCheckService::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAsyncComputeManager
#include "GlobalNamespace/IAsyncComputeManager.hpp"
// Including type: AsyncComputeOperation
#include "GlobalNamespace/AsyncComputeOperation.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AsyncComputeOperation`1
#include "GlobalNamespace/AsyncComputeOperation_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAsyncComputeManager.BeginOperation
void GlobalNamespace::IAsyncComputeManager::BeginOperation(::GlobalNamespace::AsyncComputeOperation* asyncComputeOperation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAsyncComputeManager::BeginOperation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncComputeOperation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asyncComputeOperation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IAuthenticationTokenProvider.get_hashedUserId
::StringW GlobalNamespace::IAuthenticationTokenProvider::get_hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAuthenticationTokenProvider::get_hashedUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IAuthenticationTokenProvider.get_userName
::StringW GlobalNamespace::IAuthenticationTokenProvider::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAuthenticationTokenProvider::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IAuthenticationTokenProvider.GetAuthenticationToken
::System::Threading::Tasks::Task_1<::GlobalNamespace::AuthenticationToken>* GlobalNamespace::IAuthenticationTokenProvider::GetAuthenticationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IAuthenticationTokenProvider::GetAuthenticationToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::AuthenticationToken>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICPUMonitor
#include "GlobalNamespace/ICPUMonitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICPUMonitor.get_utilization
float GlobalNamespace::ICPUMonitor::get_utilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICPUMonitor::get_utilization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_utilization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICertificateEncryptionProvider
#include "GlobalNamespace/ICertificateEncryptionProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICertificateEncryptionProvider.SignData
::ArrayW<uint8_t> GlobalNamespace::ICertificateEncryptionProvider::SignData(::ArrayW<uint8_t> data, int offset, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICertificateEncryptionProvider::SignData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SignData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICertificateValidator.ValidateCertificateChain
void GlobalNamespace::ICertificateValidator::ValidateCertificateChain(::GlobalNamespace::DnsEndPoint* endPoint, ::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ICertificateValidator::ValidateCertificateChain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: MultiplayerAvatarData
#include "GlobalNamespace/MultiplayerAvatarData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectedPlayer.get_isMe
bool GlobalNamespace::IConnectedPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_userId
::StringW GlobalNamespace::IConnectedPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_userName
::StringW GlobalNamespace::IConnectedPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_hasValidLatency
bool GlobalNamespace::IConnectedPlayer::get_hasValidLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_hasValidLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValidLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_currentLatency
float GlobalNamespace::IConnectedPlayer::get_currentLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_currentLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isConnected
bool GlobalNamespace::IConnectedPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::IConnectedPlayer::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::IConnectedPlayer::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_offsetSyncTime
float GlobalNamespace::IConnectedPlayer::get_offsetSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_offsetSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_sortIndex
int GlobalNamespace::IConnectedPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_sortIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_isKicked
bool GlobalNamespace::IConnectedPlayer::get_isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_isKicked");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.get_multiplayerAvatarData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::IConnectedPlayer::get_multiplayerAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::get_multiplayerAvatarData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayer.HasState
bool GlobalNamespace::IConnectedPlayer::HasState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayer::HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnectedPlayerBeatmapObjectEventManager
#include "GlobalNamespace/IConnectedPlayerBeatmapObjectEventManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteSpawnInfoNetSerializable
#include "GlobalNamespace/NoteSpawnInfoNetSerializable.hpp"
// Including type: ObstacleSpawnInfoNetSerializable
#include "GlobalNamespace/ObstacleSpawnInfoNetSerializable.hpp"
// Including type: SliderSpawnInfoNetSerializable
#include "GlobalNamespace/SliderSpawnInfoNetSerializable.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.add_connectedPlayerNoteWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasSpawnedEvent(::System::Action_1<::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerNoteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.remove_connectedPlayerNoteWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasSpawnedEvent(::System::Action_1<::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerNoteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.add_connectedPlayerObstacleWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerObstacleWasSpawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerObstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerObstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.remove_connectedPlayerObstacleWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerObstacleWasSpawnedEvent(::System::Action_1<::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerObstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerObstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.add_connectedPlayerSliderWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerSliderWasSpawnedEvent(::System::Action_1<::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerSliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerSliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.remove_connectedPlayerSliderWasSpawnedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerSliderWasSpawnedEvent(::System::Action_1<::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerSliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerSliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.add_connectedPlayerNoteWasCutEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasCutEvent(::System::Action_1<::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.remove_connectedPlayerNoteWasCutEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasCutEvent(::System::Action_1<::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerNoteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.add_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasMissedEvent(::System::Action_1<::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::add_connectedPlayerNoteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.remove_connectedPlayerNoteWasMissedEvent
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasMissedEvent(::System::Action_1<::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::remove_connectedPlayerNoteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerNoteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.Pause
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IConnectedPlayerBeatmapObjectEventManager.Resume
void GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectedPlayerBeatmapObjectEventManager::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectionManager.get_userId
::StringW GlobalNamespace::IConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_userName
::StringW GlobalNamespace::IConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnected
bool GlobalNamespace::IConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnecting
bool GlobalNamespace::IConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isDisconnecting
bool GlobalNamespace::IConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_connectionCount
int GlobalNamespace::IConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isConnectionOwner
bool GlobalNamespace::IConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.get_isDisposed
bool GlobalNamespace::IConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnectionManager.add_onInitializedEvent
void GlobalNamespace::IConnectionManager::add_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onInitializedEvent
void GlobalNamespace::IConnectionManager::remove_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::IConnectionManager::add_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::IConnectionManager::remove_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::IConnectionManager::add_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::IConnectionManager::remove_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::IConnectionManager::add_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::IConnectionManager::remove_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IConnectionManager.SendToAll
void GlobalNamespace::IConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: IConnectionManager.SendToAll
void GlobalNamespace::IConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod, ::GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: IConnectionManager.Disconnect
void GlobalNamespace::IConnectionManager::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: IConnectionManager.GetConnection
::GlobalNamespace::IConnection* GlobalNamespace::IConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: IConnectionManager.DisposeAsync
::System::Threading::Tasks::Task* GlobalNamespace::IConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionManager::DisposeAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: BGNet.Core.DeliveryMethod
#include "BGNet/Core/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnection.get_userId
::StringW GlobalNamespace::IConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnection.get_userName
::StringW GlobalNamespace::IConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: IConnection.get_isConnectionOwner
bool GlobalNamespace::IConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IConnection.Send
void GlobalNamespace::IConnection::Send(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: IConnection.Disconnect
void GlobalNamespace::IConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IConnectionRequestHandler
#include "GlobalNamespace/IConnectionRequestHandler.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IConnectionRequestHandler.GetConnectionMessage
void GlobalNamespace::IConnectionRequestHandler::GetConnectionMessage(::LiteNetLib::Utils::NetDataWriter* writer, ::StringW userId, ::StringW userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionRequestHandler::GetConnectionMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, userId, userName, isConnectionOwner);
}
// Autogenerated method: IConnectionRequestHandler.ValidateConnectionMessage
bool GlobalNamespace::IConnectionRequestHandler::ValidateConnectionMessage(::LiteNetLib::Utils::NetDataReader* reader, ByRef<::StringW> userId, ByRef<::StringW> userName, ByRef<bool> isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IConnectionRequestHandler::ValidateConnectionMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, byref(userId), byref(userName), byref(isConnectionOwner));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: NoteSpawnInfoNetSerializable
#include "GlobalNamespace/NoteSpawnInfoNetSerializable.hpp"
// Including type: ObstacleSpawnInfoNetSerializable
#include "GlobalNamespace/ObstacleSpawnInfoNetSerializable.hpp"
// Including type: SliderSpawnInfoNetSerializable
#include "GlobalNamespace/SliderSpawnInfoNetSerializable.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGameplayRpcManager.get_enabled
bool GlobalNamespace::IGameplayRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::get_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.set_enabled
void GlobalNamespace::IGameplayRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::set_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_getGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_getGameplaySceneReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setPlayerDidConnectLateEvent
void GlobalNamespace::IGameplayRpcManager::add_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setPlayerDidConnectLateEvent
void GlobalNamespace::IGameplayRpcManager::remove_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_getGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::add_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_getGameplaySongReadyEvent
void GlobalNamespace::IGameplayRpcManager::remove_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_setSongStartTimeEvent
void GlobalNamespace::IGameplayRpcManager::add_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_setSongStartTimeEvent
void GlobalNamespace::IGameplayRpcManager::remove_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_requestReturnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::add_requestReturnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_requestReturnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::remove_requestReturnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_returnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::add_returnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_returnToMenuEvent
void GlobalNamespace::IGameplayRpcManager::remove_returnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_levelFinishedEvent
void GlobalNamespace::IGameplayRpcManager::add_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_levelFinishedEvent
void GlobalNamespace::IGameplayRpcManager::remove_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_noteWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::add_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_noteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_noteWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::remove_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_noteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_obstacleWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::add_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_obstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_obstacleWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::remove_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_obstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_sliderWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::add_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_sliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_sliderWasSpawnedEvent
void GlobalNamespace::IGameplayRpcManager::remove_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_sliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_noteWasCutEvent
void GlobalNamespace::IGameplayRpcManager::add_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_noteWasCutEvent
void GlobalNamespace::IGameplayRpcManager::remove_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.add_noteWasMissedEvent
void GlobalNamespace::IGameplayRpcManager::add_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::add_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.remove_noteWasMissedEvent
void GlobalNamespace::IGameplayRpcManager::remove_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::remove_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameplayRpcManager.NoteSpawned
void GlobalNamespace::IGameplayRpcManager::NoteSpawned(float songTime, ::GlobalNamespace::NoteSpawnInfoNetSerializable* noteSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::NoteSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteSpawnInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.ObstacleSpawned
void GlobalNamespace::IGameplayRpcManager::ObstacleSpawned(float songTime, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable* obstacleSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::ObstacleSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObstacleSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(obstacleSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, obstacleSpawnInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.SliderSpawned
void GlobalNamespace::IGameplayRpcManager::SliderSpawned(float songTime, ::GlobalNamespace::SliderSpawnInfoNetSerializable* sliderSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SliderSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(sliderSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, sliderSpawnInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.NoteMissed
void GlobalNamespace::IGameplayRpcManager::NoteMissed(float songTime, ::GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::NoteMissed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteMissInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteMissInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.NoteCut
void GlobalNamespace::IGameplayRpcManager::NoteCut(float songTime, ::GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::NoteCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteCutInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteCutInfoNetSerializable);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySceneSyncFinished
void GlobalNamespace::IGameplayRpcManager::SetGameplaySceneSyncFinished(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SetGameplaySceneSyncFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySceneReady
void GlobalNamespace::IGameplayRpcManager::SetGameplaySceneReady(::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: IGameplayRpcManager.GetGameplaySceneReady
void GlobalNamespace::IGameplayRpcManager::GetGameplaySceneReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::GetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.SetPlayerDidConnectLate
void GlobalNamespace::IGameplayRpcManager::SetPlayerDidConnectLate(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SetPlayerDidConnectLate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: IGameplayRpcManager.SetSongStartTime
void GlobalNamespace::IGameplayRpcManager::SetSongStartTime(float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SetSongStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTime);
}
// Autogenerated method: IGameplayRpcManager.SetGameplaySongReady
void GlobalNamespace::IGameplayRpcManager::SetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::SetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.GetGameplaySongReady
void GlobalNamespace::IGameplayRpcManager::GetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::GetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.RequestReturnToMenu
void GlobalNamespace::IGameplayRpcManager::RequestReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::RequestReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.ReturnToMenu
void GlobalNamespace::IGameplayRpcManager::ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::ReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IGameplayRpcManager.LevelFinished
void GlobalNamespace::IGameplayRpcManager::LevelFinished(::GlobalNamespace::MultiplayerLevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IGameplayRpcManager::LevelFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMenuRpcManager.get_syncTime
float GlobalNamespace::IMenuRpcManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.add_getPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::add_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::remove_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::add_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setPlayersPermissionConfigurationEvent
void GlobalNamespace::IMenuRpcManager::remove_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_recommendBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_recommendBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearRecommendedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::add_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getSelectedBeatmapEvent
void GlobalNamespace::IMenuRpcManager::remove_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_recommendGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_recommendGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_clearSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_clearSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::add_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getSelectedGameplayModifiersEvent
void GlobalNamespace::IMenuRpcManager::remove_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::add_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::add_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsStartButtonEnabledEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsReadyEvent
void GlobalNamespace::IMenuRpcManager::add_getIsReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsReadyEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsReadyEvent
void GlobalNamespace::IMenuRpcManager::add_setIsReadyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsReadyEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsReadyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setStartGameTimeEvent
void GlobalNamespace::IMenuRpcManager::add_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setStartGameTimeEvent
void GlobalNamespace::IMenuRpcManager::remove_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_cancelledLevelStartEvent
void GlobalNamespace::IMenuRpcManager::add_cancelledLevelStartEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_cancelledLevelStartEvent
void GlobalNamespace::IMenuRpcManager::remove_cancelledLevelStartEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_startedLevelEvent
void GlobalNamespace::IMenuRpcManager::add_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_startedLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getStartedLevelEvent
void GlobalNamespace::IMenuRpcManager::add_getStartedLevelEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getStartedLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_getStartedLevelEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::add_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::remove_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::add_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setMultiplayerGameStateEvent
void GlobalNamespace::IMenuRpcManager::remove_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::add_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsEntitledToLevelEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::IMenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::IMenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::add_getIsInLobbyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::remove_getIsInLobbyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::add_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setIsInLobbyEvent
void GlobalNamespace::IMenuRpcManager::remove_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_cancelCountdownEvent
void GlobalNamespace::IMenuRpcManager::add_cancelCountdownEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_cancelCountdownEvent
void GlobalNamespace::IMenuRpcManager::remove_cancelCountdownEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setCountdownEndTimeEvent
void GlobalNamespace::IMenuRpcManager::add_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setCountdownEndTimeEvent
void GlobalNamespace::IMenuRpcManager::remove_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_setOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::add_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_setOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::remove_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_getOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::add_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_getOwnedSongPacksEvent
void GlobalNamespace::IMenuRpcManager::remove_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.add_requestedKickPlayerEvent
void GlobalNamespace::IMenuRpcManager::add_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::add_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.remove_requestedKickPlayerEvent
void GlobalNamespace::IMenuRpcManager::remove_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::remove_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMenuRpcManager.GetPlayersPermissionConfiguration
void GlobalNamespace::IMenuRpcManager::GetPlayersPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetPlayersPermissionConfiguration
void GlobalNamespace::IMenuRpcManager::SetPlayersPermissionConfiguration(::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* permissions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(permissions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, permissions);
}
// Autogenerated method: IMenuRpcManager.RecommendBeatmap
void GlobalNamespace::IMenuRpcManager::RecommendBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::RecommendBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated method: IMenuRpcManager.GetRecommendedBeatmap
void GlobalNamespace::IMenuRpcManager::GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.ClearRecommendedBeatmap
void GlobalNamespace::IMenuRpcManager::ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::ClearRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetSelectedBeatmap
void GlobalNamespace::IMenuRpcManager::SetSelectedBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated method: IMenuRpcManager.GetSelectedBeatmap
void GlobalNamespace::IMenuRpcManager::GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.RecommendGameplayModifiers
void GlobalNamespace::IMenuRpcManager::RecommendGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::RecommendGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: IMenuRpcManager.GetRecommendedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.ClearRecommendedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::ClearRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetSelectedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::SetSelectedGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: IMenuRpcManager.GetSelectedGameplayModifiers
void GlobalNamespace::IMenuRpcManager::GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.GetIsReady
void GlobalNamespace::IMenuRpcManager::GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsReady
void GlobalNamespace::IMenuRpcManager::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: IMenuRpcManager.GetIsStartButtonEnabled
void GlobalNamespace::IMenuRpcManager::GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsStartButtonEnabled
void GlobalNamespace::IMenuRpcManager::SetIsStartButtonEnabled(::GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: IMenuRpcManager.GetIsInLobby
void GlobalNamespace::IMenuRpcManager::GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetIsInLobby
void GlobalNamespace::IMenuRpcManager::SetIsInLobby(bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBack);
}
// Autogenerated method: IMenuRpcManager.SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::IMenuRpcManager::SetPlayersMissingEntitlementsToLevel(::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetPlayersMissingEntitlementsToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: IMenuRpcManager.GetIsEntitledToLevel
void GlobalNamespace::IMenuRpcManager::GetIsEntitledToLevel(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: IMenuRpcManager.SetIsEntitledToLevel
void GlobalNamespace::IMenuRpcManager::SetIsEntitledToLevel(::StringW levelId, ::GlobalNamespace::EntitlementsStatus entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId, entitlementStatus);
}
// Autogenerated method: IMenuRpcManager.InvalidateLevelEntitlementStatuses
void GlobalNamespace::IMenuRpcManager::InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::InvalidateLevelEntitlementStatuses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.GetMultiplayerGameState
void GlobalNamespace::IMenuRpcManager::GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetMultiplayerGameState
void GlobalNamespace::IMenuRpcManager::SetMultiplayerGameState(::GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: IMenuRpcManager.GetOwnedSongPacks
void GlobalNamespace::IMenuRpcManager::GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetOwnedSongPacks
void GlobalNamespace::IMenuRpcManager::SetOwnedSongPacks(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: IMenuRpcManager.StartLevel
void GlobalNamespace::IMenuRpcManager::StartLevel(::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::StartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: IMenuRpcManager.GetStartedLevel
void GlobalNamespace::IMenuRpcManager::GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetStartedLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.CancelLevelStart
void GlobalNamespace::IMenuRpcManager::CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::CancelLevelStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.SetStartGameTime
void GlobalNamespace::IMenuRpcManager::SetStartGameTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::SetStartGameTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTime);
}
// Autogenerated method: IMenuRpcManager.GetCountdownEndTime
void GlobalNamespace::IMenuRpcManager::GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::GetCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMenuRpcManager.RequestKickPlayer
void GlobalNamespace::IMenuRpcManager::RequestKickPlayer(::StringW kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMenuRpcManager::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kickedPlayerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerSessionManager/SessionType
#include "GlobalNamespace/MultiplayerSessionManager_SessionType.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerSessionManager.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectionOwner
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_syncTime
float GlobalNamespace::IMultiplayerSessionManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isSyncTimeInitialized
bool GlobalNamespace::IMultiplayerSessionManager::get_isSyncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isSyncTimeInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSyncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_maxPlayerCount
int GlobalNamespace::IMultiplayerSessionManager::get_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_maxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayerCount
int GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnectingOrConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnectingOrConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isConnectingOrConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectingOrConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnected
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isConnecting
bool GlobalNamespace::IMultiplayerSessionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isDisconnecting
bool GlobalNamespace::IMultiplayerSessionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_isSpectating
bool GlobalNamespace::IMultiplayerSessionManager::get_isSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_isSpectating");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSpectating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectedPlayers
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.get_connectionOwner
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::get_connectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::get_connectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_connectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectionFailedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_connectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerConnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerDisconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerAvatarChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerAvatarChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_playerAvatarChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_playerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_playerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_connectionOwnerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_connectionOwnerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_connectionOwnerStateChangedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_connectionOwnerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_connectionOwnerStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionOwnerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::add_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_disconnectedEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_disconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.add_pollUpdateEvent
void GlobalNamespace::IMultiplayerSessionManager::add_pollUpdateEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::add_pollUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_pollUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.remove_pollUpdateEvent
void GlobalNamespace::IMultiplayerSessionManager::remove_pollUpdateEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::remove_pollUpdateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_pollUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSessionManager.SetMaxPlayerCount
void GlobalNamespace::IMultiplayerSessionManager::SetMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::SetMaxPlayerCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxPlayerCount);
}
// Autogenerated method: IMultiplayerSessionManager.StartSession
void GlobalNamespace::IMultiplayerSessionManager::StartSession(::GlobalNamespace::MultiplayerSessionManager_SessionType sessionType, ::GlobalNamespace::ConnectedPlayerManager* connectedPlayerManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::StartSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionType), ::il2cpp_utils::ExtractType(connectedPlayerManager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sessionType, connectedPlayerManager);
}
// Autogenerated method: IMultiplayerSessionManager.EndSession
void GlobalNamespace::IMultiplayerSessionManager::EndSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::EndSession");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSession", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.GetPlayerByUserId
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetPlayerByUserId(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::GetPlayerByUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerByUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: IMultiplayerSessionManager.GetConnectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayer(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::GetConnectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, index);
}
// Autogenerated method: IMultiplayerSessionManager.KickPlayer
void GlobalNamespace::IMultiplayerSessionManager::KickPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::KickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: IMultiplayerSessionManager.Disconnect
void GlobalNamespace::IMultiplayerSessionManager::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSessionManager.SetLocalPlayerState
void GlobalNamespace::IMultiplayerSessionManager::SetLocalPlayerState(::StringW state, bool hasState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::SetLocalPlayerState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(hasState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, hasState);
}
// Autogenerated method: IMultiplayerSessionManager.LocalPlayerHasState
bool GlobalNamespace::IMultiplayerSessionManager::LocalPlayerHasState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::LocalPlayerHasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalPlayerHasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: IMultiplayerSessionManager.RegisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::RegisterSerializer(::GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::RegisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: IMultiplayerSessionManager.UnregisterSerializer
void GlobalNamespace::IMultiplayerSessionManager::UnregisterSerializer(::GlobalNamespace::MultiplayerSessionManager_MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IMultiplayerSessionManager::UnregisterSerializer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: ServiceEnvironment
#include "GlobalNamespace/ServiceEnvironment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkConfig.get_maxPartySize
int GlobalNamespace::INetworkConfig::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_discoveryPort
int GlobalNamespace::INetworkConfig::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_partyPort
int GlobalNamespace::INetworkConfig::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_multiplayerPort
int GlobalNamespace::INetworkConfig::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_masterServerEndPoint
::GlobalNamespace::DnsEndPoint* GlobalNamespace::INetworkConfig::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DnsEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_multiplayerStatusUrl
::StringW GlobalNamespace::INetworkConfig::get_multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_multiplayerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_quickPlaySetupUrl
::StringW GlobalNamespace::INetworkConfig::get_quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_quickPlaySetupUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quickPlaySetupUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_graphUrl
::StringW GlobalNamespace::INetworkConfig::get_graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_graphUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_graphAccessToken
::StringW GlobalNamespace::INetworkConfig::get_graphAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_graphAccessToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_forceGameLift
bool GlobalNamespace::INetworkConfig::get_forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_forceGameLift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceGameLift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConfig.get_serviceEnvironment
::GlobalNamespace::ServiceEnvironment GlobalNamespace::INetworkConfig::get_serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConfig::get_serviceEnvironment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serviceEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ServiceEnvironment, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INetworkConnectionManager
#include "GlobalNamespace/INetworkConnectionManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: NetworkStatisticsState/NetworkStatisticsUpdateDelegate
#include "GlobalNamespace/NetworkStatisticsState_NetworkStatisticsUpdateDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkConnectionManager.get_port
int GlobalNamespace::INetworkConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::get_port");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConnectionManager.get_isClient
bool GlobalNamespace::INetworkConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::get_isClient");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConnectionManager.get_isServer
bool GlobalNamespace::INetworkConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::get_isServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkConnectionManager.add_onStatisticsUpdatedEvent
void GlobalNamespace::INetworkConnectionManager::add_onStatisticsUpdatedEvent(::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::add_onStatisticsUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkConnectionManager.remove_onStatisticsUpdatedEvent
void GlobalNamespace::INetworkConnectionManager::remove_onStatisticsUpdatedEvent(::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::remove_onStatisticsUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkConnectionManager.ConnectToEndPoint
void GlobalNamespace::INetworkConnectionManager::ConnectToEndPoint(::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* remoteEndPoint, ::StringW remoteUserId, ::StringW remoteUserName, bool remoteUserIsConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkConnectionManager::ConnectToEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(remoteUserId), ::il2cpp_utils::ExtractType(remoteUserName), ::il2cpp_utils::ExtractType(remoteUserIsConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkPlayer.get_userId
::StringW GlobalNamespace::INetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_userName
::StringW GlobalNamespace::INetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isMe
bool GlobalNamespace::INetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_currentPartySize
int GlobalNamespace::INetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::INetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_connectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::INetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::INetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::INetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canJoin
bool GlobalNamespace::INetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_requiresPassword
bool GlobalNamespace::INetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::INetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canInvite
bool GlobalNamespace::INetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::INetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canKick
bool GlobalNamespace::INetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canLeave
bool GlobalNamespace::INetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canBlock
bool GlobalNamespace::INetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.get_canUnblock
bool GlobalNamespace::INetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Join
void GlobalNamespace::INetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Join
void GlobalNamespace::INetworkPlayer::Join(::StringW password) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: INetworkPlayer.Invite
void GlobalNamespace::INetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Kick
void GlobalNamespace::INetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Leave
void GlobalNamespace::INetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Block
void GlobalNamespace::INetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.Unblock
void GlobalNamespace::INetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayer.SendJoinResponse
void GlobalNamespace::INetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: INetworkPlayer.SendInviteResponse
void GlobalNamespace::INetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::INetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::INetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::INetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::INetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_hasNetworkingFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::INetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::INetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_currentPartySize
int GlobalNamespace::INetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_partyPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::INetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_otherPlayers
::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>* GlobalNamespace::INetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.get_connectedPlayerManager
::GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::INetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: INetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::INetworkPlayerModel::add_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::INetworkPlayerModel::remove_partyChangedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::INetworkPlayerModel::add_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::INetworkPlayerModel::remove_partySizeChangedEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::INetworkPlayerModel::add_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::INetworkPlayerModel::remove_joinRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::INetworkPlayerModel::add_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::INetworkPlayerModel::remove_inviteRequestedEvent(::System::Action_1<::GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: INetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::INetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::INetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPollable
#include "GlobalNamespace/IPollable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPollable.PollUpdate
void GlobalNamespace::IPollable::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPollable::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPoolablePacket
#include "GlobalNamespace/IPoolablePacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPoolablePacket.Release
void GlobalNamespace::IPoolablePacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPoolablePacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IPacketPool
#include "GlobalNamespace/IPacketPool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IPacketPool.Release
void GlobalNamespace::IPacketPool::Release(::Il2CppObject* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPacketPool::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: IPacketPool.Fill
void GlobalNamespace::IPacketPool::Fill() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPacketPool::Fill");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IPacketPool.Clear
void GlobalNamespace::IPacketPool::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IPacketPool::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IRemoteProcedureCall
#include "GlobalNamespace/IRemoteProcedureCall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IRemoteProcedureCall.get_syncTime
float GlobalNamespace::IRemoteProcedureCall::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IRemoteProcedureCall::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProvider.VerifyBeatmapForSelectionMask
bool GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForSelectionMask(::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerBeatmapProvider::VerifyBeatmapForSelectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifyBeatmapForSelectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(selectionMask)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapId, selectionMask);
}
// Autogenerated method: IServerBeatmapProvider.SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks
::GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks(int playerCount, ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* beatmapsSuggestedByPlayers, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::System::Collections::Generic::Dictionary_2<::StringW, ::GlobalNamespace::SongPackMask>* playerOwnedSongPacks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerBeatmapProvider::SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectBeatmapFromSuggestionsWithSelectionMaskAndOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerCount), ::il2cpp_utils::ExtractType(beatmapsSuggestedByPlayers), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(playerOwnedSongPacks)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method, playerCount, beatmapsSuggestedByPlayers, selectionMask, playerOwnedSongPacks);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerBeatmapProviderManager
#include "GlobalNamespace/IServerBeatmapProviderManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerBeatmapProviderManager.GetServerBeatmapProvider
::GlobalNamespace::IServerBeatmapProvider* GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerBeatmapProviderManager::GetServerBeatmapProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerBeatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IServerBeatmapProvider*, false>(this, ___internal__method);
}
// Autogenerated method: IServerBeatmapProviderManager.RefreshAsync
::System::Threading::Tasks::Task* GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerBeatmapProviderManager::RefreshAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerSongPackProvider
#include "GlobalNamespace/IServerSongPackProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerSongPackProvider.DecomposeSongPackMask
::ArrayW<::GlobalNamespace::SongPackMask> GlobalNamespace::IServerSongPackProvider::DecomposeSongPackMask(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerSongPackProvider::DecomposeSongPackMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecomposeSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::SongPackMask>, false>(this, ___internal__method, songPackMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IServerSongPackProviderManager
#include "GlobalNamespace/IServerSongPackProviderManager.hpp"
// Including type: IServerSongPackProvider
#include "GlobalNamespace/IServerSongPackProvider.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IServerSongPackProviderManager.GetServerSongPackProvider
::GlobalNamespace::IServerSongPackProvider* GlobalNamespace::IServerSongPackProviderManager::GetServerSongPackProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerSongPackProviderManager::GetServerSongPackProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerSongPackProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IServerSongPackProvider*, false>(this, ___internal__method);
}
// Autogenerated method: IServerSongPackProviderManager.RefreshAsync
::System::Threading::Tasks::Task* GlobalNamespace::IServerSongPackProviderManager::RefreshAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IServerSongPackProviderManager::RefreshAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IStandaloneMonobehavior
#include "GlobalNamespace/IStandaloneMonobehavior.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: IStandaloneThreadRunner
#include "GlobalNamespace/IStandaloneThreadRunner.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IStandaloneMonobehavior.Dispatch
void GlobalNamespace::IStandaloneMonobehavior::Dispatch(::System::Action* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneMonobehavior::Dispatch");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, action);
}
// Autogenerated method: IStandaloneMonobehavior.DispatchAsync
::System::Threading::Tasks::Task* GlobalNamespace::IStandaloneMonobehavior::DispatchAsync(::System::Func_1<::System::Threading::Tasks::Task*>* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneMonobehavior::DispatchAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DispatchAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action);
}
// Autogenerated method: IStandaloneMonobehavior.RunAsync
::System::Threading::Tasks::Task* GlobalNamespace::IStandaloneMonobehavior::RunAsync(::GlobalNamespace::IStandaloneThreadRunner* runner, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneMonobehavior::RunAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runner), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, runner, cancellationToken);
}
// Autogenerated method: IStandaloneMonobehavior.Stop
void GlobalNamespace::IStandaloneMonobehavior::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneMonobehavior::Stop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IStandaloneThreadRunner
#include "GlobalNamespace/IStandaloneThreadRunner.hpp"
// Including type: IStandaloneThreadRunnable
#include "GlobalNamespace/IStandaloneThreadRunnable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IStandaloneThreadRunner.Run
void GlobalNamespace::IStandaloneThreadRunner::Run(::GlobalNamespace::IStandaloneThreadRunnable* runnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneThreadRunner::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(runnable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, runnable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IStandaloneThreadRunnable
#include "GlobalNamespace/IStandaloneThreadRunnable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IStandaloneThreadRunnable.MoveNext
bool GlobalNamespace::IStandaloneThreadRunnable::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStandaloneThreadRunnable::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
::GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_get_OnlyConnectionOwnerCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InvitePolicy>("", "InvitePolicy", "OnlyConnectionOwnerCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy OnlyConnectionOwnerCanInvite
void GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite(::GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_set_OnlyConnectionOwnerCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "OnlyConnectionOwnerCanInvite", value));
}
// Autogenerated static field getter
// Get static field: static public InvitePolicy AnyoneCanInvite
::GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_get_AnyoneCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InvitePolicy>("", "InvitePolicy", "AnyoneCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy AnyoneCanInvite
void GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite(::GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_set_AnyoneCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "AnyoneCanInvite", value));
}
// Autogenerated static field getter
// Get static field: static public InvitePolicy NobodyCanInvite
::GlobalNamespace::InvitePolicy GlobalNamespace::InvitePolicy::_get_NobodyCanInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_get_NobodyCanInvite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::InvitePolicy>("", "InvitePolicy", "NobodyCanInvite"));
}
// Autogenerated static field setter
// Set static field: static public InvitePolicy NobodyCanInvite
void GlobalNamespace::InvitePolicy::_set_NobodyCanInvite(::GlobalNamespace::InvitePolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::_set_NobodyCanInvite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "InvitePolicy", "NobodyCanInvite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::InvitePolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::InvitePolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__129
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__129.hpp"
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__130
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__130.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: BGNet.Core.ITaskUtility
#include "BGNet/Core/ITaskUtility.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: IConnectionRequestHandler
#include "GlobalNamespace/IConnectionRequestHandler.hpp"
// Including type: IUnconnectedMessageReceiver
#include "GlobalNamespace/IUnconnectedMessageReceiver.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.DisconnectReason
#include "LiteNetLib/DisconnectReason.hpp"
// Including type: NetworkStatisticsState/NetworkStatisticsUpdateDelegate
#include "GlobalNamespace/NetworkStatisticsState_NetworkStatisticsUpdateDelegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundDisconnectTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundDisconnectTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundDisconnectTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundDisconnectTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundDisconnectTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kBackgroundShutdownTimeout
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_get_kBackgroundShutdownTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kBackgroundShutdownTimeout
void GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_set_kBackgroundShutdownTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kBackgroundShutdownTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kStatisticsUpdateInterval
int64_t GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_get_kStatisticsUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kStatisticsUpdateInterval
void GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::_set_kStatisticsUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager", "kStatisticsUpdateInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _unconnectedPacketHeader
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedPacketHeader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unconnectedPacketHeader"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.NetManager _netManager
[[deprecated("Use field access instead!")]] ::LiteNetLib::NetManager*& GlobalNamespace::LiteNetLibConnectionManager::dyn__netManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__netManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_netManager"))->offset;
  return *reinterpret_cast<::LiteNetLib::NetManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PacketEncryptionLayer _encryptionLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PacketEncryptionLayer*& GlobalNamespace::LiteNetLibConnectionManager::dyn__encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__encryptionLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PacketEncryptionLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BGNet.Core.ITaskUtility _taskUtility
[[deprecated("Use field access instead!")]] ::BGNet::Core::ITaskUtility*& GlobalNamespace::LiteNetLibConnectionManager::dyn__taskUtility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__taskUtility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_taskUtility"))->offset;
  return *reinterpret_cast<::BGNet::Core::ITaskUtility**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnection> _connections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__connections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnection> _pendingConnections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingConnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingConnections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LiteNetLibConnectionManager/NetPeerConnectionRequest> _pendingRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.Net.IPEndPoint> _pendingReconnections
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::System::Net::IPEndPoint*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingReconnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__pendingReconnections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pendingReconnections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectionRequestHandler _connectionRequestHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectionRequestHandler*& GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionRequestHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionRequestHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectionRequestHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IUnconnectedMessageReceiver _unconnectedMessageReceiver
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IUnconnectedMessageReceiver*& GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedMessageReceiver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__unconnectedMessageReceiver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unconnectedMessageReceiver"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IUnconnectedMessageReceiver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLibConnectionManager/NetworkMode _mode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode& GlobalNamespace::LiteNetLibConnectionManager::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLibConnectionManager/ConnectionState _connectionState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState& GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _backgroundSentryDisconnectCts
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryDisconnectCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryDisconnectCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundSentryDisconnectCts"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _backgroundSentryShutdownCts
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryShutdownCts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__backgroundSentryShutdownCts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_backgroundSentryShutdownCts"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sentryDisconnected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryDisconnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentryDisconnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sentryShutdown
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__sentryShutdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sentryShutdown"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastPollUpdateTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::LiteNetLibConnectionManager::dyn__lastPollUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__lastPollUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPollUpdateTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastStatisticsUpdateTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::LiteNetLibConnectionManager::dyn__lastStatisticsUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn__lastStatisticsUpdateTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastStatisticsUpdateTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onInitializedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onInitializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onInitializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onInitializedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnection*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onConnectionDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,BGNet.Core.DeliveryMethod> onReceivedDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceivedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceivedDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Net.IPEndPoint,LiteNetLib.Utils.NetDataReader> onReceiveUnconnectedDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::System::Net::IPEndPoint*, ::LiteNetLib::Utils::NetDataReader*>*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceiveUnconnectedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onReceiveUnconnectedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceiveUnconnectedDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::System::Net::IPEndPoint*, ::LiteNetLib::Utils::NetDataReader*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NetworkStatisticsState/NetworkStatisticsUpdateDelegate onStatisticsUpdatedEvent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate*& GlobalNamespace::LiteNetLibConnectionManager::dyn_onStatisticsUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::dyn_onStatisticsUpdatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onStatisticsUpdatedEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userId
::StringW GlobalNamespace::LiteNetLibConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_userName
::StringW GlobalNamespace::LiteNetLibConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnected
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisconnecting
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_hasConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_hasConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isServer
bool GlobalNamespace::LiteNetLibConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isClient
bool GlobalNamespace::LiteNetLibConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isClient");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_isDisposed
bool GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_connectionCount
int GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_connectionRequestHandler
::GlobalNamespace::IConnectionRequestHandler* GlobalNamespace::LiteNetLibConnectionManager::get_connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_connectionRequestHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionRequestHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectionRequestHandler*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_port
int GlobalNamespace::LiteNetLibConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_port");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_unconnectedPacketHeader
::ArrayW<uint8_t> GlobalNamespace::LiteNetLibConnectionManager::get_unconnectedPacketHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_unconnectedPacketHeader");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unconnectedPacketHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.get_encryptionLayer
::GlobalNamespace::PacketEncryptionLayer* GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::get_encryptionLayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketEncryptionLayer*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onInitializedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onInitializedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::BGNet::Core::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent(::System::Action_2<::System::Net::IPEndPoint*, ::LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onReceiveUnconnectedDataEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent(::System::Action_2<::System::Net::IPEndPoint*, ::LiteNetLib::Utils::NetDataReader*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onReceiveUnconnectedDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceiveUnconnectedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.add_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent(::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::add_onStatisticsUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager.remove_onStatisticsUpdatedEvent
void GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent(::GlobalNamespace::NetworkStatisticsState::NetworkStatisticsUpdateDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::remove_onStatisticsUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onStatisticsUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LiteNetLibConnectionManager..cctor
void GlobalNamespace::LiteNetLibConnectionManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.NoDomainReloadInit
void GlobalNamespace::LiteNetLibConnectionManager::NoDomainReloadInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NoDomainReloadInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", "NoDomainReloadInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.SendToAll
void GlobalNamespace::LiteNetLibConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod, ::GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: LiteNetLibConnectionManager.SendUnconnectedMessage
void GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage(::System::Net::IPEndPoint* remoteEndPoint, ::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::SendUnconnectedMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendUnconnectedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, writer);
}
// Autogenerated method: LiteNetLibConnectionManager.RegisterReceiver
void GlobalNamespace::LiteNetLibConnectionManager::RegisterReceiver(::GlobalNamespace::IUnconnectedMessageReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::RegisterReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: LiteNetLibConnectionManager.UnregisterReceiver
void GlobalNamespace::LiteNetLibConnectionManager::UnregisterReceiver(::GlobalNamespace::IUnconnectedMessageReceiver* receiver) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::UnregisterReceiver");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterReceiver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(receiver)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, receiver);
}
// Autogenerated method: LiteNetLibConnectionManager.PollUpdate
void GlobalNamespace::LiteNetLibConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.ConnectToEndPoint
void GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint(::StringW userId, ::StringW userName, ::System::Net::IPEndPoint* remoteEndPoint, ::StringW remoteUserId, ::StringW remoteUserName, bool remoteUserIsConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(remoteUserId), ::il2cpp_utils::ExtractType(remoteUserName), ::il2cpp_utils::ExtractType(remoteUserIsConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, remoteUserId, remoteUserName, remoteUserIsConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.Dispose
void GlobalNamespace::LiteNetLibConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeAsync
::System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::DisposeAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.DisposeInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::DisposeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisposeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.DisconnectInternal
void GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal(::GlobalNamespace::DisconnectedReason disconnectedReason, ::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryStartNetManager
bool GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager(int port, bool enableBackgroundSentry) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::TryStartNetManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStartNetManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(enableBackgroundSentry)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, port, enableBackgroundSentry);
}
// Autogenerated method: LiteNetLibConnectionManager.StartBackgroundSentry
void GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::StartBackgroundSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBackgroundSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.CheckSentryState
void GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::CheckSentryState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckSentryState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.UpdateStatistics
void GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::UpdateStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
::GlobalNamespace::IConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: LiteNetLibConnectionManager.IsConnectedToUser
bool GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::IsConnectedToUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsConnectedToUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LiteNetLibConnectionManager.HasConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint(::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::HasConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.HasPendingConnectionToEndPoint
bool GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint(::System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::HasPendingConnectionToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasPendingConnectionToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerConnected(::LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkError(::System::Net::IPEndPoint* endPoint, ::System::Net::Sockets::SocketError socketError) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, socketError);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(::LiteNetLib::NetPeer* peer, int latencyMs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latencyMs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, latencyMs);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnConnectionRequest(::LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnPeerDisconnected(::LiteNetLib::NetPeer* peer, ::LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceive(::LiteNetLib::NetPeer* peer, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(::System::Net::IPEndPoint* remoteEndPoint, ::LiteNetLib::NetPacketReader* reader, ::LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnection
::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* GlobalNamespace::LiteNetLibConnectionManager::GetConnection(::LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*, false>(this, ___internal__method, peer);
}
// Autogenerated method: LiteNetLibConnectionManager.AcceptAllPendingRequests
void GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::AcceptAllPendingRequests");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptAllPendingRequests", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.TryAccept
void GlobalNamespace::LiteNetLibConnectionManager::TryAccept(::LiteNetLib::ConnectionRequest* request, ::StringW userId, ::StringW userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::TryAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, request, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.CreatePendingConnection
void GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection(::LiteNetLib::NetPeer* peer, ::StringW userId, ::StringW userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::CreatePendingConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePendingConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, peer, userId, userName, isConnectionOwner);
}
// Autogenerated method: LiteNetLibConnectionManager.RemoveConnection
void GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection(::LiteNetLib::NetPeer* netPeer, ::LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPeer), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, netPeer, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.TryDisconnect
void GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect(::LiteNetLib::DisconnectReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::TryDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToDisconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason(::LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ToDisconnectedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDisconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.ToConnectionFailedReason
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason(::LiteNetLib::DisconnectReason disconnectReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ToConnectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToConnectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method, disconnectReason);
}
// Autogenerated method: LiteNetLibConnectionManager.GetConnectionMessage
::LiteNetLib::Utils::NetDataWriter* GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::GetConnectionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundDisconnectSentry
::System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::BackgroundDisconnectSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackgroundDisconnectSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.BackgroundShutdownSentry
::System::Threading::Tasks::Task* GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::BackgroundShutdownSentry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackgroundShutdownSentry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager.ToLiteNetDeliveryMethod
::LiteNetLib::DeliveryMethod GlobalNamespace::LiteNetLibConnectionManager::ToLiteNetDeliveryMethod(::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ToLiteNetDeliveryMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", "ToLiteNetDeliveryMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deliveryMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::LiteNetLib::DeliveryMethod, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.FromLiteNetDeliveryMethod
::BGNet::Core::DeliveryMethod GlobalNamespace::LiteNetLibConnectionManager::FromLiteNetDeliveryMethod(::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::FromLiteNetDeliveryMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", "FromLiteNetDeliveryMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deliveryMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::DeliveryMethod, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager.Log
void GlobalNamespace::LiteNetLibConnectionManager::Log(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.LogError
void GlobalNamespace::LiteNetLibConnectionManager::LogError(::StringW msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LogError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LogError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: LiteNetLibConnectionManager.GetLogFormatConnection
::StringW GlobalNamespace::LiteNetLibConnectionManager::GetLogFormatConnection(::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* netPeerConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::GetLogFormatConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", "GetLogFormatConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(netPeerConnection)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, netPeerConnection);
}
// Autogenerated method: LiteNetLibConnectionManager.GetLogFormatUserInfo
::StringW GlobalNamespace::LiteNetLibConnectionManager::GetLogFormatUserInfo(::StringW userName, ::StringW userId, ::System::Net::IPEndPoint* ipEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::GetLogFormatUserInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager", "GetLogFormatUserInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipEndPoint)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, userName, userId, ipEndPoint);
}
// Autogenerated method: LiteNetLibConnectionManager.<DisposeAsync>b__101_0
void GlobalNamespace::LiteNetLibConnectionManager::$DisposeAsync$b__101_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::<DisposeAsync>b__101_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisposeAsync>b__101_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/NetworkMode
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode None
::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode None
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None(::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Client
::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Client
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client(::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/NetworkMode Server
::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode>("", "LiteNetLibConnectionManager/NetworkMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/NetworkMode Server
void GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server(::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/NetworkMode", "Server", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetworkMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/ConnectionState
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Unconnected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected(::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting(::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Connected
::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Connected
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected(::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState>("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public LiteNetLibConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting(::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/LiteNetLibConnectionParamsBase
#include "GlobalNamespace/LiteNetLibConnectionManager_LiteNetLibConnectionParamsBase.hpp"
// Including type: IConnectionRequestHandler
#include "GlobalNamespace/IConnectionRequestHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public IConnectionRequestHandler connectionRequestHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectionRequestHandler*& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_connectionRequestHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionRequestHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectionRequestHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean filterUnencryptedTraffic
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_filterUnencryptedTraffic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_filterUnencryptedTraffic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filterUnencryptedTraffic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableUnconnectedMessages
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableUnconnectedMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableUnconnectedMessages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableUnconnectedMessages"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableBackgroundSentry
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableBackgroundSentry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableBackgroundSentry");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableBackgroundSentry"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean enableStatistics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_enableStatistics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableStatistics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 disconnectTimeoutMs
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_disconnectTimeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::LiteNetLibConnectionParamsBase::dyn_disconnectTimeoutMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectTimeoutMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartServerParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::StartServerParams::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::StartServerParams::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::StartServerParams::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::StartServerParams::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/StartClientParams
#include "GlobalNamespace/LiteNetLibConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/ConnectToServerParams
#include "GlobalNamespace/LiteNetLibConnectionManager_ConnectToServerParams.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Net.IPEndPoint endPoint
[[deprecated("Use field access instead!")]] ::System::Net::IPEndPoint*& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_endPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endPoint"))->offset;
  return *reinterpret_cast<::System::Net::IPEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String serverUserId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverUserId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String serverUserName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverUserName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverUserName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean serverIsConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverIsConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::ConnectToServerParams::dyn_serverIsConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverIsConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/NetPeerConnectionRequest
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnectionRequest.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.ConnectionRequest _request
[[deprecated("Use field access instead!")]] ::LiteNetLib::ConnectionRequest*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__request() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::dyn__request");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_request"))->offset;
  return *reinterpret_cast<::LiteNetLib::ConnectionRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userId
::StringW GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_userName
::StringW GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.get_endPoint
::System::Net::IPEndPoint* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnectionRequest.Accept
::LiteNetLib::NetPeer* GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnectionRequest::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LiteNetLib::NetPeer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: BGNet.Core.DeliveryMethod
#include "BGNet/Core/DeliveryMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LiteNetLib.NetPeer netPeer
[[deprecated("Use field access instead!")]] ::LiteNetLib::NetPeer*& GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn_netPeer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::dyn_netPeer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "netPeer"))->offset;
  return *reinterpret_cast<::LiteNetLib::NetPeer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userId
::StringW GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_userName
::StringW GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.get_isConnectionOwner
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Send
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send(::LiteNetLib::Utils::NetDataWriter* writer, ::BGNet::Core::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Disconnect
void GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.Equals
bool GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: LiteNetLibConnectionManager/NetPeerConnection.GetHashCode
int GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<>c
#include "GlobalNamespace/LiteNetLibConnectionManager_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: LiteNetLibConnectionManager/NetPeerConnection
#include "GlobalNamespace/LiteNetLibConnectionManager_NetPeerConnection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LiteNetLibConnectionManager/<>c <>9
::GlobalNamespace::LiteNetLibConnectionManager::$$c* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::LiteNetLibConnectionManager::$$c*>("", "LiteNetLibConnectionManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LiteNetLibConnectionManager/<>c <>9
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9(::GlobalNamespace::LiteNetLibConnectionManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__71_0
::System::Predicate_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>*>("", "LiteNetLibConnectionManager/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<LiteNetLibConnectionManager/NetPeerConnection> <>9__71_0
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__71_0(::System::Predicate_1<::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LiteNetLibConnectionManager/<>c", "<>9__71_0", value)));
}
// Autogenerated method: LiteNetLibConnectionManager/<>c..cctor
void GlobalNamespace::LiteNetLibConnectionManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LiteNetLibConnectionManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<>c.<get_hasConnectionOwner>b__71_0
bool GlobalNamespace::LiteNetLibConnectionManager::$$c::$get_hasConnectionOwner$b__71_0(::GlobalNamespace::LiteNetLibConnectionManager::NetPeerConnection* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$$c::<get_hasConnectionOwner>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_hasConnectionOwner>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__129
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundDisconnectSentry-d__129.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLibConnectionManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__129.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundDisconnectSentry>d__129.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundDisconnectSentry$d__129::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__130
#include "GlobalNamespace/LiteNetLibConnectionManager_-BackgroundShutdownSentry-d__130.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncTaskMethodBuilder& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LiteNetLibConnectionManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__130.MoveNext
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LiteNetLibConnectionManager/<BackgroundShutdownSentry>d__130.SetStateMachine
void GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LiteNetLibConnectionManager::$BackgroundShutdownSentry$d__130::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager
#include "GlobalNamespace/MenuRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MenuRpcManager/GetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_GetPlayersPermissionConfigurationRpc.hpp"
// Including type: MenuRpcManager/SetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersPermissionConfigurationRpc.hpp"
// Including type: MenuRpcManager/SetPlayersMissingEntitlementsToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersMissingEntitlementsToLevelRpc.hpp"
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
// Including type: MenuRpcManager/SetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/ClearSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
// Including type: MenuRpcManager/RecommendBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_RecommendBeatmapRpc.hpp"
// Including type: MenuRpcManager/ClearRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedBeatmapRpc.hpp"
// Including type: MenuRpcManager/GetRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedBeatmapRpc.hpp"
// Including type: MenuRpcManager/SetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/ClearSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/RecommendGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_RecommendGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/ClearRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedGameplayModifiersRpc.hpp"
// Including type: MenuRpcManager/GetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_GetIsStartButtonEnabledRpc.hpp"
// Including type: MenuRpcManager/SetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_SetIsStartButtonEnabledRpc.hpp"
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
// Including type: MenuRpcManager/SetStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/CancelStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_CancelStartGameTimeRpc.hpp"
// Including type: MenuRpcManager/GetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
// Including type: MenuRpcManager/GetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_GetOwnedSongPacksRpc.hpp"
// Including type: MenuRpcManager/SetOwnedSongPacksRpc
#include "GlobalNamespace/MenuRpcManager_SetOwnedSongPacksRpc.hpp"
// Including type: MenuRpcManager/RequestKickPlayerRpc
#include "GlobalNamespace/MenuRpcManager_RequestKickPlayerRpc.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: RpcHandler`1
#include "GlobalNamespace/RpcHandler_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kMenuState
::StringW GlobalNamespace::MenuRpcManager::_get_kMenuState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::_get_kMenuState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "MenuRpcManager", "kMenuState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuState
void GlobalNamespace::MenuRpcManager::_set_kMenuState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::_set_kMenuState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager", "kMenuState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MenuRpcManager::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RpcHandler`1<MenuRpcManager/RpcType> _rpcHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::MenuRpcManager::RpcType>*& GlobalNamespace::MenuRpcManager::dyn__rpcHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn__rpcHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RpcHandler_1<::GlobalNamespace::MenuRpcManager::RpcType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getPlayersPermissionConfigurationEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getPlayersPermissionConfigurationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getPlayersPermissionConfigurationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getPlayersPermissionConfigurationEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,PlayersLobbyPermissionConfigurationNetSerializable> setPlayersPermissionConfigurationEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setPlayersPermissionConfigurationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setPlayersPermissionConfigurationEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setPlayersPermissionConfigurationEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,PlayersMissingEntitlementsNetSerializable> setPlayersMissingEntitlementsToLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setPlayersMissingEntitlementsToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setPlayersMissingEntitlementsToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setPlayersMissingEntitlementsToLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> getIsEntitledToLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getIsEntitledToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getIsEntitledToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsEntitledToLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.String,System.String,EntitlementsStatus> setIsEntitledToLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>*& GlobalNamespace::MenuRpcManager::dyn_setIsEntitledToLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setIsEntitledToLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsEntitledToLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> levelEntitlementStatusesInvalidatedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_levelEntitlementStatusesInvalidatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_levelEntitlementStatusesInvalidatedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelEntitlementStatusesInvalidatedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> selectedLevelPackEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& GlobalNamespace::MenuRpcManager::dyn_selectedLevelPackEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_selectedLevelPackEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedLevelPackEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> setSelectedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_setSelectedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setSelectedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSelectedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearSelectedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_clearSelectedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_clearSelectedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearSelectedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getSelectedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getSelectedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getSelectedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSelectedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,BeatmapIdentifierNetSerializable> recommendBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>*& GlobalNamespace::MenuRpcManager::dyn_recommendBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_recommendBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recommendBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearRecommendedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_clearRecommendedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_clearRecommendedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearRecommendedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getRecommendedBeatmapEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getRecommendedBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getRecommendedBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRecommendedBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,GameplayModifiers> setSelectedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::MenuRpcManager::dyn_setSelectedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setSelectedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSelectedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearSelectedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_clearSelectedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_clearSelectedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearSelectedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getSelectedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getSelectedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getSelectedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getSelectedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,GameplayModifiers> recommendGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>*& GlobalNamespace::MenuRpcManager::dyn_recommendGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_recommendGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recommendGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> clearRecommendedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_clearRecommendedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_clearRecommendedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearRecommendedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getRecommendedGameplayModifiersEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getRecommendedGameplayModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getRecommendedGameplayModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getRecommendedGameplayModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsStartButtonEnabledEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getIsStartButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getIsStartButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsStartButtonEnabledEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,CannotStartGameReason> setIsStartButtonEnabledEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>*& GlobalNamespace::MenuRpcManager::dyn_setIsStartButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setIsStartButtonEnabledEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsStartButtonEnabledEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> levelLoadErrorEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& GlobalNamespace::MenuRpcManager::dyn_levelLoadErrorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_levelLoadErrorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelLoadErrorEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> levelLoadSuccessEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& GlobalNamespace::MenuRpcManager::dyn_levelLoadSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_levelLoadSuccessEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelLoadSuccessEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,BeatmapIdentifierNetSerializable,GameplayModifiers,System.Single> startedLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>*& GlobalNamespace::MenuRpcManager::dyn_startedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_startedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startedLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getStartedLevelEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getStartedLevelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getStartedLevelEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getStartedLevelEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getMultiplayerGameStateEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getMultiplayerGameStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getMultiplayerGameStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getMultiplayerGameStateEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,MultiplayerGameState> setMultiplayerGameStateEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>*& GlobalNamespace::MenuRpcManager::dyn_setMultiplayerGameStateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setMultiplayerGameStateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setMultiplayerGameStateEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelCountdownEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_cancelCountdownEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_cancelCountdownEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelCountdownEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Single> setCountdownEndTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& GlobalNamespace::MenuRpcManager::dyn_setCountdownEndTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setCountdownEndTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setCountdownEndTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getCountdownEndTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getCountdownEndTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getCountdownEndTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getCountdownEndTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelledLevelStartEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_cancelledLevelStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_cancelledLevelStartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelledLevelStartEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getIsReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getIsReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Boolean> setIsReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& GlobalNamespace::MenuRpcManager::dyn_setIsReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setIsReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Single> setStartGameTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& GlobalNamespace::MenuRpcManager::dyn_setStartGameTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setStartGameTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setStartGameTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> cancelStartGameTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_cancelStartGameTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_cancelStartGameTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancelStartGameTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getIsInLobbyEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getIsInLobbyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getIsInLobbyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getIsInLobbyEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Boolean> setIsInLobbyEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, bool>*& GlobalNamespace::MenuRpcManager::dyn_setIsInLobbyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setIsInLobbyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setIsInLobbyEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getOwnedSongPacksEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::MenuRpcManager::dyn_getOwnedSongPacksEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_getOwnedSongPacksEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getOwnedSongPacksEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,SongPackMask> setOwnedSongPacksEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>*& GlobalNamespace::MenuRpcManager::dyn_setOwnedSongPacksEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_setOwnedSongPacksEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setOwnedSongPacksEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.String> requestedKickPlayerEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::StringW>*& GlobalNamespace::MenuRpcManager::dyn_requestedKickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::dyn_requestedKickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestedKickPlayerEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuRpcManager.get_multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::get_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IMultiplayerSessionManager*, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_enabled
bool GlobalNamespace::MenuRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.set_enabled
void GlobalNamespace::MenuRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::set_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.get_enabledForAllPlayers
bool GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::get_enabledForAllPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabledForAllPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.get_syncTime
float GlobalNamespace::MenuRpcManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::get_syncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.add_getPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setPlayersPermissionConfigurationEvent
void GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setPlayersPermissionConfigurationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersPermissionConfigurationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setPlayersMissingEntitlementsToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setPlayersMissingEntitlementsToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayersMissingEntitlementsToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsEntitledToLevelEvent
void GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent(::System::Action_3<::StringW, ::StringW, ::GlobalNamespace::EntitlementsStatus>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setIsEntitledToLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsEntitledToLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelEntitlementStatusesInvalidatedEvent
void GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_levelEntitlementStatusesInvalidatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelEntitlementStatusesInvalidatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_selectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_selectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_clearSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getSelectedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_recommendBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_recommendBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent(::System::Action_2<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_recommendBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_clearRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getRecommendedBeatmapEvent
void GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getRecommendedBeatmapEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_setSelectedGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_clearSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getSelectedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getSelectedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getSelectedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_recommendGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_recommendGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent(::System::Action_2<::StringW, ::GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_recommendGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_recommendGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_clearRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_clearRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getRecommendedGameplayModifiersEvent
void GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getRecommendedGameplayModifiersEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getRecommendedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsStartButtonEnabledEvent
void GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent(::System::Action_2<::StringW, ::GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setIsStartButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsStartButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadErrorEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_levelLoadErrorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelLoadErrorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_levelLoadSuccessEvent
void GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_levelLoadSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelLoadSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_startedLevelEvent
void GlobalNamespace::MenuRpcManager::add_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_startedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_startedLevelEvent(::System::Action_4<::StringW, ::GlobalNamespace::BeatmapIdentifierNetSerializable*, ::GlobalNamespace::GameplayModifiers*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_startedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getStartedLevelEvent
void GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getStartedLevelEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getStartedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setMultiplayerGameStateEvent
void GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setMultiplayerGameStateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setMultiplayerGameStateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelCountdownEvent
void GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_cancelCountdownEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelCountdownEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setCountdownEndTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getCountdownEndTimeEvent
void GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getCountdownEndTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getCountdownEndTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelledLevelStartEvent
void GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_cancelledLevelStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelledLevelStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_getIsReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::add_setIsReadyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsReadyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setIsReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setStartGameTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_cancelStartGameTimeEvent
void GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_cancelStartGameTimeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelStartGameTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setIsInLobbyEvent
void GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent(::System::Action_2<::StringW, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setIsInLobbyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setIsInLobbyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_getOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_getOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_setOwnedSongPacksEvent
void GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent(::System::Action_2<::StringW, ::GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_setOwnedSongPacksEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setOwnedSongPacksEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.add_requestedKickPlayerEvent
void GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::add_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.remove_requestedKickPlayerEvent
void GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent(::System::Action_2<::StringW, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::remove_requestedKickPlayerEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestedKickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MenuRpcManager.Dispose
void GlobalNamespace::MenuRpcManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.EnabledForPlayer
bool GlobalNamespace::MenuRpcManager::EnabledForPlayer(::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::EnabledForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnabledForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, player);
}
// Autogenerated method: MenuRpcManager.GetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration(::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetPlayersPermissionConfiguration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersPermissionConfiguration);
}
// Autogenerated method: MenuRpcManager.InvokeSetPlayersPermissionConfiguration
void GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration(::StringW userId, ::GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersPermissionConfiguration);
}
// Autogenerated method: MenuRpcManager.SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel(::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetPlayersMissingEntitlementsToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersMissingEntitlements);
}
// Autogenerated method: MenuRpcManager.InvokeSetPlayersMissingEntitlementsToLevelRpc
void GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc(::StringW userId, ::GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetPlayersMissingEntitlementsToLevelRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetPlayersMissingEntitlementsToLevelRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersMissingEntitlements);
}
// Autogenerated method: MenuRpcManager.GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel(::StringW userId, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel(::StringW levelId, ::GlobalNamespace::EntitlementsStatus entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetIsEntitledToLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel(::StringW userId, ::StringW levelId, int entitlementStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(entitlementStatus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId, entitlementStatus);
}
// Autogenerated method: MenuRpcManager.InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvalidateLevelEntitlementStatuses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateLevelEntitlementStatuses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeLevelEntitlementStatusesInvalidated
void GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeLevelEntitlementStatusesInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelEntitlementStatusesInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SelectLevelPack
void GlobalNamespace::MenuRpcManager::SelectLevelPack(::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SelectLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelPackId);
}
// Autogenerated method: MenuRpcManager.InvokeOnSelectedLevelPackEvent
void GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent(::StringW userId, ::StringW levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeOnSelectedLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSelectedLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelPackId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelPackId);
}
// Autogenerated method: MenuRpcManager.SetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::SetSelectedBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated method: MenuRpcManager.InvokeSetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, identifier);
}
// Autogenerated method: MenuRpcManager.ClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::ClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeClearSelectedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetSelectedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedBeatmapRpc
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetSelectedBeatmapRpc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetSelectedBeatmapRpc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.RecommendBeatmap
void GlobalNamespace::MenuRpcManager::RecommendBeatmap(::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RecommendBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identifier);
}
// Autogenerated method: MenuRpcManager.InvokeRecommendBeatmap
void GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* identifier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeRecommendBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(identifier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, identifier);
}
// Autogenerated method: MenuRpcManager.ClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::ClearRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeClearRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetRecommendedBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.InvokeSetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.ClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::ClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeClearSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetSelectedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetSelectedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetSelectedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.RecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers(::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RecommendGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.InvokeRecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers(::StringW userId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeRecommendGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: MenuRpcManager.ClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::ClearRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeClearRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetRecommendedGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled(::GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetIsStartButtonEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled(::StringW userId, ::GlobalNamespace::CannotStartGameReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, reason);
}
// Autogenerated method: MenuRpcManager.LevelLoadError
void GlobalNamespace::MenuRpcManager::LevelLoadError(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::LevelLoadError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelLoadError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadError
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadError(::StringW userId, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeLevelLoadError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelLoadError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::LevelLoadSuccess(::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::LevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelLoadSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, levelId);
}
// Autogenerated method: MenuRpcManager.InvokeLevelLoadSuccess
void GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess(::StringW userId, ::StringW levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeLevelLoadSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelLoadSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: MenuRpcManager.StartLevel
void GlobalNamespace::MenuRpcManager::StartLevel(::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::StartLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.InvokeStartLevel
void GlobalNamespace::MenuRpcManager::InvokeStartLevel(::StringW userId, ::GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, ::GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeStartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeStartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: MenuRpcManager.GetStartedLevel
void GlobalNamespace::MenuRpcManager::GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetStartedLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetStartedLevel
void GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::SetMultiplayerGameState(::GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetMultiplayerGameState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: MenuRpcManager.InvokeSetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState(::StringW userId, ::GlobalNamespace::MultiplayerGameState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetMultiplayerGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetMultiplayerGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, lobbyState);
}
// Autogenerated method: MenuRpcManager.CancelCountdown
void GlobalNamespace::MenuRpcManager::CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::CancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelCountdown(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::SetCountdownEndTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime(::StringW userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetCountdownEndTime
void GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.CancelLevelStart
void GlobalNamespace::MenuRpcManager::CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::CancelLevelStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelLevelStart
void GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeCancelLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsReady
void GlobalNamespace::MenuRpcManager::GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsReady
void GlobalNamespace::MenuRpcManager::InvokeGetIsReady(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsReady
void GlobalNamespace::MenuRpcManager::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsReady
void GlobalNamespace::MenuRpcManager::InvokeSetIsReady(::StringW userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: MenuRpcManager.SetStartGameTime
void GlobalNamespace::MenuRpcManager::SetStartGameTime(float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetStartGameTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newTime);
}
// Autogenerated method: MenuRpcManager.InvokeSetStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown(::StringW userId, float newTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetStartGameCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, newTime);
}
// Autogenerated method: MenuRpcManager.CancelStartGameTime
void GlobalNamespace::MenuRpcManager::CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::CancelStartGameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeCancelStartGameCountdown
void GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeCancelStartGameCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeCancelStartGameCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.GetIsInLobby
void GlobalNamespace::MenuRpcManager::GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetIsInLobby
void GlobalNamespace::MenuRpcManager::SetIsInLobby(bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBack);
}
// Autogenerated method: MenuRpcManager.InvokeSetIsInLobby
void GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby(::StringW userId, bool isBack) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isBack)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, isBack);
}
// Autogenerated method: MenuRpcManager.GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::GetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuRpcManager.InvokeGetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MenuRpcManager.SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::SetOwnedSongPacks(::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::SetOwnedSongPacks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: MenuRpcManager.InvokeSetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks(::StringW userId, ::GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeSetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, songPackMask);
}
// Autogenerated method: MenuRpcManager.RequestKickPlayer
void GlobalNamespace::MenuRpcManager::RequestKickPlayer(::StringW kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, kickedPlayerId);
}
// Autogenerated method: MenuRpcManager.InvokeKickPlayer
void GlobalNamespace::MenuRpcManager::InvokeKickPlayer(::StringW userId, ::StringW kickedPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::InvokeKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(kickedPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, kickedPlayerId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RpcType
#include "GlobalNamespace/MenuRpcManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetPlayersMissingEntitlementsToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetPlayersMissingEntitlementsToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetPlayersMissingEntitlementsToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetPlayersMissingEntitlementsToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetPlayersMissingEntitlementsToLevel(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetPlayersMissingEntitlementsToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetPlayersMissingEntitlementsToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsEntitledToLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsEntitledToLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsEntitledToLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsEntitledToLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_InvalidateLevelEntitlementStatuses");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType InvalidateLevelEntitlementStatuses
void GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_InvalidateLevelEntitlementStatuses");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "InvalidateLevelEntitlementStatuses", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SelectLevelPack
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SelectLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SelectLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SelectLevelPack
void GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SelectLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SelectLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RecommendBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RecommendBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RecommendBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RecommendBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearRecommendedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearRecommendedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetRecommendedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetRecommendedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetRecommendedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetSelectedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_RecommendGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RecommendGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RecommendGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_RecommendGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RecommendGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_ClearRecommendedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearRecommendedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_ClearRecommendedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearRecommendedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetRecommendedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetRecommendedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetRecommendedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetRecommendedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetRecommendedGameplayModifiers", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadError
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadError"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadError
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadError", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType LevelLoadSuccess
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_LevelLoadSuccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "LevelLoadSuccess"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType LevelLoadSuccess
void GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_LevelLoadSuccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "LevelLoadSuccess", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType StartLevel
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_StartLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "StartLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType StartLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_StartLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "StartLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetStartedLevel
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetStartedLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetStartedLevel"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetStartedLevel
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetStartedLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetStartedLevel", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelLevelStart
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_CancelLevelStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelLevelStart"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelLevelStart
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_CancelLevelStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelLevelStart", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetMultiplayerGameState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetMultiplayerGameState"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetMultiplayerGameState
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetMultiplayerGameState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetMultiplayerGameState", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsReady
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsReady
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsReady"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsReady
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsReady", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetStartGameTime
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelStartGameTime
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_CancelStartGameTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelStartGameTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelStartGameTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_CancelStartGameTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelStartGameTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsInLobby
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsInLobby
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsInLobby"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsInLobby
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetCountdownEndTime
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetCountdownEndTime
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetCountdownEndTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetCountdownEndTime"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetCountdownEndTime
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetCountdownEndTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetCountdownEndTime", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType CancelCountdown
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_CancelCountdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "CancelCountdown"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType CancelCountdown
void GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_CancelCountdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "CancelCountdown", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetOwnedSongPacks", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetOwnedSongPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetOwnedSongPacks"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetOwnedSongPacks
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetOwnedSongPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetOwnedSongPacks", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType RequestKickPlayer
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_RequestKickPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_RequestKickPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "RequestKickPlayer"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType RequestKickPlayer
void GlobalNamespace::MenuRpcManager::RpcType::_set_RequestKickPlayer(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_RequestKickPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "RequestKickPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetPermissionConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetPermissionConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetPermissionConfiguration
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetPermissionConfiguration(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetPermissionConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetPermissionConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetPermissionConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetPermissionConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetPermissionConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetPermissionConfiguration
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetPermissionConfiguration(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetPermissionConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetPermissionConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_GetIsStartButtonEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "GetIsStartButtonEnabled"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType GetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsStartButtonEnabled(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_GetIsStartButtonEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "GetIsStartButtonEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsStartButtonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_SetIsStartButtonEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "SetIsStartButtonEnabled"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType SetIsStartButtonEnabled
void GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsStartButtonEnabled(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_SetIsStartButtonEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "SetIsStartButtonEnabled", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearSelectedBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearSelectedBeatmap
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedBeatmap(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearSelectedBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
::GlobalNamespace::MenuRpcManager::RpcType GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_get_ClearSelectedGameplayModifiers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MenuRpcManager::RpcType>("", "MenuRpcManager/RpcType", "ClearSelectedGameplayModifiers"));
}
// Autogenerated static field setter
// Set static field: static public MenuRpcManager/RpcType ClearSelectedGameplayModifiers
void GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedGameplayModifiers(::GlobalNamespace::MenuRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::_set_ClearSelectedGameplayModifiers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MenuRpcManager/RpcType", "ClearSelectedGameplayModifiers", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::MenuRpcManager::RpcType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuRpcManager::RpcType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_GetPlayersPermissionConfigurationRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetPlayersPermissionConfigurationRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersPermissionConfigurationRpc.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetPlayersMissingEntitlementsToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetPlayersMissingEntitlementsToLevelRpc.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetIsEntitledToLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsEntitledToLevelRpc
#include "GlobalNamespace/MenuRpcManager_SetIsEntitledToLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/InvalidateLevelEntitlementStatusesRpc
#include "GlobalNamespace/MenuRpcManager_InvalidateLevelEntitlementStatusesRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SelectLevelPackRpc
#include "GlobalNamespace/MenuRpcManager_SelectLevelPackRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedBeatmapRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RecommendBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_RecommendBeatmapRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetRecommendedBeatmapRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedBeatmapRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_SetSelectedGameplayModifiersRpc.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearSelectedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetSelectedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetSelectedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/RecommendGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_RecommendGameplayModifiersRpc.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/ClearRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_ClearRecommendedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetRecommendedGameplayModifiersRpc
#include "GlobalNamespace/MenuRpcManager_GetRecommendedGameplayModifiersRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_GetIsStartButtonEnabledRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsStartButtonEnabledRpc
#include "GlobalNamespace/MenuRpcManager_SetIsStartButtonEnabledRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/LevelLoadErrorRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadErrorRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/LevelLoadSuccessRpc
#include "GlobalNamespace/MenuRpcManager_LevelLoadSuccessRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/StartLevelRpc
#include "GlobalNamespace/MenuRpcManager_StartLevelRpc.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetStartedLevelRpc
#include "GlobalNamespace/MenuRpcManager_GetStartedLevelRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_GetMultiplayerGameStateRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetMultiplayerGameStateRpc
#include "GlobalNamespace/MenuRpcManager_SetMultiplayerGameStateRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelCountdownRpc
#include "GlobalNamespace/MenuRpcManager_CancelCountdownRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetCountdownEndTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetCountdownEndTimeRpc
#include "GlobalNamespace/MenuRpcManager_GetCountdownEndTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelLevelStartRpc
#include "GlobalNamespace/MenuRpcManager_CancelLevelStartRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsReadyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_SetStartGameTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/CancelStartGameTimeRpc
#include "GlobalNamespace/MenuRpcManager_CancelStartGameTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/GetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_GetIsInLobbyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuRpcManager/SetIsInLobbyRpc
#include "GlobalNamespace/MenuRpcManager_SetIsInLobbyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
