// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.ContingentProperties
#include "System/Threading/Tasks/Task_ContingentProperties.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ManualResetEventSlim
#include "System/Threading/ManualResetEventSlim.hpp"
// Including type: System.Threading.Tasks.TaskExceptionHolder
#include "System/Threading/Tasks/TaskExceptionHolder.hpp"
// Including type: System.Threading.Tasks.Shared`1
#include "System/Threading/Tasks/Shared_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Threading.ExecutionContext m_capturedContext
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Threading::Tasks::Task::ContingentProperties::dyn_m_capturedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_capturedContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_capturedContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.ManualResetEventSlim m_completionEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEventSlim*& System::Threading::Tasks::Task::ContingentProperties::dyn_m_completionEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_completionEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completionEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEventSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.TaskExceptionHolder m_exceptionsHolder
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskExceptionHolder*& System::Threading::Tasks::Task::ContingentProperties::dyn_m_exceptionsHolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_exceptionsHolder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_exceptionsHolder"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskExceptionHolder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.CancellationToken m_cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Threading::Tasks::Task::ContingentProperties::dyn_m_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Tasks.Shared`1<System.Threading.CancellationTokenRegistration> m_cancellationRegistration
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Shared_1<::System::Threading::CancellationTokenRegistration>*& System::Threading::Tasks::Task::ContingentProperties::dyn_m_cancellationRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_cancellationRegistration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cancellationRegistration"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Shared_1<::System::Threading::CancellationTokenRegistration>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_internalCancellationRequested
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::Task::ContingentProperties::dyn_m_internalCancellationRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_internalCancellationRequested");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_internalCancellationRequested"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_completionCountdown
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::Task::ContingentProperties::dyn_m_completionCountdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_completionCountdown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completionCountdown"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.Threading.Tasks.Task> m_exceptionalChildren
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Threading::Tasks::Task*>*& System::Threading::Tasks::Task::ContingentProperties::dyn_m_exceptionalChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::dyn_m_exceptionalChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_exceptionalChildren"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.ContingentProperties.SetCompleted
void System::Threading::Tasks::Task::ContingentProperties::SetCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::SetCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.ContingentProperties.DeregisterCancellationCallback
void System::Threading::Tasks::Task::ContingentProperties::DeregisterCancellationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::ContingentProperties::DeregisterCancellationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeregisterCancellationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.SetOnInvokeMres
#include "System/Threading/Tasks/Task_SetOnInvokeMres.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.SetOnInvokeMres.Invoke
void System::Threading::Tasks::Task::SetOnInvokeMres::Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::SetOnInvokeMres::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.DelayPromise
#include "System/Threading/Tasks/Task_DelayPromise.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.CancellationToken Token
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Threading::Tasks::Task::DelayPromise::dyn_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::DelayPromise::dyn_Token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Token"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.CancellationTokenRegistration Registration
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenRegistration& System::Threading::Tasks::Task::DelayPromise::dyn_Registration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::DelayPromise::dyn_Registration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Registration"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenRegistration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Threading.Timer Timer
[[deprecated("Use field access instead!")]] ::System::Threading::Timer*& System::Threading::Tasks::Task::DelayPromise::dyn_Timer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::DelayPromise::dyn_Timer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Timer"))->offset;
  return *reinterpret_cast<::System::Threading::Timer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.DelayPromise.Complete
void System::Threading::Tasks::Task::DelayPromise::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::DelayPromise::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.WhenAllPromise
#include "System/Threading/Tasks/Task_WhenAllPromise.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task[] m_tasks
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Threading::Tasks::Task*>& System::Threading::Tasks::Task::WhenAllPromise::dyn_m_tasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::WhenAllPromise::dyn_m_tasks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_tasks"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Threading::Tasks::Task*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_count
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::Task::WhenAllPromise::dyn_m_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::WhenAllPromise::dyn_m_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.WhenAllPromise.Invoke
void System::Threading::Tasks::Task::WhenAllPromise::Invoke(::System::Threading::Tasks::Task* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::WhenAllPromise::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedTask);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.WhenAllPromise.get_ShouldNotifyDebuggerOfWaitCompletion
bool System::Threading::Tasks::Task::WhenAllPromise::get_ShouldNotifyDebuggerOfWaitCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::WhenAllPromise::get_ShouldNotifyDebuggerOfWaitCompletion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShouldNotifyDebuggerOfWaitCompletion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.<>c__DisplayClass178_0
#include "System/Threading/Tasks/Task_--c__DisplayClass178_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task root
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean replicasAreQuitting
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_replicasAreQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_replicasAreQuitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "replicasAreQuitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Object> taskReplicaDelegate
[[deprecated("Use field access instead!")]] ::System::Action_1<::Il2CppObject*>*& System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_taskReplicaDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_taskReplicaDelegate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taskReplicaDelegate"))->offset;
  return *reinterpret_cast<::System::Action_1<::Il2CppObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCreationOptions creationOptionsForReplicas
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCreationOptions& System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_creationOptionsForReplicas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_creationOptionsForReplicas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "creationOptionsForReplicas"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCreationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.InternalTaskOptions internalOptionsForReplicas
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::InternalTaskOptions& System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_internalOptionsForReplicas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::dyn_internalOptionsForReplicas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "internalOptionsForReplicas"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::InternalTaskOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c__DisplayClass178_0.<ExecuteSelfReplicating>b__0
void System::Threading::Tasks::Task::$$c__DisplayClass178_0::$ExecuteSelfReplicating$b__0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c__DisplayClass178_0::<ExecuteSelfReplicating>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteSelfReplicating>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/Task_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.TimerCallback
#include "System/Threading/TimerCallback.hpp"
// Including type: System.Threading.Tasks.Task/System.Threading.Tasks.ContingentProperties
#include "System/Threading/Tasks/Task_ContingentProperties.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.Task/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::Task::$$c* System::Threading::Tasks::Task::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::Task::$$c*>("System.Threading.Tasks", "Task/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.Task/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::Task::$$c::_set_$$9(::System::Threading::Tasks::Task::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__276_0
::System::Action_1<::Il2CppObject*>* System::Threading::Tasks::Task::$$c::_get_$$9__276_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_get_$$9__276_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading.Tasks", "Task/<>c", "<>9__276_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__276_0
void System::Threading::Tasks::Task::$$c::_set_$$9__276_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_set_$$9__276_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9__276_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.TimerCallback <>9__276_1
::System::Threading::TimerCallback* System::Threading::Tasks::Task::$$c::_get_$$9__276_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_get_$$9__276_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::TimerCallback*>("System.Threading.Tasks", "Task/<>c", "<>9__276_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.TimerCallback <>9__276_1
void System::Threading::Tasks::Task::$$c::_set_$$9__276_1(::System::Threading::TimerCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::_set_$$9__276_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "Task/<>c", "<>9__276_1", value)));
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::Task::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "Task/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c.<Delay>b__276_0
void System::Threading::Tasks::Task::$$c::$Delay$b__276_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::<Delay>b__276_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Delay>b__276_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c.<Delay>b__276_1
void System::Threading::Tasks::Task::$$c::$Delay$b__276_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::<Delay>b__276_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Delay>b__276_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c.<.cctor>b__295_0
::System::Threading::Tasks::Task::ContingentProperties* System::Threading::Tasks::Task::$$c::$_cctor$b__295_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::<.cctor>b__295_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task::ContingentProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c.<.cctor>b__295_1
bool System::Threading::Tasks::Task::$$c::$_cctor$b__295_1(::System::Threading::Tasks::Task* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::<.cctor>b__295_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated method: System.Threading.Tasks.Task/System.Threading.Tasks.<>c.<.cctor>b__295_2
bool System::Threading::Tasks::Task::$$c::$_cctor$b__295_2(::Il2CppObject* tc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::Task::$$c::<.cctor>b__295_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__295_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, tc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.CompletionActionInvoker
#include "System/Threading/Tasks/CompletionActionInvoker.hpp"
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.ITaskCompletionAction m_action
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::ITaskCompletionAction*& System::Threading::Tasks::CompletionActionInvoker::dyn_m_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::CompletionActionInvoker::dyn_m_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_action"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::ITaskCompletionAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task m_completingTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::CompletionActionInvoker::dyn_m_completingTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::CompletionActionInvoker::dyn_m_completingTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completingTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.CompletionActionInvoker.ExecuteWorkItem
void System::Threading::Tasks::CompletionActionInvoker::ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::CompletionActionInvoker::ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.CompletionActionInvoker.MarkAborted
void System::Threading::Tasks::CompletionActionInvoker::MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::CompletionActionInvoker::MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskCreationOptions
#include "System/Threading/Tasks/TaskCreationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions None
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions None
void System::Threading::Tasks::TaskCreationOptions::_set_None(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions PreferFairness
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_PreferFairness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_PreferFairness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "PreferFairness"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions PreferFairness
void System::Threading::Tasks::TaskCreationOptions::_set_PreferFairness(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_PreferFairness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "PreferFairness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions LongRunning
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_LongRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_LongRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "LongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions LongRunning
void System::Threading::Tasks::TaskCreationOptions::_set_LongRunning(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_LongRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "LongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions AttachedToParent
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_AttachedToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_AttachedToParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "AttachedToParent"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions AttachedToParent
void System::Threading::Tasks::TaskCreationOptions::_set_AttachedToParent(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_AttachedToParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "AttachedToParent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions DenyChildAttach
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_DenyChildAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_DenyChildAttach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "DenyChildAttach"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions DenyChildAttach
void System::Threading::Tasks::TaskCreationOptions::_set_DenyChildAttach(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_DenyChildAttach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "DenyChildAttach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions HideScheduler
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_HideScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_HideScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "HideScheduler"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions HideScheduler
void System::Threading::Tasks::TaskCreationOptions::_set_HideScheduler(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_HideScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "HideScheduler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskCreationOptions RunContinuationsAsynchronously
::System::Threading::Tasks::TaskCreationOptions System::Threading::Tasks::TaskCreationOptions::_get_RunContinuationsAsynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_get_RunContinuationsAsynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskCreationOptions>("System.Threading.Tasks", "TaskCreationOptions", "RunContinuationsAsynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskCreationOptions RunContinuationsAsynchronously
void System::Threading::Tasks::TaskCreationOptions::_set_RunContinuationsAsynchronously(::System::Threading::Tasks::TaskCreationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::_set_RunContinuationsAsynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskCreationOptions", "RunContinuationsAsynchronously", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskCreationOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCreationOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.InternalTaskOptions
#include "System/Threading/Tasks/InternalTaskOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions None
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions None
void System::Threading::Tasks::InternalTaskOptions::_set_None(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions InternalOptionsMask
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_InternalOptionsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_InternalOptionsMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "InternalOptionsMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions InternalOptionsMask
void System::Threading::Tasks::InternalTaskOptions::_set_InternalOptionsMask(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_InternalOptionsMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "InternalOptionsMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions ChildReplica
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_ChildReplica() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_ChildReplica");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "ChildReplica"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions ChildReplica
void System::Threading::Tasks::InternalTaskOptions::_set_ChildReplica(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_ChildReplica");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "ChildReplica", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions ContinuationTask
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_ContinuationTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_ContinuationTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "ContinuationTask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions ContinuationTask
void System::Threading::Tasks::InternalTaskOptions::_set_ContinuationTask(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_ContinuationTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "ContinuationTask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions PromiseTask
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_PromiseTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_PromiseTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "PromiseTask"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions PromiseTask
void System::Threading::Tasks::InternalTaskOptions::_set_PromiseTask(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_PromiseTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "PromiseTask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions SelfReplicating
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_SelfReplicating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_SelfReplicating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "SelfReplicating"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions SelfReplicating
void System::Threading::Tasks::InternalTaskOptions::_set_SelfReplicating(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_SelfReplicating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "SelfReplicating", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions LazyCancellation
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_LazyCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_LazyCancellation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "LazyCancellation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions LazyCancellation
void System::Threading::Tasks::InternalTaskOptions::_set_LazyCancellation(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_LazyCancellation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "LazyCancellation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions QueuedByRuntime
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_QueuedByRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_QueuedByRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "QueuedByRuntime"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions QueuedByRuntime
void System::Threading::Tasks::InternalTaskOptions::_set_QueuedByRuntime(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_QueuedByRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "QueuedByRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.InternalTaskOptions DoNotDispose
::System::Threading::Tasks::InternalTaskOptions System::Threading::Tasks::InternalTaskOptions::_get_DoNotDispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_get_DoNotDispose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::InternalTaskOptions>("System.Threading.Tasks", "InternalTaskOptions", "DoNotDispose"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.InternalTaskOptions DoNotDispose
void System::Threading::Tasks::InternalTaskOptions::_set_DoNotDispose(::System::Threading::Tasks::InternalTaskOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::_set_DoNotDispose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "InternalTaskOptions", "DoNotDispose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::InternalTaskOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::InternalTaskOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskContinuationOptions
#include "System/Threading/Tasks/TaskContinuationOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions None
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions None
void System::Threading::Tasks::TaskContinuationOptions::_set_None(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_PreferFairness() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_PreferFairness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions PreferFairness
void System::Threading::Tasks::TaskContinuationOptions::_set_PreferFairness(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_PreferFairness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "PreferFairness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LongRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_LongRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LongRunning
void System::Threading::Tasks::TaskContinuationOptions::_set_LongRunning(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_LongRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LongRunning", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_AttachedToParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_AttachedToParent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions AttachedToParent
void System::Threading::Tasks::TaskContinuationOptions::_set_AttachedToParent(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_AttachedToParent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "AttachedToParent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_DenyChildAttach() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_DenyChildAttach");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions DenyChildAttach
void System::Threading::Tasks::TaskContinuationOptions::_set_DenyChildAttach(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_DenyChildAttach");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "DenyChildAttach", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_HideScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_HideScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions HideScheduler
void System::Threading::Tasks::TaskContinuationOptions::_set_HideScheduler(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_HideScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "HideScheduler", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_LazyCancellation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_LazyCancellation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions LazyCancellation
void System::Threading::Tasks::TaskContinuationOptions::_set_LazyCancellation(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_LazyCancellation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "LazyCancellation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_RunContinuationsAsynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_RunContinuationsAsynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions RunContinuationsAsynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_RunContinuationsAsynchronously(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_RunContinuationsAsynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "RunContinuationsAsynchronously", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_NotOnRanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnRanToCompletion(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_NotOnRanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_NotOnFaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnFaulted(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_NotOnFaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_NotOnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_NotOnCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions NotOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_NotOnCanceled(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_NotOnCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "NotOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnRanToCompletion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnRanToCompletion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnRanToCompletion
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnRanToCompletion(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnRanToCompletion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnRanToCompletion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnFaulted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnFaulted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnFaulted
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnFaulted(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnFaulted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnFaulted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_OnlyOnCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions OnlyOnCanceled
void System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnCanceled(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_OnlyOnCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "OnlyOnCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
::System::Threading::Tasks::TaskContinuationOptions System::Threading::Tasks::TaskContinuationOptions::_get_ExecuteSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_get_ExecuteSynchronously");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskContinuationOptions>("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.Tasks.TaskContinuationOptions ExecuteSynchronously
void System::Threading::Tasks::TaskContinuationOptions::_set_ExecuteSynchronously(::System::Threading::Tasks::TaskContinuationOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::_set_ExecuteSynchronously");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskContinuationOptions", "ExecuteSynchronously", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskContinuationOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuationOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.StackGuard
#include "System/Threading/Tasks/StackGuard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
int System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::_get_MAX_UNCHECKED_INLINING_DEPTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MAX_UNCHECKED_INLINING_DEPTH
void System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::_set_MAX_UNCHECKED_INLINING_DEPTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "StackGuard", "MAX_UNCHECKED_INLINING_DEPTH", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_inliningDepth
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::StackGuard::dyn_m_inliningDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::dyn_m_inliningDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_inliningDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.TryBeginInliningScope
bool System::Threading::Tasks::StackGuard::TryBeginInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::TryBeginInliningScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryBeginInliningScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.EndInliningScope
void System::Threading::Tasks::StackGuard::EndInliningScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::EndInliningScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInliningScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.StackGuard.CheckForSufficientStack
bool System::Threading::Tasks::StackGuard::CheckForSufficientStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StackGuard::CheckForSufficientStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForSufficientStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.ITaskCompletionAction
#include "System/Threading/Tasks/ITaskCompletionAction.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::Threading::Tasks::ITaskCompletionAction::Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ITaskCompletionAction::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskCanceledException
#include "System/Threading/Tasks/TaskCanceledException.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task m_canceledTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskCanceledException::dyn_m_canceledTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskCanceledException::dyn_m_canceledTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_canceledTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.ContinuationTaskFromTask
#include "System/Threading/Tasks/ContinuationTaskFromTask.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task m_antecedent
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::ContinuationTaskFromTask::dyn_m_antecedent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ContinuationTaskFromTask::dyn_m_antecedent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_antecedent"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.ContinuationTaskFromTask.InnerInvoke
void System::Threading::Tasks::ContinuationTaskFromTask::InnerInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ContinuationTaskFromTask::InnerInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InnerInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskContinuation
#include "System/Threading/Tasks/TaskContinuation.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskContinuation.Run
void System::Threading::Tasks::TaskContinuation::Run(::System::Threading::Tasks::Task* completedTask, bool bCanInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask), ::il2cpp_utils::ExtractType(bCanInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedTask, bCanInlineContinuationTask);
}
// Autogenerated method: System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue
void System::Threading::Tasks::TaskContinuation::InlineIfPossibleOrElseQueue(::System::Threading::Tasks::Task* task, bool needsProtection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskContinuation::InlineIfPossibleOrElseQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskContinuation", "InlineIfPossibleOrElseQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(needsProtection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, needsProtection);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.StandardTaskContinuation
#include "System/Threading/Tasks/StandardTaskContinuation.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task m_task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::StandardTaskContinuation::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.TaskContinuationOptions m_options
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskContinuationOptions& System::Threading::Tasks::StandardTaskContinuation::dyn_m_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_options");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_options"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskContinuationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskScheduler m_taskScheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::StandardTaskContinuation::dyn_m_taskScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::dyn_m_taskScheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskScheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.StandardTaskContinuation.Run
void System::Threading::Tasks::StandardTaskContinuation::Run(::System::Threading::Tasks::Task* completedTask, bool bCanInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::StandardTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask), ::il2cpp_utils::ExtractType(bCanInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completedTask, bCanInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.SynchronizationContext
#include "System/Threading/SynchronizationContext.hpp"
// Including type: System.Threading.SendOrPostCallback
#include "System/Threading/SendOrPostCallback.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.SendOrPostCallback s_postCallback
::System::Threading::SendOrPostCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::SendOrPostCallback*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postCallback"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.SendOrPostCallback s_postCallback
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postCallback(::System::Threading::SendOrPostCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_postActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_get_s_postActionCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postActionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_postActionCallback
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postActionCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_set_s_postActionCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "s_postActionCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.SynchronizationContext m_syncContext
[[deprecated("Use field access instead!")]] ::System::Threading::SynchronizationContext*& System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::dyn_m_syncContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::dyn_m_syncContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_syncContext"))->offset;
  return *reinterpret_cast<::System::Threading::SynchronizationContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation..cctor
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.PostAction
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::PostAction(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::PostAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "PostAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.GetPostActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::GetPostActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::GetPostActionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation", "GetPostActionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ContextCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation.Run
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::Run(::System::Threading::Tasks::Task* task, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/SynchronizationContextAwaitTaskContinuation_--c.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c* System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c*>("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "SynchronizationContextAwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.SynchronizationContextAwaitTaskContinuation/System.Threading.Tasks.<>c.<.cctor>b__7_0
void System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::$_cctor$b__7_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::SynchronizationContextAwaitTaskContinuation::$$c::<.cctor>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.TaskScheduler m_scheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::dyn_m_scheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::dyn_m_scheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_scheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation.Run
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::Run(::System::Threading::Tasks::Task* ignored, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignored), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ignored, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/TaskSchedulerAwaitTaskContinuation_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c*>("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__2_0
::System::Action_1<::Il2CppObject*>* System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::Il2CppObject*>*>("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__2_0
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9__2_0(::System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskSchedulerAwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskSchedulerAwaitTaskContinuation/System.Threading.Tasks.<>c.<Run>b__2_0
void System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::$Run$b__2_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskSchedulerAwaitTaskContinuation::$$c::<Run>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Run>b__2_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AwaitTaskContinuation
#include "System/Threading/Tasks/AwaitTaskContinuation.hpp"
// Including type: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/AwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::_get_s_invokeActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::_get_s_invokeActionCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ContextCallback*>("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeActionCallback
void System::Threading::Tasks::AwaitTaskContinuation::_set_s_invokeActionCallback(::System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::_set_s_invokeActionCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation", "s_invokeActionCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.ExecutionContext m_capturedContext
[[deprecated("Use field access instead!")]] ::System::Threading::ExecutionContext*& System::Threading::Tasks::AwaitTaskContinuation::dyn_m_capturedContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::dyn_m_capturedContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_capturedContext"))->offset;
  return *reinterpret_cast<::System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Action m_action
[[deprecated("Use field access instead!")]] ::System::Action*& System::Threading::Tasks::AwaitTaskContinuation::dyn_m_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::dyn_m_action");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_action"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.get_IsValidLocationForInlining
bool System::Threading::Tasks::AwaitTaskContinuation::get_IsValidLocationForInlining() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::get_IsValidLocationForInlining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "get_IsValidLocationForInlining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.CreateTask
::System::Threading::Tasks::Task* System::Threading::Tasks::AwaitTaskContinuation::CreateTask(::System::Action_1<::Il2CppObject*>* action, ::Il2CppObject* state, ::System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::CreateTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(scheduler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action, state, scheduler);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ExecuteWorkItemHelper
void System::Threading::Tasks::AwaitTaskContinuation::ExecuteWorkItemHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::ExecuteWorkItemHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExecuteWorkItemHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Threading::Tasks::AwaitTaskContinuation::System_Threading_IThreadPoolWorkItem_MarkAborted(::System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.InvokeAction
void System::Threading::Tasks::AwaitTaskContinuation::InvokeAction(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::InvokeAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "InvokeAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.GetInvokeActionCallback
::System::Threading::ContextCallback* System::Threading::Tasks::AwaitTaskContinuation::GetInvokeActionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::GetInvokeActionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "GetInvokeActionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::ContextCallback*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunCallback
void System::Threading::Tasks::AwaitTaskContinuation::RunCallback(::System::Threading::ContextCallback* callback, ::Il2CppObject* state, ByRef<::System::Threading::Tasks::Task*> currentTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::RunCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(currentTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, state, byref(currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::RunOrScheduleAction(::System::Action* action, bool allowInlining, ByRef<::System::Threading::Tasks::Task*> currentTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::RunOrScheduleAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "RunOrScheduleAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(allowInlining), ::il2cpp_utils::ExtractType(currentTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, allowInlining, byref(currentTask));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.UnsafeScheduleAction
void System::Threading::Tasks::AwaitTaskContinuation::UnsafeScheduleAction(::System::Action* action, ::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::UnsafeScheduleAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "UnsafeScheduleAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, action, task);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.ThrowAsyncIfNecessary
void System::Threading::Tasks::AwaitTaskContinuation::ThrowAsyncIfNecessary(::System::Exception* exc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::ThrowAsyncIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation", "ThrowAsyncIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, exc);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation.Run
void System::Threading::Tasks::AwaitTaskContinuation::Run(::System::Threading::Tasks::Task* task, bool canInlineContinuationTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(canInlineContinuationTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task, canInlineContinuationTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c
#include "System/Threading/Tasks/AwaitTaskContinuation_--c.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c <>9
::System::Threading::Tasks::AwaitTaskContinuation::$$c* System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::Tasks::AwaitTaskContinuation::$$c*>("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c <>9
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9(::System::Threading::Tasks::AwaitTaskContinuation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.WaitCallback <>9__17_0
::System::Threading::WaitCallback* System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9__17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_get_$$9__17_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Threading::WaitCallback*>("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9__17_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.WaitCallback <>9__17_0
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9__17_0(::System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::_set_$$9__17_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Threading.Tasks", "AwaitTaskContinuation/<>c", "<>9__17_0", value)));
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c..cctor
void System::Threading::Tasks::AwaitTaskContinuation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "AwaitTaskContinuation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.AwaitTaskContinuation/System.Threading.Tasks.<>c.<ThrowAsyncIfNecessary>b__17_0
void System::Threading::Tasks::AwaitTaskContinuation::$$c::$ThrowAsyncIfNecessary$b__17_0(::Il2CppObject* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::AwaitTaskContinuation::$$c::<ThrowAsyncIfNecessary>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ThrowAsyncIfNecessary>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskExceptionHolder
#include "System/Threading/Tasks/TaskExceptionHolder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean s_failFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_failFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_failFastOnUnobservedException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean s_failFastOnUnobservedException
void System::Threading::Tasks::TaskExceptionHolder::_set_s_failFastOnUnobservedException(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_failFastOnUnobservedException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_failFastOnUnobservedException", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_domainUnloadStarted
bool System::Threading::Tasks::TaskExceptionHolder::_get_s_domainUnloadStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_domainUnloadStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_domainUnloadStarted
void System::Threading::Tasks::TaskExceptionHolder::_set_s_domainUnloadStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_domainUnloadStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_domainUnloadStarted", value));
}
// Autogenerated static field getter
// Get static field: static private System.EventHandler s_adUnloadEventHandler
::System::EventHandler* System::Threading::Tasks::TaskExceptionHolder::_get_s_adUnloadEventHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_get_s_adUnloadEventHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventHandler*>("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler s_adUnloadEventHandler
void System::Threading::Tasks::TaskExceptionHolder::_set_s_adUnloadEventHandler(::System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::_set_s_adUnloadEventHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskExceptionHolder", "s_adUnloadEventHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Tasks.Task m_task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Runtime.ExceptionServices.ExceptionDispatchInfo> m_faultExceptions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_faultExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_faultExceptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_faultExceptions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo m_cancellationException
[[deprecated("Use field access instead!")]] ::System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::Threading::Tasks::TaskExceptionHolder::dyn_m_cancellationException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_cancellationException");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cancellationException"))->offset;
  return *reinterpret_cast<::System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isHandled
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::TaskExceptionHolder::dyn_m_isHandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::dyn_m_isHandled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isHandled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.get_ContainsFaultList
bool System::Threading::Tasks::TaskExceptionHolder::get_ContainsFaultList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::get_ContainsFaultList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsFaultList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder..cctor
void System::Threading::Tasks::TaskExceptionHolder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.ShouldFailFastOnUnobservedException
bool System::Threading::Tasks::TaskExceptionHolder::ShouldFailFastOnUnobservedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::ShouldFailFastOnUnobservedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "ShouldFailFastOnUnobservedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.EnsureADUnloadCallbackRegistered
void System::Threading::Tasks::TaskExceptionHolder::EnsureADUnloadCallbackRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::EnsureADUnloadCallbackRegistered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "EnsureADUnloadCallbackRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AppDomainUnloadCallback
void System::Threading::Tasks::TaskExceptionHolder::AppDomainUnloadCallback(::Il2CppObject* sender, ::System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::AppDomainUnloadCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskExceptionHolder", "AppDomainUnloadCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, e);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Add
void System::Threading::Tasks::TaskExceptionHolder::Add(::Il2CppObject* exceptionObject, bool representsCancellation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject), ::il2cpp_utils::ExtractType(representsCancellation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject, representsCancellation);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.SetCancellationException
void System::Threading::Tasks::TaskExceptionHolder::SetCancellationException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::SetCancellationException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCancellationException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.AddFaultException
void System::Threading::Tasks::TaskExceptionHolder::AddFaultException(::Il2CppObject* exceptionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::AddFaultException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFaultException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exceptionObject)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, exceptionObject);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsUnhandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsUnhandled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::MarkAsUnhandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAsUnhandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.MarkAsHandled
void System::Threading::Tasks::TaskExceptionHolder::MarkAsHandled(bool calledFromFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::MarkAsHandled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkAsHandled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calledFromFinalizer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, calledFromFinalizer);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.CreateExceptionObject
::System::AggregateException* System::Threading::Tasks::TaskExceptionHolder::CreateExceptionObject(bool calledFromFinalizer, ::System::Exception* includeThisException) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::CreateExceptionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateExceptionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calledFromFinalizer), ::il2cpp_utils::ExtractType(includeThisException)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::AggregateException*, false>(this, ___internal__method, calledFromFinalizer, includeThisException);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetExceptionDispatchInfos
::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>* System::Threading::Tasks::TaskExceptionHolder::GetExceptionDispatchInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::GetExceptionDispatchInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExceptionDispatchInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ObjectModel::ReadOnlyCollection_1<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.GetCancellationExceptionDispatchInfo
::System::Runtime::ExceptionServices::ExceptionDispatchInfo* System::Threading::Tasks::TaskExceptionHolder::GetCancellationExceptionDispatchInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::GetCancellationExceptionDispatchInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCancellationExceptionDispatchInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskExceptionHolder.Finalize
void System::Threading::Tasks::TaskExceptionHolder::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskExceptionHolder::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskFactory
#include "System/Threading/Tasks/TaskFactory.hpp"
// Including type: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise
#include "System/Threading/Tasks/TaskFactory_CompleteOnInvokePromise.hpp"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken m_defaultCancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& System::Threading::Tasks::TaskFactory::dyn_m_defaultCancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultCancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultCancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskScheduler m_defaultScheduler
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskScheduler*& System::Threading::Tasks::TaskFactory::dyn_m_defaultScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultScheduler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultScheduler"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskScheduler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCreationOptions m_defaultCreationOptions
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskCreationOptions& System::Threading::Tasks::TaskFactory::dyn_m_defaultCreationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultCreationOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultCreationOptions"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskCreationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskContinuationOptions m_defaultContinuationOptions
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::TaskContinuationOptions& System::Threading::Tasks::TaskFactory::dyn_m_defaultContinuationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::dyn_m_defaultContinuationOptions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_defaultContinuationOptions"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::TaskContinuationOptions*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.GetDefaultScheduler
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskFactory::GetDefaultScheduler(::System::Threading::Tasks::Task* currTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::GetDefaultScheduler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultScheduler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currTask)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(this, ___internal__method, currTask);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckCreationOptions
void System::Threading::Tasks::TaskFactory::CheckCreationOptions(::System::Threading::Tasks::TaskCreationOptions creationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckCreationOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckCreationOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creationOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creationOptions);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.StartNew
::System::Threading::Tasks::Task* System::Threading::Tasks::TaskFactory::StartNew(::System::Action* action, ::System::Threading::CancellationToken cancellationToken, ::System::Threading::Tasks::TaskCreationOptions creationOptions, ::System::Threading::Tasks::TaskScheduler* scheduler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::StartNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(action), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(creationOptions), ::il2cpp_utils::ExtractType(scheduler)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, action, cancellationToken, creationOptions, scheduler);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckFromAsyncOptions
void System::Threading::Tasks::TaskFactory::CheckFromAsyncOptions(::System::Threading::Tasks::TaskCreationOptions creationOptions, bool hasBeginMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckFromAsyncOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckFromAsyncOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creationOptions), ::il2cpp_utils::ExtractType(hasBeginMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, creationOptions, hasBeginMethod);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CommonCWAnyLogic
::System::Threading::Tasks::Task_1<::System::Threading::Tasks::Task*>* System::Threading::Tasks::TaskFactory::CommonCWAnyLogic(::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>* tasks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CommonCWAnyLogic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CommonCWAnyLogic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tasks)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Threading::Tasks::Task*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tasks);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory.CheckMultiTaskContinuationOptions
void System::Threading::Tasks::TaskFactory::CheckMultiTaskContinuationOptions(::System::Threading::Tasks::TaskContinuationOptions continuationOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CheckMultiTaskContinuationOptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskFactory", "CheckMultiTaskContinuationOptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuationOptions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, continuationOptions);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise
#include "System/Threading/Tasks/TaskFactory_CompleteOnInvokePromise.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<System.Threading.Tasks.Task> _tasks
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>*& System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn__tasks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn__tasks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tasks"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Threading::Tasks::Task*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_firstTaskAlreadyCompleted
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn_m_firstTaskAlreadyCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::dyn_m_firstTaskAlreadyCompleted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_firstTaskAlreadyCompleted"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskFactory/System.Threading.Tasks.CompleteOnInvokePromise.Invoke
void System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::Invoke(::System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskFactory::CompleteOnInvokePromise::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskScheduler
#include "System/Threading/Tasks/TaskScheduler.hpp"
// Including type: System.Threading.Tasks.TaskScheduler/System.Threading.Tasks.SystemThreadingTasks_TaskSchedulerDebugView
#include "System/Threading/Tasks/TaskScheduler_SystemThreadingTasks_TaskSchedulerDebugView.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
#include "System/Threading/Tasks/UnobservedTaskExceptionEventArgs.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Threading.Tasks.TaskScheduler,System.Object> s_activeTaskSchedulers
::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>* System::Threading::Tasks::TaskScheduler::_get_s_activeTaskSchedulers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_activeTaskSchedulers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>*>("System.Threading.Tasks", "TaskScheduler", "s_activeTaskSchedulers")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Threading.Tasks.TaskScheduler,System.Object> s_activeTaskSchedulers
void System::Threading::Tasks::TaskScheduler::_set_s_activeTaskSchedulers(::System::Runtime::CompilerServices::ConditionalWeakTable_2<::System::Threading::Tasks::TaskScheduler*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_activeTaskSchedulers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_activeTaskSchedulers", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.Tasks.TaskScheduler s_defaultTaskScheduler
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::_get_s_defaultTaskScheduler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_defaultTaskScheduler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::Tasks::TaskScheduler*>("System.Threading.Tasks", "TaskScheduler", "s_defaultTaskScheduler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.Tasks.TaskScheduler s_defaultTaskScheduler
void System::Threading::Tasks::TaskScheduler::_set_s_defaultTaskScheduler(::System::Threading::Tasks::TaskScheduler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_defaultTaskScheduler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_defaultTaskScheduler", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 s_taskSchedulerIdCounter
int System::Threading::Tasks::TaskScheduler::_get_s_taskSchedulerIdCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get_s_taskSchedulerIdCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading.Tasks", "TaskScheduler", "s_taskSchedulerIdCounter"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 s_taskSchedulerIdCounter
void System::Threading::Tasks::TaskScheduler::_set_s_taskSchedulerIdCounter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set_s_taskSchedulerIdCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "s_taskSchedulerIdCounter", value));
}
// Autogenerated static field getter
// Get static field: static private System.EventHandler`1<System.Threading.Tasks.UnobservedTaskExceptionEventArgs> _unobservedTaskException
::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>* System::Threading::Tasks::TaskScheduler::_get__unobservedTaskException() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get__unobservedTaskException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>*>("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskException"));
}
// Autogenerated static field setter
// Set static field: static private System.EventHandler`1<System.Threading.Tasks.UnobservedTaskExceptionEventArgs> _unobservedTaskException
void System::Threading::Tasks::TaskScheduler::_set__unobservedTaskException(::System::EventHandler_1<::System::Threading::Tasks::UnobservedTaskExceptionEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set__unobservedTaskException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskException", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object _unobservedTaskExceptionLockObject
::Il2CppObject* System::Threading::Tasks::TaskScheduler::_get__unobservedTaskExceptionLockObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_get__unobservedTaskExceptionLockObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskExceptionLockObject"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object _unobservedTaskExceptionLockObject
void System::Threading::Tasks::TaskScheduler::_set__unobservedTaskExceptionLockObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::_set__unobservedTaskExceptionLockObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "TaskScheduler", "_unobservedTaskExceptionLockObject", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_taskSchedulerId
[[deprecated("Use field access instead!")]] int& System::Threading::Tasks::TaskScheduler::dyn_m_taskSchedulerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::dyn_m_taskSchedulerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_taskSchedulerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_RequiresAtomicStartTransition
bool System::Threading::Tasks::TaskScheduler::get_RequiresAtomicStartTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_RequiresAtomicStartTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresAtomicStartTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Default
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Current
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_InternalCurrent
::System::Threading::Tasks::TaskScheduler* System::Threading::Tasks::TaskScheduler::get_InternalCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_InternalCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "get_InternalCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::TaskScheduler*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.get_Id
int System::Threading::Tasks::TaskScheduler::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::get_Id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler..cctor
void System::Threading::Tasks::TaskScheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.QueueTask
void System::Threading::Tasks::TaskScheduler::QueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::QueueTask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline
bool System::Threading::Tasks::TaskScheduler::TryExecuteTaskInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryExecuteTaskInline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryExecuteTaskInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryRunInline
bool System::Threading::Tasks::TaskScheduler::TryRunInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryRunInline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryRunInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.TryDequeue
bool System::Threading::Tasks::TaskScheduler::TryDequeue(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::TryDequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.NotifyWorkItemProgress
void System::Threading::Tasks::TaskScheduler::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::NotifyWorkItemProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.InternalQueueTask
void System::Threading::Tasks::TaskScheduler::InternalQueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::InternalQueueTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalQueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.AddToActiveTaskSchedulers
void System::Threading::Tasks::TaskScheduler::AddToActiveTaskSchedulers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::AddToActiveTaskSchedulers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToActiveTaskSchedulers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskScheduler.PublishUnobservedTaskException
void System::Threading::Tasks::TaskScheduler::PublishUnobservedTaskException(::Il2CppObject* sender, ::System::Threading::Tasks::UnobservedTaskExceptionEventArgs* ueea) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskScheduler::PublishUnobservedTaskException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskScheduler", "PublishUnobservedTaskException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(ueea)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sender, ueea);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.UnobservedTaskExceptionEventArgs
#include "System/Threading/Tasks/UnobservedTaskExceptionEventArgs.hpp"
// Including type: System.AggregateException
#include "System/AggregateException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.AggregateException m_exception
[[deprecated("Use field access instead!")]] ::System::AggregateException*& System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_exception");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_exception"))->offset;
  return *reinterpret_cast<::System::AggregateException**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_observed
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_observed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::UnobservedTaskExceptionEventArgs::dyn_m_observed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_observed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskSchedulerException
#include "System/Threading/Tasks/TaskSchedulerException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm
#include "System/Threading/Tasks/TaskToApm.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm_TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm_--c__DisplayClass3_0.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Threading.Tasks.TaskToApm.Begin
::System::IAsyncResult* System::Threading::Tasks::TaskToApm::Begin(::System::Threading::Tasks::Task* task, ::System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::Begin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "Begin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, task, callback, state);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.End
void System::Threading::Tasks::TaskToApm::End(::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm.InvokeCallbackWhenTaskCompletes
void System::Threading::Tasks::TaskToApm::InvokeCallbackWhenTaskCompletes(::System::Threading::Tasks::Task* antecedent, ::System::AsyncCallback* callback, ::System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::InvokeCallbackWhenTaskCompletes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "TaskToApm", "InvokeCallbackWhenTaskCompletes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(antecedent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, antecedent, callback, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult
#include "System/Threading/Tasks/TaskToApm_TaskWrapperAsyncResult.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Threading.Tasks.Task Task
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task*& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_Task() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_Task");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Task"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Object m_state
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean m_completedSynchronously
[[deprecated("Use field access instead!")]] bool& System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_completedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::dyn_m_completedSynchronously");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_completedSynchronously"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncState
::Il2CppObject* System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_CompletedSynchronously
bool System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_IsCompleted
bool System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.TaskWrapperAsyncResult.System.IAsyncResult.get_AsyncWaitHandle
::System::Threading::WaitHandle* System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System_IAsyncResult_get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::TaskWrapperAsyncResult::System.IAsyncResult.get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IAsyncResult.get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0
#include "System/Threading/Tasks/TaskToApm_--c__DisplayClass3_0.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.AsyncCallback callback
[[deprecated("Use field access instead!")]] ::System::AsyncCallback*& System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IAsyncResult asyncResult
[[deprecated("Use field access instead!")]] ::System::IAsyncResult*& System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_asyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::dyn_asyncResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "asyncResult"))->offset;
  return *reinterpret_cast<::System::IAsyncResult**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.Tasks.TaskToApm/System.Threading.Tasks.<>c__DisplayClass3_0.<InvokeCallbackWhenTaskCompletes>b__0
void System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::$InvokeCallbackWhenTaskCompletes$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::TaskToApm::$$c__DisplayClass3_0::<InvokeCallbackWhenTaskCompletes>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InvokeCallbackWhenTaskCompletes>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Threading.Tasks.ThreadPoolTaskScheduler
#include "System/Threading/Tasks/ThreadPoolTaskScheduler.hpp"
// Including type: System.Threading.ParameterizedThreadStart
#include "System/Threading/ParameterizedThreadStart.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Threading.ParameterizedThreadStart s_longRunningThreadWork
::System::Threading::ParameterizedThreadStart* System::Threading::Tasks::ThreadPoolTaskScheduler::_get_s_longRunningThreadWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::_get_s_longRunningThreadWork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::ParameterizedThreadStart*>("System.Threading.Tasks", "ThreadPoolTaskScheduler", "s_longRunningThreadWork"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Threading.ParameterizedThreadStart s_longRunningThreadWork
void System::Threading::Tasks::ThreadPoolTaskScheduler::_set_s_longRunningThreadWork(::System::Threading::ParameterizedThreadStart* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::_set_s_longRunningThreadWork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading.Tasks", "ThreadPoolTaskScheduler", "s_longRunningThreadWork", value));
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.LongRunningThreadWork
void System::Threading::Tasks::ThreadPoolTaskScheduler::LongRunningThreadWork(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::LongRunningThreadWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "ThreadPoolTaskScheduler", "LongRunningThreadWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.get_RequiresAtomicStartTransition
bool System::Threading::Tasks::ThreadPoolTaskScheduler::get_RequiresAtomicStartTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::get_RequiresAtomicStartTransition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresAtomicStartTransition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler..cctor
void System::Threading::Tasks::ThreadPoolTaskScheduler::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading.Tasks", "ThreadPoolTaskScheduler", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.QueueTask
void System::Threading::Tasks::ThreadPoolTaskScheduler::QueueTask(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::QueueTask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline
bool System::Threading::Tasks::ThreadPoolTaskScheduler::TryExecuteTaskInline(::System::Threading::Tasks::Task* task, bool taskWasPreviouslyQueued) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::TryExecuteTaskInline");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryExecuteTaskInline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task), ::il2cpp_utils::ExtractType(taskWasPreviouslyQueued)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task, taskWasPreviouslyQueued);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.TryDequeue
bool System::Threading::Tasks::ThreadPoolTaskScheduler::TryDequeue(::System::Threading::Tasks::Task* task) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::TryDequeue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDequeue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(task)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, task);
}
// Autogenerated method: System.Threading.Tasks.ThreadPoolTaskScheduler.NotifyWorkItemProgress
void System::Threading::Tasks::ThreadPoolTaskScheduler::NotifyWorkItemProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::Tasks::ThreadPoolTaskScheduler::NotifyWorkItemProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyWorkItemProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityCriticalAttribute
#include "System/Security/SecurityCriticalAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Byte[] m_data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecurityDocument::dyn_m_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::dyn_m_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityDocument.GuaranteeSize
void System::Security::SecurityDocument::GuaranteeSize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GuaranteeSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GuaranteeSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: System.Security.SecurityDocument.AddString
void System::Security::SecurityDocument::AddString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.AppendString
void System::Security::SecurityDocument::AppendString(::StringW str, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AppendString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.EncodedStringSize
int System::Security::SecurityDocument::EncodedStringSize(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::EncodedStringSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityDocument", "EncodedStringSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityDocument.GetString
::StringW System::Security::SecurityDocument::GetString(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.AddToken
void System::Security::SecurityDocument::AddToken(uint8_t b, ByRef<int> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, b, byref(position));
}
// Autogenerated method: System.Security.SecurityDocument.GetRootElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetRootElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetRootElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRootElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityDocument.GetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::GetElement(int position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, position, bCreate);
}
// Autogenerated method: System.Security.SecurityDocument.InternalGetElement
::System::Security::SecurityElement* System::Security::SecurityDocument::InternalGetElement(ByRef<int> position, bool bCreate) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityDocument::InternalGetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(bCreate)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, byref(position), bCreate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.CodeAccessPermission
#include "System/Security/CodeAccessPermission.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.CodeAccessPermission.Demand
void System::Security::CodeAccessPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.IsSubsetOf
bool System::Security::CodeAccessPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToXml
::System::Security::SecurityElement* System::Security::CodeAccessPermission::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Element
::System::Security::SecurityElement* System::Security::CodeAccessPermission::Element(int version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, version);
}
// Autogenerated method: System.Security.CodeAccessPermission.CheckPermissionState
::System::Security::Permissions::PermissionState System::Security::CodeAccessPermission::CheckPermissionState(::System::Security::Permissions::PermissionState state, bool allowUnrestricted) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::CheckPermissionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "CodeAccessPermission", "CheckPermissionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(allowUnrestricted)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Permissions::PermissionState, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, allowUnrestricted);
}
// Autogenerated method: System.Security.CodeAccessPermission.ThrowInvalidPermission
void System::Security::CodeAccessPermission::ThrowInvalidPermission(::System::Security::IPermission* target, ::System::Type* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ThrowInvalidPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "CodeAccessPermission", "ThrowInvalidPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(expected)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, expected);
}
// Autogenerated method: System.Security.CodeAccessPermission.System.Security.IPermission.Demand
void System::Security::CodeAccessPermission::System_Security_IPermission_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::System.Security.IPermission.Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Security.IPermission.Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.Equals
bool System::Security::CodeAccessPermission::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.CodeAccessPermission.GetHashCode
int System::Security::CodeAccessPermission::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.CodeAccessPermission.ToString
::StringW System::Security::CodeAccessPermission::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::CodeAccessPermission::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.IPermission.Demand
void System::Security::IPermission::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.IPermission.IsSubsetOf
bool System::Security::IPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::IPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.ISecurityEncodable
#include "System/Security/ISecurityEncodable.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.ISecurityEncodable.ToXml
::System::Security::SecurityElement* System::Security::ISecurityEncodable::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::ISecurityEncodable::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.NamedPermissionSet
#include "System/Security/NamedPermissionSet.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String description
[[deprecated("Use field access instead!")]] ::StringW& System::Security::NamedPermissionSet::dyn_description() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::dyn_description");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "description"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.NamedPermissionSet.get_Name
::StringW System::Security::NamedPermissionSet::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.set_Name
void System::Security::NamedPermissionSet::set_Name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.NamedPermissionSet.ToXml
::System::Security::SecurityElement* System::Security::NamedPermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.NamedPermissionSet.Equals
bool System::Security::NamedPermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.NamedPermissionSet.GetHashCode
int System::Security::NamedPermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::NamedPermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.PermissionSet
#include "System/Security/PermissionSet.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.IPermission
#include "System/Security/IPermission.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object[] psUnrestricted
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_psUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_psUnrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "psUnrestricted"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] psUnrestricted
void System::Security::PermissionSet::_set_psUnrestricted(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_psUnrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "psUnrestricted", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] action
::ArrayW<::Il2CppObject*> System::Security::PermissionSet::_get_action() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_get_action");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppObject*>>("System.Security", "PermissionSet", "action"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] action
void System::Security::PermissionSet::_set_action(::ArrayW<::Il2CppObject*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::_set_action");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "PermissionSet", "action", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.PermissionState state
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::PermissionState& System::Security::PermissionSet::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::PermissionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList list
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::PermissionSet::dyn_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _declsec
[[deprecated("Use field access instead!")]] bool& System::Security::PermissionSet::dyn__declsec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__declsec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declsec"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _ignored
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& System::Security::PermissionSet::dyn__ignored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::dyn__ignored");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignored"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.PermissionSet.get_Count
int System::Security::PermissionSet::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.get_SyncRoot
::Il2CppObject* System::Security::PermissionSet::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet..cctor
void System::Security::PermissionSet::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "PermissionSet", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.CopyTo
void System::Security::PermissionSet::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.PermissionSet.Demand
void System::Security::PermissionSet::Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Demand");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Demand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.CasOnlyDemand
void System::Security::PermissionSet::CasOnlyDemand(int skip) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::CasOnlyDemand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CasOnlyDemand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(skip)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, skip);
}
// Autogenerated method: System.Security.PermissionSet.GetEnumerator
::System::Collections::IEnumerator* System::Security::PermissionSet::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsEmpty
bool System::Security::PermissionSet::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.IsUnrestricted
bool System::Security::PermissionSet::IsUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::IsUnrestricted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.ToXml
::System::Security::SecurityElement* System::Security::PermissionSet::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::PermissionSet::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.PermissionSet.ToString
::StringW System::Security::PermissionSet::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.PermissionSet.Equals
bool System::Security::PermissionSet::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.PermissionSet.GetHashCode
int System::Security::PermissionSet::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::PermissionSet::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecureString
#include "System/Security/SecureString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 length
[[deprecated("Use field access instead!")]] int& System::Security::SecureString::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& System::Security::SecureString::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::SecureString::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecureString.get_Length
int System::Security::SecureString::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Dispose
void System::Security::SecureString::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Encrypt
void System::Security::SecureString::Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Decrypt
void System::Security::SecureString::Decrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecureString.Alloc
void System::Security::SecureString::Alloc(int length, bool realloc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::Alloc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Alloc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(realloc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, length, realloc);
}
// Autogenerated method: System.Security.SecureString.GetBuffer
::ArrayW<uint8_t> System::Security::SecureString::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecureString::GetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElementType
#include "System/Security/SecurityElementType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Regular
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Regular
void System::Security::SecurityElementType::_set_Regular(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Format
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Format"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Format
void System::Security::SecurityElementType::_set_Format(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Format", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.SecurityElementType Comment
::System::Security::SecurityElementType System::Security::SecurityElementType::_get_Comment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_get_Comment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::SecurityElementType>("System.Security", "SecurityElementType", "Comment"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.SecurityElementType Comment
void System::Security::SecurityElementType::_set_Comment(::System::Security::SecurityElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::_set_Comment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElementType", "Comment", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::SecurityElementType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElementType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.SecurityElement/System.Security.SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_tag_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_tag_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_tag_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_tag_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_tag_chars
void System::Security::SecurityElement::_set_invalid_tag_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_tag_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_tag_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_text_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_text_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_text_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_text_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_text_chars
void System::Security::SecurityElement::_set_invalid_text_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_text_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_text_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_name_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_name_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_name_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_name_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_name_chars
void System::Security::SecurityElement::_set_invalid_attr_name_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_name_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_name_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_attr_value_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_attr_value_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_attr_value_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_attr_value_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_attr_value_chars
void System::Security::SecurityElement::_set_invalid_attr_value_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_attr_value_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_attr_value_chars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] invalid_chars
::ArrayW<::Il2CppChar> System::Security::SecurityElement::_get_invalid_chars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_get_invalid_chars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.Security", "SecurityElement", "invalid_chars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] invalid_chars
void System::Security::SecurityElement::_set_invalid_chars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::_set_invalid_chars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security", "SecurityElement", "invalid_chars", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String text
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String tag
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::dyn_tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_tag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tag"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList attributes
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attributes"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList children
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::SecurityElement::dyn_children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::dyn_children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "children"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement.get_Attributes
::System::Collections::Hashtable* System::Security::SecurityElement::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Children
::System::Collections::ArrayList* System::Security::SecurityElement::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Tag
::StringW System::Security::SecurityElement::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.get_Text
::StringW System::Security::SecurityElement::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.set_Text
void System::Security::SecurityElement::set_Text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.set_m_strText
void System::Security::SecurityElement::set_m_strText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::set_m_strText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_m_strText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement..cctor
void System::Security::SecurityElement::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement.AddAttribute
void System::Security::SecurityElement::AddAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Security.SecurityElement.AddChild
void System::Security::SecurityElement::AddChild(::System::Security::SecurityElement* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::AddChild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(child)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: System.Security.SecurityElement.Escape
::StringW System::Security::SecurityElement::Escape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Escape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Escape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.Unescape
::StringW System::Security::SecurityElement::Unescape(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::Unescape");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "Unescape", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.SecurityElement.FromString
::System::Security::SecurityElement* System::Security::SecurityElement::FromString(::StringW xml) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::FromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xml)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, xml);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeName
bool System::Security::SecurityElement::IsValidAttributeName(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.IsValidAttributeValue
bool System::Security::SecurityElement::IsValidAttributeValue(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidAttributeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidAttributeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Security.SecurityElement.IsValidTag
bool System::Security::SecurityElement::IsValidTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.IsValidText
bool System::Security::SecurityElement::IsValidText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::IsValidText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityElement", "IsValidText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Security.SecurityElement.SearchForChildByTag
::System::Security::SecurityElement* System::Security::SecurityElement::SearchForChildByTag(::StringW tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForChildByTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForChildByTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.SecurityElement.ToXml
void System::Security::SecurityElement::ToXml(ByRef<::System::Text::StringBuilder*> s, int level) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(s), level);
}
// Autogenerated method: System.Security.SecurityElement.GetAttribute
::System::Security::SecurityElement::SecurityAttribute* System::Security::SecurityElement::GetAttribute(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::GetAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement::SecurityAttribute*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Security.SecurityElement.SearchForTextOfLocalName
::StringW System::Security::SecurityElement::SearchForTextOfLocalName(::StringW strLocalName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SearchForTextOfLocalName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SearchForTextOfLocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strLocalName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, strLocalName);
}
// Autogenerated method: System.Security.SecurityElement.ToString
::StringW System::Security::SecurityElement::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityElement/System.Security.SecurityAttribute
#include "System/Security/SecurityElement_SecurityAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityElement::SecurityAttribute::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityElement/System.Security.SecurityAttribute.get_Name
::StringW System::Security::SecurityElement::SecurityAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.SecurityElement/System.Security.SecurityAttribute.get_Value
::StringW System::Security::SecurityElement::SecurityAttribute::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityElement::SecurityAttribute::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityException
#include "System/Security/SecurityException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String permissionState
[[deprecated("Use field access instead!")]] ::StringW& System::Security::SecurityException::dyn_permissionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::dyn_permissionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "permissionState"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.SecurityException.GetObjectData
void System::Security::SecurityException::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.SecurityException.ToString
::StringW System::Security::SecurityException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.SecurityManager
#include "System/Security/SecurityManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.SecurityManager.get_SecurityEnabled
bool System::Security::SecurityManager::get_SecurityEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::get_SecurityEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "get_SecurityEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityManager.CheckElevatedPermissions
bool System::Security::SecurityManager::CheckElevatedPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::CheckElevatedPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "CheckElevatedPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.SecurityManager.EnsureElevatedPermissions
void System::Security::SecurityManager::EnsureElevatedPermissions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::SecurityManager::EnsureElevatedPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security", "SecurityManager", "EnsureElevatedPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.XmlSyntaxException
#include "System/Security/XmlSyntaxException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _locked
[[deprecated("Use field access instead!")]] bool& System::Security::Policy::Evidence::dyn__locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn__locked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_locked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList hostEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_hostEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_hostEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ArrayList assemblyEvidenceList
[[deprecated("Use field access instead!")]] ::System::Collections::ArrayList*& System::Security::Policy::Evidence::dyn_assemblyEvidenceList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::dyn_assemblyEvidenceList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEvidenceList"))->offset;
  return *reinterpret_cast<::System::Collections::ArrayList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence.get_Count
int System::Security::Policy::Evidence::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.get_SyncRoot
::Il2CppObject* System::Security::Policy::Evidence::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence.CopyTo
void System::Security::Policy::Evidence::CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Security.Policy.Evidence.GetEnumerator
::System::Collections::IEnumerator* System::Security::Policy::Evidence::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator
#include "System/Security/Policy/Evidence_EvidenceEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator currentEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_currentEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator hostEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_hostEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.IEnumerator assemblyEnum
[[deprecated("Use field access instead!")]] ::System::Collections::IEnumerator*& System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::dyn_assemblyEnum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "assemblyEnum"))->offset;
  return *reinterpret_cast<::System::Collections::IEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.get_Current
::Il2CppObject* System::Security::Policy::Evidence::EvidenceEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.MoveNext
bool System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Policy.Evidence/System.Security.Policy.EvidenceEnumerator.Reset
void System::Security::Policy::Evidence::EvidenceEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Policy::Evidence::EvidenceEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.PermissionState
#include "System/Security/Permissions/PermissionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState Unrestricted
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState Unrestricted
void System::Security::Permissions::PermissionState::_set_Unrestricted(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "Unrestricted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.PermissionState None
::System::Security::Permissions::PermissionState System::Security::Permissions::PermissionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::PermissionState>("System.Security.Permissions", "PermissionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.PermissionState None
void System::Security::Permissions::PermissionState::_set_None(::System::Security::Permissions::PermissionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "PermissionState", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::PermissionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::PermissionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityAction
#include "System/Security/Permissions/SecurityAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Demand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Demand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Demand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Demand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Demand
void System::Security::Permissions::SecurityAction::_set_Demand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Demand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Demand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Assert
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Assert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Assert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Assert"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Assert
void System::Security::Permissions::SecurityAction::_set_Assert(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Assert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Assert", value));
}
// [ObsoleteAttribute] Offset: 0x1040DBC
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction Deny
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_Deny() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_Deny");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "Deny"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction Deny
void System::Security::Permissions::SecurityAction::_set_Deny(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_Deny");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "Deny", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction PermitOnly
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_PermitOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_PermitOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "PermitOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction PermitOnly
void System::Security::Permissions::SecurityAction::_set_PermitOnly(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_PermitOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "PermitOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction LinkDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_LinkDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_LinkDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "LinkDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction LinkDemand
void System::Security::Permissions::SecurityAction::_set_LinkDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_LinkDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "LinkDemand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_InheritanceDemand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_InheritanceDemand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "InheritanceDemand"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction InheritanceDemand
void System::Security::Permissions::SecurityAction::_set_InheritanceDemand(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_InheritanceDemand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "InheritanceDemand", value));
}
// [ObsoleteAttribute] Offset: 0x1040DF4
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestMinimum
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestMinimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestMinimum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestMinimum"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestMinimum
void System::Security::Permissions::SecurityAction::_set_RequestMinimum(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestMinimum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestMinimum", value));
}
// [ObsoleteAttribute] Offset: 0x1040E2C
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestOptional
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestOptional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestOptional"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestOptional
void System::Security::Permissions::SecurityAction::_set_RequestOptional(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestOptional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestOptional", value));
}
// [ObsoleteAttribute] Offset: 0x1040E64
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityAction RequestRefuse
::System::Security::Permissions::SecurityAction System::Security::Permissions::SecurityAction::_get_RequestRefuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_get_RequestRefuse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityAction>("System.Security.Permissions", "SecurityAction", "RequestRefuse"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityAction RequestRefuse
void System::Security::Permissions::SecurityAction::_set_RequestRefuse(::System::Security::Permissions::SecurityAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::_set_RequestRefuse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityAction", "RequestRefuse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::SecurityAction::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityAction::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityPermission
#include "System/Security/Permissions/SecurityPermission.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Permissions.SecurityPermissionFlag flags
[[deprecated("Use field access instead!")]] ::System::Security::Permissions::SecurityPermissionFlag& System::Security::Permissions::SecurityPermission::dyn_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::dyn_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "flags"))->offset;
  return *reinterpret_cast<::System::Security::Permissions::SecurityPermissionFlag*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsUnrestricted
bool System::Security::Permissions::SecurityPermission::IsUnrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsUnrestricted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsUnrestricted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsEmpty
bool System::Security::Permissions::SecurityPermission::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.Cast
::System::Security::Permissions::SecurityPermission* System::Security::Permissions::SecurityPermission::Cast(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::Cast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Permissions::SecurityPermission*, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.IsSubsetOf
bool System::Security::Permissions::SecurityPermission::IsSubsetOf(::System::Security::IPermission* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::IsSubsetOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSubsetOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Security.Permissions.SecurityPermission.ToXml
::System::Security::SecurityElement* System::Security::Permissions::SecurityPermission::ToXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermission::ToXml");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Permissions.SecurityPermissionFlag
#include "System/Security/Permissions/SecurityPermissionFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_NoFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_NoFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "NoFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag NoFlags
void System::Security::Permissions::SecurityPermissionFlag::_set_NoFlags(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_NoFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "NoFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Assertion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Assertion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Assertion"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Assertion
void System::Security::Permissions::SecurityPermissionFlag::_set_Assertion(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Assertion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Assertion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_UnmanagedCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_UnmanagedCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "UnmanagedCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag UnmanagedCode
void System::Security::Permissions::SecurityPermissionFlag::_set_UnmanagedCode(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_UnmanagedCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "UnmanagedCode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_SkipVerification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_SkipVerification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "SkipVerification"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag SkipVerification
void System::Security::Permissions::SecurityPermissionFlag::_set_SkipVerification(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_SkipVerification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "SkipVerification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Execution() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Execution");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Execution"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Execution
void System::Security::Permissions::SecurityPermissionFlag::_set_Execution(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Execution");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Execution", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlThread");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlThread"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlThread
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlThread(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlThread");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlThread", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlEvidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlEvidence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlEvidence"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlEvidence
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlEvidence(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlEvidence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlEvidence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPolicy
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlPolicy(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_SerializationFormatter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_SerializationFormatter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "SerializationFormatter"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag SerializationFormatter
void System::Security::Permissions::SecurityPermissionFlag::_set_SerializationFormatter(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_SerializationFormatter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "SerializationFormatter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlDomainPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlDomainPolicy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlDomainPolicy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlDomainPolicy
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlDomainPolicy(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlDomainPolicy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlDomainPolicy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlPrincipal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlPrincipal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlPrincipal
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlPrincipal(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlPrincipal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlPrincipal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_ControlAppDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_ControlAppDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "ControlAppDomain"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag ControlAppDomain
void System::Security::Permissions::SecurityPermissionFlag::_set_ControlAppDomain(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_ControlAppDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "ControlAppDomain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_RemotingConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_RemotingConfiguration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "RemotingConfiguration"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag RemotingConfiguration
void System::Security::Permissions::SecurityPermissionFlag::_set_RemotingConfiguration(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_RemotingConfiguration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "RemotingConfiguration", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_Infrastructure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_Infrastructure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "Infrastructure"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag Infrastructure
void System::Security::Permissions::SecurityPermissionFlag::_set_Infrastructure(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_Infrastructure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "Infrastructure", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_BindingRedirects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_BindingRedirects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "BindingRedirects"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag BindingRedirects
void System::Security::Permissions::SecurityPermissionFlag::_set_BindingRedirects(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_BindingRedirects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "BindingRedirects", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
::System::Security::Permissions::SecurityPermissionFlag System::Security::Permissions::SecurityPermissionFlag::_get_AllFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_get_AllFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Permissions::SecurityPermissionFlag>("System.Security.Permissions", "SecurityPermissionFlag", "AllFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Permissions.SecurityPermissionFlag AllFlags
void System::Security::Permissions::SecurityPermissionFlag::_set_AllFlags(::System::Security::Permissions::SecurityPermissionFlag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::_set_AllFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Permissions", "SecurityPermissionFlag", "AllFlags", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Permissions::SecurityPermissionFlag::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Permissions::SecurityPermissionFlag::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Parser
#include "System/Security/Util/Parser.hpp"
// Including type: System.Security.SecurityDocument
#include "System/Security/SecurityDocument.hpp"
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Security.SecurityElement
#include "System/Security/SecurityElement.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.SecurityDocument _doc
[[deprecated("Use field access instead!")]] ::System::Security::SecurityDocument*& System::Security::Util::Parser::dyn__doc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__doc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doc"))->offset;
  return *reinterpret_cast<::System::Security::SecurityDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer _t
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer*& System::Security::Util::Parser::dyn__t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::dyn__t");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_t"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Parser.GetTopElement
::System::Security::SecurityElement* System::Security::Util::Parser::GetTopElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetTopElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTopElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::SecurityElement*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Parser.GetRequiredSizes
void System::Security::Util::Parser::GetRequiredSizes(::System::Security::Util::TokenizerStream* stream, ByRef<int> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::GetRequiredSizes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredSizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(index));
}
// Autogenerated method: System.Security.Util.Parser.DetermineFormat
int System::Security::Util::Parser::DetermineFormat(::System::Security::Util::TokenizerStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::DetermineFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetermineFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Security.Util.Parser.ParseContents
void System::Security::Util::Parser::ParseContents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Parser::ParseContents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseContents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer
#include "System/Security/Util/Tokenizer.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 LineNo
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn_LineNo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn_LineNo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LineNo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inProcessingTag
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inProcessingTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inProcessingTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inProcessingTag"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _inBytes
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Util::Tokenizer::dyn__inBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _inChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::dyn__inChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inSavedCharacter
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inSavedCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inSavedCharacter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inSavedCharacter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.TokenSource _inTokenSource
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::TokenSource& System::Security::Util::Tokenizer::dyn__inTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenSource"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::TokenSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.ITokenReader _inTokenReader
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::ITokenReader*& System::Security::Util::Tokenizer::dyn__inTokenReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inTokenReader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inTokenReader"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::ITokenReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.Tokenizer/System.Security.Util.StringMaker _maker
[[deprecated("Use field access instead!")]] ::System::Security::Util::Tokenizer::StringMaker*& System::Security::Util::Tokenizer::dyn__maker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__maker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maker"))->offset;
  return *reinterpret_cast<::System::Security::Util::Tokenizer::StringMaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _searchStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__searchStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__searchStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_searchStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] _replaceStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::dyn__replaceStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__replaceStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_replaceStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _inNestedSize
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::dyn__inNestedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _inNestedString
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Util::Tokenizer::dyn__inNestedString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::dyn__inNestedString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inNestedString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer.BasicInitialization
void System::Security::Util::Tokenizer::BasicInitialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::BasicInitialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BasicInitialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.Recycle
void System::Security::Util::Tokenizer::Recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::Recycle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Recycle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer.ChangeFormat
void System::Security::Util::Tokenizer::ChangeFormat(::System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ChangeFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encoding);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetTokens
void System::Security::Util::Tokenizer::GetTokens(::System::Security::Util::TokenizerStream* stream, int maxNum, bool endAfterKet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(maxNum), ::il2cpp_utils::ExtractType(endAfterKet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, maxNum, endAfterKet);
}
// Autogenerated method: System.Security.Util.Tokenizer.GetStringToken
::StringW System::Security::Util::Tokenizer::GetStringToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::GetStringToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.TokenSource
#include "System/Security/Util/Tokenizer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UnicodeByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UnicodeByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UnicodeByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UnicodeByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UnicodeByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UTF8ByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_UTF8ByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource UTF8ByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_UTF8ByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "UTF8ByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource ASCIIByteArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_ASCIIByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource ASCIIByteArray
void System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_ASCIIByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "ASCIIByteArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource CharArray
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_CharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_CharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "CharArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource CharArray
void System::Security::Util::Tokenizer::TokenSource::_set_CharArray(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_CharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "CharArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource String
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource String
void System::Security::Util::Tokenizer::TokenSource::_set_String(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource NestedStrings
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_NestedStrings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource NestedStrings
void System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_NestedStrings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "NestedStrings", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource Other
::System::Security::Util::Tokenizer::TokenSource System::Security::Util::Tokenizer::TokenSource::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Util::Tokenizer::TokenSource>("System.Security.Util", "Tokenizer/TokenSource", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Util.Tokenizer/System.Security.Util.TokenSource Other
void System::Security::Util::Tokenizer::TokenSource::_set_Other(::System::Security::Util::Tokenizer::TokenSource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Util", "Tokenizer/TokenSource", "Other", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::TokenSource::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::TokenSource::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] aStrings
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::Tokenizer::StringMaker::dyn_aStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_aStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aStrings"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsMax
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsMax"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 cStringsUsed
[[deprecated("Use field access instead!")]] uint& System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn_cStringsUsed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cStringsUsed"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Text.StringBuilder _outStringBuilder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outStringBuilder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outStringBuilder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char[] _outChars
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& System::Security::Util::Tokenizer::StringMaker::dyn__outChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outChars"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 _outIndex
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StringMaker::dyn__outIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::dyn__outIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_outIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.HashString
uint System::Security::Util::Tokenizer::StringMaker::HashString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.HashCharArray
uint System::Security::Util::Tokenizer::StringMaker::HashCharArray(::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::HashCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Util", "Tokenizer/StringMaker", "HashCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.CompareStringAndChars
bool System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars(::StringW str, ::ArrayW<::Il2CppChar> a, int l) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::CompareStringAndChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareStringAndChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, str, a, l);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StringMaker.MakeString
::StringW System::Security::Util::Tokenizer::StringMaker::MakeString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StringMaker::MakeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader
#include "System/Security/Util/Tokenizer_ITokenReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.ITokenReader.Read
int System::Security::Util::Tokenizer::ITokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::ITokenReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader
#include "System/Security/Util/Tokenizer_StreamTokenReader.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.StreamReader _in
[[deprecated("Use field access instead!")]] ::System::IO::StreamReader*& System::Security::Util::Tokenizer::StreamTokenReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<::System::IO::StreamReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _numCharRead
[[deprecated("Use field access instead!")]] int& System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::dyn__numCharRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numCharRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader.get_NumCharEncountered
int System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::get_NumCharEncountered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NumCharEncountered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.Tokenizer/System.Security.Util.StreamTokenReader.Read
int System::Security::Util::Tokenizer::StreamTokenReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::Tokenizer::StreamTokenReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.Int16[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& System::Security::Util::TokenizerShortBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerShortBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerShortBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerShortBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String[] m_block
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Util::TokenizerStringBlock::dyn_m_block() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_block"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Security.Util.TokenizerStringBlock m_next
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStringBlock::dyn_m_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStringBlock::dyn_m_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_next"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Util.TokenizerStream
#include "System/Security/Util/TokenizerStream.hpp"
// Including type: System.Security.Util.TokenizerShortBlock
#include "System/Security/Util/TokenizerShortBlock.hpp"
// Including type: System.Security.Util.TokenizerStringBlock
#include "System/Security/Util/TokenizerStringBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_countTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_countTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_countTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_countTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_headTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_headTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_lastTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_lastTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_lastTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_lastTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerShortBlock m_currentTokens
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerShortBlock*& System::Security::Util::TokenizerStream::dyn_m_currentTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentTokens"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerShortBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexTokens
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexTokens");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexTokens"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_headStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_headStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_headStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_headStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Util.TokenizerStringBlock m_currentStrings
[[deprecated("Use field access instead!")]] ::System::Security::Util::TokenizerStringBlock*& System::Security::Util::TokenizerStream::dyn_m_currentStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_currentStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentStrings"))->offset;
  return *reinterpret_cast<::System::Security::Util::TokenizerStringBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_indexStrings
[[deprecated("Use field access instead!")]] int& System::Security::Util::TokenizerStream::dyn_m_indexStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::dyn_m_indexStrings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_indexStrings"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddToken
void System::Security::Util::TokenizerStream::AddToken(int16_t token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Security.Util.TokenizerStream.AddString
void System::Security::Util::TokenizerStream::AddString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::AddString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: System.Security.Util.TokenizerStream.Reset
void System::Security::Util::TokenizerStream::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextFullToken
int16_t System::Security::Util::TokenizerStream::GetNextFullToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextFullToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextFullToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextToken
int16_t System::Security::Util::TokenizerStream::GetNextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetNextString
::StringW System::Security::Util::TokenizerStream::GetNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.ThrowAwayNextString
void System::Security::Util::TokenizerStream::ThrowAwayNextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::ThrowAwayNextString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowAwayNextString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.TagLastToken
void System::Security::Util::TokenizerStream::TagLastToken(int16_t tag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::TagLastToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TagLastToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tag)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tag);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GetTokenCount
int System::Security::Util::TokenizerStream::GetTokenCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GetTokenCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokenCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Util.TokenizerStream.GoToPosition
void System::Security::Util::TokenizerStream::GoToPosition(int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Util::TokenizerStream::GoToPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GoToPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.GenericIdentity
#include "System/Security/Principal/GenericIdentity.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::GenericIdentity::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.AddNameClaim
void System::Security::Principal::GenericIdentity::AddNameClaim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::AddNameClaim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddNameClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Claims
::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* System::Security::Principal::GenericIdentity::get_Claims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Claims");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Claims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_Name
::StringW System::Security::Principal::GenericIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.get_AuthenticationType
::StringW System::Security::Principal::GenericIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.Clone
::System::Security::Claims::ClaimsIdentity* System::Security::Principal::GenericIdentity::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.GenericIdentity.OnDeserializedMethod
void System::Security::Principal::GenericIdentity::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericIdentity::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.GenericPrincipal
#include "System/Security/Principal/GenericPrincipal.hpp"
// Including type: System.Security.Principal.IIdentity
#include "System/Security/Principal/IIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.IIdentity m_identity
[[deprecated("Use field access instead!")]] ::System::Security::Principal::IIdentity*& System::Security::Principal::GenericPrincipal::dyn_m_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericPrincipal::dyn_m_identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_identity"))->offset;
  return *reinterpret_cast<::System::Security::Principal::IIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] m_roles
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& System::Security::Principal::GenericPrincipal::dyn_m_roles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::GenericPrincipal::dyn_m_roles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roles"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.IIdentity
#include "System/Security/Principal/IIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Principal.IIdentity.get_AuthenticationType
::StringW System::Security::Principal::IIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::IIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.IIdentity.get_Name
::StringW System::Security::Principal::IIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::IIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.PrincipalPolicy
#include "System/Security/Principal/PrincipalPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.PrincipalPolicy UnauthenticatedPrincipal
::System::Security::Principal::PrincipalPolicy System::Security::Principal::PrincipalPolicy::_get_UnauthenticatedPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_get_UnauthenticatedPrincipal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::PrincipalPolicy>("System.Security.Principal", "PrincipalPolicy", "UnauthenticatedPrincipal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.PrincipalPolicy UnauthenticatedPrincipal
void System::Security::Principal::PrincipalPolicy::_set_UnauthenticatedPrincipal(::System::Security::Principal::PrincipalPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_set_UnauthenticatedPrincipal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "PrincipalPolicy", "UnauthenticatedPrincipal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.PrincipalPolicy NoPrincipal
::System::Security::Principal::PrincipalPolicy System::Security::Principal::PrincipalPolicy::_get_NoPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_get_NoPrincipal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::PrincipalPolicy>("System.Security.Principal", "PrincipalPolicy", "NoPrincipal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.PrincipalPolicy NoPrincipal
void System::Security::Principal::PrincipalPolicy::_set_NoPrincipal(::System::Security::Principal::PrincipalPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_set_NoPrincipal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "PrincipalPolicy", "NoPrincipal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.PrincipalPolicy WindowsPrincipal
::System::Security::Principal::PrincipalPolicy System::Security::Principal::PrincipalPolicy::_get_WindowsPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_get_WindowsPrincipal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::PrincipalPolicy>("System.Security.Principal", "PrincipalPolicy", "WindowsPrincipal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.PrincipalPolicy WindowsPrincipal
void System::Security::Principal::PrincipalPolicy::_set_WindowsPrincipal(::System::Security::Principal::PrincipalPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::_set_WindowsPrincipal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "PrincipalPolicy", "WindowsPrincipal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Principal::PrincipalPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::PrincipalPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.TokenImpersonationLevel
#include "System/Security/Principal/TokenImpersonationLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Anonymous
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Anonymous
void System::Security::Principal::TokenImpersonationLevel::_set_Anonymous(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Anonymous", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Delegation
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Delegation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Delegation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Delegation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Delegation
void System::Security::Principal::TokenImpersonationLevel::_set_Delegation(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Delegation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Delegation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Identification
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Identification() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Identification");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Identification"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Identification
void System::Security::Principal::TokenImpersonationLevel::_set_Identification(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Identification");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Identification", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel Impersonation
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_Impersonation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_Impersonation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "Impersonation"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel Impersonation
void System::Security::Principal::TokenImpersonationLevel::_set_Impersonation(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_Impersonation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "Impersonation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.TokenImpersonationLevel None
::System::Security::Principal::TokenImpersonationLevel System::Security::Principal::TokenImpersonationLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::TokenImpersonationLevel>("System.Security.Principal", "TokenImpersonationLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.TokenImpersonationLevel None
void System::Security::Principal::TokenImpersonationLevel::_set_None(::System::Security::Principal::TokenImpersonationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "TokenImpersonationLevel", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Principal::TokenImpersonationLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::TokenImpersonationLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.WindowsAccountType
#include "System/Security/Principal/WindowsAccountType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Normal
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Normal
void System::Security::Principal::WindowsAccountType::_set_Normal(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Guest
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Guest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Guest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Guest"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Guest
void System::Security::Principal::WindowsAccountType::_set_Guest(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Guest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Guest", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType System
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType System
void System::Security::Principal::WindowsAccountType::_set_System(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Principal.WindowsAccountType Anonymous
::System::Security::Principal::WindowsAccountType System::Security::Principal::WindowsAccountType::_get_Anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_get_Anonymous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Principal::WindowsAccountType>("System.Security.Principal", "WindowsAccountType", "Anonymous"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Principal.WindowsAccountType Anonymous
void System::Security::Principal::WindowsAccountType::_set_Anonymous(::System::Security::Principal::WindowsAccountType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::_set_Anonymous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsAccountType", "Anonymous", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Principal::WindowsAccountType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsAccountType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Security.Principal.WindowsImpersonationContext
#include "System/Security/Principal/WindowsImpersonationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr invalidWindows
::System::IntPtr System::Security::Principal::WindowsIdentity::_get_invalidWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::_get_invalidWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IntPtr>("System.Security.Principal", "WindowsIdentity", "invalidWindows"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr invalidWindows
void System::Security::Principal::WindowsIdentity::_set_invalidWindows(::System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::_set_invalidWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Principal", "WindowsIdentity", "invalidWindows", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _token
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Principal::WindowsIdentity::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::WindowsIdentity::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.WindowsAccountType _account
[[deprecated("Use field access instead!")]] ::System::Security::Principal::WindowsAccountType& System::Security::Principal::WindowsIdentity::dyn__account() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__account");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_account"))->offset;
  return *reinterpret_cast<::System::Security::Principal::WindowsAccountType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _authenticated
[[deprecated("Use field access instead!")]] bool& System::Security::Principal::WindowsIdentity::dyn__authenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__authenticated");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticated"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Principal::WindowsIdentity::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.Serialization.SerializationInfo _info
[[deprecated("Use field access instead!")]] ::System::Runtime::Serialization::SerializationInfo*& System::Security::Principal::WindowsIdentity::dyn__info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::dyn__info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_info"))->offset;
  return *reinterpret_cast<::System::Runtime::Serialization::SerializationInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity..cctor
void System::Security::Principal::WindowsIdentity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.Dispose
void System::Security::Principal::WindowsIdentity::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetCurrent
::System::Security::Principal::WindowsIdentity* System::Security::Principal::WindowsIdentity::GetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetCurrent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetCurrent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::WindowsIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.Impersonate
::System::Security::Principal::WindowsImpersonationContext* System::Security::Principal::WindowsIdentity::Impersonate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::Impersonate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Impersonate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Principal::WindowsImpersonationContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::Principal::WindowsIdentity::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Principal::WindowsIdentity::System_Runtime_Serialization_ISerializable_GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.CloneAsBase
::System::Security::Claims::ClaimsIdentity* System::Security::Principal::WindowsIdentity::CloneAsBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::CloneAsBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneAsBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetTokenInternal
::System::IntPtr System::Security::Principal::WindowsIdentity::GetTokenInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetTokenInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTokenInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.SetToken
void System::Security::Principal::WindowsIdentity::SetToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::SetToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetCurrentToken
::System::IntPtr System::Security::Principal::WindowsIdentity::GetCurrentToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetCurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetCurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.GetTokenName
::StringW System::Security::Principal::WindowsIdentity::GetTokenName(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::GetTokenName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsIdentity", "GetTokenName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.get_AuthenticationType
::StringW System::Security::Principal::WindowsIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsIdentity.get_Name
::StringW System::Security::Principal::WindowsIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.WindowsImpersonationContext
#include "System/Security/Principal/WindowsImpersonationContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IntPtr _token
[[deprecated("Use field access instead!")]] ::System::IntPtr& System::Security::Principal::WindowsImpersonationContext::dyn__token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::dyn__token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_token"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean undo
[[deprecated("Use field access instead!")]] bool& System::Security::Principal::WindowsImpersonationContext::dyn_undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::dyn_undo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "undo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.Dispose
void System::Security::Principal::WindowsImpersonationContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.Undo
void System::Security::Principal::WindowsImpersonationContext::Undo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::Undo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Undo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.CloseToken
bool System::Security::Principal::WindowsImpersonationContext::CloseToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::CloseToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "CloseToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.DuplicateToken
::System::IntPtr System::Security::Principal::WindowsImpersonationContext::DuplicateToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::DuplicateToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "DuplicateToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.SetCurrentToken
bool System::Security::Principal::WindowsImpersonationContext::SetCurrentToken(::System::IntPtr token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::SetCurrentToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "SetCurrentToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, token);
}
// Autogenerated method: System.Security.Principal.WindowsImpersonationContext.RevertToSelf
bool System::Security::Principal::WindowsImpersonationContext::RevertToSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsImpersonationContext::RevertToSelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Principal", "WindowsImpersonationContext", "RevertToSelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Principal.WindowsPrincipal
#include "System/Security/Principal/WindowsPrincipal.hpp"
// Including type: System.Security.Principal.WindowsIdentity
#include "System/Security/Principal/WindowsIdentity.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Principal.WindowsIdentity _identity
[[deprecated("Use field access instead!")]] ::System::Security::Principal::WindowsIdentity*& System::Security::Principal::WindowsPrincipal::dyn__identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Principal::WindowsPrincipal::dyn__identity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_identity"))->offset;
  return *reinterpret_cast<::System::Security::Principal::WindowsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_issuer
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_issuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_issuer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_originalIssuer
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_originalIssuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_originalIssuer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_originalIssuer"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_type
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_value
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_valueType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::Claim::dyn_m_valueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_valueType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_valueType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_userSerializationData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Claims::Claim::dyn_m_userSerializationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_userSerializationData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_userSerializationData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.String> m_properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& System::Security::Claims::Claim::dyn_m_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_properties");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_propertyLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Security::Claims::Claim::dyn_m_propertyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_propertyLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_propertyLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.ClaimsIdentity m_subject
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::Claim::dyn_m_subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::dyn_m_subject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_subject"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.Claim.get_Properties
::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>* System::Security::Claims::Claim::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.get_Subject
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::Claim::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.set_Subject
void System::Security::Claims::Claim::set_Subject(::System::Security::Claims::ClaimsIdentity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::set_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Claims.Claim.get_Type
::StringW System::Security::Claims::Claim::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.get_Value
::StringW System::Security::Claims::Claim::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.Claim.OnDeserializedMethod
void System::Security::Claims::Claim::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.Claim.Clone
::System::Security::Claims::Claim* System::Security::Claims::Claim::Clone(::System::Security::Claims::ClaimsIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method, identity);
}
// Autogenerated method: System.Security.Claims.Claim.ToString
::StringW System::Security::Claims::Claim::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::Claim::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51
#include "System/Security/Claims/ClaimsIdentity_-get_Claims-d__51.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_userSerializationData
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Claims::ClaimsIdentity::dyn_m_userSerializationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_userSerializationData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_userSerializationData"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Claims.Claim> m_instanceClaims
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Claims::Claim*>*& System::Security::Claims::ClaimsIdentity::dyn_m_instanceClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_instanceClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_instanceClaims"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Claims::Claim*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.ObjectModel.Collection`1<System.Collections.Generic.IEnumerable`1<System.Security.Claims.Claim>> m_externalClaims
[[deprecated("Use field access instead!")]] ::System::Collections::ObjectModel::Collection_1<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*>*& System::Security::Claims::ClaimsIdentity::dyn_m_externalClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_externalClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_externalClaims"))->offset;
  return *reinterpret_cast<::System::Collections::ObjectModel::Collection_1<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_nameType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_nameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_nameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_nameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_roleType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_roleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_roleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_roleType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_version
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.ClaimsIdentity m_actor
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::ClaimsIdentity::dyn_m_actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_actor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_actor"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_authenticationType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_authenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_authenticationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_authenticationType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object m_bootstrapContext
[[deprecated("Use field access instead!")]] ::Il2CppObject*& System::Security::Claims::ClaimsIdentity::dyn_m_bootstrapContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_bootstrapContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_bootstrapContext"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_label
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_label() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_label");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_label"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedNameType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedNameType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedNameType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedRoleType
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedRoleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedRoleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedRoleType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedClaims
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsIdentity::dyn_m_serializedClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::dyn_m_serializedClaims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedClaims"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_AuthenticationType
::StringW System::Security::Claims::ClaimsIdentity::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_AuthenticationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Actor
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsIdentity::get_Actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.set_Actor
void System::Security::Claims::ClaimsIdentity::set_Actor(::System::Security::Claims::ClaimsIdentity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::set_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Claims
::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* System::Security::Claims::ClaimsIdentity::get_Claims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Claims");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Claims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_Name
::StringW System::Security::Claims::ClaimsIdentity::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.get_NameClaimType
::StringW System::Security::Claims::ClaimsIdentity::get_NameClaimType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::get_NameClaimType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameClaimType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.Clone
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsIdentity::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.AddClaim
void System::Security::Claims::ClaimsIdentity::AddClaim(::System::Security::Claims::Claim* claim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::AddClaim");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(claim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claim);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SafeAddClaims
void System::Security::Claims::ClaimsIdentity::SafeAddClaims(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::Claim*>* claims) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SafeAddClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeAddClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(claims)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claims);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SafeAddClaim
void System::Security::Claims::ClaimsIdentity::SafeAddClaim(::System::Security::Claims::Claim* claim) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SafeAddClaim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SafeAddClaim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(claim)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, claim);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.FindFirst
::System::Security::Claims::Claim* System::Security::Claims::ClaimsIdentity::FindFirst(::StringW type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::FindFirst");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnSerializingMethod
void System::Security::Claims::ClaimsIdentity::OnSerializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnSerializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnDeserializedMethod
void System::Security::Claims::ClaimsIdentity::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.OnDeserializingMethod
void System::Security::Claims::ClaimsIdentity::OnDeserializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::OnDeserializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.GetObjectData
void System::Security::Claims::ClaimsIdentity::GetObjectData(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.DeserializeClaims
void System::Security::Claims::ClaimsIdentity::DeserializeClaims(::StringW serializedClaims) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::DeserializeClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedClaims)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializedClaims);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.SerializeClaims
::StringW System::Security::Claims::ClaimsIdentity::SerializeClaims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::SerializeClaims");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeClaims", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.IsCircular
bool System::Security::Claims::ClaimsIdentity::IsCircular(::System::Security::Claims::ClaimsIdentity* subject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::IsCircular");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCircular", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, subject);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity.Deserialize
void System::Security::Claims::ClaimsIdentity::Deserialize(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context, bool useContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(useContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context, useContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51
#include "System/Security/Claims/ClaimsIdentity_-get_Claims-d__51.hpp"
// Including type: System.Security.Claims.Claim
#include "System/Security/Claims/Claim.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Claims.Claim <>2__current
[[deprecated("Use field access instead!")]] ::System::Security::Claims::Claim*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::System::Security::Claims::Claim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Security.Claims.ClaimsIdentity <>4__this
[[deprecated("Use field access instead!")]] ::System::Security::Claims::ClaimsIdentity*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::System::Security::Claims::ClaimsIdentity**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <j>5__2
[[deprecated("Use field access instead!")]] int& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$j$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$j$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<j>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.Security.Claims.Claim> <>7__wrap1
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>*& System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$7__wrap1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::dyn_$$7__wrap1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap1"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current
::System::Security::Claims::Claim* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_Generic_IEnumerator$System_Security_Claims_Claim$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Security.Claims.Claim>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::Claim*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.IDisposable.Dispose
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.MoveNext
bool System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.<>m__Finally1
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.Collections.IEnumerator.Reset
void System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_Generic_IEnumerable$System_Security_Claims_Claim$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::System::Security::Claims::Claim*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsIdentity/System.Security.Claims.<get_Claims>d__51.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsIdentity::$get_Claims$d__51::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Claims.ClaimsPrincipal
#include "System/Security/Claims/ClaimsPrincipal.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Security.Claims.ClaimsIdentity
#include "System/Security/Claims/ClaimsIdentity.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* System::Security::Claims::ClaimsPrincipal::_get_s_identitySelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_get_s_identitySelector");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>*>("System.Security.Claims", "ClaimsPrincipal", "s_identitySelector")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Collections.Generic.IEnumerable`1<System.Security.Claims.ClaimsIdentity>,System.Security.Claims.ClaimsIdentity> s_identitySelector
void System::Security::Claims::ClaimsPrincipal::_set_s_identitySelector(::System::Func_2<::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>*, ::System::Security::Claims::ClaimsIdentity*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_set_s_identitySelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Claims", "ClaimsPrincipal", "s_identitySelector", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* System::Security::Claims::ClaimsPrincipal::_get_s_principalSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_get_s_principalSelector");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>*>("System.Security.Claims", "ClaimsPrincipal", "s_principalSelector"));
}
// Autogenerated static field setter
// Set static field: static private System.Func`1<System.Security.Claims.ClaimsPrincipal> s_principalSelector
void System::Security::Claims::ClaimsPrincipal::_set_s_principalSelector(::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::_set_s_principalSelector");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Claims", "ClaimsPrincipal", "s_principalSelector", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_version
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsPrincipal::dyn_m_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_serializedClaimsIdentities
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Claims::ClaimsPrincipal::dyn_m_serializedClaimsIdentities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_serializedClaimsIdentities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_serializedClaimsIdentities"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Security.Claims.ClaimsIdentity> m_identities
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>*& System::Security::Claims::ClaimsPrincipal::dyn_m_identities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::dyn_m_identities");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_identities"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::System::Security::Claims::ClaimsIdentity*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.get_ClaimsPrincipalSelector
::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>* System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::get_ClaimsPrincipalSelector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", "get_ClaimsPrincipalSelector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::System::Security::Claims::ClaimsPrincipal*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal..cctor
void System::Security::Claims::ClaimsPrincipal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.SelectPrimaryIdentity
::System::Security::Claims::ClaimsIdentity* System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity(::System::Collections::Generic::IEnumerable_1<::System::Security::Claims::ClaimsIdentity*>* identities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::SelectPrimaryIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Claims", "ClaimsPrincipal", "SelectPrimaryIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identities)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Claims::ClaimsIdentity*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, identities);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.OnSerializingMethod
void System::Security::Claims::ClaimsPrincipal::OnSerializingMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::OnSerializingMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializingMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.OnDeserializedMethod
void System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod(::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::OnDeserializedMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializedMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.Deserialize
void System::Security::Claims::ClaimsPrincipal::Deserialize(::System::Runtime::Serialization::SerializationInfo* info, ::System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.DeserializeIdentities
void System::Security::Claims::ClaimsPrincipal::DeserializeIdentities(::StringW identities) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::DeserializeIdentities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeIdentities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identities)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, identities);
}
// Autogenerated method: System.Security.Claims.ClaimsPrincipal.SerializeIdentities
::StringW System::Security::Claims::ClaimsPrincipal::SerializeIdentities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Claims::ClaimsPrincipal::SerializeIdentities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeIdentities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.HashAlgorithmName
#include "System/Security/Cryptography/HashAlgorithmName.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::HashAlgorithmName::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::dyn__name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_SHA256
::System::Security::Cryptography::HashAlgorithmName System::Security::Cryptography::HashAlgorithmName::get_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_SHA256");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "HashAlgorithmName", "get_SHA256", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::HashAlgorithmName, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.get_Name
::StringW System::Security::Cryptography::HashAlgorithmName::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName..ctor
// ABORTED elsewhere.  System::Security::Cryptography::HashAlgorithmName::HashAlgorithmName(::StringW name)
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.Equals
bool System::Security::Cryptography::HashAlgorithmName::Equals(::System::Security::Cryptography::HashAlgorithmName other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.ToString
::StringW System::Security::Cryptography::HashAlgorithmName::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.Equals
bool System::Security::Cryptography::HashAlgorithmName::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.HashAlgorithmName.GetHashCode
int System::Security::Cryptography::HashAlgorithmName::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::HashAlgorithmName::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSASignaturePadding
#include "System/Security/Cryptography/RSASignaturePadding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::_get_s_pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_get_s_pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePadding*>("System.Security.Cryptography", "RSASignaturePadding", "s_pkcs1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pkcs1
void System::Security::Cryptography::RSASignaturePadding::_set_s_pkcs1(::System::Security::Cryptography::RSASignaturePadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_set_s_pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePadding", "s_pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::_get_s_pss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_get_s_pss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePadding*>("System.Security.Cryptography", "RSASignaturePadding", "s_pss"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Security.Cryptography.RSASignaturePadding s_pss
void System::Security::Cryptography::RSASignaturePadding::_set_s_pss(::System::Security::Cryptography::RSASignaturePadding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::_set_s_pss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePadding", "s_pss", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Security.Cryptography.RSASignaturePaddingMode _mode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::RSASignaturePaddingMode& System::Security::Cryptography::RSASignaturePadding::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::RSASignaturePaddingMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.get_Pkcs1
::System::Security::Cryptography::RSASignaturePadding* System::Security::Cryptography::RSASignaturePadding::get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::get_Pkcs1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "get_Pkcs1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::RSASignaturePadding*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding..cctor
void System::Security::Cryptography::RSASignaturePadding::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.Equals
bool System::Security::Cryptography::RSASignaturePadding::Equals(::System::Security::Cryptography::RSASignaturePadding* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.GetHashCode
int System::Security::Cryptography::RSASignaturePadding::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.Equals
bool System::Security::Cryptography::RSASignaturePadding::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.ToString
::StringW System::Security::Cryptography::RSASignaturePadding::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.op_Equality
bool System::Security::Cryptography::operator ==(::System::Security::Cryptography::RSASignaturePadding* left, ::System::Security::Cryptography::RSASignaturePadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Security.Cryptography.RSASignaturePadding.op_Inequality
bool System::Security::Cryptography::operator !=(::System::Security::Cryptography::RSASignaturePadding* left, ::System::Security::Cryptography::RSASignaturePadding& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePadding::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RSASignaturePadding", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSASignaturePaddingMode
#include "System/Security/Cryptography/RSASignaturePaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pkcs1
::System::Security::Cryptography::RSASignaturePaddingMode System::Security::Cryptography::RSASignaturePaddingMode::_get_Pkcs1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_get_Pkcs1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePaddingMode>("System.Security.Cryptography", "RSASignaturePaddingMode", "Pkcs1"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pkcs1
void System::Security::Cryptography::RSASignaturePaddingMode::_set_Pkcs1(::System::Security::Cryptography::RSASignaturePaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_set_Pkcs1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePaddingMode", "Pkcs1", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pss
::System::Security::Cryptography::RSASignaturePaddingMode System::Security::Cryptography::RSASignaturePaddingMode::_get_Pss() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_get_Pss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::RSASignaturePaddingMode>("System.Security.Cryptography", "RSASignaturePaddingMode", "Pss"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.RSASignaturePaddingMode Pss
void System::Security::Cryptography::RSASignaturePaddingMode::_set_Pss(::System::Security::Cryptography::RSASignaturePaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::_set_Pss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RSASignaturePaddingMode", "Pss", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::RSASignaturePaddingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::RSASignaturePaddingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Aes::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Aes", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::Aes::_set_s_legalBlockSizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Aes", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::ArrayW<::System::Security::Cryptography::KeySizes*> System::Security::Cryptography::Aes::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::System::Security::Cryptography::KeySizes*>>("System.Security.Cryptography", "Aes", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::Aes::_set_s_legalKeySizes(::ArrayW<::System::Security::Cryptography::KeySizes*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Aes", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.Aes..cctor
void System::Security::Cryptography::Aes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::Aes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Aes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 KeySizeValue
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::AsymmetricAlgorithm::dyn_KeySizeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::dyn_KeySizeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeySizeValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Security::Cryptography::KeySizes*>& System::Security::Cryptography::AsymmetricAlgorithm::dyn_LegalKeySizesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::dyn_LegalKeySizesValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LegalKeySizesValue"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Security::Cryptography::KeySizes*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.get_KeySize
int System::Security::Cryptography::AsymmetricAlgorithm::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.set_KeySize
void System::Security::Cryptography::AsymmetricAlgorithm::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
void System::Security::Cryptography::AsymmetricAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Clear
void System::Security::Cryptography::AsymmetricAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.Dispose
void System::Security::Cryptography::AsymmetricAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString
void System::Security::Cryptography::AsymmetricAlgorithm::FromXmlString(::StringW xmlString) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::FromXmlString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlString)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlString);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString
::StringW System::Security::Cryptography::AsymmetricAlgorithm::ToXmlString(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricAlgorithm::ToXmlString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToXmlString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricSignatureDeformatter
#include "System/Security/Cryptography/AsymmetricSignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetKey
void System::Security::Cryptography::AsymmetricSignatureDeformatter::SetKey(::System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::AsymmetricSignatureDeformatter::SetHashAlgorithm(::StringW strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature
bool System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature(::ArrayW<uint8_t> rgbHash, ::ArrayW<uint8_t> rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::AsymmetricSignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AsymmetricSignatureFormatter
#include "System/Security/Cryptography/AsymmetricSignatureFormatter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CipherMode
#include "System/Security/Cryptography/CipherMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CBC
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CBC"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CBC
void System::Security::Cryptography::CipherMode::_set_CBC(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CBC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode ECB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_ECB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_ECB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "ECB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode ECB
void System::Security::Cryptography::CipherMode::_set_ECB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_ECB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "ECB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode OFB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_OFB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_OFB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "OFB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode OFB
void System::Security::Cryptography::CipherMode::_set_OFB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_OFB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "OFB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CFB
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CFB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CFB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CFB"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CFB
void System::Security::Cryptography::CipherMode::_set_CFB(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CFB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CFB", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CipherMode CTS
::System::Security::Cryptography::CipherMode System::Security::Cryptography::CipherMode::_get_CTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_get_CTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CipherMode>("System.Security.Cryptography", "CipherMode", "CTS"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CipherMode CTS
void System::Security::Cryptography::CipherMode::_set_CTS(::System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::_set_CTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CipherMode", "CTS", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CipherMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CipherMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.PaddingMode
#include "System/Security/Cryptography/PaddingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode None
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode None
void System::Security::Cryptography::PaddingMode::_set_None(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode PKCS7
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_PKCS7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_PKCS7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "PKCS7"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode PKCS7
void System::Security::Cryptography::PaddingMode::_set_PKCS7(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_PKCS7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "PKCS7", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode Zeros
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_Zeros() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_Zeros");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "Zeros"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode Zeros
void System::Security::Cryptography::PaddingMode::_set_Zeros(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_Zeros");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "Zeros", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode ANSIX923
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_ANSIX923() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_ANSIX923");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "ANSIX923"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode ANSIX923
void System::Security::Cryptography::PaddingMode::_set_ANSIX923(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_ANSIX923");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "ANSIX923", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.PaddingMode ISO10126
::System::Security::Cryptography::PaddingMode System::Security::Cryptography::PaddingMode::_get_ISO10126() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_get_ISO10126");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::PaddingMode>("System.Security.Cryptography", "PaddingMode", "ISO10126"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.PaddingMode ISO10126
void System::Security::Cryptography::PaddingMode::_set_ISO10126(::System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::_set_ISO10126");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "PaddingMode", "ISO10126", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::PaddingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::PaddingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_minSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_minSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_minSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_minSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_maxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_maxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_skipSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::KeySizes::dyn_m_skipSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::dyn_m_skipSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_skipSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MinSize
int System::Security::Cryptography::KeySizes::get_MinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_MinSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_MaxSize
int System::Security::Cryptography::KeySizes::get_MaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_MaxSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.get_SkipSize
int System::Security::Cryptography::KeySizes::get_SkipSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::get_SkipSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegal
bool System::Security::Cryptography::KeySizes::IsLegal(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::IsLegal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLegal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, keySize);
}
// Autogenerated method: System.Security.Cryptography.KeySizes.IsLegalKeySize
bool System::Security::Cryptography::KeySizes::IsLegalKeySize(::ArrayW<::System::Security::Cryptography::KeySizes*> legalKeys, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::KeySizes::IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "KeySizes", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legalKeys), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, legalKeys, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptographicException
#include "System/Security/Cryptography/CryptographicException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptographicUnexpectedOperationException
#include "System/Security/Cryptography/CryptographicUnexpectedOperationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspProviderFlags
#include "System/Security/Cryptography/CspProviderFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags NoFlags
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_NoFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_NoFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "NoFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags NoFlags
void System::Security::Cryptography::CspProviderFlags::_set_NoFlags(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_NoFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "NoFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseMachineKeyStore
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseMachineKeyStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseMachineKeyStore
void System::Security::Cryptography::CspProviderFlags::_set_UseMachineKeyStore(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseMachineKeyStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseMachineKeyStore", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseDefaultKeyContainer
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseDefaultKeyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseDefaultKeyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseDefaultKeyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseDefaultKeyContainer
void System::Security::Cryptography::CspProviderFlags::_set_UseDefaultKeyContainer(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseDefaultKeyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseDefaultKeyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseNonExportableKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseNonExportableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseNonExportableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseNonExportableKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseNonExportableKey
void System::Security::Cryptography::CspProviderFlags::_set_UseNonExportableKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseNonExportableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseNonExportableKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseExistingKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseExistingKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseExistingKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseExistingKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseExistingKey
void System::Security::Cryptography::CspProviderFlags::_set_UseExistingKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseExistingKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseExistingKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseArchivableKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseArchivableKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseArchivableKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseArchivableKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseArchivableKey
void System::Security::Cryptography::CspProviderFlags::_set_UseArchivableKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseArchivableKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseArchivableKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags UseUserProtectedKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_UseUserProtectedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_UseUserProtectedKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "UseUserProtectedKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags UseUserProtectedKey
void System::Security::Cryptography::CspProviderFlags::_set_UseUserProtectedKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_UseUserProtectedKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "UseUserProtectedKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags NoPrompt
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_NoPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_NoPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "NoPrompt"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags NoPrompt
void System::Security::Cryptography::CspProviderFlags::_set_NoPrompt(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_NoPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "NoPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CspProviderFlags CreateEphemeralKey
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspProviderFlags::_get_CreateEphemeralKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_get_CreateEphemeralKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CspProviderFlags>("System.Security.Cryptography", "CspProviderFlags", "CreateEphemeralKey"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CspProviderFlags CreateEphemeralKey
void System::Security::Cryptography::CspProviderFlags::_set_CreateEphemeralKey(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::_set_CreateEphemeralKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CspProviderFlags", "CreateEphemeralKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspProviderFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspProviderFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CspParameters
#include "System/Security/Cryptography/CspParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 ProviderType
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_ProviderType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_ProviderType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProviderType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ProviderName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::CspParameters::dyn_ProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_ProviderName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProviderName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String KeyContainerName
[[deprecated("Use field access instead!")]] ::StringW& System::Security::Cryptography::CspParameters::dyn_KeyContainerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_KeyContainerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyContainerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 KeyNumber
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_KeyNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_KeyNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "KeyNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_flags
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CspParameters::dyn_m_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::dyn_m_flags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_flags"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.get_Flags
::System::Security::Cryptography::CspProviderFlags System::Security::Cryptography::CspParameters::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CspProviderFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CspParameters.set_Flags
void System::Security::Cryptography::CspParameters::set_Flags(::System::Security::Cryptography::CspProviderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CspParameters::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStreamMode
#include "System/Security/Cryptography/CryptoStreamMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CryptoStreamMode Read
::System::Security::Cryptography::CryptoStreamMode System::Security::Cryptography::CryptoStreamMode::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CryptoStreamMode>("System.Security.Cryptography", "CryptoStreamMode", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CryptoStreamMode Read
void System::Security::Cryptography::CryptoStreamMode::_set_Read(::System::Security::Cryptography::CryptoStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStreamMode", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.CryptoStreamMode Write
::System::Security::Cryptography::CryptoStreamMode System::Security::Cryptography::CryptoStreamMode::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::CryptoStreamMode>("System.Security.Cryptography", "CryptoStreamMode", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.CryptoStreamMode Write
void System::Security::Cryptography::CryptoStreamMode::_set_Write(::System::Security::Cryptography::CryptoStreamMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "CryptoStreamMode", "Write", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStreamMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStreamMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream
#include "System/Security/Cryptography/CryptoStream.hpp"
// Including type: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable
#include "System/Security/Cryptography/CryptoStream_HopToThreadPoolAwaitable.hpp"
// Including type: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.<ReadAsyncInternal>d__34
#include "System/Security/Cryptography/CryptoStream_-ReadAsyncInternal-d__34.hpp"
// Including type: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.<WriteAsyncInternal>d__37
#include "System/Security/Cryptography/CryptoStream_-WriteAsyncInternal-d__37.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& System::Security::Cryptography::CryptoStream::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.ICryptoTransform _Transform
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::ICryptoTransform*& System::Security::Cryptography::CryptoStream::dyn__Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_Transform"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::ICryptoTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _InputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::dyn__InputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__InputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _InputBufferIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__InputBufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__InputBufferIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InputBufferIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _InputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__InputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_InputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _OutputBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& System::Security::Cryptography::CryptoStream::dyn__OutputBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__OutputBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OutputBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _OutputBufferIndex
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__OutputBufferIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__OutputBufferIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OutputBufferIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _OutputBlockSize
[[deprecated("Use field access instead!")]] int& System::Security::Cryptography::CryptoStream::dyn__OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__OutputBlockSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_OutputBlockSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.CryptoStreamMode _transformMode
[[deprecated("Use field access instead!")]] ::System::Security::Cryptography::CryptoStreamMode& System::Security::Cryptography::CryptoStream::dyn__transformMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__transformMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformMode"))->offset;
  return *reinterpret_cast<::System::Security::Cryptography::CryptoStreamMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canRead
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__canRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__canRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canWrite
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__canWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__canWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _finalBlockTransformed
[[deprecated("Use field access instead!")]] bool& System::Security::Cryptography::CryptoStream::dyn__finalBlockTransformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::dyn__finalBlockTransformed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalBlockTransformed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_HasFlushedFinalBlock
bool System::Security::Cryptography::CryptoStream::get_HasFlushedFinalBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_HasFlushedFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasFlushedFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.FlushFinalBlock
void System::Security::Cryptography::CryptoStream::FlushFinalBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::FlushFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsyncInternal
::System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsyncInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsyncInternal
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsyncInternal(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Clear
void System::Security::Cryptography::CryptoStream::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.InitializeBuffer
void System::Security::Cryptography::CryptoStream::InitializeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::InitializeBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanRead
bool System::Security::Cryptography::CryptoStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanSeek
bool System::Security::Cryptography::CryptoStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_CanWrite
bool System::Security::Cryptography::CryptoStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Length
int64_t System::Security::Cryptography::CryptoStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.get_Position
int64_t System::Security::Cryptography::CryptoStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.set_Position
void System::Security::Cryptography::CryptoStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Flush
void System::Security::Cryptography::CryptoStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Seek
int64_t System::Security::Cryptography::CryptoStream::Seek(int64_t offset, ::System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.SetLength
void System::Security::Cryptography::CryptoStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Read
int System::Security::Cryptography::CryptoStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.ReadAsync
::System::Threading::Tasks::Task_1<int>* System::Security::Cryptography::CryptoStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Write
void System::Security::Cryptography::CryptoStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.WriteAsync
::System::Threading::Tasks::Task* System::Security::Cryptography::CryptoStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream.Dispose
void System::Security::Cryptography::CryptoStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable
#include "System/Security/Cryptography/CryptoStream_HopToThreadPoolAwaitable.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable.get_IsCompleted
bool System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::get_IsCompleted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable.GetAwaiter
::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::GetAwaiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::GetAwaiter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetAwaiter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable.OnCompleted
void System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::OnCompleted(::System::Action* continuation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(continuation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, continuation);
}
// Autogenerated method: System.Security.Cryptography.CryptoStream/System.Security.Cryptography.HopToThreadPoolAwaitable.GetResult
void System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::GetResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Security::Cryptography::CryptoStream::HopToThreadPoolAwaitable::GetResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
