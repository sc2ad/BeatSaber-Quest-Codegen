// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType ColorA
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_ColorA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_ColorA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "ColorA"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType ColorA
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_ColorA(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_ColorA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "ColorA", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType ColorB
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_ColorB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_ColorB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "ColorB"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType ColorB
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_ColorB(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_ColorB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "ColorB", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType None
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType None
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_None(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ColorType", "None", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SliderType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType Normal
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/SliderType", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType Normal
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_set_Normal(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/SliderType", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType Burst
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_get_Burst() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_get_Burst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/SliderType", "Burst"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderType Burst
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_set_Burst(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::_set_Burst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/SliderType", "Burst", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lineIndex
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer _lineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__lineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteType _type
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection _cutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::dyn__cutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData.get_lineIndex
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData.get_lineLayer
::GlobalNamespace::NoteLineLayer BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData.get_type
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData.get_cutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.NoteData.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::NoteData::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_WaypointData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lineIndex
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer _lineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__lineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OffsetDirection _offsetDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::OffsetDirection& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__offsetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::dyn__offsetDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offsetDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::OffsetDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData.get_lineIndex
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData.get_lineLayer
::GlobalNamespace::NoteLineLayer BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_lineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_lineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData.get_offsetDirection
::GlobalNamespace::OffsetDirection BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_offsetDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_offsetDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::OffsetDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.WaypointData.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::WaypointData::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SliderData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ColorType _colorType
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorType"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headTime
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _headLineIndex
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer _headLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headControlPointLengthMultiplier
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headControlPointLengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headControlPointLengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection _headCutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__headCutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headCutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tailTime
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tailTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tailLineIndex
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailLineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tailLineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineLayer _tailLineLayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteLineLayer& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tailLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _tailControlPointLengthMultiplier
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailControlPointLengthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tailControlPointLengthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutDirection _tailCutDirection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NoteCutDirection& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__tailCutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tailCutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderMidAnchorMode _sliderMidAnchorMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SliderMidAnchorMode& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__sliderMidAnchorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::dyn__sliderMidAnchorMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderMidAnchorMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderMidAnchorMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_colorType
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_headLineIndex
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_headLineLayer
::GlobalNamespace::NoteLineLayer BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_headControlPointLengthMultiplier
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_headCutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_headCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_tailTime
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_tailLineIndex
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_tailLineLayer
::GlobalNamespace::NoteLineLayer BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_tailControlPointLengthMultiplier
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailControlPointLengthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailControlPointLengthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_tailCutDirection
::GlobalNamespace::NoteCutDirection BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailCutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_tailCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tailCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_sliderMidAnchorMode
::GlobalNamespace::SliderMidAnchorMode BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_sliderMidAnchorMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_sliderMidAnchorMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sliderMidAnchorMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SliderMidAnchorMode, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SliderData.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SliderData::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ObstacleData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _time
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lineIndex
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType _type
[[deprecated("Use field access instead!")]] ::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
[[deprecated("Use field access instead!")]] float& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _width
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData.get_lineIndex
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData.get_type
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData.get_duration
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData.get_width
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleData.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleData::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_ObstacleType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType FullHeight
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_FullHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_FullHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "FullHeight"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType FullHeight
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_FullHeight(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_FullHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "FullHeight", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType Top
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "Top"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType Top
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_Top(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType Free
::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_Free() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_get_Free");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType>("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "Free"));
}
// Autogenerated static field setter
// Set static field: static public BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.ObstacleType Free
void BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_Free(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::_set_Free");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("BeatmapSaveDataVersion2_6_0AndEarlier", "BeatmapSaveData/ObstacleType", "Free", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::ObstacleType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventKeywordFiltersData
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SpecialEventKeywordFiltersData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SpecialEventsForKeyword.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword> _keywords
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword*>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData::dyn__keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData::dyn__keywords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keywords"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventKeywordFiltersData.get_keywords
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword*>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData::get_keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventKeywordFiltersData::get_keywords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keywords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveData_SpecialEventsForKeyword.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _keyword
[[deprecated("Use field access instead!")]] ::StringW& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::dyn__keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::dyn__keyword");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyword"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapEventType> _specialEvents
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*& BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::dyn__specialEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::dyn__specialEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_specialEvents"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword.get_keyword
::StringW BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::get_keyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::get_keyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveData/BeatmapSaveDataVersion2_6_0AndEarlier.SpecialEventsForKeyword.get_specialEvents
::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>* BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::get_specialEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::SpecialEventsForKeyword::get_specialEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_specialEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveData::BeatmapEventType>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem
#include "BeatmapSaveDataVersion2_6_0AndEarlier/BeatmapSaveDataItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem.get_time
float BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapSaveDataVersion2_6_0AndEarlier.BeatmapSaveDataItem.CompareTo
int BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem::CompareTo(::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::BeatmapSaveDataVersion2_6_0AndEarlier::BeatmapSaveDataItem::CompareTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AsyncComputeManager
#include "GlobalNamespace/AsyncComputeManager.hpp"
// Including type: System.Collections.Concurrent.BlockingCollection`1
#include "System/Collections/Concurrent/BlockingCollection_1.hpp"
// Including type: AsyncComputeOperation
#include "GlobalNamespace/AsyncComputeOperation.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: AsyncComputeOperation`1
#include "GlobalNamespace/AsyncComputeOperation_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.BlockingCollection`1<AsyncComputeOperation> _asyncComputeRequests
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::BlockingCollection_1<::GlobalNamespace::AsyncComputeOperation*>*& GlobalNamespace::AsyncComputeManager::dyn__asyncComputeRequests() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::dyn__asyncComputeRequests");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncComputeRequests"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::BlockingCollection_1<::GlobalNamespace::AsyncComputeOperation*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Thread _computeThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::AsyncComputeManager::dyn__computeThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::dyn__computeThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_computeThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::AsyncComputeManager::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AsyncComputeManager.Dispose
void GlobalNamespace::AsyncComputeManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AsyncComputeManager.BeginOperation
void GlobalNamespace::AsyncComputeManager::BeginOperation(::GlobalNamespace::AsyncComputeOperation* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::BeginOperation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, operation);
}
// Autogenerated method: AsyncComputeManager.ComputeThreadRun
void GlobalNamespace::AsyncComputeManager::ComputeThreadRun() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeManager::ComputeThreadRun");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeThreadRun", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AsyncComputeOperation
#include "GlobalNamespace/AsyncComputeOperation.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _timeoutMs
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AsyncComputeOperation::dyn__timeoutMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeOperation::dyn__timeoutMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeoutMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch _stopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::AsyncComputeOperation::dyn__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeOperation::dyn__stopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AsyncComputeOperation.get_elapsedTime
double GlobalNamespace::AsyncComputeOperation::get_elapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeOperation::get_elapsedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elapsedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: AsyncComputeOperation.get_hasTimedOut
bool GlobalNamespace::AsyncComputeOperation::get_hasTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeOperation::get_hasTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: AsyncComputeOperation.Execute
void GlobalNamespace::AsyncComputeOperation::Execute(bool disposed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AsyncComputeOperation::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly AuthenticationToken/Platform platform
[[deprecated("Use field access instead!")]] ::GlobalNamespace::AuthenticationToken::Platform& GlobalNamespace::AuthenticationToken::dyn_platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::dyn_platform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "platform"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AuthenticationToken::Platform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AuthenticationToken::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::dyn_userId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AuthenticationToken::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::dyn_userName");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String sessionToken
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::AuthenticationToken::dyn_sessionToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::dyn_sessionToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sessionToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AuthenticationToken..ctor
// ABORTED elsewhere.  GlobalNamespace::AuthenticationToken::AuthenticationToken(::GlobalNamespace::AuthenticationToken::Platform platform, ::StringW userId, ::StringW userName, ::StringW sessionToken)
// Autogenerated method: AuthenticationToken.Serialize
void GlobalNamespace::AuthenticationToken::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: AuthenticationToken.CreateFromSerializedData
::GlobalNamespace::AuthenticationToken GlobalNamespace::AuthenticationToken::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AuthenticationToken, false>(this, ___internal__method, reader);
}
// Autogenerated method: AuthenticationToken.Deserialize
::GlobalNamespace::AuthenticationToken GlobalNamespace::AuthenticationToken::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::AuthenticationToken, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: AuthenticationToken.FromHex
::ArrayW<uint8_t> GlobalNamespace::AuthenticationToken::FromHex(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::FromHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "FromHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: AuthenticationToken.GetHexVal
uint8_t GlobalNamespace::AuthenticationToken::GetHexVal(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::GetHexVal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "GetHexVal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: AuthenticationToken.FromUtf8
::ArrayW<uint8_t> GlobalNamespace::AuthenticationToken::FromUtf8(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::FromUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "FromUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, str);
}
// Autogenerated method: AuthenticationToken.ToHex
::StringW GlobalNamespace::AuthenticationToken::ToHex(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::ToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "ToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: AuthenticationToken.ToUtf8
::StringW GlobalNamespace::AuthenticationToken::ToUtf8(::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::ToUtf8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationToken", "ToUtf8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, bytes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationToken/Platform
#include "GlobalNamespace/AuthenticationToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform Test
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "Test"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform Test
void GlobalNamespace::AuthenticationToken::Platform::_set_Test(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform OculusRift
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_OculusRift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_OculusRift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "OculusRift"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform OculusRift
void GlobalNamespace::AuthenticationToken::Platform::_set_OculusRift(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_OculusRift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "OculusRift", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform OculusQuest
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_OculusQuest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_OculusQuest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "OculusQuest"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform OculusQuest
void GlobalNamespace::AuthenticationToken::Platform::_set_OculusQuest(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_OculusQuest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "OculusQuest", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform Steam
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_Steam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_Steam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "Steam"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform Steam
void GlobalNamespace::AuthenticationToken::Platform::_set_Steam(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_Steam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "Steam", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform PS4
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_PS4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_PS4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "PS4"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform PS4
void GlobalNamespace::AuthenticationToken::Platform::_set_PS4(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_PS4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "PS4", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform PS4Dev
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_PS4Dev() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_PS4Dev");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "PS4Dev"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform PS4Dev
void GlobalNamespace::AuthenticationToken::Platform::_set_PS4Dev(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_PS4Dev");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "PS4Dev", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform PS4Cert
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_PS4Cert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_PS4Cert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "PS4Cert"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform PS4Cert
void GlobalNamespace::AuthenticationToken::Platform::_set_PS4Cert(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_PS4Cert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "PS4Cert", value));
}
// Autogenerated static field getter
// Get static field: static public AuthenticationToken/Platform Oculus
::GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationToken::Platform::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::AuthenticationToken::Platform>("", "AuthenticationToken/Platform", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public AuthenticationToken/Platform Oculus
void GlobalNamespace::AuthenticationToken::Platform::_set_Oculus(::GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AuthenticationToken/Platform", "Oculus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::AuthenticationToken::Platform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AuthenticationToken::Platform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicConnectionRequestHandler
#include "GlobalNamespace/BasicConnectionRequestHandler.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <secret>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::BasicConnectionRequestHandler::dyn_$secret$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicConnectionRequestHandler::dyn_$secret$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<secret>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicConnectionRequestHandler.get_secret
::StringW GlobalNamespace::BasicConnectionRequestHandler::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicConnectionRequestHandler::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: BasicConnectionRequestHandler.set_secret
void GlobalNamespace::BasicConnectionRequestHandler::set_secret(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicConnectionRequestHandler::set_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasicConnectionRequestHandler.GetConnectionMessage
void GlobalNamespace::BasicConnectionRequestHandler::GetConnectionMessage(::LiteNetLib::Utils::NetDataWriter* writer, ::StringW userId, ::StringW userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicConnectionRequestHandler::GetConnectionMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, userId, userName, isConnectionOwner);
}
// Autogenerated method: BasicConnectionRequestHandler.ValidateConnectionMessage
bool GlobalNamespace::BasicConnectionRequestHandler::ValidateConnectionMessage(::LiteNetLib::Utils::NetDataReader* reader, ByRef<::StringW> userId, ByRef<::StringW> userName, ByRef<bool> isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicConnectionRequestHandler::ValidateConnectionMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateConnectionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<::StringW&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reader, byref(userId), byref(userName), byref(isConnectionOwner));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BatchExtensions
#include "GlobalNamespace/BatchExtensions.hpp"
// Including type: BatchExtensions/<Batch>d__0`1
#include "GlobalNamespace/BatchExtensions_-Batch-d__0_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapDifficultyMask difficulties
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapDifficultyMask& GlobalNamespace::BeatmapLevelSelectionMask::dyn_difficulties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::dyn_difficulties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "difficulties"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDifficultyMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifierMask modifiers
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayModifierMask& GlobalNamespace::BeatmapLevelSelectionMask::dyn_modifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::dyn_modifiers");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly SongPackMask songPacks
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongPackMask& GlobalNamespace::BeatmapLevelSelectionMask::dyn_songPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::dyn_songPacks");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songPacks"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapLevelSelectionMask..ctor
// ABORTED elsewhere.  GlobalNamespace::BeatmapLevelSelectionMask::BeatmapLevelSelectionMask(::GlobalNamespace::BeatmapDifficultyMask difficulties, ::GlobalNamespace::GameplayModifierMask modifiers, ::GlobalNamespace::SongPackMask songPacks)
// Autogenerated method: BeatmapLevelSelectionMask.Equals
bool GlobalNamespace::BeatmapLevelSelectionMask::Equals(::GlobalNamespace::BeatmapLevelSelectionMask other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: BeatmapLevelSelectionMask.Serialize
void GlobalNamespace::BeatmapLevelSelectionMask::Serialize(::LiteNetLib::Utils::NetDataWriter* writer, uint version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::Serialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(version)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, version);
}
// Autogenerated method: BeatmapLevelSelectionMask.Deserialize
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BeatmapLevelSelectionMask::Deserialize(::LiteNetLib::Utils::NetDataReader* reader, uint version) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelSelectionMask", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(version)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, version);
}
// Autogenerated method: BeatmapLevelSelectionMask.Equals
bool GlobalNamespace::BeatmapLevelSelectionMask::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: BeatmapLevelSelectionMask.GetHashCode
int GlobalNamespace::BeatmapLevelSelectionMask::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapLevelSelectionMask.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::BeatmapLevelSelectionMask& l, const ::GlobalNamespace::BeatmapLevelSelectionMask& r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelSelectionMask", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, r);
}
// Autogenerated method: BeatmapLevelSelectionMask.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::BeatmapLevelSelectionMask& l, const ::GlobalNamespace::BeatmapLevelSelectionMask& r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapLevelSelectionMask::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapLevelSelectionMask", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l), ::il2cpp_utils::ExtractType(r)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, l, r);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _data
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::ByteArrayNetSerializable::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _name
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ByteArrayNetSerializable::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _allowNull
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ByteArrayNetSerializable::dyn__allowNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::dyn__allowNull");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allowNull"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _minLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ByteArrayNetSerializable::dyn__minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::dyn__minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _maxLength
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ByteArrayNetSerializable::dyn__maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::dyn__maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ByteArrayNetSerializable.get_data
::ArrayW<uint8_t> GlobalNamespace::ByteArrayNetSerializable::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::get_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: ByteArrayNetSerializable.set_data
void GlobalNamespace::ByteArrayNetSerializable::set_data(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::set_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ByteArrayNetSerializable.Serialize
void GlobalNamespace::ByteArrayNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ByteArrayNetSerializable.Deserialize
void GlobalNamespace::ByteArrayNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ByteArrayNetSerializable.Clear
void GlobalNamespace::ByteArrayNetSerializable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ByteArrayNetSerializable::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CPUMonitor
#include "GlobalNamespace/CPUMonitor.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: System.Diagnostics.Process
#include "System/Diagnostics/Process.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly RollingAverage _utilization
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RollingAverage*& GlobalNamespace::CPUMonitor::dyn__utilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::dyn__utilization");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_utilization"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RollingAverage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Process _currentProcess
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Process*& GlobalNamespace::CPUMonitor::dyn__currentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::dyn__currentProcess");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentProcess"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Process**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _processorCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CPUMonitor::dyn__processorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::dyn__processorCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processorCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastSampleTime
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::CPUMonitor::dyn__lastSampleTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::dyn__lastSampleTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSampleTime"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _lastSampleValue
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::CPUMonitor::dyn__lastSampleValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::dyn__lastSampleValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSampleValue"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CPUMonitor.get_utilization
float GlobalNamespace::CPUMonitor::get_utilization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::get_utilization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_utilization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CPUMonitor.PollUpdate
void GlobalNamespace::CPUMonitor::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CPUMonitor::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CannotStartGameReason None
::GlobalNamespace::CannotStartGameReason GlobalNamespace::CannotStartGameReason::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CannotStartGameReason>("", "CannotStartGameReason", "None"));
}
// Autogenerated static field setter
// Set static field: static public CannotStartGameReason None
void GlobalNamespace::CannotStartGameReason::_set_None(::GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReason", "None", value));
}
// Autogenerated static field getter
// Get static field: static public CannotStartGameReason AllPlayersSpectating
::GlobalNamespace::CannotStartGameReason GlobalNamespace::CannotStartGameReason::_get_AllPlayersSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_get_AllPlayersSpectating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CannotStartGameReason>("", "CannotStartGameReason", "AllPlayersSpectating"));
}
// Autogenerated static field setter
// Set static field: static public CannotStartGameReason AllPlayersSpectating
void GlobalNamespace::CannotStartGameReason::_set_AllPlayersSpectating(::GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_set_AllPlayersSpectating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReason", "AllPlayersSpectating", value));
}
// Autogenerated static field getter
// Get static field: static public CannotStartGameReason NoSongSelected
::GlobalNamespace::CannotStartGameReason GlobalNamespace::CannotStartGameReason::_get_NoSongSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_get_NoSongSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CannotStartGameReason>("", "CannotStartGameReason", "NoSongSelected"));
}
// Autogenerated static field setter
// Set static field: static public CannotStartGameReason NoSongSelected
void GlobalNamespace::CannotStartGameReason::_set_NoSongSelected(::GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_set_NoSongSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReason", "NoSongSelected", value));
}
// Autogenerated static field getter
// Get static field: static public CannotStartGameReason AllPlayersNotInLobby
::GlobalNamespace::CannotStartGameReason GlobalNamespace::CannotStartGameReason::_get_AllPlayersNotInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_get_AllPlayersNotInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CannotStartGameReason>("", "CannotStartGameReason", "AllPlayersNotInLobby"));
}
// Autogenerated static field setter
// Set static field: static public CannotStartGameReason AllPlayersNotInLobby
void GlobalNamespace::CannotStartGameReason::_set_AllPlayersNotInLobby(::GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_set_AllPlayersNotInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReason", "AllPlayersNotInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public CannotStartGameReason DoNotOwnSong
::GlobalNamespace::CannotStartGameReason GlobalNamespace::CannotStartGameReason::_get_DoNotOwnSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_get_DoNotOwnSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::CannotStartGameReason>("", "CannotStartGameReason", "DoNotOwnSong"));
}
// Autogenerated static field setter
// Set static field: static public CannotStartGameReason DoNotOwnSong
void GlobalNamespace::CannotStartGameReason::_set_DoNotOwnSong(::GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::_set_DoNotOwnSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReason", "DoNotOwnSong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CannotStartGameReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CannotStartGameReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClientCertificateValidator
#include "GlobalNamespace/ClientCertificateValidator.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ClientCertificateValidator.ValidateCertificateChain
void GlobalNamespace::ClientCertificateValidator::ValidateCertificateChain(::GlobalNamespace::DnsEndPoint* endPoint, ::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClientCertificateValidator::ValidateCertificateChain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated method: ClientCertificateValidator.ValidateCertificateChainInternal
void GlobalNamespace::ClientCertificateValidator::ValidateCertificateChainInternal(::GlobalNamespace::DnsEndPoint* endPoint, ::System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::ArrayW<::ArrayW<uint8_t>> certificateChain) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ClientCertificateValidator::ValidateCertificateChainInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificateChainInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(certificateChain)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, endPoint, certificate, certificateChain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeNetSerializable
#include "GlobalNamespace/ColorSchemeNetSerializable.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable saberAColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_saberAColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_saberAColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberAColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable saberBColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_saberBColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_saberBColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saberBColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable obstaclesColor
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_obstaclesColor");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstaclesColor"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable environmentColor0
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable environmentColor1
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable environmentColor0Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor0Boost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor0Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ColorNoAlphaSerializable environmentColor1Boost
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ColorNoAlphaSerializable& GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::dyn_environmentColor1Boost");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "environmentColor1Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorNoAlphaSerializable*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeNetSerializable..ctor
GlobalNamespace::ColorSchemeNetSerializable::ColorSchemeNetSerializable(::UnityEngine::Color saberAColor, ::UnityEngine::Color saberBColor, ::UnityEngine::Color obstaclesColor, ::UnityEngine::Color environmentColor0, ::UnityEngine::Color environmentColor1, ::UnityEngine::Color environmentColor0Boost, ::UnityEngine::Color environmentColor1Boost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(obstaclesColor), ::il2cpp_utils::ExtractType(environmentColor0), ::il2cpp_utils::ExtractType(environmentColor1), ::il2cpp_utils::ExtractType(environmentColor0Boost), ::il2cpp_utils::ExtractType(environmentColor1Boost)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberAColor, saberBColor, obstaclesColor, environmentColor0, environmentColor1, environmentColor0Boost, environmentColor1Boost);
}
// Autogenerated method: ColorSchemeNetSerializable.Serialize
void GlobalNamespace::ColorSchemeNetSerializable::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ColorSchemeNetSerializable.Deserialize
void GlobalNamespace::ColorSchemeNetSerializable::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeNetSerializable::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: ConnectedPlayerManager/MessageType
#include "GlobalNamespace/ConnectedPlayerManager_MessageType.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerIdentityPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerIdentityPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerAvatarPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerAvatarPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerDisconnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerDisconnectedPacket.hpp"
// Including type: ConnectedPlayerManager/KickPlayerPacket
#include "GlobalNamespace/ConnectedPlayerManager_KickPlayerPacket.hpp"
// Including type: ConnectedPlayerManager/SyncTimePacket
#include "GlobalNamespace/ConnectedPlayerManager_SyncTimePacket.hpp"
// Including type: ConnectedPlayerManager/PingPacket
#include "GlobalNamespace/ConnectedPlayerManager_PingPacket.hpp"
// Including type: ConnectedPlayerManager/PongPacket
#include "GlobalNamespace/ConnectedPlayerManager_PongPacket.hpp"
// Including type: ConnectedPlayerManager/<InitializePlayerEncryption>d__126
#include "GlobalNamespace/ConnectedPlayerManager_-InitializePlayerEncryption-d__126.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: INetworkPacketSubSerializer`1
#include "GlobalNamespace/INetworkPacketSubSerializer_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 invalidSortIndex
int GlobalNamespace::ConnectedPlayerManager::_get_invalidSortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_invalidSortIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "invalidSortIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 invalidSortIndex
void GlobalNamespace::ConnectedPlayerManager::_set_invalidSortIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_invalidSortIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "invalidSortIndex", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kEncryptedMessageBit
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kEncryptedMessageBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kEncryptedMessageBit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kEncryptedMessageBit"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kEncryptedMessageBit
void GlobalNamespace::ConnectedPlayerManager::_set_kEncryptedMessageBit(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kEncryptedMessageBit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kEncryptedMessageBit", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kAllConnectionsId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kAllConnectionsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kAllConnectionsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kAllConnectionsId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kAllConnectionsId
void GlobalNamespace::ConnectedPlayerManager::_set_kAllConnectionsId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kAllConnectionsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kAllConnectionsId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte kLocalConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::_get_kLocalConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kLocalConnectionId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("", "ConnectedPlayerManager", "kLocalConnectionId"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte kLocalConnectionId
void GlobalNamespace::ConnectedPlayerManager::_set_kLocalConnectionId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kLocalConnectionId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kLocalConnectionId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTimeSensitiveAllowedReceiveWindow
float GlobalNamespace::ConnectedPlayerManager::_get_kTimeSensitiveAllowedReceiveWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kTimeSensitiveAllowedReceiveWindow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kTimeSensitiveAllowedReceiveWindow"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTimeSensitiveAllowedReceiveWindow
void GlobalNamespace::ConnectedPlayerManager::_set_kTimeSensitiveAllowedReceiveWindow(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kTimeSensitiveAllowedReceiveWindow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kTimeSensitiveAllowedReceiveWindow", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxUnreliableMessageLength
int GlobalNamespace::ConnectedPlayerManager::_get_kMaxUnreliableMessageLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kMaxUnreliableMessageLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxUnreliableMessageLength
void GlobalNamespace::ConnectedPlayerManager::_set_kMaxUnreliableMessageLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kMaxUnreliableMessageLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kMaxUnreliableMessageLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPingUpdateFrequency
float GlobalNamespace::ConnectedPlayerManager::_get_kPingUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_get_kPingUpdateFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager", "kPingUpdateFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPingUpdateFrequency
void GlobalNamespace::ConnectedPlayerManager::_set_kPingUpdateFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::_set_kPingUpdateFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager", "kPingUpdateFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ConnectedPlayerManager::dyn_connectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_connectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action initializedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ConnectedPlayerManager::dyn_initializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_initializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initializedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> disconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::ConnectedPlayerManager::dyn_disconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_disconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> connectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::ConnectedPlayerManager::dyn_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_connectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "connectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerStateChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerStateChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerStateChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerAvatarChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerAvatarChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerAvatarChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAvatarChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerOrderChangedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerOrderChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerOrderChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerOrderChangedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerLatencyInitializedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn_playerLatencyInitializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_playerLatencyInitializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerLatencyInitializedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action syncTimeInitializedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::ConnectedPlayerManager::dyn_syncTimeInitializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn_syncTimeInitializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncTimeInitializedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _startTicks
[[deprecated("Use field access instead!")]] int64_t& GlobalNamespace::ConnectedPlayerManager::dyn__startTicks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__startTicks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startTicks"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RollingAverage _syncTimeOffset
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RollingAverage*& GlobalNamespace::ConnectedPlayerManager::dyn__syncTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__syncTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_syncTimeOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RollingAverage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectionManager _connectionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnectionManager*& GlobalNamespace::ConnectedPlayerManager::dyn__connectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__connectionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _temporaryDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::ConnectedPlayerManager::dyn__temporaryDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__temporaryDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_temporaryDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _temporaryEncryptedDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::ConnectedPlayerManager::dyn__temporaryEncryptedDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__temporaryEncryptedDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_temporaryEncryptedDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _reliableDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::ConnectedPlayerManager::dyn__reliableDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__reliableDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reliableDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _unreliableDataWriter
[[deprecated("Use field access instead!")]] ::LiteNetLib::Utils::NetDataWriter*& GlobalNamespace::ConnectedPlayerManager::dyn__unreliableDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__unreliableDataWriter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unreliableDataWriter"))->offset;
  return *reinterpret_cast<::LiteNetLib::Utils::NetDataWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ConnectedPlayerManager/ConnectedPlayer> _players
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn__players() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__players");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_players"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<System.String> _localPlayerState
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::HashSet_1<::StringW>*& GlobalNamespace::ConnectedPlayerManager::dyn__localPlayerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__localPlayerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerState"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerAvatarData _localPlayerAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarData& GlobalNamespace::ConnectedPlayerManager::dyn__localPlayerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__localPlayerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IDiffieHellmanKeyPair _encryptionKeys
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IDiffieHellmanKeyPair*& GlobalNamespace::ConnectedPlayerManager::dyn__encryptionKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__encryptionKeys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionKeys"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IDiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _encryptionRandom
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::ConnectedPlayerManager::dyn__encryptionRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__encryptionRandom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionRandom"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager/ConnectedPlayer _localPlayer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*& GlobalNamespace::ConnectedPlayerManager::dyn__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__localPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte _lastConnectionId
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::dyn__lastConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__lastConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastConnectionId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastPollTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedPlayerManager::dyn__lastPollTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__lastPollTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPollTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastPollFrame
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectedPlayerManager::dyn__lastPollFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__lastPollFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPollFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastPingTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedPlayerManager::dyn__lastPingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__lastPingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastPingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<ConnectedPlayerManager/InternalMessageType,IConnectedPlayer> _messageSerializer
[[deprecated("Use field access instead!")]] ::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType, ::GlobalNamespace::IConnectedPlayer*>*& GlobalNamespace::ConnectedPlayerManager::dyn__messageSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::dyn__messageSerializer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageSerializer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NetworkPacketSerializer_2<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType, ::GlobalNamespace::IConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnectedOrConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isConnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_isDisconnecting
bool GlobalNamespace::ConnectedPlayerManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_localPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_connectedPlayerCount
int GlobalNamespace::ConnectedPlayerManager::get_connectedPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_connectedPlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_syncTime
float GlobalNamespace::ConnectedPlayerManager::get_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_syncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_syncTimeInitialized
bool GlobalNamespace::ConnectedPlayerManager::get_syncTimeInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_syncTimeInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncTimeInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.get_runTime
float GlobalNamespace::ConnectedPlayerManager::get_runTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::get_runTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_runTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.add_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_connectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_connectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_connectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_initializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_initializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_initializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_initializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_initializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_initializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_initializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_initializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_disconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_disconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_disconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_disconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_disconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::add_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_connectionFailedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_connectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerConnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerConnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerConnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerDisconnectedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerDisconnectedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerDisconnectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerStateChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerStateChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerAvatarChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerAvatarChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerAvatarChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerAvatarChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerAvatarChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerAvatarChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerOrderChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerOrderChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerOrderChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerOrderChangedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerOrderChangedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerOrderChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerOrderChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_playerLatencyInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_playerLatencyInitializedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_playerLatencyInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerLatencyInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_playerLatencyInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_playerLatencyInitializedEvent(::System::Action_1<::GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_playerLatencyInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerLatencyInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.add_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::add_syncTimeInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::add_syncTimeInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncTimeInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.remove_syncTimeInitializedEvent
void GlobalNamespace::ConnectedPlayerManager::remove_syncTimeInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::remove_syncTimeInitializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncTimeInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConnectedPlayerManager.GetNextConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::GetNextConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::GetNextConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.RemoveAllPlayers
void GlobalNamespace::ConnectedPlayerManager::RemoveAllPlayers(::GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::RemoveAllPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAllPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: ConnectedPlayerManager.RemovePlayer
void GlobalNamespace::ConnectedPlayerManager::RemovePlayer(::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player, ::GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::RemovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, reason);
}
// Autogenerated method: ConnectedPlayerManager.AddPlayer
void GlobalNamespace::ConnectedPlayerManager::AddPlayer(::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::AddPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(uint8_t connectionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, connectionId);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(::GlobalNamespace::IConnection* connection, uint8_t remoteConnectionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(remoteConnectionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, connection, remoteConnectionId);
}
// Autogenerated method: ConnectedPlayerManager.GetPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetPlayer(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ConnectedPlayerManager.GetConnectedPlayer
::GlobalNamespace::IConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::GetConnectedPlayer(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::GetConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, index);
}
// Autogenerated method: ConnectedPlayerManager.PollUpdate
void GlobalNamespace::ConnectedPlayerManager::PollUpdate(int frameCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PollUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frameCount);
}
// Autogenerated method: ConnectedPlayerManager.PollLateUpdateOptional
void GlobalNamespace::ConnectedPlayerManager::PollLateUpdateOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PollLateUpdateOptional");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollLateUpdateOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.RegisterSerializer
void GlobalNamespace::ConnectedPlayerManager::RegisterSerializer(::GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::RegisterSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: ConnectedPlayerManager.UnregisterSerializer
void GlobalNamespace::ConnectedPlayerManager::UnregisterSerializer(::GlobalNamespace::ConnectedPlayerManager::MessageType serializerType, ::GlobalNamespace::INetworkPacketSubSerializer_1<::GlobalNamespace::IConnectedPlayer*>* subSerializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::UnregisterSerializer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterSerializer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializerType), ::il2cpp_utils::ExtractType(subSerializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, serializerType, subSerializer);
}
// Autogenerated method: ConnectedPlayerManager.Dispose
void GlobalNamespace::ConnectedPlayerManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.Disconnect
void GlobalNamespace::ConnectedPlayerManager::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.KickPlayer
void GlobalNamespace::ConnectedPlayerManager::KickPlayer(::StringW userId, ::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerState
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerState(::StringW state, bool setState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(setState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, state, setState);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerAvatar(::GlobalNamespace::MultiplayerAvatarData multiplayerAvatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerAvatarData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, multiplayerAvatarData);
}
// Autogenerated method: ConnectedPlayerManager.SetLocalPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerSortIndex(int sortIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SetLocalPlayerSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sortIndex);
}
// Autogenerated method: ConnectedPlayerManager.SetPlayerSortIndex
void GlobalNamespace::ConnectedPlayerManager::SetPlayerSortIndex(::GlobalNamespace::IConnectedPlayer* player, int sortIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SetPlayerSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(sortIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, sortIndex);
}
// Autogenerated method: ConnectedPlayerManager.ResetLocalState
void GlobalNamespace::ConnectedPlayerManager::ResetLocalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ResetLocalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLocalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.HandleInitialized
void GlobalNamespace::ConnectedPlayerManager::HandleInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.HandleDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleDisconnected(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionFailed
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionFailed(::GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionConnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionConnected(::GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleConnectionConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection);
}
// Autogenerated method: ConnectedPlayerManager.HandleConnectionDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleConnectionDisconnected(::GlobalNamespace::IConnection* connection, ::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleConnectionDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager.HandleNetworkReceive
void GlobalNamespace::ConnectedPlayerManager::HandleNetworkReceive(::GlobalNamespace::IConnection* connection, ::LiteNetLib::Utils::NetDataReader* reader, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleNetworkReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, reader, deliveryMethod);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediately
void GlobalNamespace::ConnectedPlayerManager::SendImmediately(::LiteNetLib::Utils::INetSerializable* message, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SendImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(onlyFirstDegree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyExcludingPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyExcludingPlayer(::LiteNetLib::Utils::INetSerializable* message, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* excludingPlayer, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SendImmediatelyExcludingPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendImmediatelyExcludingPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(excludingPlayer), ::il2cpp_utils::ExtractType(onlyFirstDegree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, excludingPlayer, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyToPlayer(::LiteNetLib::Utils::INetSerializable* message, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SendImmediatelyToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendImmediatelyToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(toPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, toPlayer);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayer(::LiteNetLib::Utils::INetSerializable* message, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, bool onlyFirstDegree) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendImmediatelyFromPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(fromPlayer), ::il2cpp_utils::ExtractType(onlyFirstDegree)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, fromPlayer, onlyFirstDegree);
}
// Autogenerated method: ConnectedPlayerManager.SendImmediatelyFromPlayerToPlayer
void GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayerToPlayer(::LiteNetLib::Utils::INetSerializable* message, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* fromPlayer, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* toPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SendImmediatelyFromPlayerToPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendImmediatelyFromPlayerToPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(fromPlayer), ::il2cpp_utils::ExtractType(toPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, fromPlayer, toPlayer);
}
// Autogenerated method: ConnectedPlayerManager.FlushReliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushReliableQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::FlushReliableQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushReliableQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.FlushUnreliableQueue
void GlobalNamespace::ConnectedPlayerManager::FlushUnreliableQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::FlushUnreliableQueue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushUnreliableQueue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager.WriteOne
::LiteNetLib::Utils::NetDataWriter* GlobalNamespace::ConnectedPlayerManager::WriteOne(uint8_t senderId, uint8_t receiverId, ::LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::WriteOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(senderId), ::il2cpp_utils::ExtractType(receiverId), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method, senderId, receiverId, message);
}
// Autogenerated method: ConnectedPlayerManager.WriteOneEncrypted
::LiteNetLib::Utils::NetDataWriter* GlobalNamespace::ConnectedPlayerManager::WriteOneEncrypted(::GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState, uint8_t senderId, uint8_t receiverId, ::LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::WriteOneEncrypted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteOneEncrypted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionState), ::il2cpp_utils::ExtractType(senderId), ::il2cpp_utils::ExtractType(receiverId), ::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<::LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method, encryptionState, senderId, receiverId, message);
}
// Autogenerated method: ConnectedPlayerManager.Write
void GlobalNamespace::ConnectedPlayerManager::Write(::LiteNetLib::Utils::NetDataWriter* writer, ::LiteNetLib::Utils::INetSerializable* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, packet);
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerConnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerConnected(::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerIdentityUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerIdentityUpdate(::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePlayerIdentityUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerIdentityUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.InitializePlayerEncryption
void GlobalNamespace::ConnectedPlayerManager::InitializePlayerEncryption(::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InitializePlayerEncryption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializePlayerEncryption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerStateUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerStateUpdate(::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePlayerStateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerAvatarUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerAvatarUpdate(::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePlayerAvatarUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerAvatarUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleServerPlayerDisconnected
void GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerDisconnected(::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleServerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleKickPlayerPacket
void GlobalNamespace::ConnectedPlayerManager::HandleKickPlayerPacket(::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleKickPlayerPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayerPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandlePlayerSortOrderUpdate
void GlobalNamespace::ConnectedPlayerManager::HandlePlayerSortOrderUpdate(::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* packet, ::GlobalNamespace::IConnectedPlayer* iPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePlayerSortOrderUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerSortOrderUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(iPlayer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, iPlayer);
}
// Autogenerated method: ConnectedPlayerManager.HandleSyncTimePacket
void GlobalNamespace::ConnectedPlayerManager::HandleSyncTimePacket(::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket* packet, ::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandleSyncTimePacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSyncTimePacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, player);
}
// Autogenerated method: ConnectedPlayerManager.HandlePing
void GlobalNamespace::ConnectedPlayerManager::HandlePing(::GlobalNamespace::ConnectedPlayerManager::PingPacket* packet, ::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, player);
}
// Autogenerated method: ConnectedPlayerManager.HandlePong
void GlobalNamespace::ConnectedPlayerManager::HandlePong(::GlobalNamespace::ConnectedPlayerManager::PongPacket* packet, ::GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::HandlePong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet, player);
}
// Autogenerated method: ConnectedPlayerManager.Log
void GlobalNamespace::ConnectedPlayerManager::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: RollingAverage
#include "GlobalNamespace/RollingAverage.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerIdentityPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerIdentityPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: ConnectedPlayerManager/PlayerAvatarPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerAvatarPacket.hpp"
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedSyncTimeOffset
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_get_kFixedSyncTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_get_kFixedSyncTimeOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedSyncTimeOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedSyncTimeOffset
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_set_kFixedSyncTimeOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::_set_kFixedSyncTimeOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/ConnectedPlayer", "kFixedSyncTimeOffset", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isMe");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isMe"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectedPlayerManager _manager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__manager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__manager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_manager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnection _connection
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IConnection*& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__connection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ConnectedPlayerManager/ConnectedPlayer _parent
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _connectionId
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__connectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__connectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte _remoteConnectionId
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__remoteConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__remoteConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_remoteConnectionId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sortIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__sortIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sortIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isConnected
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isConnected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isConnected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DisconnectedReason _disconnectedReason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectedReason& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__disconnectedReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disconnectedReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isKicked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__isKicked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isKicked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerStateHash _playerState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerStateHash& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__playerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerStateHash*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerAvatarData _playerAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarData& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__playerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__playerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _publicEncryptionKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__publicEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__publicEncryptionKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicEncryptionKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _random
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_random"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EncryptionUtility/IEncryptionState _encryptionState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EncryptionUtility::IEncryptionState*& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__encryptionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encryptionState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EncryptionUtility::IEncryptionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RollingAverage _latency
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RollingAverage*& GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__latency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::dyn__latency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_latency"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RollingAverage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connection
::GlobalNamespace::IConnection* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnection*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_connectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_connectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_remoteConnectionId
uint8_t GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_remoteConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_remoteConnectionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteConnectionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnected
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isKicked
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isKicked");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_sortIndex
int GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_sortIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userId
::StringW GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_userName
::StringW GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isMe
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_hasValidLatency
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_hasValidLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_hasValidLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValidLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_currentLatency
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_currentLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_currentLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_offsetSyncTime
float GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_offsetSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_offsetSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_multiplayerAvatarData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_multiplayerAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_multiplayerAvatarData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_publicEncryptionKey
::ArrayW<uint8_t> GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_publicEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_publicEncryptionKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicEncryptionKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_random
::ArrayW<uint8_t> GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_random");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_random", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_isDirectConnection
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isDirectConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_isDirectConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirectConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.get_encryptionState
::GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_encryptionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::get_encryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_encryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateLocalPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateLocalPlayer(::GlobalNamespace::ConnectedPlayerManager* manager, ::StringW userId, ::StringW userName, bool isConnectionOwner, ::ArrayW<uint8_t> publicEncryptionKey, ::ArrayW<uint8_t> random) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner), ::il2cpp_utils::ExtractType(publicEncryptionKey), ::il2cpp_utils::ExtractType(random)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager, userId, userName, isConnectionOwner, publicEncryptionKey, random);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateDirectlyConnectedPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateDirectlyConnectedPlayer(::GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, ::GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateDirectlyConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateDirectlyConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(connectionId), ::il2cpp_utils::ExtractType(connection)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager, connectionId, connection);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.CreateRemoteConnectedPlayer
::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateRemoteConnectedPlayer(::GlobalNamespace::ConnectedPlayerManager* manager, uint8_t connectionId, ::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* packet, ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::CreateRemoteConnectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/ConnectedPlayer", "CreateRemoteConnectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(connectionId), ::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(parent)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, manager, connectionId, packet, parent);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerConnectedPacket
::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerConnectedPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerConnectedPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerConnectedPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerIdentityPacket
::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerIdentityPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerIdentityPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIdentityPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerStatePacket
::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerStatePacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerStatePacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerStatePacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerAvatarPacket
::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerAvatarPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerAvatarPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerAvatarPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.GetPlayerSortOrderPacket
::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerSortOrderPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::GetPlayerSortOrderPacket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerSortOrderPacket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.Disconnect
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateLatency
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateLatency(float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateLatency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, latency);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateSortIndex
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateSortIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateSortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, index);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetKicked
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetKicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateIdentity
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateIdentity(::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateState(::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.UpdateAvatar
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateAvatar(::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket* packet) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::UpdateAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, packet);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetEncryptionState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetEncryptionState(::GlobalNamespace::EncryptionUtility::IEncryptionState* encryptionState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(encryptionState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, encryptionState);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.HasState
bool GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::HasState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerState
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerState(::GlobalNamespace::PlayerStateHash playerState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerState);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.SetPlayerAvatar
void GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerAvatar(::GlobalNamespace::MultiplayerAvatarData avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::SetPlayerAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, avatarData);
}
// Autogenerated method: ConnectedPlayerManager/ConnectedPlayer.ToString
::StringW GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/InternalMessageType
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType SyncTime
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_SyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_SyncTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "SyncTime"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType SyncTime
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_SyncTime(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_SyncTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "SyncTime", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerConnected
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerConnected"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerConnected
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerConnected(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerConnected", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerIdentity
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerIdentity"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerIdentity
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerIdentity(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerIdentity", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerLatencyUpdate
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerLatencyUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerLatencyUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerLatencyUpdate"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerLatencyUpdate
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerLatencyUpdate(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerLatencyUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerLatencyUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerDisconnected
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerDisconnected
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerDisconnected(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerSortOrderUpdate
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerSortOrderUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerSortOrderUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerSortOrderUpdate"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerSortOrderUpdate
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerSortOrderUpdate(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerSortOrderUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerSortOrderUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType Party
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Party() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Party");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "Party"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType Party
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Party(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Party");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "Party", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType MultiplayerSession
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_MultiplayerSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_MultiplayerSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "MultiplayerSession"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType MultiplayerSession
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_MultiplayerSession(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_MultiplayerSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "MultiplayerSession", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType KickPlayer
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_KickPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_KickPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "KickPlayer"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType KickPlayer
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_KickPlayer(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_KickPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "KickPlayer", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerStateUpdate
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerStateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerStateUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerStateUpdate"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerStateUpdate
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerStateUpdate(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerStateUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerStateUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType PlayerAvatarUpdate
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerAvatarUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_PlayerAvatarUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "PlayerAvatarUpdate"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType PlayerAvatarUpdate
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerAvatarUpdate(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_PlayerAvatarUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "PlayerAvatarUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType Ping
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Ping() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Ping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "Ping"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType Ping
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Ping(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Ping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "Ping", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/InternalMessageType Pong
::GlobalNamespace::ConnectedPlayerManager::InternalMessageType GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Pong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_get_Pong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::InternalMessageType>("", "ConnectedPlayerManager/InternalMessageType", "Pong"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/InternalMessageType Pong
void GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Pong(::GlobalNamespace::ConnectedPlayerManager::InternalMessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::_set_Pong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/InternalMessageType", "Pong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::InternalMessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::InternalMessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/MessageType
#include "GlobalNamespace/ConnectedPlayerManager_MessageType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/MessageType Party
::GlobalNamespace::ConnectedPlayerManager::MessageType GlobalNamespace::ConnectedPlayerManager::MessageType::_get_Party() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::MessageType::_get_Party");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::MessageType>("", "ConnectedPlayerManager/MessageType", "Party"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/MessageType Party
void GlobalNamespace::ConnectedPlayerManager::MessageType::_set_Party(::GlobalNamespace::ConnectedPlayerManager::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::MessageType::_set_Party");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/MessageType", "Party", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectedPlayerManager/MessageType MultiplayerSession
::GlobalNamespace::ConnectedPlayerManager::MessageType GlobalNamespace::ConnectedPlayerManager::MessageType::_get_MultiplayerSession() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::MessageType::_get_MultiplayerSession");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectedPlayerManager::MessageType>("", "ConnectedPlayerManager/MessageType", "MultiplayerSession"));
}
// Autogenerated static field setter
// Set static field: static public ConnectedPlayerManager/MessageType MultiplayerSession
void GlobalNamespace::ConnectedPlayerManager::MessageType::_set_MultiplayerSession(::GlobalNamespace::ConnectedPlayerManager::MessageType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::MessageType::_set_MultiplayerSession");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectedPlayerManager/MessageType", "MultiplayerSession", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::MessageType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::MessageType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerConnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerConnectedPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte remoteConnectionId
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_remoteConnectionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_remoteConnectionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteConnectionId"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isConnectionOwner
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::dyn_isConnectionOwner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isConnectionOwner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerConnectedPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerConnectedPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerConnectedPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerConnectedPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerConnectedPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerConnectedPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket* GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Init(uint8_t connectionId, ::StringW userId, ::StringW userName, bool isConnectionOwner) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionId), ::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(isConnectionOwner)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerConnectedPacket*, false>(this, ___internal__method, connectionId, userId, userName, isConnectionOwner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerIdentityPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerIdentityPacket.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerStateHash playerState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerStateHash& GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_playerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerStateHash*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerAvatarData playerAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarData& GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_playerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_playerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable random
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_random() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_random");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "random"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ByteArrayNetSerializable publicEncryptionKey
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ByteArrayNetSerializable*& GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_publicEncryptionKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::dyn_publicEncryptionKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publicEncryptionKey"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ByteArrayNetSerializable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerIdentityPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerIdentityPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerIdentityPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerIdentityPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerIdentityPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerIdentityPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket* GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Init(::GlobalNamespace::PlayerStateHash states, ::GlobalNamespace::MultiplayerAvatarData avatar, ::ArrayW<uint8_t> random, ::ArrayW<uint8_t> publicEncryptionKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(states), ::il2cpp_utils::ExtractType(avatar), ::il2cpp_utils::ExtractType(random), ::il2cpp_utils::ExtractType(publicEncryptionKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerIdentityPacket*, false>(this, ___internal__method, states, avatar, random, publicEncryptionKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerAvatarPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerAvatarPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public MultiplayerAvatarData playerAvatar
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarData& GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::dyn_playerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::dyn_playerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerAvatar"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerAvatarPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerAvatarPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerAvatarPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerAvatarPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerAvatarPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerAvatarPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket* GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Init(::GlobalNamespace::MultiplayerAvatarData avatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatar)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerAvatarPacket*, false>(this, ___internal__method, avatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerStatePacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerStatePacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayerStateHash playerState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PlayerStateHash& GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::dyn_playerState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::dyn_playerState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerStateHash*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerStatePacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerStatePacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerStatePacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerStatePacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerStatePacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerStatePacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket* GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Init(::GlobalNamespace::PlayerStateHash states) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(states)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerStatePacket*, false>(this, ___internal__method, states);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerSortOrderPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerSortOrderPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sortIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::dyn_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::dyn_sortIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sortIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerSortOrderPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerSortOrderPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerSortOrderPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerSortOrderPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerSortOrderPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerSortOrderPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket* GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Init(::StringW userId, int sortIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(sortIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerSortOrderPacket*, false>(this, ___internal__method, userId, sortIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PlayerDisconnectedPacket
#include "GlobalNamespace/ConnectedPlayerManager_PlayerDisconnectedPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DisconnectedReason disconnectedReason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectedReason& GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::dyn_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::dyn_disconnectedReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PlayerDisconnectedPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket*>* GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PlayerDisconnectedPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PlayerDisconnectedPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket* GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Init(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket*, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager/PlayerDisconnectedPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PlayerDisconnectedPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PlayerDisconnectedPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PlayerDisconnectedPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/KickPlayerPacket
#include "GlobalNamespace/ConnectedPlayerManager_KickPlayerPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DisconnectedReason disconnectedReason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DisconnectedReason& GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::dyn_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::dyn_disconnectedReason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectedReason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DisconnectedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/KickPlayerPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket*>* GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/KickPlayerPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/KickPlayerPacket.Init
::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket* GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Init(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket*, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: ConnectedPlayerManager/KickPlayerPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/KickPlayerPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/KickPlayerPacket.Release
void GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::KickPlayerPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/SyncTimePacket
#include "GlobalNamespace/ConnectedPlayerManager_SyncTimePacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single syncTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::dyn_syncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::dyn_syncTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/SyncTimePacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket*>* GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/SyncTimePacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/SyncTimePacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/SyncTimePacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/SyncTimePacket.Init
::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket* GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Init(float syncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(syncTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket*, false>(this, ___internal__method, syncTime);
}
// Autogenerated method: ConnectedPlayerManager/SyncTimePacket.Release
void GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::SyncTimePacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PingPacket
#include "GlobalNamespace/ConnectedPlayerManager_PingPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single pingTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedPlayerManager::PingPacket::dyn_pingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::dyn_pingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PingPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PingPacket*>* GlobalNamespace::ConnectedPlayerManager::PingPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PingPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PingPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PingPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PingPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PingPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PingPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PingPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PingPacket* GlobalNamespace::ConnectedPlayerManager::PingPacket::Init(float pingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pingTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PingPacket*, false>(this, ___internal__method, pingTime);
}
// Autogenerated method: ConnectedPlayerManager/PingPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PingPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PingPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/PongPacket
#include "GlobalNamespace/ConnectedPlayerManager_PongPacket.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single pingTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ConnectedPlayerManager::PongPacket::dyn_pingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::dyn_pingTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pingTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/PongPacket.get_pool
::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PongPacket*>* GlobalNamespace::ConnectedPlayerManager::PongPacket::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::get_pool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerManager/PongPacket", "get_pool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::PacketPool_1<::GlobalNamespace::ConnectedPlayerManager::PongPacket*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/PongPacket.Serialize
void GlobalNamespace::ConnectedPlayerManager::PongPacket::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: ConnectedPlayerManager/PongPacket.Deserialize
void GlobalNamespace::ConnectedPlayerManager::PongPacket::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: ConnectedPlayerManager/PongPacket.Init
::GlobalNamespace::ConnectedPlayerManager::PongPacket* GlobalNamespace::ConnectedPlayerManager::PongPacket::Init(float pingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pingTime)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectedPlayerManager::PongPacket*, false>(this, ___internal__method, pingTime);
}
// Autogenerated method: ConnectedPlayerManager/PongPacket.Release
void GlobalNamespace::ConnectedPlayerManager::PongPacket::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::PongPacket::Release");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerManager/<InitializePlayerEncryption>d__126
#include "GlobalNamespace/ConnectedPlayerManager_-InitializePlayerEncryption-d__126.hpp"
// Including type: ConnectedPlayerManager/ConnectedPlayer
#include "GlobalNamespace/ConnectedPlayerManager_ConnectedPlayer.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ConnectedPlayerManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager*& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ConnectedPlayerManager/ConnectedPlayer player
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer*& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_player");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "player"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectedPlayerManager::ConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isClient>5__2
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$isClient$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$isClient$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isClient>5__2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Byte[]> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::ArrayW<uint8_t>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EncryptionUtility/IEncryptionState> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>& GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerManager/<InitializePlayerEncryption>d__126.MoveNext
void GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConnectedPlayerManager/<InitializePlayerEncryption>d__126.SetStateMachine
void GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerManager::$InitializePlayerEncryption$d__126::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerHelpers
#include "GlobalNamespace/ConnectedPlayerHelpers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ConnectedPlayerHelpers.WantsToPlayNextLevel
bool GlobalNamespace::ConnectedPlayerHelpers::WantsToPlayNextLevel(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::WantsToPlayNextLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "WantsToPlayNextLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated method: ConnectedPlayerHelpers.WasActiveAtLevelStart
bool GlobalNamespace::ConnectedPlayerHelpers::WasActiveAtLevelStart(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::WasActiveAtLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "WasActiveAtLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated method: ConnectedPlayerHelpers.IsActive
bool GlobalNamespace::ConnectedPlayerHelpers::IsActive(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated method: ConnectedPlayerHelpers.HasFinishedLevel
bool GlobalNamespace::ConnectedPlayerHelpers::HasFinishedLevel(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::HasFinishedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "HasFinishedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated method: ConnectedPlayerHelpers.IsActiveOrFinished
bool GlobalNamespace::ConnectedPlayerHelpers::IsActiveOrFinished(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::IsActiveOrFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "IsActiveOrFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated method: ConnectedPlayerHelpers.IsFailed
bool GlobalNamespace::ConnectedPlayerHelpers::IsFailed(::GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectedPlayerHelpers::IsFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectedPlayerHelpers", "IsFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, connectedPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionFailedException
#include "GlobalNamespace/ConnectionFailedException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly ConnectionFailedReason reason
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ConnectionFailedReason& GlobalNamespace::ConnectionFailedException::dyn_reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedException::dyn_reason");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reason"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConnectionFailedReason*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason None
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "None"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason None
void GlobalNamespace::ConnectionFailedReason::_set_None(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason Unknown
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason Unknown
void GlobalNamespace::ConnectionFailedReason::_set_Unknown(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ConnectionCanceled
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ConnectionCanceled
void GlobalNamespace::ConnectionFailedReason::_set_ConnectionCanceled(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ConnectionCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ServerUnreachable
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ServerUnreachable
void GlobalNamespace::ConnectionFailedReason::_set_ServerUnreachable(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ServerUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ServerAlreadyExists
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ServerAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ServerAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ServerAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ServerAlreadyExists
void GlobalNamespace::ConnectionFailedReason::_set_ServerAlreadyExists(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ServerAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ServerAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ServerDoesNotExist
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ServerDoesNotExist
void GlobalNamespace::ConnectionFailedReason::_set_ServerDoesNotExist(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ServerDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ServerAtCapacity
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ServerAtCapacity
void GlobalNamespace::ConnectionFailedReason::_set_ServerAtCapacity(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ServerAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason VersionMismatch
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_VersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_VersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "VersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason VersionMismatch
void GlobalNamespace::ConnectionFailedReason::_set_VersionMismatch(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_VersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "VersionMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason InvalidPassword
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_InvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_InvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "InvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason InvalidPassword
void GlobalNamespace::ConnectionFailedReason::_set_InvalidPassword(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_InvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "InvalidPassword", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason MultiplayerApiUnreachable
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_MultiplayerApiUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_MultiplayerApiUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "MultiplayerApiUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason MultiplayerApiUnreachable
void GlobalNamespace::ConnectionFailedReason::_set_MultiplayerApiUnreachable(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_MultiplayerApiUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "MultiplayerApiUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason AuthenticationFailed
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_AuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_AuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "AuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason AuthenticationFailed
void GlobalNamespace::ConnectionFailedReason::_set_AuthenticationFailed(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_AuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "AuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason NetworkNotConnected
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_NetworkNotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_NetworkNotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "NetworkNotConnected"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason NetworkNotConnected
void GlobalNamespace::ConnectionFailedReason::_set_NetworkNotConnected(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_NetworkNotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "NetworkNotConnected", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason CertificateValidationFailed
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_CertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_CertificateValidationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "CertificateValidationFailed"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason CertificateValidationFailed
void GlobalNamespace::ConnectionFailedReason::_set_CertificateValidationFailed(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_CertificateValidationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "CertificateValidationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason ServerIsTerminating
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_ServerIsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_ServerIsTerminating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "ServerIsTerminating"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason ServerIsTerminating
void GlobalNamespace::ConnectionFailedReason::_set_ServerIsTerminating(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_ServerIsTerminating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "ServerIsTerminating", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason Timeout
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason Timeout
void GlobalNamespace::ConnectionFailedReason::_set_Timeout(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public ConnectionFailedReason FailedToFindMatch
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::ConnectionFailedReason::_get_FailedToFindMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_get_FailedToFindMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ConnectionFailedReason>("", "ConnectionFailedReason", "FailedToFindMatch"));
}
// Autogenerated static field setter
// Set static field: static public ConnectionFailedReason FailedToFindMatch
void GlobalNamespace::ConnectionFailedReason::_set_FailedToFindMatch(::GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::_set_FailedToFindMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReason", "FailedToFindMatch", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ConnectionFailedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConnectionFailedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomNetworkConfig
#include "GlobalNamespace/CustomNetworkConfig.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <maxPartySize>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomNetworkConfig::dyn_$maxPartySize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$maxPartySize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxPartySize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <discoveryPort>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomNetworkConfig::dyn_$discoveryPort$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$discoveryPort$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<discoveryPort>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <partyPort>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomNetworkConfig::dyn_$partyPort$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$partyPort$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<partyPort>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <multiplayerPort>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CustomNetworkConfig::dyn_$multiplayerPort$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$multiplayerPort$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerPort>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly DnsEndPoint <masterServerEndPoint>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DnsEndPoint*& GlobalNamespace::CustomNetworkConfig::dyn_$masterServerEndPoint$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$masterServerEndPoint$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<masterServerEndPoint>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DnsEndPoint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <multiplayerStatusUrl>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomNetworkConfig::dyn_$multiplayerStatusUrl$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$multiplayerStatusUrl$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerStatusUrl>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <graphUrl>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomNetworkConfig::dyn_$graphUrl$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$graphUrl$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graphUrl>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <graphAccessToken>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CustomNetworkConfig::dyn_$graphAccessToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$graphAccessToken$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graphAccessToken>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean <forceGameLift>k__BackingField
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CustomNetworkConfig::dyn_$forceGameLift$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$forceGameLift$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<forceGameLift>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ServiceEnvironment <serviceEnvironment>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ServiceEnvironment& GlobalNamespace::CustomNetworkConfig::dyn_$serviceEnvironment$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::dyn_$serviceEnvironment$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<serviceEnvironment>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ServiceEnvironment*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CustomNetworkConfig.get_maxPartySize
int GlobalNamespace::CustomNetworkConfig::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_discoveryPort
int GlobalNamespace::CustomNetworkConfig::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_partyPort
int GlobalNamespace::CustomNetworkConfig::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_multiplayerPort
int GlobalNamespace::CustomNetworkConfig::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_masterServerEndPoint
::GlobalNamespace::DnsEndPoint* GlobalNamespace::CustomNetworkConfig::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DnsEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_multiplayerStatusUrl
::StringW GlobalNamespace::CustomNetworkConfig::get_multiplayerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_multiplayerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_quickPlaySetupUrl
::StringW GlobalNamespace::CustomNetworkConfig::get_quickPlaySetupUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_quickPlaySetupUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_quickPlaySetupUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_graphUrl
::StringW GlobalNamespace::CustomNetworkConfig::get_graphUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_graphUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_graphAccessToken
::StringW GlobalNamespace::CustomNetworkConfig::get_graphAccessToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_graphAccessToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graphAccessToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_forceGameLift
bool GlobalNamespace::CustomNetworkConfig::get_forceGameLift() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_forceGameLift");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forceGameLift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CustomNetworkConfig.get_serviceEnvironment
::GlobalNamespace::ServiceEnvironment GlobalNamespace::CustomNetworkConfig::get_serviceEnvironment() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CustomNetworkConfig::get_serviceEnvironment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serviceEnvironment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ServiceEnvironment, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IDiffieHellmanKeyPair.get_publicKey
::ArrayW<uint8_t> GlobalNamespace::IDiffieHellmanKeyPair::get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDiffieHellmanKeyPair::get_publicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: IDiffieHellmanKeyPair.GetPreMasterSecretAsync
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* GlobalNamespace::IDiffieHellmanKeyPair::GetPreMasterSecretAsync(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDiffieHellmanKeyPair::GetPreMasterSecretAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecretAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated method: IDiffieHellmanKeyPair.GetPreMasterSecret
::ArrayW<uint8_t> GlobalNamespace::IDiffieHellmanKeyPair::GetPreMasterSecret(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IDiffieHellmanKeyPair::GetPreMasterSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility
#include "GlobalNamespace/DiffieHellmanUtility.hpp"
// Including type: DiffieHellmanUtility/KeyType
#include "GlobalNamespace/DiffieHellmanUtility_KeyType.hpp"
// Including type: DiffieHellmanUtility/DiffieHellmanKeyPair
#include "GlobalNamespace/DiffieHellmanUtility_DiffieHellmanKeyPair.hpp"
// Including type: DiffieHellmanUtility/ElipticalCurveKeyPair
#include "GlobalNamespace/DiffieHellmanUtility_ElipticalCurveKeyPair.hpp"
// Including type: DiffieHellmanUtility/OperationTimer
#include "GlobalNamespace/DiffieHellmanUtility_OperationTimer.hpp"
// Including type: Org.BouncyCastle.Security.SecureRandom
#include "Org/BouncyCastle/Security/SecureRandom.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHParameters.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECDomainParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECDomainParameters.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IDiffieHellmanKeyPair
#include "GlobalNamespace/IDiffieHellmanKeyPair.hpp"
// Including type: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/DHBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/ECDHBasicAgreement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxDiffieHellmanPublicKeyLength
int GlobalNamespace::DiffieHellmanUtility::_get_kMaxDiffieHellmanPublicKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get_kMaxDiffieHellmanPublicKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DiffieHellmanUtility", "kMaxDiffieHellmanPublicKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxDiffieHellmanPublicKeyLength
void GlobalNamespace::DiffieHellmanUtility::_set_kMaxDiffieHellmanPublicKeyLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set_kMaxDiffieHellmanPublicKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "kMaxDiffieHellmanPublicKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxElipticalCurvePublicKeyLength
int GlobalNamespace::DiffieHellmanUtility::_get_kMaxElipticalCurvePublicKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get_kMaxElipticalCurvePublicKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DiffieHellmanUtility", "kMaxElipticalCurvePublicKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxElipticalCurvePublicKeyLength
void GlobalNamespace::DiffieHellmanUtility::_set_kMaxElipticalCurvePublicKeyLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set_kMaxElipticalCurvePublicKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "kMaxElipticalCurvePublicKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static private Org.BouncyCastle.Security.SecureRandom _secureRandom
::Org::BouncyCastle::Security::SecureRandom* GlobalNamespace::DiffieHellmanUtility::_get__secureRandom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get__secureRandom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Org::BouncyCastle::Security::SecureRandom*>("", "DiffieHellmanUtility", "_secureRandom"));
}
// Autogenerated static field setter
// Set static field: static private Org.BouncyCastle.Security.SecureRandom _secureRandom
void GlobalNamespace::DiffieHellmanUtility::_set__secureRandom(::Org::BouncyCastle::Security::SecureRandom* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set__secureRandom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "_secureRandom", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C01D8
// Autogenerated static field getter
// Get static field: static private Org.BouncyCastle.Crypto.Parameters.DHParameters _dhParameters
::Org::BouncyCastle::Crypto::Parameters::DHParameters* GlobalNamespace::DiffieHellmanUtility::_get__dhParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get__dhParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Org::BouncyCastle::Crypto::Parameters::DHParameters*>("", "DiffieHellmanUtility", "_dhParameters"));
}
// Autogenerated static field setter
// Set static field: static private Org.BouncyCastle.Crypto.Parameters.DHParameters _dhParameters
void GlobalNamespace::DiffieHellmanUtility::_set__dhParameters(::Org::BouncyCastle::Crypto::Parameters::DHParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set__dhParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "_dhParameters", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10C01E8
// Autogenerated static field getter
// Get static field: static private Org.BouncyCastle.Crypto.Parameters.ECDomainParameters _ecParameters
::Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* GlobalNamespace::DiffieHellmanUtility::_get__ecParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get__ecParameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Org::BouncyCastle::Crypto::Parameters::ECDomainParameters*>("", "DiffieHellmanUtility", "_ecParameters"));
}
// Autogenerated static field setter
// Set static field: static private Org.BouncyCastle.Crypto.Parameters.ECDomainParameters _ecParameters
void GlobalNamespace::DiffieHellmanUtility::_set__ecParameters(::Org::BouncyCastle::Crypto::Parameters::ECDomainParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set__ecParameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "_ecParameters", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _ecPointFormats
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::_get__ecPointFormats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_get__ecPointFormats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "DiffieHellmanUtility", "_ecPointFormats"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _ecPointFormats
void GlobalNamespace::DiffieHellmanUtility::_set__ecPointFormats(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::_set__ecPointFormats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility", "_ecPointFormats", value));
}
// Autogenerated method: DiffieHellmanUtility..cctor
void GlobalNamespace::DiffieHellmanUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility.GenerateKeysAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::IDiffieHellmanKeyPair*>* GlobalNamespace::DiffieHellmanUtility::GenerateKeysAsync(::GlobalNamespace::DiffieHellmanUtility::KeyType keyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GenerateKeysAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GenerateKeysAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::IDiffieHellmanKeyPair*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyType);
}
// Autogenerated method: DiffieHellmanUtility.GenerateKeys
::GlobalNamespace::IDiffieHellmanKeyPair* GlobalNamespace::DiffieHellmanUtility::GenerateKeys(::GlobalNamespace::DiffieHellmanUtility::KeyType keyType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GenerateKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GenerateKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keyType)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IDiffieHellmanKeyPair*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, keyType);
}
// Autogenerated method: DiffieHellmanUtility.GenerateDiffieHellmanKeys
::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair* GlobalNamespace::DiffieHellmanUtility::GenerateDiffieHellmanKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GenerateDiffieHellmanKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GenerateDiffieHellmanKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility.GenerateElipticalCurveKeys
::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair* GlobalNamespace::DiffieHellmanUtility::GenerateElipticalCurveKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GenerateElipticalCurveKeys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GenerateElipticalCurveKeys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility.GetPreMasterSecret
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::GetPreMasterSecret(::Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement* dhBasicAgreement, ::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GetPreMasterSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GetPreMasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dhBasicAgreement), ::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, dhBasicAgreement, clientPublicKey);
}
// Autogenerated method: DiffieHellmanUtility.GetPreMasterSecret
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::GetPreMasterSecret(::Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement* ecdhBasicAgreement, ::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::GetPreMasterSecret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility", "GetPreMasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ecdhBasicAgreement), ::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ecdhBasicAgreement, clientPublicKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/KeyType
#include "GlobalNamespace/DiffieHellmanUtility_KeyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DiffieHellmanUtility/KeyType DiffieHellman
::GlobalNamespace::DiffieHellmanUtility::KeyType GlobalNamespace::DiffieHellmanUtility::KeyType::_get_DiffieHellman() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::KeyType::_get_DiffieHellman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DiffieHellmanUtility::KeyType>("", "DiffieHellmanUtility/KeyType", "DiffieHellman"));
}
// Autogenerated static field setter
// Set static field: static public DiffieHellmanUtility/KeyType DiffieHellman
void GlobalNamespace::DiffieHellmanUtility::KeyType::_set_DiffieHellman(::GlobalNamespace::DiffieHellmanUtility::KeyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::KeyType::_set_DiffieHellman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility/KeyType", "DiffieHellman", value));
}
// Autogenerated static field getter
// Get static field: static public DiffieHellmanUtility/KeyType ElipticalCurve
::GlobalNamespace::DiffieHellmanUtility::KeyType GlobalNamespace::DiffieHellmanUtility::KeyType::_get_ElipticalCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::KeyType::_get_ElipticalCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DiffieHellmanUtility::KeyType>("", "DiffieHellmanUtility/KeyType", "ElipticalCurve"));
}
// Autogenerated static field setter
// Set static field: static public DiffieHellmanUtility/KeyType ElipticalCurve
void GlobalNamespace::DiffieHellmanUtility::KeyType::_set_ElipticalCurve(::GlobalNamespace::DiffieHellmanUtility::KeyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::KeyType::_set_ElipticalCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiffieHellmanUtility/KeyType", "ElipticalCurve", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DiffieHellmanUtility::KeyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::KeyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/DiffieHellmanKeyPair
#include "GlobalNamespace/DiffieHellmanUtility_DiffieHellmanKeyPair.hpp"
// Including type: DiffieHellmanUtility/DiffieHellmanKeyPair/<>c__DisplayClass5_0
#include "GlobalNamespace/DiffieHellmanUtility_DiffieHellmanKeyPair_--c__DisplayClass5_0.hpp"
// Including type: Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/DHBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.DHPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/DHPrivateKeyParameters.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement _dhBasicAgreement
[[deprecated("Use field access instead!")]] ::Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement*& GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::dyn__dhBasicAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::dyn__dhBasicAgreement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dhBasicAgreement"))->offset;
  return *reinterpret_cast<::Org::BouncyCastle::Crypto::Agreement::DHBasicAgreement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _publicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::dyn__publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::dyn__publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DiffieHellmanUtility/DiffieHellmanKeyPair.get_publicKey
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::get_publicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility/DiffieHellmanKeyPair.GetPreMasterSecretAsync
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::GetPreMasterSecretAsync(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::GetPreMasterSecretAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecretAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated method: DiffieHellmanUtility/DiffieHellmanKeyPair.GetPreMasterSecret
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::GetPreMasterSecret(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::GetPreMasterSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/DiffieHellmanKeyPair/<>c__DisplayClass5_0
#include "GlobalNamespace/DiffieHellmanUtility_DiffieHellmanKeyPair_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DiffieHellmanUtility/DiffieHellmanKeyPair <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair*& GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientPublicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::dyn_clientPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::dyn_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DiffieHellmanUtility/DiffieHellmanKeyPair/<>c__DisplayClass5_0.<GetPreMasterSecretAsync>b__0
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::$GetPreMasterSecretAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::DiffieHellmanKeyPair::$$c__DisplayClass5_0::<GetPreMasterSecretAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreMasterSecretAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/ElipticalCurveKeyPair
#include "GlobalNamespace/DiffieHellmanUtility_ElipticalCurveKeyPair.hpp"
// Including type: DiffieHellmanUtility/ElipticalCurveKeyPair/<>c__DisplayClass5_0
#include "GlobalNamespace/DiffieHellmanUtility_ElipticalCurveKeyPair_--c__DisplayClass5_0.hpp"
// Including type: Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement
#include "Org/BouncyCastle/Crypto/Agreement/ECDHBasicAgreement.hpp"
// Including type: Org.BouncyCastle.Crypto.Parameters.ECPrivateKeyParameters
#include "Org/BouncyCastle/Crypto/Parameters/ECPrivateKeyParameters.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement _ecdhBasicAgreement
[[deprecated("Use field access instead!")]] ::Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement*& GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::dyn__ecdhBasicAgreement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::dyn__ecdhBasicAgreement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ecdhBasicAgreement"))->offset;
  return *reinterpret_cast<::Org::BouncyCastle::Crypto::Agreement::ECDHBasicAgreement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _publicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::dyn__publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::dyn__publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DiffieHellmanUtility/ElipticalCurveKeyPair.get_publicKey
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::get_publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::get_publicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility/ElipticalCurveKeyPair.GetPreMasterSecretAsync
::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>* GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::GetPreMasterSecretAsync(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::GetPreMasterSecretAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecretAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::ArrayW<uint8_t>>*, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated method: DiffieHellmanUtility/ElipticalCurveKeyPair.GetPreMasterSecret
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::GetPreMasterSecret(::ArrayW<uint8_t> clientPublicKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::GetPreMasterSecret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreMasterSecret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientPublicKey)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, clientPublicKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/ElipticalCurveKeyPair/<>c__DisplayClass5_0
#include "GlobalNamespace/DiffieHellmanUtility_ElipticalCurveKeyPair_--c__DisplayClass5_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public DiffieHellmanUtility/ElipticalCurveKeyPair <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair*& GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientPublicKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::dyn_clientPublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::dyn_clientPublicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientPublicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DiffieHellmanUtility/ElipticalCurveKeyPair/<>c__DisplayClass5_0.<GetPreMasterSecretAsync>b__0
::ArrayW<uint8_t> GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::$GetPreMasterSecretAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::ElipticalCurveKeyPair::$$c__DisplayClass5_0::<GetPreMasterSecretAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetPreMasterSecretAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiffieHellmanUtility/OperationTimer
#include "GlobalNamespace/DiffieHellmanUtility_OperationTimer.hpp"
// Including type: System.Diagnostics.Stopwatch
#include "System/Diagnostics/Stopwatch.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Diagnostics.Stopwatch _stopwatch
[[deprecated("Use field access instead!")]] ::System::Diagnostics::Stopwatch*& GlobalNamespace::DiffieHellmanUtility::OperationTimer::dyn__stopwatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::OperationTimer::dyn__stopwatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stopwatch"))->offset;
  return *reinterpret_cast<::System::Diagnostics::Stopwatch**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _operationName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DiffieHellmanUtility::OperationTimer::dyn__operationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::OperationTimer::dyn__operationName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_operationName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DiffieHellmanUtility/OperationTimer.Dispose
void GlobalNamespace::DiffieHellmanUtility::OperationTimer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::OperationTimer::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DiffieHellmanUtility/OperationTimer.Time
::GlobalNamespace::DiffieHellmanUtility::OperationTimer* GlobalNamespace::DiffieHellmanUtility::OperationTimer::Time(::StringW operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiffieHellmanUtility::OperationTimer::Time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DiffieHellmanUtility/OperationTimer", "Time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operation)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DiffieHellmanUtility::OperationTimer*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, operation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectedPlayer
#include "GlobalNamespace/DisconnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <userId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DisconnectedPlayer::dyn_$userId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::dyn_$userId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <userName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DisconnectedPlayer::dyn_$userName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::dyn_$userName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <sortIndex>k__BackingField
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DisconnectedPlayer::dyn_$sortIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::dyn_$sortIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sortIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerAvatarData <multiplayerAvatarData>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MultiplayerAvatarData& GlobalNamespace::DisconnectedPlayer::dyn_$multiplayerAvatarData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::dyn_$multiplayerAvatarData$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerAvatarData>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerAvatarData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisconnectedPlayer.get_offsetSyncTime
float GlobalNamespace::DisconnectedPlayer::get_offsetSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_offsetSyncTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_offsetSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_isFailed
bool GlobalNamespace::DisconnectedPlayer::get_isFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_isFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_isMe
bool GlobalNamespace::DisconnectedPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_userId
::StringW GlobalNamespace::DisconnectedPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.set_userId
void GlobalNamespace::DisconnectedPlayer::set_userId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::set_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectedPlayer.get_userName
::StringW GlobalNamespace::DisconnectedPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.set_userName
void GlobalNamespace::DisconnectedPlayer::set_userName(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::set_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectedPlayer.get_hasValidLatency
bool GlobalNamespace::DisconnectedPlayer::get_hasValidLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_hasValidLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasValidLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_currentLatency
float GlobalNamespace::DisconnectedPlayer::get_currentLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_currentLatency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentLatency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_isConnected
bool GlobalNamespace::DisconnectedPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_disconnectedReason
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedPlayer::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_isConnectionOwner
bool GlobalNamespace::DisconnectedPlayer::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_sortIndex
int GlobalNamespace::DisconnectedPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_sortIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_multiplayerAvatarData
::GlobalNamespace::MultiplayerAvatarData GlobalNamespace::DisconnectedPlayer::get_multiplayerAvatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_multiplayerAvatarData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerAvatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MultiplayerAvatarData, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.get_isKicked
bool GlobalNamespace::DisconnectedPlayer::get_isKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::get_isKicked");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectedPlayer.HasState
bool GlobalNamespace::DisconnectedPlayer::HasState(::StringW state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedPlayer::HasState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DisconnectedReason Unknown
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason Unknown
void GlobalNamespace::DisconnectedReason::_set_Unknown(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason UserInitiated
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_UserInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_UserInitiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "UserInitiated"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason UserInitiated
void GlobalNamespace::DisconnectedReason::_set_UserInitiated(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_UserInitiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "UserInitiated", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason Timeout
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "Timeout"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason Timeout
void GlobalNamespace::DisconnectedReason::_set_Timeout(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason Kicked
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_Kicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_Kicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "Kicked"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason Kicked
void GlobalNamespace::DisconnectedReason::_set_Kicked(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_Kicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "Kicked", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason ServerAtCapacity
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_ServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_ServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "ServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason ServerAtCapacity
void GlobalNamespace::DisconnectedReason::_set_ServerAtCapacity(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_ServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "ServerAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason ServerConnectionClosed
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_ServerConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_ServerConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "ServerConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason ServerConnectionClosed
void GlobalNamespace::DisconnectedReason::_set_ServerConnectionClosed(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_ServerConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "ServerConnectionClosed", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason MasterServerUnreachable
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_MasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_MasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "MasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason MasterServerUnreachable
void GlobalNamespace::DisconnectedReason::_set_MasterServerUnreachable(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_MasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "MasterServerUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason ClientConnectionClosed
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_ClientConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_ClientConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "ClientConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason ClientConnectionClosed
void GlobalNamespace::DisconnectedReason::_set_ClientConnectionClosed(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_ClientConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "ClientConnectionClosed", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason NetworkDisconnected
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_NetworkDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_NetworkDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "NetworkDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason NetworkDisconnected
void GlobalNamespace::DisconnectedReason::_set_NetworkDisconnected(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_NetworkDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "NetworkDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public DisconnectedReason ServerTerminated
::GlobalNamespace::DisconnectedReason GlobalNamespace::DisconnectedReason::_get_ServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_get_ServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DisconnectedReason>("", "DisconnectedReason", "ServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static public DisconnectedReason ServerTerminated
void GlobalNamespace::DisconnectedReason::_set_ServerTerminated(::GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::_set_ServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReason", "ServerTerminated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DisconnectedReason::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisconnectedReason::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Hidden
::GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Hidden
void GlobalNamespace::DiscoveryPolicy::_set_Hidden(::GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy WithCode
::GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_WithCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_get_WithCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "WithCode"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy WithCode
void GlobalNamespace::DiscoveryPolicy::_set_WithCode(::GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_set_WithCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "WithCode", value));
}
// Autogenerated static field getter
// Get static field: static public DiscoveryPolicy Public
::GlobalNamespace::DiscoveryPolicy GlobalNamespace::DiscoveryPolicy::_get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_get_Public");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::DiscoveryPolicy>("", "DiscoveryPolicy", "Public"));
}
// Autogenerated static field setter
// Set static field: static public DiscoveryPolicy Public
void GlobalNamespace::DiscoveryPolicy::_set_Public(::GlobalNamespace::DiscoveryPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::_set_Public");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DiscoveryPolicy", "Public", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::DiscoveryPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DiscoveryPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String hostName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::DnsEndPoint::dyn_hostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::dyn_hostName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hostName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DnsEndPoint::dyn_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::dyn_port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Net.IPEndPoint> _getEndPointTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::System::Net::IPEndPoint*>*& GlobalNamespace::DnsEndPoint::dyn__getEndPointTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::dyn__getEndPointTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getEndPointTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::System::Net::IPEndPoint*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DnsEndPoint.get_endPoint
::System::Net::IPEndPoint* GlobalNamespace::DnsEndPoint::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: DnsEndPoint.GetEndPointAsync
::System::Threading::Tasks::Task_1<::System::Net::IPEndPoint*>* GlobalNamespace::DnsEndPoint::GetEndPointAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::GetEndPointAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPointAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::System::Net::IPEndPoint*>*, false>(this, ___internal__method);
}
// Autogenerated method: DnsEndPoint.GetEndPoint
::System::Net::IPEndPoint* GlobalNamespace::DnsEndPoint::GetEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::GetEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: DnsEndPoint.GetEndPointInternal
::System::Net::IPEndPoint* GlobalNamespace::DnsEndPoint::GetEndPointInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::GetEndPointInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEndPointInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: DnsEndPoint.Equals
bool GlobalNamespace::DnsEndPoint::Equals(::GlobalNamespace::DnsEndPoint* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: DnsEndPoint.ToString
::StringW GlobalNamespace::DnsEndPoint::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: DnsEndPoint.Equals
bool GlobalNamespace::DnsEndPoint::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: DnsEndPoint.GetHashCode
int GlobalNamespace::DnsEndPoint::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DnsEndPoint::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EncryptionUtility
#include "GlobalNamespace/EncryptionUtility.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
// Including type: EncryptionUtility/EncryptionState
#include "GlobalNamespace/EncryptionUtility_EncryptionState.hpp"
// Including type: EncryptionUtility/<>c__DisplayClass18_0
#include "GlobalNamespace/EncryptionUtility_--c__DisplayClass18_0.hpp"
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacHashSize
int GlobalNamespace::EncryptionUtility::_get_kMacHashSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kMacHashSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kMacHashSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacHashSize
void GlobalNamespace::EncryptionUtility::_set_kMacHashSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kMacHashSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kMacHashSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kSequenceNumberSize
int GlobalNamespace::EncryptionUtility::_get_kSequenceNumberSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kSequenceNumberSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kSequenceNumberSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kSequenceNumberSize
void GlobalNamespace::EncryptionUtility::_set_kSequenceNumberSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kSequenceNumberSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kSequenceNumberSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPadding
int GlobalNamespace::EncryptionUtility::_get_kMaxPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kMaxPadding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kMaxPadding"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPadding
void GlobalNamespace::EncryptionUtility::_set_kMaxPadding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kMaxPadding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kMaxPadding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMacKeySize
int GlobalNamespace::EncryptionUtility::_get_kMacKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kMacKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kMacKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMacKeySize
void GlobalNamespace::EncryptionUtility::_set_kMacKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kMacKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kMacKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kKeySize
int GlobalNamespace::EncryptionUtility::_get_kKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kKeySize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kKeySize
void GlobalNamespace::EncryptionUtility::_set_kKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kKeySize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kBlockSize
int GlobalNamespace::EncryptionUtility::_get_kBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kBlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kBlockSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kBlockSize
void GlobalNamespace::EncryptionUtility::_set_kBlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kBlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kIvSize
int GlobalNamespace::EncryptionUtility::_get_kIvSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kIvSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kIvSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kIvSize
void GlobalNamespace::EncryptionUtility::_set_kIvSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kIvSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kIvSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMasterKeySize
int GlobalNamespace::EncryptionUtility::_get_kMasterKeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kMasterKeySize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kMasterKeySize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMasterKeySize
void GlobalNamespace::EncryptionUtility::_set_kMasterKeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kMasterKeySize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kMasterKeySize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kRandomBlockSize
int GlobalNamespace::EncryptionUtility::_get_kRandomBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kRandomBlockSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kRandomBlockSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kRandomBlockSize
void GlobalNamespace::EncryptionUtility::_set_kRandomBlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kRandomBlockSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kRandomBlockSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kExtraSize
int GlobalNamespace::EncryptionUtility::_get_kExtraSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get_kExtraSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility", "kExtraSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kExtraSize
void GlobalNamespace::EncryptionUtility::_set_kExtraSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set_kExtraSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "kExtraSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _masterSecretSeed
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::_get__masterSecretSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get__masterSecretSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "EncryptionUtility", "_masterSecretSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _masterSecretSeed
void GlobalNamespace::EncryptionUtility::_set__masterSecretSeed(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set__masterSecretSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "_masterSecretSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _keyExpansionSeed
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::_get__keyExpansionSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get__keyExpansionSeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "EncryptionUtility", "_keyExpansionSeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _keyExpansionSeed
void GlobalNamespace::EncryptionUtility::_set__keyExpansionSeed(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set__keyExpansionSeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "_keyExpansionSeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempIV
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::_get__tempIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get__tempIV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "EncryptionUtility", "_tempIV"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempIV
void GlobalNamespace::EncryptionUtility::_set__tempIV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set__tempIV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "_tempIV", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] _tempHash
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::_get__tempHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get__tempHash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("", "EncryptionUtility", "_tempHash"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] _tempHash
void GlobalNamespace::EncryptionUtility::_set__tempHash(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set__tempHash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "_tempHash", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.AesCryptoServiceProvider _aes
::System::Security::Cryptography::AesCryptoServiceProvider* GlobalNamespace::EncryptionUtility::_get__aes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_get__aes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Security::Cryptography::AesCryptoServiceProvider*>("", "EncryptionUtility", "_aes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.AesCryptoServiceProvider _aes
void GlobalNamespace::EncryptionUtility::_set__aes(::System::Security::Cryptography::AesCryptoServiceProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::_set__aes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility", "_aes", value));
}
// Autogenerated method: EncryptionUtility..cctor
void GlobalNamespace::EncryptionUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: EncryptionUtility.CreateEncryptionState
::GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::EncryptionUtility::CreateEncryptionState(::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> serverSeed, ::ArrayW<uint8_t> clientSeed, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::CreateEncryptionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "CreateEncryptionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverSeed), ::il2cpp_utils::ExtractType(clientSeed), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, preMasterSecret, serverSeed, clientSeed, isClient);
}
// Autogenerated method: EncryptionUtility.CreateEncryptionStateAsync
::System::Threading::Tasks::Task_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>* GlobalNamespace::EncryptionUtility::CreateEncryptionStateAsync(::ArrayW<uint8_t> preMasterSecret, ::ArrayW<uint8_t> serverSeed, ::ArrayW<uint8_t> clientSeed, bool isClient) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::CreateEncryptionStateAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "CreateEncryptionStateAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preMasterSecret), ::il2cpp_utils::ExtractType(serverSeed), ::il2cpp_utils::ExtractType(clientSeed), ::il2cpp_utils::ExtractType(isClient)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::GlobalNamespace::EncryptionUtility::IEncryptionState*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, preMasterSecret, serverSeed, clientSeed, isClient);
}
// Autogenerated method: EncryptionUtility.IsValidLength
bool GlobalNamespace::EncryptionUtility::IsValidLength(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::IsValidLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "IsValidLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, length);
}
// Autogenerated method: EncryptionUtility.EncryptData
void GlobalNamespace::EncryptionUtility::EncryptData(::GlobalNamespace::EncryptionUtility::EncryptionState* state, ::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length, int extraPrefixedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "EncryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(extraPrefixedData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, data, byref(offset), byref(length), extraPrefixedData);
}
// Autogenerated method: EncryptionUtility.TryDecryptData
bool GlobalNamespace::EncryptionUtility::TryDecryptData(::GlobalNamespace::EncryptionUtility::EncryptionState* state, ::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::TryDecryptData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "TryDecryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, state, data, byref(offset), byref(length));
}
// Autogenerated method: EncryptionUtility.FastCopyBlock
void GlobalNamespace::EncryptionUtility::FastCopyBlock(::ArrayW<uint8_t> inArr, int inOff, ::ArrayW<uint8_t> outArr, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::FastCopyBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "FastCopyBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArr), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outArr), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArr, inOff, outArr, outOff);
}
// Autogenerated method: EncryptionUtility.FastCopyMac
void GlobalNamespace::EncryptionUtility::FastCopyMac(::ArrayW<uint8_t> inArr, int inOff, ::ArrayW<uint8_t> outArr, int outOff) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::FastCopyMac");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "FastCopyMac", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inArr), ::il2cpp_utils::ExtractType(inOff), ::il2cpp_utils::ExtractType(outArr), ::il2cpp_utils::ExtractType(outOff)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inArr, inOff, outArr, outOff);
}
// Autogenerated method: EncryptionUtility.Log
void GlobalNamespace::EncryptionUtility::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: EncryptionUtility.LogV
void GlobalNamespace::EncryptionUtility::LogV(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::LogV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility", "LogV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EncryptionUtility/IEncryptionState.get_isValid
bool GlobalNamespace::EncryptionUtility::IEncryptionState::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::IEncryptionState::get_isValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EncryptionUtility/IEncryptionState.EncryptData
void GlobalNamespace::EncryptionUtility::IEncryptionState::EncryptData(::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length, int extraPrefixBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::IEncryptionState::EncryptData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(extraPrefixBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, byref(offset), byref(length), extraPrefixBytes);
}
// Autogenerated method: EncryptionUtility/IEncryptionState.TryDecryptData
bool GlobalNamespace::EncryptionUtility::IEncryptionState::TryDecryptData(::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::IEncryptionState::TryDecryptData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDecryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, byref(offset), byref(length));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EncryptionUtility/EncryptionState
#include "GlobalNamespace/EncryptionUtility_EncryptionState.hpp"
// Including type: System.Collections.Concurrent.ConcurrentQueue`1
#include "System/Collections/Concurrent/ConcurrentQueue_1.hpp"
// Including type: Org.BouncyCastle.Crypto.Macs.HMac
#include "Org/BouncyCastle/Crypto/Macs/HMac.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kReceivedSequencNumBufferLength
int GlobalNamespace::EncryptionUtility::EncryptionState::_get_kReceivedSequencNumBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::_get_kReceivedSequencNumBufferLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EncryptionUtility/EncryptionState", "kReceivedSequencNumBufferLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kReceivedSequencNumBufferLength
void GlobalNamespace::EncryptionUtility::EncryptionState::_set_kReceivedSequencNumBufferLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::_set_kReceivedSequencNumBufferLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EncryptionUtility/EncryptionState", "kReceivedSequencNumBufferLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isValid
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__isValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastSentSequenceNum
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__lastSentSequenceNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__lastSentSequenceNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastSentSequenceNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasReceivedSequenceNum
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__hasReceivedSequenceNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__hasReceivedSequenceNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasReceivedSequenceNum"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 _lastReceivedSequenceNum
[[deprecated("Use field access instead!")]] uint& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__lastReceivedSequenceNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__lastReceivedSequenceNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReceivedSequenceNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean[] _receivedSequenceNumBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receivedSequenceNumBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receivedSequenceNumBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receivedSequenceNumBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] sendKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::EncryptionState::dyn_sendKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn_sendKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Byte[] receiveKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::EncryptionState::dyn_receiveKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn_receiveKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "receiveKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _sendMacKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__sendMacKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__sendMacKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendMacKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Byte[] _receiveMacKey
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receiveMacKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receiveMacKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receiveMacKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.ConcurrentQueue`1<Org.BouncyCastle.Crypto.Macs.HMac> _sendMacQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentQueue_1<::Org::BouncyCastle::Crypto::Macs::HMac*>*& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__sendMacQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__sendMacQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sendMacQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentQueue_1<::Org::BouncyCastle::Crypto::Macs::HMac*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Concurrent.ConcurrentQueue`1<Org.BouncyCastle.Crypto.Macs.HMac> _receiveMacQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Concurrent::ConcurrentQueue_1<::Org::BouncyCastle::Crypto::Macs::HMac*>*& GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receiveMacQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::dyn__receiveMacQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_receiveMacQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Concurrent::ConcurrentQueue_1<::Org::BouncyCastle::Crypto::Macs::HMac*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EncryptionUtility/EncryptionState.get_isValid
bool GlobalNamespace::EncryptionUtility::EncryptionState::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::get_isValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EncryptionUtility/EncryptionState.EncryptData
void GlobalNamespace::EncryptionUtility::EncryptionState::EncryptData(::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length, int extraPrefixBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::EncryptData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(extraPrefixBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, byref(offset), byref(length), extraPrefixBytes);
}
// Autogenerated method: EncryptionUtility/EncryptionState.TryDecryptData
bool GlobalNamespace::EncryptionUtility::EncryptionState::TryDecryptData(::ArrayW<uint8_t> data, ByRef<int> offset, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::TryDecryptData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryDecryptData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, data, byref(offset), byref(length));
}
// Autogenerated method: EncryptionUtility/EncryptionState.ComputeSendMac
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::EncryptionState::ComputeSendMac(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::ComputeSendMac");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeSendMac", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: EncryptionUtility/EncryptionState.ComputeReceiveMac
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::EncryptionState::ComputeReceiveMac(::ArrayW<uint8_t> data, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::ComputeReceiveMac");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeReceiveMac", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, data, offset, count);
}
// Autogenerated method: EncryptionUtility/EncryptionState.IsValidSequenceNum
bool GlobalNamespace::EncryptionUtility::EncryptionState::IsValidSequenceNum(uint sequenceNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::IsValidSequenceNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidSequenceNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sequenceNum);
}
// Autogenerated method: EncryptionUtility/EncryptionState.PutSequenceNum
bool GlobalNamespace::EncryptionUtility::EncryptionState::PutSequenceNum(uint sequenceNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::PutSequenceNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutSequenceNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceNum)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sequenceNum);
}
// Autogenerated method: EncryptionUtility/EncryptionState.GetNextSentSequenceNum
uint GlobalNamespace::EncryptionUtility::EncryptionState::GetNextSentSequenceNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::GetNextSentSequenceNum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextSentSequenceNum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: EncryptionUtility/EncryptionState.MakeSeed
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::EncryptionState::MakeSeed(::ArrayW<uint8_t> baseSeed, ::ArrayW<uint8_t> serverSeed, ::ArrayW<uint8_t> clientSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::MakeSeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility/EncryptionState", "MakeSeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseSeed), ::il2cpp_utils::ExtractType(serverSeed), ::il2cpp_utils::ExtractType(clientSeed)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, baseSeed, serverSeed, clientSeed);
}
// Autogenerated method: EncryptionUtility/EncryptionState.PRF
::ArrayW<uint8_t> GlobalNamespace::EncryptionUtility::EncryptionState::PRF(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> seed, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::PRF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility/EncryptionState", "PRF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, seed, length);
}
// Autogenerated method: EncryptionUtility/EncryptionState.PRF_Hash
void GlobalNamespace::EncryptionUtility::EncryptionState::PRF_Hash(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> seed, ByRef<int> length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::PRF_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EncryptionUtility/EncryptionState", "PRF_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(seed), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key, seed, byref(length));
}
// Autogenerated method: EncryptionUtility/EncryptionState.Dispose
void GlobalNamespace::EncryptionUtility::EncryptionState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::EncryptionState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EncryptionUtility/<>c__DisplayClass18_0
#include "GlobalNamespace/EncryptionUtility_--c__DisplayClass18_0.hpp"
// Including type: EncryptionUtility/IEncryptionState
#include "GlobalNamespace/EncryptionUtility_IEncryptionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Byte[] preMasterSecret
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_preMasterSecret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_preMasterSecret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preMasterSecret"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] serverSeed
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_serverSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_serverSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "serverSeed"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte[] clientSeed
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_clientSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_clientSeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clientSeed"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isClient
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::dyn_isClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isClient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EncryptionUtility/<>c__DisplayClass18_0.<CreateEncryptionStateAsync>b__0
::GlobalNamespace::EncryptionUtility::IEncryptionState* GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::$CreateEncryptionStateAsync$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EncryptionUtility::$$c__DisplayClass18_0::<CreateEncryptionStateAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateEncryptionStateAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::EncryptionUtility::IEncryptionState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EntitlementsStatus
#include "GlobalNamespace/EntitlementsStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public EntitlementsStatus Unknown
::GlobalNamespace::EntitlementsStatus GlobalNamespace::EntitlementsStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementsStatus>("", "EntitlementsStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementsStatus Unknown
void GlobalNamespace::EntitlementsStatus::_set_Unknown(::GlobalNamespace::EntitlementsStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementsStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public EntitlementsStatus NotOwned
::GlobalNamespace::EntitlementsStatus GlobalNamespace::EntitlementsStatus::_get_NotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_get_NotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementsStatus>("", "EntitlementsStatus", "NotOwned"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementsStatus NotOwned
void GlobalNamespace::EntitlementsStatus::_set_NotOwned(::GlobalNamespace::EntitlementsStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_set_NotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementsStatus", "NotOwned", value));
}
// Autogenerated static field getter
// Get static field: static public EntitlementsStatus NotDownloaded
::GlobalNamespace::EntitlementsStatus GlobalNamespace::EntitlementsStatus::_get_NotDownloaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_get_NotDownloaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementsStatus>("", "EntitlementsStatus", "NotDownloaded"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementsStatus NotDownloaded
void GlobalNamespace::EntitlementsStatus::_set_NotDownloaded(::GlobalNamespace::EntitlementsStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_set_NotDownloaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementsStatus", "NotDownloaded", value));
}
// Autogenerated static field getter
// Get static field: static public EntitlementsStatus Ok
::GlobalNamespace::EntitlementsStatus GlobalNamespace::EntitlementsStatus::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::EntitlementsStatus>("", "EntitlementsStatus", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public EntitlementsStatus Ok
void GlobalNamespace::EntitlementsStatus::_set_Ok(::GlobalNamespace::EntitlementsStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EntitlementsStatus", "Ok", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EntitlementsStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EntitlementsStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftClientMessageHandler
#include "GlobalNamespace/GameLiftClientMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: IUnconnectedMessageSender
#include "GlobalNamespace/IUnconnectedMessageSender.hpp"
// Including type: DnsEndPoint
#include "GlobalNamespace/DnsEndPoint.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: ICertificateValidator
#include "GlobalNamespace/ICertificateValidator.hpp"
// Including type: BGNet.Core.IAnalyticsManager
#include "BGNet/Core/IAnalyticsManager.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedMessage
#include "BGNet/Core/Messages/IUnconnectedMessage.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: BGNet.Core.Messages.IUnconnectedAuthenticateRequest
#include "BGNet/Core/Messages/IUnconnectedAuthenticateRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _userId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftClientMessageHandler::dyn__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::dyn__userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _userName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftClientMessageHandler::dyn__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::dyn__userName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_userName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _playerSessionId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftClientMessageHandler::dyn__playerSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::dyn__playerSessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerSessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameLiftClientMessageHandler.RegisterGameLiftMessages
void GlobalNamespace::GameLiftClientMessageHandler::RegisterGameLiftMessages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::RegisterGameLiftMessages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterGameLiftMessages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftClientMessageHandler.AuthenticateWithGameLiftServer
::System::Threading::Tasks::Task* GlobalNamespace::GameLiftClientMessageHandler::AuthenticateWithGameLiftServer(::StringW userId, ::StringW userName, ::StringW playerSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::AuthenticateWithGameLiftServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateWithGameLiftServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(playerSessionId)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task*, false>(this, ___internal__method, userId, userName, playerSessionId);
}
// Autogenerated method: GameLiftClientMessageHandler.ShouldHandleMessage
bool GlobalNamespace::GameLiftClientMessageHandler::ShouldHandleMessage(::BGNet::Core::Messages::IUnconnectedMessage* packet, ::BGNet::Core::Messages::UnconnectedMessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::ShouldHandleMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: GameLiftClientMessageHandler.GetMessageType
uint GlobalNamespace::GameLiftClientMessageHandler::GetMessageType(::BGNet::Core::Messages::IUnconnectedMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::GetMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, message);
}
// Autogenerated method: GameLiftClientMessageHandler.GetAuthenticationRequest
::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>* GlobalNamespace::GameLiftClientMessageHandler::GetAuthenticationRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftClientMessageHandler::GetAuthenticationRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Threading::Tasks::Task_1<::BGNet::Core::Messages::IUnconnectedAuthenticateRequest*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager
#include "GlobalNamespace/GameLiftConnectionManager.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: GameLiftConnectionManager/GameLiftConnectionManagerParamsBase
#include "GlobalNamespace/GameLiftConnectionManager_GameLiftConnectionManagerParamsBase.hpp"
// Including type: GameLiftConnectionManager/ConnectToServerParams
#include "GlobalNamespace/GameLiftConnectionManager_ConnectToServerParams.hpp"
// Including type: GameLiftConnectionManager/StartClientParams
#include "GlobalNamespace/GameLiftConnectionManager_StartClientParams.hpp"
// Including type: GameLiftConnectionManager/<GameLiftConnectToServer>d__81
#include "GlobalNamespace/GameLiftConnectionManager_-GameLiftConnectToServer-d__81.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: GameLiftClientMessageHandler
#include "GlobalNamespace/GameLiftClientMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: BGNet.Core.GameLift.IGameLiftPlayerSessionProvider
#include "BGNet/Core/GameLift/IGameLiftPlayerSessionProvider.hpp"
// Including type: GameLiftClientConnectionRequestHandler
#include "GlobalNamespace/GameLiftClientConnectionRequestHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BGNet.Core.ITimeProvider _timeProvider
[[deprecated("Use field access instead!")]] ::BGNet::Core::ITimeProvider*& GlobalNamespace::GameLiftConnectionManager::dyn__timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__timeProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeProvider"))->offset;
  return *reinterpret_cast<::BGNet::Core::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLibConnectionManager _liteNetLibConnectionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::LiteNetLibConnectionManager*& GlobalNamespace::GameLiftConnectionManager::dyn__liteNetLibConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__liteNetLibConnectionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liteNetLibConnectionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LiteNetLibConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _code
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::dyn__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::dyn__secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::GameLiftConnectionManager::dyn__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::GameLiftConnectionManager::dyn__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameLiftClientMessageHandler _messageHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftClientMessageHandler*& GlobalNamespace::GameLiftConnectionManager::dyn__messageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__messageHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_messageHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftClientMessageHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameLiftConnectionManager/ConnectionState _connectionState
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager::ConnectionState& GlobalNamespace::GameLiftConnectionManager::dyn__connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__connectionState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager::ConnectionState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _connectionCancellationTokenSource
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationTokenSource*& GlobalNamespace::GameLiftConnectionManager::dyn__connectionCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__connectionCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionCancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<IAuthenticationTokenProvider> _authenticationTokenProviderTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>*& GlobalNamespace::GameLiftConnectionManager::dyn__authenticationTokenProviderTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__authenticationTokenProviderTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_authenticationTokenProviderTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.GameLift.IGameLiftPlayerSessionProvider _gameLiftPlayerSessionProvider
[[deprecated("Use field access instead!")]] ::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider*& GlobalNamespace::GameLiftConnectionManager::dyn__gameLiftPlayerSessionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__gameLiftPlayerSessionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameLiftPlayerSessionProvider"))->offset;
  return *reinterpret_cast<::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameLiftClientConnectionRequestHandler _connectionRequestHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftClientConnectionRequestHandler*& GlobalNamespace::GameLiftConnectionManager::dyn__connectionRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn__connectionRequestHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectionRequestHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftClientConnectionRequestHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onInitializedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameLiftConnectionManager::dyn_onInitializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onInitializedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onInitializedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action*& GlobalNamespace::GameLiftConnectionManager::dyn_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::GameLiftConnectionManager::dyn_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>*& GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionFailedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionFailedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ConnectionFailedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::GlobalNamespace::IConnection*>*& GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionConnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionConnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::IConnection*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>*& GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onConnectionDisconnectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onConnectionDisconnectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,LiteNetLib.DeliveryMethod> onReceivedDataEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::LiteNetLib::DeliveryMethod>*& GlobalNamespace::GameLiftConnectionManager::dyn_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::dyn_onReceivedDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onReceivedDataEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::LiteNetLib::DeliveryMethod>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameLiftConnectionManager.get_userId
::StringW GlobalNamespace::GameLiftConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_userName
::StringW GlobalNamespace::GameLiftConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_isConnected
bool GlobalNamespace::GameLiftConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_isConnecting
bool GlobalNamespace::GameLiftConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_isDisconnecting
bool GlobalNamespace::GameLiftConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_connectionCount
int GlobalNamespace::GameLiftConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_isConnectionOwner
bool GlobalNamespace::GameLiftConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_isDisposed
bool GlobalNamespace::GameLiftConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_port
int GlobalNamespace::GameLiftConnectionManager::get_port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_port");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_port", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_playerSessionId
::StringW GlobalNamespace::GameLiftConnectionManager::get_playerSessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_playerSessionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerSessionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::GameLiftConnectionManager::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameLiftConnectionManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_code
::StringW GlobalNamespace::GameLiftConnectionManager::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.get_secret
::StringW GlobalNamespace::GameLiftConnectionManager::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.add_onInitializedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onInitializedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onInitializedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onInitializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInitializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onConnectedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onConnectedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onConnectedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onDisconnectedEvent(::System::Action_1<::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onConnectionFailedEvent(::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onConnectionConnectedEvent(::System::Action_1<::GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::GameLiftConnectionManager::add_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onConnectionDisconnectedEvent(::System::Action_2<::GlobalNamespace::IConnection*, ::GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::GameLiftConnectionManager::add_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::GameLiftConnectionManager::remove_onReceivedDataEvent(::System::Action_3<::GlobalNamespace::IConnection*, ::LiteNetLib::Utils::NetDataReader*, ::LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameLiftConnectionManager.SendToAll
void GlobalNamespace::GameLiftConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: GameLiftConnectionManager.SendToAll
void GlobalNamespace::GameLiftConnectionManager::SendToAll(::LiteNetLib::Utils::NetDataWriter* writer, ::LiteNetLib::DeliveryMethod deliveryMethod, ::GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: GameLiftConnectionManager.PollUpdate
void GlobalNamespace::GameLiftConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.Dispose
void GlobalNamespace::GameLiftConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.Disconnect
void GlobalNamespace::GameLiftConnectionManager::Disconnect(::GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: GameLiftConnectionManager.DisconnectInternal
void GlobalNamespace::GameLiftConnectionManager::DisconnectInternal(::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectionFailedReason);
}
// Autogenerated method: GameLiftConnectionManager.DisconnectInternal
void GlobalNamespace::GameLiftConnectionManager::DisconnectInternal(::GlobalNamespace::DisconnectedReason disconnectedReason, ::GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: GameLiftConnectionManager.GetConnection
::GlobalNamespace::IConnection* GlobalNamespace::GameLiftConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: GameLiftConnectionManager.HandleConnected
void GlobalNamespace::GameLiftConnectionManager::HandleConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager.HandleConnectionConnected
void GlobalNamespace::GameLiftConnectionManager::HandleConnectionConnected(::GlobalNamespace::IConnection* connection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleConnectionConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection);
}
// Autogenerated method: GameLiftConnectionManager.HandleConnectionDisconnected
void GlobalNamespace::GameLiftConnectionManager::HandleConnectionDisconnected(::GlobalNamespace::IConnection* connection, ::GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleConnectionDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, reason);
}
// Autogenerated method: GameLiftConnectionManager.HandleConnectionFailed
void GlobalNamespace::GameLiftConnectionManager::HandleConnectionFailed(::GlobalNamespace::ConnectionFailedReason failedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(failedReason)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, failedReason);
}
// Autogenerated method: GameLiftConnectionManager.HandleReceivedData
void GlobalNamespace::GameLiftConnectionManager::HandleReceivedData(::GlobalNamespace::IConnection* connection, ::LiteNetLib::Utils::NetDataReader* reader, ::LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleReceivedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleReceivedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connection, reader, deliveryMethod);
}
// Autogenerated method: GameLiftConnectionManager.GameLiftConnectToServer
void GlobalNamespace::GameLiftConnectionManager::GameLiftConnectToServer(::StringW secret, ::StringW code, ::System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GameLiftConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GameLiftConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, secret, code, cancellationToken);
}
// Autogenerated method: GameLiftConnectionManager.HandleConnectToServerSuccess
void GlobalNamespace::GameLiftConnectionManager::HandleConnectToServerSuccess(::StringW playerSessionId, ::System::Net::IPEndPoint* remoteEndPoint, ::StringW gameSessionId, ::StringW secret, ::StringW code, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::HandleConnectToServerSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectToServerSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSessionId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(gameSessionId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSessionId, remoteEndPoint, gameSessionId, secret, code, selectionMask, configuration);
}
// Autogenerated method: GameLiftConnectionManager.ConnectToEndPoint
void GlobalNamespace::GameLiftConnectionManager::ConnectToEndPoint(::System::Net::IPEndPoint* remoteEndPoint, ::StringW gameSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectToEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(gameSessionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, remoteEndPoint, gameSessionId);
}
// Autogenerated method: GameLiftConnectionManager.GetPublicServers
void GlobalNamespace::GameLiftConnectionManager::GetPublicServers(::System::Action_1<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::PublicServerInfo>*>* onSuccess, ::System::Action_1<::GlobalNamespace::ConnectionFailedReason>* onFailure, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GetPublicServers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPublicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onSuccess), ::il2cpp_utils::ExtractType(onFailure), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, onSuccess, onFailure, selectionMask, configuration, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager/ConnectionState
#include "GlobalNamespace/GameLiftConnectionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameLiftConnectionManager/ConnectionState Unconnected
::GlobalNamespace::GameLiftConnectionManager::ConnectionState GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Unconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Unconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameLiftConnectionManager::ConnectionState>("", "GameLiftConnectionManager/ConnectionState", "Unconnected"));
}
// Autogenerated static field setter
// Set static field: static public GameLiftConnectionManager/ConnectionState Unconnected
void GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Unconnected(::GlobalNamespace::GameLiftConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Unconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameLiftConnectionManager/ConnectionState", "Unconnected", value));
}
// Autogenerated static field getter
// Get static field: static public GameLiftConnectionManager/ConnectionState Connecting
::GlobalNamespace::GameLiftConnectionManager::ConnectionState GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameLiftConnectionManager::ConnectionState>("", "GameLiftConnectionManager/ConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public GameLiftConnectionManager/ConnectionState Connecting
void GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Connecting(::GlobalNamespace::GameLiftConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameLiftConnectionManager/ConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public GameLiftConnectionManager/ConnectionState Connected
::GlobalNamespace::GameLiftConnectionManager::ConnectionState GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameLiftConnectionManager::ConnectionState>("", "GameLiftConnectionManager/ConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public GameLiftConnectionManager/ConnectionState Connected
void GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Connected(::GlobalNamespace::GameLiftConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameLiftConnectionManager/ConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public GameLiftConnectionManager/ConnectionState Disconnecting
::GlobalNamespace::GameLiftConnectionManager::ConnectionState GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameLiftConnectionManager::ConnectionState>("", "GameLiftConnectionManager/ConnectionState", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public GameLiftConnectionManager/ConnectionState Disconnecting
void GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Disconnecting(::GlobalNamespace::GameLiftConnectionManager::ConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameLiftConnectionManager/ConnectionState", "Disconnecting", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameLiftConnectionManager::ConnectionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager/GameLiftConnectionManagerParamsBase
#include "GlobalNamespace/GameLiftConnectionManager_GameLiftConnectionManagerParamsBase.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: BGNet.Core.GameLift.IGameLiftPlayerSessionProvider
#include "BGNet/Core/GameLift/IGameLiftPlayerSessionProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<IAuthenticationTokenProvider> authenticationTokenProviderTask
[[deprecated("Use field access instead!")]] ::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>*& GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_authenticationTokenProviderTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_authenticationTokenProviderTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "authenticationTokenProviderTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::IAuthenticationTokenProvider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BGNet.Core.GameLift.IGameLiftPlayerSessionProvider gameLiftPlayerSessionProvider
[[deprecated("Use field access instead!")]] ::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider*& GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_gameLiftPlayerSessionProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_gameLiftPlayerSessionProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameLiftPlayerSessionProvider"))->offset;
  return *reinterpret_cast<::BGNet::Core::GameLift::IGameLiftPlayerSessionProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_selectionMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectionMask"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::GameLiftConnectionManagerParamsBase::dyn_configuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "configuration"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager/ConnectToServerParams
#include "GlobalNamespace/GameLiftConnectionManager_ConnectToServerParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams::dyn_secret");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::ConnectToServerParams::dyn_code");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager/StartClientParams
#include "GlobalNamespace/GameLiftConnectionManager_StartClientParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLiftConnectionManager/<GameLiftConnectToServer>d__81
#include "GlobalNamespace/GameLiftConnectionManager_-GameLiftConnectToServer-d__81.hpp"
// Including type: BGNet.Core.GameLift.PlayerSessionInfo
#include "BGNet/Core/GameLift/PlayerSessionInfo.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameLiftConnectionManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameLiftConnectionManager*& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameLiftConnectionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_secret");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secret"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String code
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_code");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "code"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
[[deprecated("Use field access instead!")]] ::System::Threading::CancellationToken& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.GameLift.PlayerSessionInfo <playerSessionInfo>5__2
[[deprecated("Use field access instead!")]] ::BGNet::Core::GameLift::PlayerSessionInfo*& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$playerSessionInfo$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$playerSessionInfo$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<playerSessionInfo>5__2"))->offset;
  return *reinterpret_cast<::BGNet::Core::GameLift::PlayerSessionInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IAuthenticationTokenProvider <authenticationTokenProvider>5__3
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IAuthenticationTokenProvider*& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$authenticationTokenProvider$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$authenticationTokenProvider$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<authenticationTokenProvider>5__3"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAuthenticationTokenProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<IAuthenticationTokenProvider> <>u__1
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::IAuthenticationTokenProvider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<BGNet.Core.GameLift.PlayerSessionInfo> <>u__2
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::GameLift::PlayerSessionInfo*>& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::BGNet::Core::GameLift::PlayerSessionInfo*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__3
[[deprecated("Use field access instead!")]] ::System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::dyn_$$u__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__3"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameLiftConnectionManager/<GameLiftConnectToServer>d__81.MoveNext
void GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameLiftConnectionManager/<GameLiftConnectToServer>d__81.SetStateMachine
void GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameLiftConnectionManager::$GameLiftConnectToServer$d__81::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerPlacementErrorCode
#include "GlobalNamespace/MultiplayerPlacementErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode Success
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "Success"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode Success
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_Success(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode Unknown
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode Unknown
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_Unknown(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode ConnectionCanceled
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_ConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_ConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "ConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode ConnectionCanceled
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_ConnectionCanceled(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_ConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "ConnectionCanceled", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode ServerDoesNotExist
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_ServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_ServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "ServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode ServerDoesNotExist
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_ServerDoesNotExist(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_ServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "ServerDoesNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode ServerAtCapacity
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_ServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_ServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "ServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode ServerAtCapacity
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_ServerAtCapacity(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_ServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "ServerAtCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode AuthenticationFailed
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_AuthenticationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_AuthenticationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "AuthenticationFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode AuthenticationFailed
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_AuthenticationFailed(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_AuthenticationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "AuthenticationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode RequestTimeout
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_RequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_RequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "RequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode RequestTimeout
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_RequestTimeout(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_RequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "RequestTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerPlacementErrorCode MatchmakingTimeout
::GlobalNamespace::MultiplayerPlacementErrorCode GlobalNamespace::MultiplayerPlacementErrorCode::_get_MatchmakingTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_get_MatchmakingTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::MultiplayerPlacementErrorCode>("", "MultiplayerPlacementErrorCode", "MatchmakingTimeout"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerPlacementErrorCode MatchmakingTimeout
void GlobalNamespace::MultiplayerPlacementErrorCode::_set_MatchmakingTimeout(::GlobalNamespace::MultiplayerPlacementErrorCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::_set_MatchmakingTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerPlacementErrorCode", "MatchmakingTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::MultiplayerPlacementErrorCode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerPlacementErrorCodeMethods
#include "GlobalNamespace/MultiplayerPlacementErrorCodeMethods.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: MultiplayerPlacementErrorCode
#include "GlobalNamespace/MultiplayerPlacementErrorCode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerPlacementErrorCodeMethods.ToConnectionFailedReason
::GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerPlacementErrorCodeMethods::ToConnectionFailedReason(::GlobalNamespace::MultiplayerPlacementErrorCode errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerPlacementErrorCodeMethods::ToConnectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerPlacementErrorCodeMethods", "ToConnectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ConnectionFailedReason, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ServiceEnvironment
#include "GlobalNamespace/ServiceEnvironment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment Production
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_Production() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_Production");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "Production"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment Production
void GlobalNamespace::ServiceEnvironment::_set_Production(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_Production");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "Production", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment ReleaseCandidate
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_ReleaseCandidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_ReleaseCandidate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "ReleaseCandidate"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment ReleaseCandidate
void GlobalNamespace::ServiceEnvironment::_set_ReleaseCandidate(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_ReleaseCandidate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "ReleaseCandidate", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment InternalPlayTest
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_InternalPlayTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_InternalPlayTest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "InternalPlayTest"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment InternalPlayTest
void GlobalNamespace::ServiceEnvironment::_set_InternalPlayTest(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_InternalPlayTest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "InternalPlayTest", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment QATesting
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_QATesting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_QATesting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "QATesting"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment QATesting
void GlobalNamespace::ServiceEnvironment::_set_QATesting(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_QATesting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "QATesting", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment Development
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_Development() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_Development");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "Development"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment Development
void GlobalNamespace::ServiceEnvironment::_set_Development(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_Development");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "Development", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment ProductionA
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_ProductionA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_ProductionA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "ProductionA"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment ProductionA
void GlobalNamespace::ServiceEnvironment::_set_ProductionA(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_ProductionA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "ProductionA", value));
}
// Autogenerated static field getter
// Get static field: static public ServiceEnvironment ProductionB
::GlobalNamespace::ServiceEnvironment GlobalNamespace::ServiceEnvironment::_get_ProductionB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_get_ProductionB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ServiceEnvironment>("", "ServiceEnvironment", "ProductionB"));
}
// Autogenerated static field setter
// Set static field: static public ServiceEnvironment ProductionB
void GlobalNamespace::ServiceEnvironment::_set_ProductionB(::GlobalNamespace::ServiceEnvironment value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::_set_ProductionB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ServiceEnvironment", "ProductionB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ServiceEnvironment::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ServiceEnvironment::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager
#include "GlobalNamespace/GameplayRpcManager.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: GameplayRpcManager/SetGameplaySceneSyncFinishedRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySceneSyncFinishedRpc.hpp"
// Including type: GameplayRpcManager/SetGameplaySceneReadyRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySceneReadyRpc.hpp"
// Including type: GameplayRpcManager/GetGameplaySceneReadyRpc
#include "GlobalNamespace/GameplayRpcManager_GetGameplaySceneReadyRpc.hpp"
// Including type: GameplayRpcManager/SetPlayerDidConnectLateRpc
#include "GlobalNamespace/GameplayRpcManager_SetPlayerDidConnectLateRpc.hpp"
// Including type: GameplayRpcManager/SetGameplaySongReadyRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySongReadyRpc.hpp"
// Including type: GameplayRpcManager/GetGameplaySongReadyRpc
#include "GlobalNamespace/GameplayRpcManager_GetGameplaySongReadyRpc.hpp"
// Including type: GameplayRpcManager/SetSongStartTimeRpc
#include "GlobalNamespace/GameplayRpcManager_SetSongStartTimeRpc.hpp"
// Including type: GameplayRpcManager/NoteSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_NoteSpawnedRpc.hpp"
// Including type: GameplayRpcManager/ObstacleSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_ObstacleSpawnedRpc.hpp"
// Including type: GameplayRpcManager/SliderSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_SliderSpawnedRpc.hpp"
// Including type: GameplayRpcManager/NoteCutRpc
#include "GlobalNamespace/GameplayRpcManager_NoteCutRpc.hpp"
// Including type: GameplayRpcManager/NoteMissedRpc
#include "GlobalNamespace/GameplayRpcManager_NoteMissedRpc.hpp"
// Including type: GameplayRpcManager/LevelFinishedRpc
#include "GlobalNamespace/GameplayRpcManager_LevelFinishedRpc.hpp"
// Including type: GameplayRpcManager/ReturnToMenuRpc
#include "GlobalNamespace/GameplayRpcManager_ReturnToMenuRpc.hpp"
// Including type: GameplayRpcManager/RequestReturnToMenuRpc
#include "GlobalNamespace/GameplayRpcManager_RequestReturnToMenuRpc.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: RpcHandler`1
#include "GlobalNamespace/RpcHandler_1.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`4
#include "System/Action_4.hpp"
// Including type: NoteSpawnInfoNetSerializable
#include "GlobalNamespace/NoteSpawnInfoNetSerializable.hpp"
// Including type: ObstacleSpawnInfoNetSerializable
#include "GlobalNamespace/ObstacleSpawnInfoNetSerializable.hpp"
// Including type: SliderSpawnInfoNetSerializable
#include "GlobalNamespace/SliderSpawnInfoNetSerializable.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kGameplayState
::StringW GlobalNamespace::GameplayRpcManager::_get_kGameplayState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::_get_kGameplayState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "GameplayRpcManager", "kGameplayState"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGameplayState
void GlobalNamespace::GameplayRpcManager::_set_kGameplayState(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::_set_kGameplayState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager", "kGameplayState", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::GameplayRpcManager::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RpcHandler`1<GameplayRpcManager/RpcType> _rpcHandler
[[deprecated("Use field access instead!")]] ::GlobalNamespace::RpcHandler_1<::GlobalNamespace::GameplayRpcManager::RpcType>*& GlobalNamespace::GameplayRpcManager::dyn__rpcHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn__rpcHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rpcHandler"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RpcHandler_1<::GlobalNamespace::GameplayRpcManager::RpcType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setGameplaySceneSyncFinishedEvent
[[deprecated("Use field access instead!")]] ::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_setGameplaySceneSyncFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_setGameplaySceneSyncFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setGameplaySceneSyncFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,PlayerSpecificSettingsNetSerializable> setGameplaySceneReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_setGameplaySceneReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_setGameplaySceneReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setGameplaySceneReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getGameplaySceneReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_getGameplaySceneReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_getGameplaySceneReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getGameplaySceneReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.String,PlayerSpecificSettingsAtStartNetSerializable,System.String> setPlayerDidConnectLateEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_setPlayerDidConnectLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_setPlayerDidConnectLateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setPlayerDidConnectLateEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> setGameplaySongReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_setGameplaySongReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_setGameplaySongReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setGameplaySongReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> getGameplaySongReadyEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_getGameplaySongReadyEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_getGameplaySongReadyEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getGameplaySongReadyEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,System.Single> setSongStartTimeEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, float>*& GlobalNamespace::GameplayRpcManager::dyn_setSongStartTimeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_setSongStartTimeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSongStartTimeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.Single,System.Single,NoteSpawnInfoNetSerializable> noteWasSpawnedEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_noteWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_noteWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.Single,System.Single,ObstacleSpawnInfoNetSerializable> obstacleWasSpawnedEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_obstacleWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_obstacleWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.Single,System.Single,SliderSpawnInfoNetSerializable> sliderWasSpawnedEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_sliderWasSpawnedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_sliderWasSpawnedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sliderWasSpawnedEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.Single,System.Single,NoteCutInfoNetSerializable> noteWasCutEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_noteWasCutEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_noteWasCutEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasCutEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`4<System.String,System.Single,System.Single,NoteMissInfoNetSerializable> noteWasMissedEvent
[[deprecated("Use field access instead!")]] ::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>*& GlobalNamespace::GameplayRpcManager::dyn_noteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_noteWasMissedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasMissedEvent"))->offset;
  return *reinterpret_cast<::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.String,MultiplayerLevelCompletionResults> levelFinishedEvent
[[deprecated("Use field access instead!")]] ::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>*& GlobalNamespace::GameplayRpcManager::dyn_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_levelFinishedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelFinishedEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> returnToMenuEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_returnToMenuEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_returnToMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnToMenuEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> requestReturnToMenuEvent
[[deprecated("Use field access instead!")]] ::System::Action_1<::StringW>*& GlobalNamespace::GameplayRpcManager::dyn_requestReturnToMenuEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::dyn_requestReturnToMenuEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "requestReturnToMenuEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayRpcManager.get_enabled
bool GlobalNamespace::GameplayRpcManager::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::get_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.set_enabled
void GlobalNamespace::GameplayRpcManager::set_enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::set_enabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::GameplayRpcManager::add_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_setGameplaySceneSyncFinishedEvent
void GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent(::System::Action_3<::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneSyncFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneSyncFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_setGameplaySceneReadyEvent
void GlobalNamespace::GameplayRpcManager::add_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_setGameplaySceneReadyEvent
void GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneReadyEvent(::System::Action_2<::StringW, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_setGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_getGameplaySceneReadyEvent
void GlobalNamespace::GameplayRpcManager::add_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_getGameplaySceneReadyEvent
void GlobalNamespace::GameplayRpcManager::remove_getGameplaySceneReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_getGameplaySceneReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySceneReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_setPlayerDidConnectLateEvent
void GlobalNamespace::GameplayRpcManager::add_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_setPlayerDidConnectLateEvent
void GlobalNamespace::GameplayRpcManager::remove_setPlayerDidConnectLateEvent(::System::Action_4<::StringW, ::StringW, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable*, ::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_setPlayerDidConnectLateEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayerDidConnectLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_setGameplaySongReadyEvent
void GlobalNamespace::GameplayRpcManager::add_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_setGameplaySongReadyEvent
void GlobalNamespace::GameplayRpcManager::remove_setGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_setGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_getGameplaySongReadyEvent
void GlobalNamespace::GameplayRpcManager::add_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_getGameplaySongReadyEvent
void GlobalNamespace::GameplayRpcManager::remove_getGameplaySongReadyEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_getGameplaySongReadyEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_getGameplaySongReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_setSongStartTimeEvent
void GlobalNamespace::GameplayRpcManager::add_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_setSongStartTimeEvent
void GlobalNamespace::GameplayRpcManager::remove_setSongStartTimeEvent(::System::Action_2<::StringW, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_setSongStartTimeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setSongStartTimeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_noteWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::add_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_noteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_noteWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::remove_noteWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_noteWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_obstacleWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::add_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_obstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_obstacleWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::remove_obstacleWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_obstacleWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_obstacleWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_sliderWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::add_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_sliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_sliderWasSpawnedEvent
void GlobalNamespace::GameplayRpcManager::remove_sliderWasSpawnedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::SliderSpawnInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_sliderWasSpawnedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_sliderWasSpawnedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_noteWasCutEvent
void GlobalNamespace::GameplayRpcManager::add_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_noteWasCutEvent
void GlobalNamespace::GameplayRpcManager::remove_noteWasCutEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteCutInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_noteWasMissedEvent
void GlobalNamespace::GameplayRpcManager::add_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_noteWasMissedEvent
void GlobalNamespace::GameplayRpcManager::remove_noteWasMissedEvent(::System::Action_4<::StringW, float, float, ::GlobalNamespace::NoteMissInfoNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_levelFinishedEvent
void GlobalNamespace::GameplayRpcManager::add_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_levelFinishedEvent
void GlobalNamespace::GameplayRpcManager::remove_levelFinishedEvent(::System::Action_2<::StringW, ::GlobalNamespace::MultiplayerLevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_returnToMenuEvent
void GlobalNamespace::GameplayRpcManager::add_returnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_returnToMenuEvent
void GlobalNamespace::GameplayRpcManager::remove_returnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_returnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_returnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.add_requestReturnToMenuEvent
void GlobalNamespace::GameplayRpcManager::add_requestReturnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::add_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.remove_requestReturnToMenuEvent
void GlobalNamespace::GameplayRpcManager::remove_requestReturnToMenuEvent(::System::Action_1<::StringW>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::remove_requestReturnToMenuEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_requestReturnToMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayRpcManager.Dispose
void GlobalNamespace::GameplayRpcManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.SetGameplaySceneSyncFinished
void GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinished(::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SetGameplaySceneSyncFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneSyncFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: GameplayRpcManager.InvokeSetGameplaySceneSyncFinishCallback
void GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneSyncFinishCallback(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStart, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneSyncFinishCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetGameplaySceneSyncFinishCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersAtGameStart), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playersAtGameStart, sessionGameId);
}
// Autogenerated method: GameplayRpcManager.SetGameplaySceneReady
void GlobalNamespace::GameplayRpcManager::SetGameplaySceneReady(::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: GameplayRpcManager.InvokeSetGameplaySceneReadyCallback
void GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneReadyCallback(::StringW userId, ::GlobalNamespace::PlayerSpecificSettingsNetSerializable* playerSpecificSettingsNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySceneReadyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetGameplaySceneReadyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playerSpecificSettingsNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, playerSpecificSettingsNetSerializable);
}
// Autogenerated method: GameplayRpcManager.GetGameplaySceneReady
void GlobalNamespace::GameplayRpcManager::GetGameplaySceneReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::GetGameplaySceneReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySceneReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.InvokeGetGameplaySceneReadyCallback
void GlobalNamespace::GameplayRpcManager::InvokeGetGameplaySceneReadyCallback(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeGetGameplaySceneReadyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetGameplaySceneReadyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameplayRpcManager.SetPlayerDidConnectLate
void GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLate(::StringW usedId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SetPlayerDidConnectLate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(usedId), ::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, usedId, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: GameplayRpcManager.InvokeSetPlayerDidConnectLate
void GlobalNamespace::GameplayRpcManager::InvokeSetPlayerDidConnectLate(::StringW userId, ::StringW failedUserId, ::GlobalNamespace::PlayerSpecificSettingsAtStartNetSerializable* playersAtGameStartNetSerializable, ::StringW sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSetPlayerDidConnectLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetPlayerDidConnectLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(failedUserId), ::il2cpp_utils::ExtractType(playersAtGameStartNetSerializable), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, failedUserId, playersAtGameStartNetSerializable, sessionGameId);
}
// Autogenerated method: GameplayRpcManager.SetGameplaySongReady
void GlobalNamespace::GameplayRpcManager::SetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.InvokeSetGameplaySongReadyCallback
void GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySongReadyCallback(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSetGameplaySongReadyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetGameplaySongReadyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameplayRpcManager.GetGameplaySongReady
void GlobalNamespace::GameplayRpcManager::GetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::GetGameplaySongReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameplaySongReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.InvokeGetGameplayLevelReadyCallback
void GlobalNamespace::GameplayRpcManager::InvokeGetGameplayLevelReadyCallback(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeGetGameplayLevelReadyCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeGetGameplayLevelReadyCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameplayRpcManager.SetSongStartTime
void GlobalNamespace::GameplayRpcManager::SetSongStartTime(float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SetSongStartTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSongStartTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTime);
}
// Autogenerated method: GameplayRpcManager.InvokeSetSongStartTimeCallback
void GlobalNamespace::GameplayRpcManager::InvokeSetSongStartTimeCallback(::StringW userId, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSetSongStartTimeCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSetSongStartTimeCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, startTime);
}
// Autogenerated method: GameplayRpcManager.NoteSpawned
void GlobalNamespace::GameplayRpcManager::NoteSpawned(float songTime, ::GlobalNamespace::NoteSpawnInfoNetSerializable* noteSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::NoteSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteSpawnInfoNetSerializable);
}
// Autogenerated method: GameplayRpcManager.InvokeNoteWasSpawnedCallback
void GlobalNamespace::GameplayRpcManager::InvokeNoteWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteSpawnInfoNetSerializable* noteSpawnInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeNoteWasSpawnedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeNoteWasSpawnedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteSpawnInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, syncTime, songTime, noteSpawnInfo);
}
// Autogenerated method: GameplayRpcManager.ObstacleSpawned
void GlobalNamespace::GameplayRpcManager::ObstacleSpawned(float songTime, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable* obstacleSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::ObstacleSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ObstacleSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(obstacleSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, obstacleSpawnInfoNetSerializable);
}
// Autogenerated method: GameplayRpcManager.InvokeObstacleWasSpawnedCallback
void GlobalNamespace::GameplayRpcManager::InvokeObstacleWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::ObstacleSpawnInfoNetSerializable* obstacleSpawnInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeObstacleWasSpawnedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeObstacleWasSpawnedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(obstacleSpawnInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, syncTime, songTime, obstacleSpawnInfo);
}
// Autogenerated method: GameplayRpcManager.SliderSpawned
void GlobalNamespace::GameplayRpcManager::SliderSpawned(float songTime, ::GlobalNamespace::SliderSpawnInfoNetSerializable* sliderSpawnInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::SliderSpawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SliderSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(sliderSpawnInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, sliderSpawnInfoNetSerializable);
}
// Autogenerated method: GameplayRpcManager.InvokeSliderWasSpawnedCallback
void GlobalNamespace::GameplayRpcManager::InvokeSliderWasSpawnedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::SliderSpawnInfoNetSerializable* sliderSpawnInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeSliderWasSpawnedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeSliderWasSpawnedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(sliderSpawnInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, syncTime, songTime, sliderSpawnInfo);
}
// Autogenerated method: GameplayRpcManager.NoteCut
void GlobalNamespace::GameplayRpcManager::NoteCut(float songTime, ::GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::NoteCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteCutInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteCutInfoNetSerializable);
}
// Autogenerated method: GameplayRpcManager.InvokeNoteWasCutCallback
void GlobalNamespace::GameplayRpcManager::InvokeNoteWasCutCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteCutInfoNetSerializable* noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeNoteWasCutCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeNoteWasCutCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, syncTime, songTime, noteCutInfo);
}
// Autogenerated method: GameplayRpcManager.NoteMissed
void GlobalNamespace::GameplayRpcManager::NoteMissed(float songTime, ::GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfoNetSerializable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::NoteMissed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteMissInfoNetSerializable)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime, noteMissInfoNetSerializable);
}
// Autogenerated method: GameplayRpcManager.InvokeNoteWasMissedCallback
void GlobalNamespace::GameplayRpcManager::InvokeNoteWasMissedCallback(::StringW userId, float syncTime, float songTime, ::GlobalNamespace::NoteMissInfoNetSerializable* noteMissInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeNoteWasMissedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeNoteWasMissedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(syncTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteMissInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, syncTime, songTime, noteMissInfo);
}
// Autogenerated method: GameplayRpcManager.LevelFinished
void GlobalNamespace::GameplayRpcManager::LevelFinished(::GlobalNamespace::MultiplayerLevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::LevelFinished");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, results);
}
// Autogenerated method: GameplayRpcManager.InvokeLevelFinishedCallback
void GlobalNamespace::GameplayRpcManager::InvokeLevelFinishedCallback(::StringW userId, ::GlobalNamespace::MultiplayerLevelCompletionResults* results) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeLevelFinishedCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeLevelFinishedCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(results)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId, results);
}
// Autogenerated method: GameplayRpcManager.ReturnToMenu
void GlobalNamespace::GameplayRpcManager::ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::ReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.InvokeReturnToMenuCallback
void GlobalNamespace::GameplayRpcManager::InvokeReturnToMenuCallback(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeReturnToMenuCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeReturnToMenuCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: GameplayRpcManager.RequestReturnToMenu
void GlobalNamespace::GameplayRpcManager::RequestReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RequestReturnToMenu");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestReturnToMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayRpcManager.InvokeRequestReturnToMenuCallback
void GlobalNamespace::GameplayRpcManager::InvokeRequestReturnToMenuCallback(::StringW userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::InvokeRequestReturnToMenuCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeRequestReturnToMenuCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/RpcType
#include "GlobalNamespace/GameplayRpcManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySceneSyncFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySceneSyncFinish");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SetGameplaySceneSyncFinish"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneSyncFinish
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySceneSyncFinish(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySceneSyncFinish");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SetGameplaySceneSyncFinish", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySceneReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySceneReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SetGameplaySceneReady"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SetGameplaySceneReady
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySceneReady(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySceneReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SetGameplaySceneReady", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_GetGameplaySceneReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_GetGameplaySceneReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "GetGameplaySceneReady"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType GetGameplaySceneReady
void GlobalNamespace::GameplayRpcManager::RpcType::_set_GetGameplaySceneReady(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_GetGameplaySceneReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "GetGameplaySceneReady", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SetActivePlayerFailedToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SetActivePlayerFailedToConnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SetActivePlayerFailedToConnect"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SetActivePlayerFailedToConnect
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SetActivePlayerFailedToConnect(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SetActivePlayerFailedToConnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SetActivePlayerFailedToConnect", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SetGameplaySongReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SetGameplaySongReady"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SetGameplaySongReady
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySongReady(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SetGameplaySongReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SetGameplaySongReady", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_GetGameplaySongReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_GetGameplaySongReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "GetGameplaySongReady"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType GetGameplaySongReady
void GlobalNamespace::GameplayRpcManager::RpcType::_set_GetGameplaySongReady(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_GetGameplaySongReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "GetGameplaySongReady", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SetSongStartTime
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SetSongStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SetSongStartTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SetSongStartTime"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SetSongStartTime
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SetSongStartTime(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SetSongStartTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SetSongStartTime", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType NoteCut
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteCut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "NoteCut"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType NoteCut
void GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteCut(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteCut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "NoteCut", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType NoteMissed
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteMissed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteMissed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "NoteMissed"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType NoteMissed
void GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteMissed(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteMissed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "NoteMissed", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType LevelFinished
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_LevelFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_LevelFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "LevelFinished"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType LevelFinished
void GlobalNamespace::GameplayRpcManager::RpcType::_set_LevelFinished(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_LevelFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "LevelFinished", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType ReturnToMenu
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType ReturnToMenu
void GlobalNamespace::GameplayRpcManager::RpcType::_set_ReturnToMenu(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "ReturnToMenu", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType RequestReturnToMenu
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_RequestReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_RequestReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "RequestReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType RequestReturnToMenu
void GlobalNamespace::GameplayRpcManager::RpcType::_set_RequestReturnToMenu(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_RequestReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "RequestReturnToMenu", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType NoteSpawned
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_NoteSpawned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "NoteSpawned"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType NoteSpawned
void GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_NoteSpawned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "NoteSpawned", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType ObstacleSpawned
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_ObstacleSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_ObstacleSpawned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "ObstacleSpawned"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType ObstacleSpawned
void GlobalNamespace::GameplayRpcManager::RpcType::_set_ObstacleSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_ObstacleSpawned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "ObstacleSpawned", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayRpcManager/RpcType SliderSpawned
::GlobalNamespace::GameplayRpcManager::RpcType GlobalNamespace::GameplayRpcManager::RpcType::_get_SliderSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_get_SliderSpawned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayRpcManager::RpcType>("", "GameplayRpcManager/RpcType", "SliderSpawned"));
}
// Autogenerated static field setter
// Set static field: static public GameplayRpcManager/RpcType SliderSpawned
void GlobalNamespace::GameplayRpcManager::RpcType::_set_SliderSpawned(::GlobalNamespace::GameplayRpcManager::RpcType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::_set_SliderSpawned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayRpcManager/RpcType", "SliderSpawned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::GameplayRpcManager::RpcType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayRpcManager::RpcType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SetGameplaySceneSyncFinishedRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySceneSyncFinishedRpc.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SetGameplaySceneReadyRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySceneReadyRpc.hpp"
// Including type: PlayerSpecificSettingsNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/GetGameplaySceneReadyRpc
#include "GlobalNamespace/GameplayRpcManager_GetGameplaySceneReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SetPlayerDidConnectLateRpc
#include "GlobalNamespace/GameplayRpcManager_SetPlayerDidConnectLateRpc.hpp"
// Including type: PlayerSpecificSettingsAtStartNetSerializable
#include "GlobalNamespace/PlayerSpecificSettingsAtStartNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SetGameplaySongReadyRpc
#include "GlobalNamespace/GameplayRpcManager_SetGameplaySongReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/GetGameplaySongReadyRpc
#include "GlobalNamespace/GameplayRpcManager_GetGameplaySongReadyRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SetSongStartTimeRpc
#include "GlobalNamespace/GameplayRpcManager_SetSongStartTimeRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/NoteSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_NoteSpawnedRpc.hpp"
// Including type: NoteSpawnInfoNetSerializable
#include "GlobalNamespace/NoteSpawnInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/ObstacleSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_ObstacleSpawnedRpc.hpp"
// Including type: ObstacleSpawnInfoNetSerializable
#include "GlobalNamespace/ObstacleSpawnInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/SliderSpawnedRpc
#include "GlobalNamespace/GameplayRpcManager_SliderSpawnedRpc.hpp"
// Including type: SliderSpawnInfoNetSerializable
#include "GlobalNamespace/SliderSpawnInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/NoteCutRpc
#include "GlobalNamespace/GameplayRpcManager_NoteCutRpc.hpp"
// Including type: NoteCutInfoNetSerializable
#include "GlobalNamespace/NoteCutInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/NoteMissedRpc
#include "GlobalNamespace/GameplayRpcManager_NoteMissedRpc.hpp"
// Including type: NoteMissInfoNetSerializable
#include "GlobalNamespace/NoteMissInfoNetSerializable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/LevelFinishedRpc
#include "GlobalNamespace/GameplayRpcManager_LevelFinishedRpc.hpp"
// Including type: MultiplayerLevelCompletionResults
#include "GlobalNamespace/MultiplayerLevelCompletionResults.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/ReturnToMenuRpc
#include "GlobalNamespace/GameplayRpcManager_ReturnToMenuRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayRpcManager/RequestReturnToMenuRpc
#include "GlobalNamespace/GameplayRpcManager_RequestReturnToMenuRpc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 maxPlayerCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayServerConfiguration::dyn_maxPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_maxPlayerCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxPlayerCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly DiscoveryPolicy discoveryPolicy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::DiscoveryPolicy& GlobalNamespace::GameplayServerConfiguration::dyn_discoveryPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_discoveryPolicy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "discoveryPolicy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DiscoveryPolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly InvitePolicy invitePolicy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::InvitePolicy& GlobalNamespace::GameplayServerConfiguration::dyn_invitePolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_invitePolicy");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "invitePolicy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::InvitePolicy*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayServerMode gameplayServerMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerMode& GlobalNamespace::GameplayServerConfiguration::dyn_gameplayServerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_gameplayServerMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayServerMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly SongSelectionMode songSelectionMode
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SongSelectionMode& GlobalNamespace::GameplayServerConfiguration::dyn_songSelectionMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_songSelectionMode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songSelectionMode"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongSelectionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly GameplayServerControlSettings gameplayServerControlSettings
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerControlSettings& GlobalNamespace::GameplayServerConfiguration::dyn_gameplayServerControlSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::dyn_gameplayServerControlSettings");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameplayServerControlSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerControlSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayServerConfiguration..ctor
// ABORTED elsewhere.  GlobalNamespace::GameplayServerConfiguration::GameplayServerConfiguration(int maxPlayerCount, ::GlobalNamespace::DiscoveryPolicy discoveryPolicy, ::GlobalNamespace::InvitePolicy invitePolicy, ::GlobalNamespace::GameplayServerMode gameplayServerMode, ::GlobalNamespace::SongSelectionMode songSelectionMode, ::GlobalNamespace::GameplayServerControlSettings gameplayServerControlSettings)
// Autogenerated method: GameplayServerConfiguration.Equals
bool GlobalNamespace::GameplayServerConfiguration::Equals(ByRef<::GlobalNamespace::GameplayServerConfiguration> other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::Equals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(other));
}
// Autogenerated method: GameplayServerConfiguration.Equals
bool GlobalNamespace::GameplayServerConfiguration::Equals_(::GlobalNamespace::GameplayServerConfiguration other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: GameplayServerConfiguration.Serialize
void GlobalNamespace::GameplayServerConfiguration::Serialize(::LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: GameplayServerConfiguration.CreateFromSerializedData
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::CreateFromSerializedData(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::CreateFromSerializedData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CreateFromSerializedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method, reader);
}
// Autogenerated method: GameplayServerConfiguration.Deserialize
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::Deserialize(::LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayServerConfiguration", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: GameplayServerConfiguration.WithMaxPlayerCount
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerConfiguration::WithMaxPlayerCount(int maxPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::WithMaxPlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "WithMaxPlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxPlayerCount)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method, maxPlayerCount);
}
// Autogenerated method: GameplayServerConfiguration.Equals
bool GlobalNamespace::GameplayServerConfiguration::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: GameplayServerConfiguration.GetHashCode
int GlobalNamespace::GameplayServerConfiguration::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerConfiguration.op_Equality
bool GlobalNamespace::operator ==(const ::GlobalNamespace::GameplayServerConfiguration&& a, const ::GlobalNamespace::GameplayServerConfiguration&& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayServerConfiguration", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated method: GameplayServerConfiguration.op_Inequality
bool GlobalNamespace::operator !=(const ::GlobalNamespace::GameplayServerConfiguration&& a, const ::GlobalNamespace::GameplayServerConfiguration&& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerConfiguration::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayServerConfiguration", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(a), byref(b));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CountdownGameplayServerFiniteStateMachine
#include "GlobalNamespace/CountdownGameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameState
#include "GlobalNamespace/GameState.hpp"
// Including type: GameplayServerFiniteStateMachine
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly GameplayServerFiniteStateMachine fsm
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerFiniteStateMachine*& GlobalNamespace::GameState::dyn_fsm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::dyn_fsm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fsm"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerFiniteStateMachine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameState.Dispose
void GlobalNamespace::GameState::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameState.Init
void GlobalNamespace::GameState::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameState::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameStateType
#include "GlobalNamespace/GameStateType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameStateType EmptyServer
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_EmptyServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_EmptyServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "EmptyServer"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType EmptyServer
void GlobalNamespace::GameStateType::_set_EmptyServer(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_EmptyServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "EmptyServer", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType SelectingLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_SelectingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_SelectingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "SelectingLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType SelectingLevel
void GlobalNamespace::GameStateType::_set_SelectingLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_SelectingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "SelectingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType StartingLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_StartingLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_StartingLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "StartingLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType StartingLevel
void GlobalNamespace::GameStateType::_set_StartingLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_StartingLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "StartingLevel", value));
}
// Autogenerated static field getter
// Get static field: static public GameStateType RunningLevel
::GlobalNamespace::GameStateType GlobalNamespace::GameStateType::_get_RunningLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_get_RunningLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameStateType>("", "GameStateType", "RunningLevel"));
}
// Autogenerated static field setter
// Set static field: static public GameStateType RunningLevel
void GlobalNamespace::GameStateType::_set_RunningLevel(::GlobalNamespace::GameStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::_set_RunningLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameStateType", "RunningLevel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameStateType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameStateType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerFiniteStateMachine
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
// Including type: MenuRpcManager
#include "GlobalNamespace/MenuRpcManager.hpp"
// Including type: GameplayRpcManager
#include "GlobalNamespace/GameplayRpcManager.hpp"
// Including type: GameState
#include "GlobalNamespace/GameState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BGNet.Core.ITimeProvider <timeProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::BGNet::Core::ITimeProvider*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$timeProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$timeProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<timeProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::BGNet::Core::ITimeProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IMultiplayerSessionManager <multiplayerSessionManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$multiplayerSessionManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$multiplayerSessionManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<multiplayerSessionManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <ownerUserId>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$ownerUserId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$ownerUserId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ownerUserId>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask <selectionMask>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BeatmapLevelSelectionMask& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$selectionMask$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$selectionMask$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<selectionMask>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapLevelSelectionMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration <configuration>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayServerConfiguration& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$configuration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$configuration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<configuration>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayServerConfiguration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IServerBeatmapProvider <beatmapProvider>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::IServerBeatmapProvider*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$beatmapProvider$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$beatmapProvider$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<beatmapProvider>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IServerBeatmapProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuRpcManager <menuRpcManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::MenuRpcManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$menuRpcManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$menuRpcManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menuRpcManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayRpcManager <gameplayRpcManager>k__BackingField
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameplayRpcManager*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$gameplayRpcManager$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_$gameplayRpcManager$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gameplayRpcManager>k__BackingField"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayRpcManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected GameState state
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GameState*& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Boolean enteringState
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GameplayServerFiniteStateMachine::dyn_enteringState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::dyn_enteringState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enteringState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_timeProvider
::BGNet::Core::ITimeProvider* GlobalNamespace::GameplayServerFiniteStateMachine::get_timeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_timeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::BGNet::Core::ITimeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_timeProvider
void GlobalNamespace::GameplayServerFiniteStateMachine::set_timeProvider(::BGNet::Core::ITimeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_timeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IMultiplayerSessionManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_multiplayerSessionManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_multiplayerSessionManager(::GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_multiplayerSessionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_multiplayerSessionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_ownerUserId
::StringW GlobalNamespace::GameplayServerFiniteStateMachine::get_ownerUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_ownerUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ownerUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_ownerUserId
void GlobalNamespace::GameplayServerFiniteStateMachine::set_ownerUserId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_ownerUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ownerUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_selectionMask
::GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::GameplayServerFiniteStateMachine::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_selectionMask
void GlobalNamespace::GameplayServerFiniteStateMachine::set_selectionMask(::GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_configuration
::GlobalNamespace::GameplayServerConfiguration GlobalNamespace::GameplayServerFiniteStateMachine::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_configuration
void GlobalNamespace::GameplayServerFiniteStateMachine::set_configuration(::GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_beatmapProvider
::GlobalNamespace::IServerBeatmapProvider* GlobalNamespace::GameplayServerFiniteStateMachine::get_beatmapProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_beatmapProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::IServerBeatmapProvider*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_beatmapProvider
void GlobalNamespace::GameplayServerFiniteStateMachine::set_beatmapProvider(::GlobalNamespace::IServerBeatmapProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_beatmapProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_menuRpcManager
::GlobalNamespace::MenuRpcManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_menuRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menuRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MenuRpcManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_menuRpcManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_menuRpcManager(::GlobalNamespace::MenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_menuRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menuRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayServerFiniteStateMachine.get_gameplayRpcManager
::GlobalNamespace::GameplayRpcManager* GlobalNamespace::GameplayServerFiniteStateMachine::get_gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::get_gameplayRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayRpcManager*, false>(this, ___internal__method);
}
// Autogenerated method: GameplayServerFiniteStateMachine.set_gameplayRpcManager
void GlobalNamespace::GameplayServerFiniteStateMachine::set_gameplayRpcManager(::GlobalNamespace::GameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachine::set_gameplayRpcManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayRpcManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerFiniteStateMachineFactory
#include "GlobalNamespace/GameplayServerFiniteStateMachineFactory.hpp"
// Including type: GameplayServerFiniteStateMachine
#include "GlobalNamespace/GameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayServerFiniteStateMachineFactory.Create
::GlobalNamespace::GameplayServerFiniteStateMachine* GlobalNamespace::GameplayServerFiniteStateMachineFactory::Create(::BGNet::Core::ITimeProvider* timeProvider, ::GlobalNamespace::IMultiplayerSessionManager* multiplayerSessionManager, ::StringW creatorId, ::GlobalNamespace::BeatmapLevelSelectionMask selectionMask, ::GlobalNamespace::GameplayServerConfiguration configuration, ::GlobalNamespace::IServerBeatmapProvider* beatmapProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerFiniteStateMachineFactory::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GameplayServerFiniteStateMachineFactory", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeProvider), ::il2cpp_utils::ExtractType(multiplayerSessionManager), ::il2cpp_utils::ExtractType(creatorId), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(beatmapProvider)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GameplayServerFiniteStateMachine*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, timeProvider, multiplayerSessionManager, creatorId, selectionMask, configuration, beatmapProvider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ManagedGameplayServerFiniteStateMachine
#include "GlobalNamespace/ManagedGameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickStartOneSongGameplayServerFiniteStateMachine
#include "GlobalNamespace/QuickStartOneSongGameplayServerFiniteStateMachine.hpp"
// Including type: BGNet.Core.ITimeProvider
#include "BGNet/Core/ITimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IServerBeatmapProvider
#include "GlobalNamespace/IServerBeatmapProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayServerMode
#include "GlobalNamespace/GameplayServerMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Countdown
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Countdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_Countdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Countdown"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Countdown
void GlobalNamespace::GameplayServerMode::_set_Countdown(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_Countdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Countdown", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode Managed
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_Managed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_Managed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "Managed"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode Managed
void GlobalNamespace::GameplayServerMode::_set_Managed(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_Managed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "Managed", value));
}
// Autogenerated static field getter
// Get static field: static public GameplayServerMode QuickStartOneSong
::GlobalNamespace::GameplayServerMode GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_get_QuickStartOneSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GameplayServerMode>("", "GameplayServerMode", "QuickStartOneSong"));
}
// Autogenerated static field setter
// Set static field: static public GameplayServerMode QuickStartOneSong
void GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong(::GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::_set_QuickStartOneSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameplayServerMode", "QuickStartOneSong", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GameplayServerMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayServerMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthCheckService
#include "GlobalNamespace/HealthCheckService.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Net.HttpListener
#include "System/Net/HttpListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kTimeoutLengthMs
int GlobalNamespace::HealthCheckService::_get_kTimeoutLengthMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::_get_kTimeoutLengthMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "HealthCheckService", "kTimeoutLengthMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTimeoutLengthMs
void GlobalNamespace::HealthCheckService::_set_kTimeoutLengthMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::_set_kTimeoutLengthMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HealthCheckService", "kTimeoutLengthMs", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _port
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HealthCheckService::dyn__port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.Thread _runThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::HealthCheckService::dyn__runThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__runThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_runThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _disposed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HealthCheckService::dyn__disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _manualResetEvent
[[deprecated("Use field access instead!")]] ::System::Threading::ManualResetEvent*& GlobalNamespace::HealthCheckService::dyn__manualResetEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__manualResetEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_manualResetEvent"))->offset;
  return *reinterpret_cast<::System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Net.HttpListener _listener
[[deprecated("Use field access instead!")]] ::System::Net::HttpListener*& GlobalNamespace::HealthCheckService::dyn__listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::dyn__listener");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_listener"))->offset;
  return *reinterpret_cast<::System::Net::HttpListener**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HealthCheckService.Dispose
void GlobalNamespace::HealthCheckService::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthCheckService.PollUpdate
void GlobalNamespace::HealthCheckService::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthCheckService.Run
void GlobalNamespace::HealthCheckService::Run() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HealthCheckService::Run");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
