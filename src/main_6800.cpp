// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.CompositeExpression
#include "Newtonsoft/Json/Linq/JsonPath/CompositeExpression.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Linq.JsonPath.QueryExpression> <Expressions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>*& Newtonsoft::Json::Linq::JsonPath::CompositeExpression::dyn_$Expressions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::CompositeExpression::dyn_$Expressions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expressions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Linq.JsonPath.CompositeExpression.set_Expressions
void Newtonsoft::Json::Linq::JsonPath::CompositeExpression::set_Expressions(::System::Collections::Generic::List_1<::Newtonsoft::Json::Linq::JsonPath::QueryExpression*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Linq::JsonPath::CompositeExpression::set_Expressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Expressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression
#include "Newtonsoft/Json/Linq/JsonPath/BooleanQueryExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryFilter
#include "Newtonsoft/Json/Linq/JsonPath/QueryFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.QueryFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/QueryFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Linq.JsonPath.ScanFilter
#include "Newtonsoft/Json/Linq/JsonPath/ScanFilter.hpp"
// Including type: Newtonsoft.Json.Linq.JsonPath.ScanFilter/Newtonsoft.Json.Linq.JsonPath.<ExecuteFilter>d__4
#include "Newtonsoft/Json/Linq/JsonPath/ScanFilter_-ExecuteFilter-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BinaryConverter
#include "Newtonsoft/Json/Converters/BinaryConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Utilities.ReflectionObject _reflectionObject
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Utilities::ReflectionObject*& Newtonsoft::Json::Converters::BinaryConverter::dyn__reflectionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::dyn__reflectionObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reflectionObject"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Utilities::ReflectionObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.GetByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::GetByteArray(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::GetByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.EnsureReflectionObject
void Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::EnsureReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadByteArray
::ArrayW<uint8_t> Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.WriteJson
void Newtonsoft::Json::Converters::BinaryConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BinaryConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BinaryConverter.CanConvert
bool Newtonsoft::Json::Converters::BinaryConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BinaryConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.DateTimeConverterBase
#include "Newtonsoft/Json/Converters/DateTimeConverterBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert
bool Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::DateTimeConverterBase::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.HashSetConverter
#include "Newtonsoft/Json/Converters/HashSetConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.get_CanWrite
bool Newtonsoft::Json::Converters::HashSetConverter::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.WriteJson
void Newtonsoft::Json::Converters::HashSetConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::HashSetConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.HashSetConverter.CanConvert
bool Newtonsoft::Json::Converters::HashSetConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::HashSetConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.KeyValuePairConverter
#include "Newtonsoft/Json/Converters/KeyValuePairConverter.hpp"
// Including type: Newtonsoft.Json.Utilities.ThreadSafeStore`2
#include "Newtonsoft/Json/Utilities/ThreadSafeStore_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.Utilities.ReflectionObject
#include "Newtonsoft/Json/Utilities/ReflectionObject.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_get_ReflectionObjectPerType");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>*>("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType")));
}
// Autogenerated static field setter
// Set static field: static private readonly Newtonsoft.Json.Utilities.ThreadSafeStore`2<System.Type,Newtonsoft.Json.Utilities.ReflectionObject> ReflectionObjectPerType
void Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType(::Newtonsoft::Json::Utilities::ThreadSafeStore_2<::System::Type*, ::Newtonsoft::Json::Utilities::ReflectionObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::_set_ReflectionObjectPerType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "KeyValuePairConverter", "ReflectionObjectPerType", value));
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter..cctor
void Newtonsoft::Json::Converters::KeyValuePairConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.InitializeReflectionObject
::Newtonsoft::Json::Utilities::ReflectionObject* Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject(::System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::InitializeReflectionObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "KeyValuePairConverter", "InitializeReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Utilities::ReflectionObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.WriteJson
void Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.KeyValuePairConverter.CanConvert
bool Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::KeyValuePairConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.BsonObjectIdConverter
#include "Newtonsoft/Json/Converters/BsonObjectIdConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.WriteJson
void Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.BsonObjectIdConverter.CanConvert
bool Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::BsonObjectIdConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.RegexConverter
#include "Newtonsoft/Json/Converters/RegexConverter.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.HasFlag
bool Newtonsoft::Json::Converters::RegexConverter::HasFlag(::System::Text::RegularExpressions::RegexOptions options, ::System::Text::RegularExpressions::RegexOptions flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::HasFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, options, flag);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteBson
void Newtonsoft::Json::Converters::RegexConverter::WriteBson(::Newtonsoft::Json::Bson::BsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteBson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteBson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::System::Text::RegularExpressions::Regex* regex, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(regex), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, regex, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexString
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadRegexString(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadRegexObject
::System::Text::RegularExpressions::Regex* Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadRegexObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadRegexObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::RegularExpressions::Regex*, false>(this, ___internal__method, reader, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.WriteJson
void Newtonsoft::Json::Converters::RegexConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::RegexConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.RegexConverter.CanConvert
bool Newtonsoft::Json::Converters::RegexConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::RegexConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.StringEnumConverter
#include "Newtonsoft/Json/Converters/StringEnumConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <CamelCaseText>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$CamelCaseText$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$CamelCaseText$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<CamelCaseText>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <AllowIntegerValues>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::dyn_$AllowIntegerValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AllowIntegerValues>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_CamelCaseText
bool Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_CamelCaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CamelCaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.get_AllowIntegerValues
bool Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::get_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.set_AllowIntegerValues
void Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::set_AllowIntegerValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowIntegerValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.WriteJson
void Newtonsoft::Json::Converters::StringEnumConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::StringEnumConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.StringEnumConverter.CanConvert
bool Newtonsoft::Json::Converters::StringEnumConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::StringEnumConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.VectorConverter
#include "Newtonsoft/Json/Converters/VectorConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Type V2
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V2
void Newtonsoft::Json::Converters::VectorConverter::_set_V2(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type V3
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V3
void Newtonsoft::Json::Converters::VectorConverter::_set_V3(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type V4
::System::Type* Newtonsoft::Json::Converters::VectorConverter::_get_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_get_V4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Newtonsoft.Json.Converters", "VectorConverter", "V4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type V4
void Newtonsoft::Json::Converters::VectorConverter::_set_V4(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::_set_V4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "VectorConverter", "V4", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector2>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector2$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector2$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector2>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector3>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector3$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector3$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector3>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <EnableVector4>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector4$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::dyn_$EnableVector4$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<EnableVector4>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector2
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector2
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector3
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector3
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector3(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.get_EnableVector4
bool Newtonsoft::Json::Converters::VectorConverter::get_EnableVector4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::get_EnableVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnableVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.set_EnableVector4
void Newtonsoft::Json::Converters::VectorConverter::set_EnableVector4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::set_EnableVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter..cctor
void Newtonsoft::Json::Converters::VectorConverter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.WriteVector
void Newtonsoft::Json::Converters::VectorConverter::WriteVector(::Newtonsoft::Json::JsonWriter* writer, float x, float y, ::System::Nullable_1<float> z, ::System::Nullable_1<float> w) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::WriteVector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "WriteVector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z), ::il2cpp_utils::ExtractType(w)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, writer, x, y, z, w);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector2
::UnityEngine::Vector2 Newtonsoft::Json::Converters::VectorConverter::PopulateVector2(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector3
::UnityEngine::Vector3 Newtonsoft::Json::Converters::VectorConverter::PopulateVector3(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.PopulateVector4
::UnityEngine::Vector4 Newtonsoft::Json::Converters::VectorConverter::PopulateVector4(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::PopulateVector4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "VectorConverter", "PopulateVector4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector4, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.WriteJson
void Newtonsoft::Json::Converters::VectorConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::VectorConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VectorConverter.CanConvert
bool Newtonsoft::Json::Converters::VectorConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VectorConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.VersionConverter
#include "Newtonsoft/Json/Converters/VersionConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.WriteJson
void Newtonsoft::Json::Converters::VersionConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::VersionConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.VersionConverter.CanConvert
bool Newtonsoft::Json::Converters::VersionConverter::CanConvert(::System::Type* objectType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::VersionConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, objectType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IsoDateTimeConverter
#include "Newtonsoft/Json/Converters/IsoDateTimeConverter.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeStyles _dateTimeStyles
[[deprecated("Use field access instead!")]] ::System::Globalization::DateTimeStyles& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeStyles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeStyles"))->offset;
  return *reinterpret_cast<::System::Globalization::DateTimeStyles*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _dateTimeFormat
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__dateTimeFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeFormat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo _culture
[[deprecated("Use field access instead!")]] ::System::Globalization::CultureInfo*& Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::dyn__culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_culture"))->offset;
  return *reinterpret_cast<::System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.get_Culture
::System::Globalization::CultureInfo* Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Globalization::CultureInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IsoDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter
#include "Newtonsoft/Json/Converters/JavaScriptDateTimeConverter.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.WriteJson
void Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::JavaScriptDateTimeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentWrapper.hpp"
// Including type: System.Xml.XmlDocument
#include "System/Xml/XmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocument _document
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocument*& Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::dyn__document");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_document"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocument**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlElementWrapper
#include "Newtonsoft/Json/Converters/XmlElementWrapper.hpp"
// Including type: System.Xml.XmlElement
#include "System/Xml/XmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlElement _element
[[deprecated("Use field access instead!")]] ::System::Xml::XmlElement*& Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::dyn__element");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_element"))->offset;
  return *reinterpret_cast<::System::Xml::XmlElement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDeclarationWrapper
#include "Newtonsoft/Json/Converters/XmlDeclarationWrapper.hpp"
// Including type: System.Xml.XmlDeclaration
#include "System/Xml/XmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDeclaration _declaration
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDeclaration*& Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::dyn__declaration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_declaration"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XmlDocumentTypeWrapper.hpp"
// Including type: System.Xml.XmlDocumentType
#include "System/Xml/XmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::XmlDocumentType*& Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::XmlDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeWrapper
#include "Newtonsoft/Json/Converters/XmlNodeWrapper.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.XmlNode _node
[[deprecated("Use field access instead!")]] ::System::Xml::XmlNode*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<::System::Xml::XmlNode**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.set_Value
void Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::set_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode(::System::Xml::XmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::IXmlDocument::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocument::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDeclaration
#include "Newtonsoft/Json/Converters/IXmlDeclaration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Version
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Encoding
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDeclaration.get_Standalone
::StringW Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDeclaration::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlDocumentType
#include "Newtonsoft/Json/Converters/IXmlDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Name
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_System
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_Public
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlDocumentType.get_InternalSubset
::StringW Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlDocumentType::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.get_IsEmpty
bool Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode
void Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlElement::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::IXmlNode::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_LocalName
::StringW Newtonsoft::Json::Converters::IXmlNode::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::IXmlNode::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_Value
::StringW Newtonsoft::Json::Converters::IXmlNode::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.IXmlNode.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::IXmlNode::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::IXmlNode::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDeclarationWrapper
#include "Newtonsoft/Json/Converters/XDeclarationWrapper.hpp"
// Including type: System.Xml.Linq.XDeclaration
#include "System/Xml/Linq/XDeclaration.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Xml.Linq.XDeclaration <Declaration>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDeclaration*& Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::dyn_$Declaration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Declaration>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDeclaration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Declaration
::System::Xml::Linq::XDeclaration* Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDeclaration*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.set_Declaration
void Newtonsoft::Json::Converters::XDeclarationWrapper::set_Declaration(::System::Xml::Linq::XDeclaration* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::set_Declaration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Declaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Version
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Version");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Encoding
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_Standalone
::StringW Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_Standalone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Standalone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDeclarationWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDeclarationWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentTypeWrapper
#include "Newtonsoft/Json/Converters/XDocumentTypeWrapper.hpp"
// Including type: System.Xml.Linq.XDocumentType
#include "System/Xml/Linq/XDocumentType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XDocumentType _documentType
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XDocumentType*& Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::dyn__documentType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_documentType"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XDocumentType**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Name
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_System
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_System");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_Public
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_Public");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_InternalSubset
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_InternalSubset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalSubset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentTypeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentTypeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XDocumentWrapper
#include "Newtonsoft/Json/Converters/XDocumentWrapper.hpp"
// Including type: System.Xml.Linq.XDocument
#include "System/Xml/Linq/XDocument.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_Document
::System::Xml::Linq::XDocument* Newtonsoft::Json::Converters::XDocumentWrapper::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XDocument*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_DocumentElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_DocumentElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DocumentElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateComment");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateComment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateTextNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTextNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection(::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateCDataSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCDataSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateSignificantWhitespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSignificantWhitespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, text);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration(::StringW version, ::StringW encoding, ::StringW standalone) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDeclaration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDeclaration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(version), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(standalone)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, version, encoding, standalone);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType(::StringW name, ::StringW publicId, ::StringW systemId, ::StringW internalSubset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateXmlDocumentType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateXmlDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(publicId), ::il2cpp_utils::ExtractType(systemId), ::il2cpp_utils::ExtractType(internalSubset)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, publicId, systemId, internalSubset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction(::StringW target, ::StringW data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateProcessingInstruction");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, target, data);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW elementName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement(::StringW qualifiedName, ::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateElement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, qualifiedName, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, name, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute(::StringW qualifiedName, ::StringW namespaceUri, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::CreateAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(qualifiedName), ::il2cpp_utils::ExtractType(namespaceUri), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, qualifiedName, namespaceUri, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XDocumentWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XTextWrapper
#include "Newtonsoft/Json/Converters/XTextWrapper.hpp"
// Including type: System.Xml.Linq.XText
#include "System/Xml/Linq/XText.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Text
::System::Xml::Linq::XText* Newtonsoft::Json::Converters::XTextWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XText*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XTextWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XTextWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XTextWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XCommentWrapper
#include "Newtonsoft/Json/Converters/XCommentWrapper.hpp"
// Including type: System.Xml.Linq.XComment
#include "System/Xml/Linq/XComment.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Text
::System::Xml::Linq::XComment* Newtonsoft::Json::Converters::XCommentWrapper::get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XComment*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XCommentWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XCommentWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XCommentWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XProcessingInstructionWrapper
#include "Newtonsoft/Json/Converters/XProcessingInstructionWrapper.hpp"
// Including type: System.Xml.Linq.XProcessingInstruction
#include "System/Xml/Linq/XProcessingInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_ProcessingInstruction
::System::Xml::Linq::XProcessingInstruction* Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_ProcessingInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessingInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XProcessingInstruction*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XProcessingInstructionWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XProcessingInstructionWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XContainerWrapper
#include "Newtonsoft/Json/Converters/XContainerWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XContainer
#include "System/Xml/Linq/XContainer.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _childNodes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::dyn__childNodes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_childNodes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_Container
::System::Xml::Linq::XContainer* Newtonsoft::Json::Converters::XContainerWrapper::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_Container");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Container", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.WrapNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::WrapNode(::System::Xml::Linq::XObject* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::WrapNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XContainerWrapper", "WrapNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XContainerWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XContainerWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XContainerWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XObjectWrapper
#include "Newtonsoft/Json/Converters/XObjectWrapper.hpp"
// Including type: System.Xml.Linq.XObject
#include "System/Xml/Linq/XObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.XmlNodeType
#include "System/Xml/XmlNodeType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::_get_EmptyChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::_get_EmptyChildNodes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*>("Newtonsoft.Json.Converters", "XObjectWrapper", "EmptyChildNodes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> EmptyChildNodes
void Newtonsoft::Json::Converters::XObjectWrapper::_set_EmptyChildNodes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::_set_EmptyChildNodes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Converters", "XObjectWrapper", "EmptyChildNodes", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Xml.Linq.XObject _xmlObject
[[deprecated("Use field access instead!")]] ::System::Xml::Linq::XObject*& Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::dyn__xmlObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xmlObject"))->offset;
  return *reinterpret_cast<::System::Xml::Linq::XObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_WrappedNode
::Il2CppObject* Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_WrappedNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WrappedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NodeType
::System::Xml::XmlNodeType Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::XmlNodeType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ChildNodes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ChildNodes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChildNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper..cctor
void Newtonsoft::Json::Converters::XObjectWrapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XObjectWrapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XObjectWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XObjectWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XObjectWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XAttributeWrapper
#include "Newtonsoft/Json/Converters/XAttributeWrapper.hpp"
// Including type: System.Xml.Linq.XAttribute
#include "System/Xml/Linq/XAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Attribute
::System::Xml::Linq::XAttribute* Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Attribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XAttribute*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XAttributeWrapper.get_ParentNode
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XAttributeWrapper::get_ParentNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Converters.XElementWrapper
#include "Newtonsoft/Json/Converters/XElementWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Xml.Linq.XElement
#include "System/Xml/Linq/XElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Newtonsoft.Json.Converters.IXmlNode> _attributes
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*& Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::dyn__attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_attributes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Element
::System::Xml::Linq::XElement* Newtonsoft::Json::Converters::XElementWrapper::get_Element() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Xml::Linq::XElement*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_IsEmpty
bool Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_IsEmpty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode
void Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode(::Newtonsoft::Json::Converters::IXmlNode* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::SetAttributeNode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAttributeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace
::StringW Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace(::StringW namespaceUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::GetPrefixOfNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrefixOfNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(namespaceUri)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, namespaceUri);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Attributes
::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* Newtonsoft::Json::Converters::XElementWrapper::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_Value
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_LocalName
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_LocalName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_LocalName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.get_NamespaceUri
::StringW Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::get_NamespaceUri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NamespaceUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XElementWrapper.AppendChild
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XElementWrapper::AppendChild(::Newtonsoft::Json::Converters::IXmlNode* newChild) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XElementWrapper::AppendChild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendChild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newChild)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, newChild);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Converters.XmlNodeConverter
#include "Newtonsoft/Json/Converters/XmlNodeConverter.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlNode
#include "Newtonsoft/Json/Converters/IXmlNode.hpp"
// Including type: System.Xml.XmlNamespaceManager
#include "System/Xml/XmlNamespaceManager.hpp"
// Including type: Newtonsoft.Json.JsonWriter
#include "Newtonsoft/Json/JsonWriter.hpp"
// Including type: Newtonsoft.Json.JsonReader
#include "Newtonsoft/Json/JsonReader.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlDocument
#include "Newtonsoft/Json/Converters/IXmlDocument.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Newtonsoft.Json.Converters.IXmlElement
#include "Newtonsoft/Json/Converters/IXmlElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Newtonsoft.Json.JsonSerializer
#include "Newtonsoft/Json/JsonSerializer.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <DeserializeRootElementName>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$DeserializeRootElementName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DeserializeRootElementName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <WriteArrayAttribute>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$WriteArrayAttribute$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<WriteArrayAttribute>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <OmitRootObject>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::dyn_$OmitRootObject$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OmitRootObject>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_DeserializeRootElementName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_DeserializeRootElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeserializeRootElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_WriteArrayAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_WriteArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.get_OmitRootObject
bool Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::get_OmitRootObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OmitRootObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml
::Newtonsoft::Json::Converters::IXmlNode* Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WrapXml");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WrapXml", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlNode*, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces
void Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::PushParentNamespaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushParentNamespaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ResolveFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName(::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::GetPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, node, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsArray
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsArray(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeGroupedNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeGroupedNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode(::Newtonsoft::Json::JsonWriter* writer, ::Newtonsoft::Json::Converters::IXmlNode* node, ::System::Xml::XmlNamespaceManager* manager, bool writePropertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::SerializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(writePropertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, node, manager, writePropertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AllSameName
bool Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName(::Newtonsoft::Json::Converters::IXmlNode* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AllSameName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AllSameName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, propertyName, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW elementName, ::System::Xml::XmlNamespaceManager* manager, ::StringW elementPrefix, ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* attributeNameValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(attributeNameValues)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, elementName, manager, elementPrefix, attributeNameValues);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW attributeName, ::System::Xml::XmlNamespaceManager* manager, ::StringW attributePrefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Converters", "XmlNodeConverter", "AddAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(attributePrefix)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader, document, currentNode, attributeName, manager, attributePrefix);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue
::StringW Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue(::Newtonsoft::Json::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ConvertTokenToXmlValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertTokenToXmlValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, reader);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements
void Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW propertyName, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadArrayElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadArrayElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(propertyName), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, propertyName, currentNode, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute
void Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute(::Newtonsoft::Json::Converters::IXmlElement* element, ::Newtonsoft::Json::Converters::IXmlDocument* document) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::AddJsonArrayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddJsonArrayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(document)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, element, document);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements
::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>* Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements(::Newtonsoft::Json::JsonReader* reader, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadAttributeElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAttributeElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*, false>(this, ___internal__method, reader, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateInstruction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstruction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode), ::il2cpp_utils::ExtractType(propertyName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode, propertyName);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType
void Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateDocumentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDocumentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement
::Newtonsoft::Json::Converters::IXmlElement* Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement(::StringW elementName, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::StringW elementPrefix, ::System::Xml::XmlNamespaceManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CreateElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(elementName), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(elementPrefix), ::il2cpp_utils::ExtractType(manager)})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Converters::IXmlElement*, false>(this, ___internal__method, elementName, document, elementPrefix, manager);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode
void Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode(::Newtonsoft::Json::JsonReader* reader, ::Newtonsoft::Json::Converters::IXmlDocument* document, ::System::Xml::XmlNamespaceManager* manager, ::Newtonsoft::Json::Converters::IXmlNode* currentNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::DeserializeNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(document), ::il2cpp_utils::ExtractType(manager), ::il2cpp_utils::ExtractType(currentNode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader, document, manager, currentNode);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute
bool Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute(::StringW attributeName, ByRef<::StringW> prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::IsNamespaceAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNamespaceAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeName), ::il2cpp_utils::ExtractIndependentType<::StringW&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, attributeName, byref(prefix));
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes
bool Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes(::System::Collections::Generic::List_1<::Newtonsoft::Json::Converters::IXmlNode*>* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ValueAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValueAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson
void Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson(::Newtonsoft::Json::JsonWriter* writer, ::Il2CppObject* value, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::WriteJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(serializer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer, value, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson
::Il2CppObject* Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson(::Newtonsoft::Json::JsonReader* reader, ::System::Type* objectType, ::Il2CppObject* existingValue, ::Newtonsoft::Json::JsonSerializer* serializer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::ReadJson");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(existingValue), ::il2cpp_utils::ExtractType(serializer)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, reader, objectType, existingValue, serializer);
}
// Autogenerated method: Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert
bool Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert(::System::Type* valueType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Converters::XmlNodeConverter::CanConvert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(valueType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, valueType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonBinaryType
#include "Newtonsoft/Json/Bson/BsonBinaryType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Binary
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Binary
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Binary(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Function
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Function");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Function"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Function
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Function(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Function");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Function", value));
}
// [ObsoleteAttribute] Offset: 0x10BB690
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType BinaryOld
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_BinaryOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_BinaryOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "BinaryOld"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType BinaryOld
void Newtonsoft::Json::Bson::BsonBinaryType::_set_BinaryOld(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_BinaryOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "BinaryOld", value));
}
// [ObsoleteAttribute] Offset: 0x10BB6C8
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType UuidOld
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_UuidOld() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_UuidOld");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "UuidOld"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType UuidOld
void Newtonsoft::Json::Bson::BsonBinaryType::_set_UuidOld(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_UuidOld");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "UuidOld", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Uuid
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Uuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Uuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Uuid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Uuid
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Uuid(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Uuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Uuid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType Md5
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_Md5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_Md5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "Md5"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType Md5
void Newtonsoft::Json::Bson::BsonBinaryType::_set_Md5(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_Md5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "Md5", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonBinaryType UserDefined
::Newtonsoft::Json::Bson::BsonBinaryType Newtonsoft::Json::Bson::BsonBinaryType::_get_UserDefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_get_UserDefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonBinaryType>("Newtonsoft.Json.Bson", "BsonBinaryType", "UserDefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonBinaryType UserDefined
void Newtonsoft::Json::Bson::BsonBinaryType::_set_UserDefined(::Newtonsoft::Json::Bson::BsonBinaryType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::_set_UserDefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryType", "UserDefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Newtonsoft::Json::Bson::BsonBinaryType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonBinaryWriter
#include "Newtonsoft/Json/Bson/BsonBinaryWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Text.Encoding Encoding
::System::Text::Encoding* Newtonsoft::Json::Bson::BsonBinaryWriter::_get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::_get_Encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Text::Encoding*>("Newtonsoft.Json.Bson", "BsonBinaryWriter", "Encoding"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Text.Encoding Encoding
void Newtonsoft::Json::Bson::BsonBinaryWriter::_set_Encoding(::System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::_set_Encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonBinaryWriter", "Encoding", value));
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonBinaryWriter..cctor
void Newtonsoft::Json::Bson::BsonBinaryWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonBinaryWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Bson", "BsonBinaryWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader
#include "Newtonsoft/Json/Bson/BsonReader.hpp"
// Including type: Newtonsoft.Json.Bson.BsonBinaryType
#include "Newtonsoft/Json/Bson/BsonBinaryType.hpp"
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
#include "Newtonsoft/Json/Bson/BsonReader_ContainerContext.hpp"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange1
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange1
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange1(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange2
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange2
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange2(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange3
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange3
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange3(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SeqRange4
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::_get_SeqRange4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_get_SeqRange4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("Newtonsoft.Json.Bson", "BsonReader", "SeqRange4"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SeqRange4
void Newtonsoft::Json::Bson::BsonReader::_set_SeqRange4(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::_set_SeqRange4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader", "SeqRange4", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.IO.BinaryReader _reader
[[deprecated("Use field access instead!")]] ::System::IO::BinaryReader*& Newtonsoft::Json::Bson::BsonReader::dyn__reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reader"))->offset;
  return *reinterpret_cast<::System::IO::BinaryReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext> _stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonReader::ContainerContext*>*& Newtonsoft::Json::Bson::BsonReader::dyn__stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonReader::ContainerContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _byteBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonReader::dyn__byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] _charBuffer
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& Newtonsoft::Json::Bson::BsonReader::dyn__charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonType _currentElementType
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonReader::dyn__currentElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__currentElementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentElementType"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState _bsonReaderState
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonReader::BsonReaderState& Newtonsoft::Json::Bson::BsonReader::dyn__bsonReaderState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__bsonReaderState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bsonReaderState"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext _currentContext
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonReader::ContainerContext*& Newtonsoft::Json::Bson::BsonReader::dyn__currentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__currentContext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentContext"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonReader::ContainerContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _readRootValueAsArray
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonReader::dyn__readRootValueAsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__readRootValueAsArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readRootValueAsArray"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _jsonNet35BinaryCompatibility
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonReader::dyn__jsonNet35BinaryCompatibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__jsonNet35BinaryCompatibility");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jsonNet35BinaryCompatibility"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTimeKind _dateTimeKindHandling
[[deprecated("Use field access instead!")]] ::System::DateTimeKind& Newtonsoft::Json::Bson::BsonReader::dyn__dateTimeKindHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::dyn__dateTimeKindHandling");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dateTimeKindHandling"))->offset;
  return *reinterpret_cast<::System::DateTimeKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.get_DateTimeKindHandling
::System::DateTimeKind Newtonsoft::Json::Bson::BsonReader::get_DateTimeKindHandling() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::get_DateTimeKindHandling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeKindHandling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::DateTimeKind, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader..cctor
void Newtonsoft::Json::Bson::BsonReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Newtonsoft.Json.Bson", "BsonReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadElement
::StringW Newtonsoft::Json::Bson::BsonReader::ReadElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope
bool Newtonsoft::Json::Bson::BsonReader::ReadCodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadCodeWScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadCodeWScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadReference
bool Newtonsoft::Json::Bson::BsonReader::ReadReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadNormal
bool Newtonsoft::Json::Bson::BsonReader::ReadNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadNormal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadNormal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.PopContext
void Newtonsoft::Json::Bson::BsonReader::PopContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::PopContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.PushContext
void Newtonsoft::Json::Bson::BsonReader::PushContext(::Newtonsoft::Json::Bson::BsonReader::ContainerContext* newContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::PushContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContext)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newContext);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadByte
uint8_t Newtonsoft::Json::Bson::BsonReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadType
void Newtonsoft::Json::Bson::BsonReader::ReadType(::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadBinary
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::ReadBinary(ByRef<::Newtonsoft::Json::Bson::BsonBinaryType> binaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Newtonsoft::Json::Bson::BsonBinaryType&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, byref(binaryType));
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadString
::StringW Newtonsoft::Json::Bson::BsonReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadLengthString
::StringW Newtonsoft::Json::Bson::BsonReader::ReadLengthString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadLengthString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLengthString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.GetString
::StringW Newtonsoft::Json::Bson::BsonReader::GetString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, length);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop
int Newtonsoft::Json::Bson::BsonReader::GetLastFullCharStop(int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::GetLastFullCharStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFullCharStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, start);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.BytesInSequence
int Newtonsoft::Json::Bson::BsonReader::BytesInSequence(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BytesInSequence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesInSequence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.EnsureBuffers
void Newtonsoft::Json::Bson::BsonReader::EnsureBuffers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::EnsureBuffers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadDouble
double Newtonsoft::Json::Bson::BsonReader::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadInt32
int Newtonsoft::Json::Bson::BsonReader::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadInt64
int64_t Newtonsoft::Json::Bson::BsonReader::ReadInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadType
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonReader::ReadType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.MovePosition
void Newtonsoft::Json::Bson::BsonReader::MovePosition(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::MovePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MovePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.ReadBytes
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonReader::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ReadBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method, count);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonReader.Read
bool Newtonsoft::Json::Bson::BsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState
#include "Newtonsoft/Json/Bson/BsonReader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState Normal
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState Normal
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_Normal(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceStart
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceStart
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceStart(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceRef
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceRef"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceRef
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceRef(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceRef", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceId
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_ReferenceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceId"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState ReferenceId
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceId(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_ReferenceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "ReferenceId", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeStart
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeStart"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeStart
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeStart(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeStart", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeCode
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeCode"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeCode
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeCode(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeCode", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScope
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScope
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScope(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeObject
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeObject"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeObject
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeObject(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeObject", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeEnd
::Newtonsoft::Json::Bson::BsonReader::BsonReaderState Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_get_CodeWScopeScopeEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonReader::BsonReaderState>("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeEnd"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.BsonReaderState CodeWScopeScopeEnd
void Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeEnd(::Newtonsoft::Json::Bson::BsonReader::BsonReaderState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::_set_CodeWScopeScopeEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonReader/BsonReaderState", "CodeWScopeScopeEnd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::BsonReaderState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::BsonReaderState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonReader/Newtonsoft.Json.Bson.ContainerContext
#include "Newtonsoft/Json/Bson/BsonReader_ContainerContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Newtonsoft.Json.Bson.BsonType Type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Length
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Position
[[deprecated("Use field access instead!")]] int& Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonReader::ContainerContext::dyn_Position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Parent>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::dyn_$Parent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Parent>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonToken::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonToken.set_Parent
void Newtonsoft::Json::Bson::BsonToken::set_Parent(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonToken::set_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObject
#include "Newtonsoft/Json/Bson/BsonObject.hpp"
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonProperty> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>*& Newtonsoft::Json::Bson::BsonObject::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonProperty*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.Add
void Newtonsoft::Json::Bson::BsonObject::Add(::StringW name, ::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonProperty*>* Newtonsoft::Json::Bson::BsonObject::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Bson::BsonObject::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObject.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonObject::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObject::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonArray
#include "Newtonsoft/Json/Bson/BsonArray.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<Newtonsoft.Json.Bson.BsonToken> _children
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>*& Newtonsoft::Json::Bson::BsonArray::dyn__children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::dyn__children");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_children"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Newtonsoft::Json::Bson::BsonToken*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.Add
void Newtonsoft::Json::Bson::BsonArray::Add(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonToken*>* Newtonsoft::Json::Bson::BsonArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::Newtonsoft::Json::Bson::BsonToken*>*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* Newtonsoft::Json::Bson::BsonArray::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonArray.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonArray::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonArray::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonValue
#include "Newtonsoft/Json/Bson/BsonValue.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Newtonsoft::Json::Bson::BsonValue::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Newtonsoft.Json.Bson.BsonType _type
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonType& Newtonsoft::Json::Bson::BsonValue::dyn__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::dyn__type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_type"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonValue.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonValue::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonValue::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IncludeLength>k__BackingField
[[deprecated("Use field access instead!")]] bool& Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::dyn_$IncludeLength$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IncludeLength>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonString.set_IncludeLength
void Newtonsoft::Json::Bson::BsonString::set_IncludeLength(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonString::set_IncludeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IncludeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonRegex
#include "Newtonsoft/Json/Bson/BsonRegex.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Pattern>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Pattern$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Pattern>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Options>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::dyn_$Options$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Options>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Pattern
void Newtonsoft::Json::Bson::BsonRegex::set_Pattern(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.set_Options
void Newtonsoft::Json::Bson::BsonRegex::set_Options(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::set_Options");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Options", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonRegex.get_Type
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonRegex::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonRegex::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Newtonsoft::Json::Bson::BsonType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonProperty
#include "Newtonsoft/Json/Bson/BsonProperty.hpp"
// Including type: Newtonsoft.Json.Bson.BsonString
#include "Newtonsoft/Json/Bson/BsonString.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonString <Name>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonString*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Name
void Newtonsoft::Json::Bson::BsonProperty::set_Name(::Newtonsoft::Json::Bson::BsonString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonProperty.set_Value
void Newtonsoft::Json::Bson::BsonProperty::set_Value(::Newtonsoft::Json::Bson::BsonToken* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonProperty::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Number
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Number"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Number
void Newtonsoft::Json::Bson::BsonType::_set_Number(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType String
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType String
void Newtonsoft::Json::Bson::BsonType::_set_String(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Object
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Object
void Newtonsoft::Json::Bson::BsonType::_set_Object(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Array
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Array
void Newtonsoft::Json::Bson::BsonType::_set_Array(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Binary
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Binary
void Newtonsoft::Json::Bson::BsonType::_set_Binary(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Undefined
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Undefined
void Newtonsoft::Json::Bson::BsonType::_set_Undefined(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Oid
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Oid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Oid"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Oid
void Newtonsoft::Json::Bson::BsonType::_set_Oid(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Oid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Oid", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Boolean
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Boolean
void Newtonsoft::Json::Bson::BsonType::_set_Boolean(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Date
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Date() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Date");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Date"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Date
void Newtonsoft::Json::Bson::BsonType::_set_Date(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Date");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Date", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Null
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Null"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Null
void Newtonsoft::Json::Bson::BsonType::_set_Null(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Regex
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Regex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Regex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Regex"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Regex
void Newtonsoft::Json::Bson::BsonType::_set_Regex(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Regex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Regex", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Reference
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Reference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Reference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Reference"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Reference
void Newtonsoft::Json::Bson::BsonType::_set_Reference(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Reference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Reference", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Code
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Code"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Code
void Newtonsoft::Json::Bson::BsonType::_set_Code(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Symbol
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Symbol");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Symbol"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Symbol
void Newtonsoft::Json::Bson::BsonType::_set_Symbol(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Symbol");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Symbol", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_CodeWScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_CodeWScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "CodeWScope"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType CodeWScope
void Newtonsoft::Json::Bson::BsonType::_set_CodeWScope(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_CodeWScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "CodeWScope", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Integer
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Integer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Integer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Integer"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Integer
void Newtonsoft::Json::Bson::BsonType::_set_Integer(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Integer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Integer", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_TimeStamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_TimeStamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "TimeStamp"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType TimeStamp
void Newtonsoft::Json::Bson::BsonType::_set_TimeStamp(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_TimeStamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "TimeStamp", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType Long
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType Long
void Newtonsoft::Json::Bson::BsonType::_set_Long(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MinKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MinKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MinKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MinKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MinKey
void Newtonsoft::Json::Bson::BsonType::_set_MinKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MinKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MinKey", value));
}
// Autogenerated static field getter
// Get static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
::Newtonsoft::Json::Bson::BsonType Newtonsoft::Json::Bson::BsonType::_get_MaxKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_get_MaxKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Newtonsoft::Json::Bson::BsonType>("Newtonsoft.Json.Bson", "BsonType", "MaxKey"));
}
// Autogenerated static field setter
// Set static field: static public Newtonsoft.Json.Bson.BsonType MaxKey
void Newtonsoft::Json::Bson::BsonType::_set_MaxKey(::Newtonsoft::Json::Bson::BsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::_set_MaxKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Newtonsoft.Json.Bson", "BsonType", "MaxKey", value));
}
// Autogenerated instance field getter
// Get instance field: public System.SByte value__
[[deprecated("Use field access instead!")]] int8_t& Newtonsoft::Json::Bson::BsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Newtonsoft.Json.Bson.BsonWriter
#include "Newtonsoft/Json/Bson/BsonWriter.hpp"
// Including type: Newtonsoft.Json.Bson.BsonToken
#include "Newtonsoft/Json/Bson/BsonToken.hpp"
// Including type: Newtonsoft.Json.Bson.BsonType
#include "Newtonsoft/Json/Bson/BsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _root
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__root");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_root"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Newtonsoft.Json.Bson.BsonToken _parent
[[deprecated("Use field access instead!")]] ::Newtonsoft::Json::Bson::BsonToken*& Newtonsoft::Json::Bson::BsonWriter::dyn__parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parent"))->offset;
  return *reinterpret_cast<::Newtonsoft::Json::Bson::BsonToken**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _propertyName
[[deprecated("Use field access instead!")]] ::StringW& Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::dyn__propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddValue
void Newtonsoft::Json::Bson::BsonWriter::AddValue(::Il2CppObject* value, ::Newtonsoft::Json::Bson::BsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value, type);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.AddToken
void Newtonsoft::Json::Bson::BsonWriter::AddToken(::Newtonsoft::Json::Bson::BsonToken* token) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::AddToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(token)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, token);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteObjectId
void Newtonsoft::Json::Bson::BsonWriter::WriteObjectId(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteObjectId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonWriter.WriteRegex
void Newtonsoft::Json::Bson::BsonWriter::WriteRegex(::StringW pattern, ::StringW options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonWriter::WriteRegex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRegex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pattern, options);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Newtonsoft.Json.Bson.BsonObjectId
#include "Newtonsoft/Json/Bson/BsonObjectId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <Value>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<uint8_t>& Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.get_Value
::ArrayW<uint8_t> Newtonsoft::Json::Bson::BsonObjectId::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: Newtonsoft.Json.Bson.BsonObjectId.set_Value
void Newtonsoft::Json::Bson::BsonObjectId::set_Value(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Newtonsoft::Json::Bson::BsonObjectId::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LazyThreadSafetyMode
#include "System/Threading/LazyThreadSafetyMode_.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode None
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode None
void System::Threading::LazyThreadSafetyMode_::_set_None(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_PublicationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_PublicationOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "PublicationOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode PublicationOnly
void System::Threading::LazyThreadSafetyMode_::_set_PublicationOnly(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_PublicationOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "PublicationOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
::System::Threading::LazyThreadSafetyMode_ System::Threading::LazyThreadSafetyMode_::_get_ExecutionAndPublication() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_get_ExecutionAndPublication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Threading::LazyThreadSafetyMode_>("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LazyThreadSafetyMode ExecutionAndPublication
void System::Threading::LazyThreadSafetyMode_::_set_ExecutionAndPublication(::System::Threading::LazyThreadSafetyMode_ value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::_set_ExecutionAndPublication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LazyThreadSafetyMode", "ExecutionAndPublication", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& System::Threading::LazyThreadSafetyMode_::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::System::Threading::LazyThreadSafetyMode_::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Env
#include "NUnit/Env.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String NewLine
::StringW NUnit::Env::_get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_NewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "NewLine"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String NewLine
void NUnit::Env::_set_NewLine(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_NewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "NewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.String DocumentFolder
::StringW NUnit::Env::_get_DocumentFolder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_DocumentFolder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "DocumentFolder"));
}
// Autogenerated static field setter
// Set static field: static public System.String DocumentFolder
void NUnit::Env::_set_DocumentFolder(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_DocumentFolder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DocumentFolder", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultWorkDirectory
::StringW NUnit::Env::_get_DefaultWorkDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_get_DefaultWorkDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit", "Env", "DefaultWorkDirectory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultWorkDirectory
void NUnit::Env::_set_DefaultWorkDirectory(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::_set_DefaultWorkDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit", "Env", "DefaultWorkDirectory", value));
}
// Autogenerated method: NUnit.Env..cctor
void NUnit::Env::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Env::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit", "Env", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Compatibility.LongLivedMarshalByRefObject
#include "NUnit/Compatibility/LongLivedMarshalByRefObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.LongLivedMarshalByRefObject.InitializeLifetimeService
::Il2CppObject* NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::LongLivedMarshalByRefObject::InitializeLifetimeService");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.TypeExtensions
#include "NUnit/Compatibility/TypeExtensions.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Compatibility.TypeExtensions.GetTypeInfo
::System::Type* NUnit::Compatibility::TypeExtensions::GetTypeInfo(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::TypeExtensions::GetTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "TypeExtensions", "GetTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.AdditionalTypeExtensions
#include "NUnit/Compatibility/AdditionalTypeExtensions.hpp"
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>* NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::_get_convertibleValueTypes");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>*>("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,System.Collections.Generic.List`1<System.Type>> convertibleValueTypes
void NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes(::System::Collections::Generic::Dictionary_2<::System::Type*, ::System::Collections::Generic::List_1<::System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::_set_convertibleValueTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Compatibility", "AdditionalTypeExtensions", "convertibleValueTypes", value));
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions..cctor
void NUnit::Compatibility::AdditionalTypeExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.ParametersMatch
bool NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch(::ArrayW<::System::Reflection::ParameterInfo*> pinfos, ::ArrayW<::System::Type*> ptypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::ParametersMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "ParametersMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pinfos), ::il2cpp_utils::ExtractType(ptypes)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pinfos, ptypes);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions.IsCastableFrom
bool NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom(::System::Type* to, ::System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::IsCastableFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Compatibility", "AdditionalTypeExtensions", "IsCastableFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(from)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, to, from);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0
#include "NUnit/Compatibility/AdditionalTypeExtensions_--c__DisplayClass2_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Type to
[[deprecated("Use field access instead!")]] ::System::Type*& NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::dyn_to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::dyn_to");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "to"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Compatibility.AdditionalTypeExtensions/NUnit.Compatibility.<>c__DisplayClass2_0.<IsCastableFrom>b__0
bool NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::$IsCastableFrom$b__0(::System::Reflection::MethodInfo* m) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Compatibility::AdditionalTypeExtensions::$$c__DisplayClass2_0::<IsCastableFrom>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IsCastableFrom>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, m);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Default
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Default
void NUnit::Framework::ActionTargets::_set_Default(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Test
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Test");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Test"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Test
void NUnit::Framework::ActionTargets::_set_Test(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Test");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Test", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ActionTargets Suite
::NUnit::Framework::ActionTargets NUnit::Framework::ActionTargets::_get_Suite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_get_Suite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ActionTargets>("NUnit.Framework", "ActionTargets", "Suite"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ActionTargets Suite
void NUnit::Framework::ActionTargets::_set_Suite(::NUnit::Framework::ActionTargets value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::_set_Suite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ActionTargets", "Suite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::ActionTargets::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ActionTargets::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombiningStrategyAttribute
#include "NUnit/Framework/CombiningStrategyAttribute.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestCaseBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.ICombiningStrategy
#include "NUnit/Framework/Interfaces/ICombiningStrategy.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterDataProvider
#include "NUnit/Framework/Interfaces/IParameterDataProvider.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: NUnit.Framework.Internal.Test
#include "NUnit/Framework/Internal/Test.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder _builder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder*& NUnit::Framework::CombiningStrategyAttribute::dyn__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestCaseBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ICombiningStrategy _strategy
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ICombiningStrategy*& NUnit::Framework::CombiningStrategyAttribute::dyn__strategy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__strategy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strategy"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ICombiningStrategy**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IParameterDataProvider _dataProvider
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IParameterDataProvider*& NUnit::Framework::CombiningStrategyAttribute::dyn__dataProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::dyn__dataProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataProvider"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IParameterDataProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.BuildFrom
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestMethod*>* NUnit::Framework::CombiningStrategyAttribute::BuildFrom(::NUnit::Framework::Interfaces::IMethodInfo* method, ::NUnit::Framework::Internal::Test* suite) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(suite)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestMethod*>*, false>(this, ___internal__method, method, suite);
}
// Autogenerated method: NUnit.Framework.CombiningStrategyAttribute.ApplyToTest
void NUnit::Framework::CombiningStrategyAttribute::ApplyToTest(::NUnit::Framework::Internal::Test* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::CombiningStrategyAttribute::ApplyToTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyToTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RetryAttribute/NUnit.Framework.RetryCommand
#include "NUnit/Framework/RetryAttribute_RetryCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _retryCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::RetryAttribute::RetryCommand::dyn__retryCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RetryAttribute::RetryCommand::dyn__retryCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_retryCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.RetryAttribute/NUnit.Framework.RetryCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::RetryAttribute::RetryCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RetryAttribute::RetryCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ParallelScope
#include "NUnit/Framework/ParallelScope.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope None
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope None
void NUnit::Framework::ParallelScope::_set_None(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Self
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Self"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Self
void NUnit::Framework::ParallelScope::_set_Self(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Self", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Children
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Children");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Children"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Children
void NUnit::Framework::ParallelScope::_set_Children(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Children");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Children", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.ParallelScope Fixtures
::NUnit::Framework::ParallelScope NUnit::Framework::ParallelScope::_get_Fixtures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_get_Fixtures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::ParallelScope>("NUnit.Framework", "ParallelScope", "Fixtures"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.ParallelScope Fixtures
void NUnit::Framework::ParallelScope::_set_Fixtures(::NUnit::Framework::ParallelScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::_set_Fixtures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "ParallelScope", "Fixtures", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::ParallelScope::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ParallelScope::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Assert
#include "NUnit/Framework/_Assert.hpp"
// Including type: NUnit.Framework.Constraints.IResolveConstraint
#include "NUnit/Framework/Constraints/IResolveConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Assert.AreEqual
void NUnit::Framework::_Assert::AreEqual(::Il2CppObject* expected, ::Il2CppObject* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::AreEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "AreEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected, actual);
}
// Autogenerated method: NUnit.Framework.Assert.IncrementAssertCount
void NUnit::Framework::_Assert::IncrementAssertCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IncrementAssertCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IncrementAssertCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Assert.IsTrue
void NUnit::Framework::_Assert::IsTrue(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated method: NUnit.Framework.Assert.IsFalse
void NUnit::Framework::_Assert::IsFalse(bool condition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::_Assert::IsFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Assert", "IsFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Guard
#include "NUnit/Framework/Guard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNull
void NUnit::Framework::Guard::ArgumentNotNull(::Il2CppObject* value, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentNotNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentNotNullOrEmpty
void NUnit::Framework::Guard::ArgumentNotNullOrEmpty(::StringW value, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentNotNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentNotNullOrEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, name);
}
// Autogenerated method: NUnit.Framework.Guard.ArgumentValid
void NUnit::Framework::Guard::ArgumentValid(bool condition, ::StringW message, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Guard::ArgumentValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Guard", "ArgumentValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, condition, message, paramName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ResultStateException
#include "NUnit/Framework/ResultStateException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ResultStateException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::ResultStateException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ResultStateException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.ITestAction
#include "NUnit/Framework/ITestAction.hpp"
// Including type: NUnit.Framework.ActionTargets
#include "NUnit/Framework/ActionTargets.hpp"
// Including type: NUnit.Framework.Interfaces.ITest
#include "NUnit/Framework/Interfaces/ITest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.ITestAction.get_Targets
::NUnit::Framework::ActionTargets NUnit::Framework::ITestAction::get_Targets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::get_Targets");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Targets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::ActionTargets, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.ITestAction.BeforeTest
void NUnit::Framework::ITestAction::BeforeTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::BeforeTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeforeTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated method: NUnit.Framework.ITestAction.AfterTest
void NUnit::Framework::ITestAction::AfterTest(::NUnit::Framework::Interfaces::ITest* test) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::ITestAction::AfterTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AfterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, test);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.CombinatorialAttribute
#include "NUnit/Framework/CombinatorialAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.NUnitAttribute
#include "NUnit/Framework/NUnitAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.RepeatAttribute/NUnit.Framework.RepeatedTestCommand
#include "NUnit/Framework/RepeatAttribute_RepeatedTestCommand.hpp"
// Including type: NUnit.Framework.Internal.TestResult
#include "NUnit/Framework/Internal/TestResult.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 repeatCount
[[deprecated("Use field access instead!")]] int& NUnit::Framework::RepeatAttribute::RepeatedTestCommand::dyn_repeatCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RepeatAttribute::RepeatedTestCommand::dyn_repeatCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "repeatCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.RepeatAttribute/NUnit.Framework.RepeatedTestCommand.Execute
::NUnit::Framework::Internal::TestResult* NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute(::NUnit::Framework::Internal::ITestExecutionContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::RepeatAttribute::RepeatedTestCommand::Execute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Execute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestResult*, false>(this, ___internal__method, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute
#include "NUnit/Framework/TestFixtureAttribute.hpp"
// Including type: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder
#include "NUnit/Framework/Internal/Builders/NUnitTestFixtureBuilder.hpp"
// Including type: NUnit.Framework.Interfaces.IPropertyBag
#include "NUnit/Framework/Interfaces/IPropertyBag.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder _builder
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder*& NUnit::Framework::TestFixtureAttribute::dyn__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn__builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_builder"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::Builders::NUnitTestFixtureBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.RunState <RunState>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::RunState& NUnit::Framework::TestFixtureAttribute::dyn_$RunState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$RunState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RunState>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::RunState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object[] <Arguments>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppObject*>& NUnit::Framework::TestFixtureAttribute::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IPropertyBag <Properties>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IPropertyBag*& NUnit::Framework::TestFixtureAttribute::dyn_$Properties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$Properties$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Properties>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IPropertyBag**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Type[] <TypeArgs>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Type*>& NUnit::Framework::TestFixtureAttribute::dyn_$TypeArgs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::dyn_$TypeArgs$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeArgs>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Type*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_RunState
::NUnit::Framework::Interfaces::RunState NUnit::Framework::TestFixtureAttribute::get_RunState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_RunState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RunState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::RunState, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Arguments
::ArrayW<::Il2CppObject*> NUnit::Framework::TestFixtureAttribute::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_Arguments");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_Properties
::NUnit::Framework::Interfaces::IPropertyBag* NUnit::Framework::TestFixtureAttribute::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IPropertyBag*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.get_TypeArgs
::ArrayW<::System::Type*> NUnit::Framework::TestFixtureAttribute::get_TypeArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::get_TypeArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::Type*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute.BuildFrom
::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::BuildFrom(::NUnit::Framework::Interfaces::ITypeInfo* typeInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::BuildFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerable_1<::NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method, typeInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48
#include "NUnit/Framework/TestFixtureAttribute_-BuildFrom-d__48.hpp"
// Including type: NUnit.Framework.Internal.TestSuite
#include "NUnit/Framework/Internal/TestSuite.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.TestSuite <>2__current
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::TestSuite*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::TestSuite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
[[deprecated("Use field access instead!")]] int& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITypeInfo typeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "typeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NUnit.Framework.Interfaces.ITypeInfo <>3__typeInfo
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$3__typeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$3__typeInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__typeInfo"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public NUnit.Framework.TestFixtureAttribute <>4__this
[[deprecated("Use field access instead!")]] ::NUnit::Framework::TestFixtureAttribute*& NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::NUnit::Framework::TestFixtureAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current
::NUnit::Framework::Internal::TestSuite* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerator$NUnit_Framework_Internal_TestSuite$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<NUnit.Framework.Internal.TestSuite>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::TestSuite*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerator.get_Current
::Il2CppObject* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.IDisposable.Dispose
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.MoveNext
bool NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerator.Reset
void NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::NUnit::Framework::Internal::TestSuite*>* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_Generic_IEnumerable$NUnit_Framework_Internal_TestSuite$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<NUnit.Framework.Internal.TestSuite>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::NUnit::Framework::Internal::TestSuite*>*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestFixtureAttribute/NUnit.Framework.<BuildFrom>d__48.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestFixtureAttribute::$BuildFrom$d__48::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.AssertionException
#include "NUnit/Framework/AssertionException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.AssertionException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::AssertionException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::AssertionException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.IgnoreException
#include "NUnit/Framework/IgnoreException.hpp"
// Including type: NUnit.Framework.Interfaces.ResultState
#include "NUnit/Framework/Interfaces/ResultState.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.IgnoreException.get_ResultState
::NUnit::Framework::Interfaces::ResultState* NUnit::Framework::IgnoreException::get_ResultState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::IgnoreException::get_ResultState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ResultState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ResultState*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.GlobalSettings
#include "NUnit/Framework/GlobalSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Double DefaultFloatingPointTolerance
double NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::GlobalSettings::_get_DefaultFloatingPointTolerance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance"));
}
// Autogenerated static field setter
// Set static field: static public System.Double DefaultFloatingPointTolerance
void NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::GlobalSettings::_set_DefaultFloatingPointTolerance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "GlobalSettings", "DefaultFloatingPointTolerance", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Is
#include "NUnit/Framework/Is.hpp"
// Including type: NUnit.Framework.Constraints.TrueConstraint
#include "NUnit/Framework/Constraints/TrueConstraint.hpp"
// Including type: NUnit.Framework.Constraints.FalseConstraint
#include "NUnit/Framework/Constraints/FalseConstraint.hpp"
// Including type: NUnit.Framework.Constraints.EqualConstraint
#include "NUnit/Framework/Constraints/EqualConstraint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Is.get_True
::NUnit::Framework::Constraints::TrueConstraint* NUnit::Framework::Is::get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::get_True");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "get_True", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::TrueConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Is.get_False
::NUnit::Framework::Constraints::FalseConstraint* NUnit::Framework::Is::get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::get_False");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "get_False", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::FalseConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Is.EqualTo
::NUnit::Framework::Constraints::EqualConstraint* NUnit::Framework::Is::EqualTo(::Il2CppObject* expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Is::EqualTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "Is", "EqualTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Constraints::EqualConstraint*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expected);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.TestContext
#include "NUnit/Framework/TestContext.hpp"
// Including type: NUnit.Framework.Internal.ITestExecutionContext
#include "NUnit/Framework/Internal/ITestExecutionContext.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
::NUnit::Framework::Internal::ITestExecutionContext* NUnit::Framework::TestContext::_get_CurrentTestExecutionContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_CurrentTestExecutionContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::ITestExecutionContext*>("NUnit.Framework", "TestContext", "CurrentTestExecutionContext"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.ITestExecutionContext CurrentTestExecutionContext
void NUnit::Framework::TestContext::_set_CurrentTestExecutionContext(::NUnit::Framework::Internal::ITestExecutionContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_CurrentTestExecutionContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "CurrentTestExecutionContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.TextWriter Error
::System::IO::TextWriter* NUnit::Framework::TestContext::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.TextWriter Error
void NUnit::Framework::TestContext::_set_Error(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Progress
::System::IO::TextWriter* NUnit::Framework::TestContext::_get_Progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Progress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IO::TextWriter*>("NUnit.Framework", "TestContext", "Progress"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Progress
void NUnit::Framework::TestContext::_set_Progress(::System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Progress", value));
}
// Autogenerated static field getter
// Get static field: static public readonly NUnit.Framework.TestParameters Parameters
::NUnit::Framework::TestParameters* NUnit::Framework::TestContext::_get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_get_Parameters");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::TestParameters*>("NUnit.Framework", "TestContext", "Parameters"));
}
// Autogenerated static field setter
// Set static field: static public readonly NUnit.Framework.TestParameters Parameters
void NUnit::Framework::TestContext::_set_Parameters(::NUnit::Framework::TestParameters* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::_set_Parameters");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestContext", "Parameters", value));
}
// Autogenerated method: NUnit.Framework.TestContext.get_Out
::System::IO::TextWriter* NUnit::Framework::TestContext::get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::get_Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", "get_Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestContext..cctor
void NUnit::Framework::TestContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.TestParameters
#include "NUnit/Framework/TestParameters.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
::System::IFormatProvider* NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::_get_MODIFIED_INVARIANT_CULTURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IFormatProvider*>("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IFormatProvider MODIFIED_INVARIANT_CULTURE
void NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE(::System::IFormatProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::_set_MODIFIED_INVARIANT_CULTURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework", "TestParameters", "MODIFIED_INVARIANT_CULTURE", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _parameters
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& NUnit::Framework::TestParameters::dyn__parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::dyn__parameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parameters"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.TestParameters..cctor
void NUnit::Framework::TestParameters::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.TestParameters.Add
void NUnit::Framework::TestParameters::Add(::StringW name, ::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: NUnit.Framework.TestParameters.CreateModifiedInvariantCulture
::System::IFormatProvider* NUnit::Framework::TestParameters::CreateModifiedInvariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::TestParameters::CreateModifiedInvariantCulture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework", "TestParameters", "CreateModifiedInvariantCulture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IFormatProvider*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.AssemblyHelper
#include "NUnit/Framework/Internal/AssemblyHelper.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPath
::StringW NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath(::System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.IsFileUri
bool NUnit::Framework::Internal::AssemblyHelper::IsFileUri(::StringW uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::IsFileUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "IsFileUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: NUnit.Framework.Internal.AssemblyHelper.GetAssemblyPathFromCodeBase
::StringW NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase(::StringW codeBase) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::AssemblyHelper::GetAssemblyPathFromCodeBase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "AssemblyHelper", "GetAssemblyPathFromCodeBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codeBase)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codeBase);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTrace
#include "NUnit/Framework/Internal/InternalTrace.hpp"
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTrace::_get_traceLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_get_traceLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTrace", "traceLevel"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceLevel traceLevel
void NUnit::Framework::Internal::InternalTrace::_set_traceLevel(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_set_traceLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceLevel", value));
}
// Autogenerated static field getter
// Get static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
::NUnit::Framework::Internal::InternalTraceWriter* NUnit::Framework::Internal::InternalTrace::_get_traceWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_get_traceWriter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceWriter*>("NUnit.Framework.Internal", "InternalTrace", "traceWriter"));
}
// Autogenerated static field setter
// Set static field: static private NUnit.Framework.Internal.InternalTraceWriter traceWriter
void NUnit::Framework::Internal::InternalTrace::_set_traceWriter(::NUnit::Framework::Internal::InternalTraceWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::_set_traceWriter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTrace", "traceWriter", value));
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
::NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: NUnit.Framework.Internal.InternalTrace.GetLogger
::NUnit::Framework::Internal::Logger* NUnit::Framework::Internal::InternalTrace::GetLogger(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTrace::GetLogger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "InternalTrace", "GetLogger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Internal::Logger*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceLevel
#include "NUnit/Framework/Internal/InternalTraceLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Default"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Default
void NUnit::Framework::Internal::InternalTraceLevel::_set_Default(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Off"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Off
void NUnit::Framework::Internal::InternalTraceLevel::_set_Off(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Error"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Error
void NUnit::Framework::Internal::InternalTraceLevel::_set_Error(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Warning
void NUnit::Framework::Internal::InternalTraceLevel::_set_Warning(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Info"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Info
void NUnit::Framework::Internal::InternalTraceLevel::_set_Info(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Info", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Debug
void NUnit::Framework::Internal::InternalTraceLevel::_set_Debug(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
::NUnit::Framework::Internal::InternalTraceLevel NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_get_Verbose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::NUnit::Framework::Internal::InternalTraceLevel>("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose"));
}
// Autogenerated static field setter
// Set static field: static public NUnit.Framework.Internal.InternalTraceLevel Verbose
void NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose(::NUnit::Framework::Internal::InternalTraceLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::_set_Verbose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "InternalTraceLevel", "Verbose", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& NUnit::Framework::Internal::InternalTraceLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.InternalTraceWriter
#include "NUnit/Framework/Internal/InternalTraceWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::InternalTraceWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.InternalTraceWriter.get_Encoding
::System::Text::Encoding* NUnit::Framework::Internal::InternalTraceWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::InternalTraceWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::Encoding*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.Logger
#include "NUnit/Framework/Internal/Logger.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.String TIME_FMT
::StringW NUnit::Framework::Internal::Logger::_get_TIME_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_get_TIME_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Logger", "TIME_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TIME_FMT
void NUnit::Framework::Internal::Logger::_set_TIME_FMT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_set_TIME_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TIME_FMT", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String TRACE_FMT
::StringW NUnit::Framework::Internal::Logger::_get_TRACE_FMT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_get_TRACE_FMT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "Logger", "TRACE_FMT"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String TRACE_FMT
void NUnit::Framework::Internal::Logger::_set_TRACE_FMT(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::_set_TRACE_FMT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "Logger", "TRACE_FMT", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String name
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Logger::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String fullname
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::Logger::dyn_fullname() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_fullname");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullname"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Internal.InternalTraceLevel maxLevel
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Internal::InternalTraceLevel& NUnit::Framework::Internal::Logger::dyn_maxLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_maxLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLevel"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Internal::InternalTraceLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& NUnit::Framework::Internal::Logger::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.Logger..cctor
void NUnit::Framework::Internal::Logger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "Logger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Error
void NUnit::Framework::Internal::Logger::Error(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Error");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Debug
void NUnit::Framework::Internal::Logger::Debug(::StringW message, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Debug");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Debug", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, args);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.Log
void NUnit::Framework::Internal::Logger::Log(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW format, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, format, args);
}
// Autogenerated method: NUnit.Framework.Internal.Logger.WriteLog
void NUnit::Framework::Internal::Logger::WriteLog(::NUnit::Framework::Internal::InternalTraceLevel level, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::Logger::WriteLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, level, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.MethodWrapper
#include "NUnit/Framework/Internal/MethodWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.ITypeInfo
#include "NUnit/Framework/Interfaces/ITypeInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: NUnit.Framework.Interfaces.IParameterInfo
#include "NUnit/Framework/Interfaces/IParameterInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.ITypeInfo <TypeInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::ITypeInfo*& NUnit::Framework::Internal::MethodWrapper::dyn_$TypeInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::dyn_$TypeInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::ITypeInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.MethodInfo <MethodInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::MethodInfo*& NUnit::Framework::Internal::MethodWrapper::dyn_$MethodInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::dyn_$MethodInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MethodInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_TypeInfo
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_TypeInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_TypeInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_TypeInfo
void NUnit::Framework::Internal::MethodWrapper::set_TypeInfo(::NUnit::Framework::Interfaces::ITypeInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::set_TypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_MethodInfo
::System::Reflection::MethodInfo* NUnit::Framework::Internal::MethodWrapper::get_MethodInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_MethodInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.set_MethodInfo
void NUnit::Framework::Internal::MethodWrapper::set_MethodInfo(::System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::set_MethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_Name
::StringW NUnit::Framework::Internal::MethodWrapper::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsAbstract
bool NUnit::Framework::Internal::MethodWrapper::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsAbstract");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsPublic
bool NUnit::Framework::Internal::MethodWrapper::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsPublic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ContainsGenericParameters
bool NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_ContainsGenericParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_IsGenericMethodDefinition
bool NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_IsGenericMethodDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsGenericMethodDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.get_ReturnType
::NUnit::Framework::Interfaces::ITypeInfo* NUnit::Framework::Internal::MethodWrapper::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::get_ReturnType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::ITypeInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.GetParameters
::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*> NUnit::Framework::Internal::MethodWrapper::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::NUnit::Framework::Interfaces::IParameterInfo*>, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.MakeGenericMethod
::NUnit::Framework::Interfaces::IMethodInfo* NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod(::ArrayW<::System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::MakeGenericMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeGenericMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodRethrow<::NUnit::Framework::Interfaces::IMethodInfo*, false>(this, ___internal__method, typeArguments);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.Invoke
::Il2CppObject* NUnit::Framework::Internal::MethodWrapper::Invoke(::Il2CppObject* fixture, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixture), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, fixture, args);
}
// Autogenerated method: NUnit.Framework.Internal.MethodWrapper.ToString
::StringW NUnit::Framework::Internal::MethodWrapper::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::MethodWrapper::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NUnit.Framework.Internal.ParameterWrapper
#include "NUnit/Framework/Internal/ParameterWrapper.hpp"
// Including type: NUnit.Framework.Interfaces.IMethodInfo
#include "NUnit/Framework/Interfaces/IMethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NUnit.Framework.Interfaces.IMethodInfo <Method>k__BackingField
[[deprecated("Use field access instead!")]] ::NUnit::Framework::Interfaces::IMethodInfo*& NUnit::Framework::Internal::ParameterWrapper::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<::NUnit::Framework::Interfaces::IMethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Reflection.ParameterInfo <ParameterInfo>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Reflection::ParameterInfo*& NUnit::Framework::Internal::ParameterWrapper::dyn_$ParameterInfo$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::dyn_$ParameterInfo$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ParameterInfo>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Reflection::ParameterInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_IsOptional
bool NUnit::Framework::Internal::ParameterWrapper::get_IsOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_IsOptional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsOptional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_Method
void NUnit::Framework::Internal::ParameterWrapper::set_Method(::NUnit::Framework::Interfaces::IMethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterInfo
::System::Reflection::ParameterInfo* NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_ParameterInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::ParameterInfo*, false>(this, ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.set_ParameterInfo
void NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo(::System::Reflection::ParameterInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::set_ParameterInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ParameterInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NUnit.Framework.Internal.ParameterWrapper.get_ParameterType
::System::Type* NUnit::Framework::Internal::ParameterWrapper::get_ParameterType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::ParameterWrapper::get_ParameterType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator
#include "NUnit/Framework/Internal/TestNameGenerator.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.FixedTextFragment
#include "NUnit/Framework/Internal/TestNameGenerator_FixedTextFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NamespaceFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NamespaceFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.MethodFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_MethodFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ClassFullNameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ClassFullNameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgListFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgListFragment.hpp"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.ArgumentFragment
#include "NUnit/Framework/Internal/TestNameGenerator_ArgumentFragment.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String DefaultTestNamePattern
::StringW NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::_get_DefaultTestNamePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern"));
}
// Autogenerated static field setter
// Set static field: static public System.String DefaultTestNamePattern
void NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::_set_DefaultTestNamePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("NUnit.Framework.Internal", "TestNameGenerator", "DefaultTestNamePattern", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _pattern
[[deprecated("Use field access instead!")]] ::StringW& NUnit::Framework::Internal::TestNameGenerator::dyn__pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::dyn__pattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pattern"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment> _fragments
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>*& NUnit::Framework::Internal::TestNameGenerator::dyn__fragments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::dyn__fragments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fragments"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator..cctor
void NUnit::Framework::Internal::TestNameGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.GetDisplayName
::StringW NUnit::Framework::Internal::TestNameGenerator::GetDisplayName(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator.BuildFragmentList
::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>* NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList(::StringW pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::BuildFragmentList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator", "BuildFragmentList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::NUnit::Framework::Internal::TestNameGenerator::NameFragment*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pattern);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment
#include "NUnit/Framework/Internal/TestNameGenerator_NameFragment.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.AppendGenericTypeNames
void NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames(::System::Text::StringBuilder* sb, ::System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::AppendGenericTypeNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "AppendGenericTypeNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, sb, method);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.GetDisplayString
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString(::Il2CppObject* arg, int stringMax) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::GetDisplayString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "GetDisplayString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(stringMax)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg, stringMax);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeSingleChar
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeSingleChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeSingleChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeCharInString
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeCharInString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeCharInString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.NameFragment.EscapeControlChar
::StringW NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::NameFragment::EscapeControlChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("NUnit.Framework.Internal", "TestNameGenerator/NameFragment", "EscapeControlChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment
#include "NUnit/Framework/Internal/TestNameGenerator_TestIDFragment.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: NUnit.Framework.Internal.TestMethod
#include "NUnit/Framework/Internal/TestMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(::System::Reflection::MethodInfo* method, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, method, args);
}
// Autogenerated method: NUnit.Framework.Internal.TestNameGenerator/NUnit.Framework.Internal.TestIDFragment.GetText
::StringW NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText(::NUnit::Framework::Internal::TestMethod* testMethod, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::NUnit::Framework::Internal::TestNameGenerator::TestIDFragment::GetText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testMethod), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, testMethod, args);
}
